diff --git a/autotest/ogr/ogr_dgn.py b/autotest/ogr/ogr_dgn.py
index a552ee2d56..806f0335d0 100755
--- a/autotest/ogr/ogr_dgn.py
+++ b/autotest/ogr/ogr_dgn.py
@@ -195,6 +195,25 @@ def test_ogr_dgn_7():
 
         feat = dgn_lyr.GetNextFeature()
 
+    # Null geometry
+    dst_feat = ogr.Feature(feature_def=dgn2_lyr.GetLayerDefn())
+    with pytest.raises(Exception):
+        assert dgn2_lyr.CreateFeature(dst_feat) != 0
+
+    # Empty geometry
+    dst_feat = ogr.Feature(feature_def=dgn2_lyr.GetLayerDefn())
+    dst_feat.SetGeometry(ogr.CreateGeometryFromWkt("POINT EMPTY"))
+    with pytest.raises(Exception):
+        assert dgn2_lyr.CreateFeature(dst_feat) != 0
+
+    # Empty geometry in subpart
+    dst_feat = ogr.Feature(feature_def=dgn2_lyr.GetLayerDefn())
+    dst_feat.SetGeometry(
+        ogr.CreateGeometryFromWkt("GEOMETRYCOLLECTION(POINT (1 2),POLYGON EMPTY)")
+    )
+    with pytest.raises(Exception):
+        assert dgn2_lyr.CreateFeature(dst_feat) != 0
+
 
 ###############################################################################
 # Verify that our copy is pretty similar.
diff --git a/ogr/ogrsf_frmts/dgn/ogr_dgn.h b/ogr/ogrsf_frmts/dgn/ogr_dgn.h
index ca0ce546f8..24d83fe519 100644
--- a/ogr/ogrsf_frmts/dgn/ogr_dgn.h
+++ b/ogr/ogrsf_frmts/dgn/ogr_dgn.h
@@ -53,14 +53,14 @@ class OGRDGNLayer final : public OGRLayer
     void ConsiderBrush(DGNElemCore *, const char *pszPen,
                        OGRFeature *poFeature);
 
-    DGNElemCore **LineStringToElementGroup(OGRLineString *, int);
+    DGNElemCore **LineStringToElementGroup(const OGRLineString *, int);
     DGNElemCore **TranslateLabel(OGRFeature *);
 
     // Unused:
     // int                 bHaveSimpleQuery;
     OGRFeature *poEvalFeature;
 
-    OGRErr CreateFeatureWithGeom(OGRFeature *, OGRGeometry *);
+    OGRErr CreateFeatureWithGeom(OGRFeature *, const OGRGeometry *);
 
   public:
     OGRDGNLayer(const char *pszName, DGNHandle hDGN, int bUpdate);
diff --git a/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp b/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
index 96b9135efb..ddb190f735 100644
--- a/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
+++ b/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
@@ -1017,7 +1017,7 @@ OGRErr OGRDGNLayer::GetExtent(OGREnvelope *psExtent, int /* bForce */)
 
 constexpr int MAX_ELEM_POINTS = 38;
 
-DGNElemCore **OGRDGNLayer::LineStringToElementGroup(OGRLineString *poLS,
+DGNElemCore **OGRDGNLayer::LineStringToElementGroup(const OGRLineString *poLS,
                                                     int nGroupType)
 
 {
@@ -1210,14 +1210,6 @@ OGRErr OGRDGNLayer::ICreateFeature(OGRFeature *poFeature)
         return OGRERR_FAILURE;
     }
 
-    if (poFeature->GetGeometryRef() == nullptr)
-    {
-        CPLError(CE_Failure, CPLE_AppDefined,
-                 "Features with empty, geometry collection geometries not\n"
-                 "supported in DGN format.");
-        return OGRERR_FAILURE;
-    }
-
     return CreateFeatureWithGeom(poFeature, poFeature->GetGeometryRef());
 }
 
@@ -1230,9 +1222,18 @@ OGRErr OGRDGNLayer::ICreateFeature(OGRFeature *poFeature)
 /************************************************************************/
 
 OGRErr OGRDGNLayer::CreateFeatureWithGeom(OGRFeature *poFeature,
-                                          OGRGeometry *poGeom)
+                                          const OGRGeometry *poGeom)
 
 {
+
+    if (poGeom == nullptr || poGeom->IsEmpty())
+    {
+        CPLError(CE_Failure, CPLE_AppDefined,
+                 "Features with empty, geometry collection geometries not\n"
+                 "supported in DGN format.");
+        return OGRERR_FAILURE;
+    }
+
     /* -------------------------------------------------------------------- */
     /*      Translate the geometry.                                         */
     /* -------------------------------------------------------------------- */
@@ -1241,7 +1242,7 @@ OGRErr OGRDGNLayer::CreateFeatureWithGeom(OGRFeature *poFeature,
 
     if (wkbFlatten(poGeom->getGeometryType()) == wkbPoint)
     {
-        OGRPoint *poPoint = poGeom->toPoint();
+        const OGRPoint *poPoint = poGeom->toPoint();
         const char *pszText = poFeature->GetFieldAsString("Text");
 
         if ((pszText == nullptr || strlen(pszText) == 0) &&
@@ -1271,7 +1272,7 @@ OGRErr OGRDGNLayer::CreateFeatureWithGeom(OGRFeature *poFeature,
     }
     else if (wkbFlatten(poGeom->getGeometryType()) == wkbPolygon)
     {
-        OGRPolygon *poPoly = poGeom->toPolygon();
+        const OGRPolygon *poPoly = poGeom->toPolygon();
 
         DGNElemCore **papsGroupExt =
             LineStringToElementGroup(poPoly->getExteriorRing(), DGNT_SHAPE);
