curl-20220209-2a1951519	2a1951519	77a9be6c5	Wed Feb 9 12:18:50 2022 +0100	http2: fix the array copy to nghttp2_nv	commit 2a1951519e78c1aa404ec0201b9eaeae469d757bAuthor: Daniel Stenberg <daniel@haxx.se>Date:   Wed Feb 9 11:58:58 2022 +0100    http2: fix the array copy to nghttp2_nv        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44517    Follow-up to 9f985a11e794    Closes #8414	44517	lib/http2.c	1922
curl-20191003-02c6b984c	02c6b984c	13ecc0725	Thu Oct 3 22:54:26 2019 +0200	urlapi: fix use-after-free bug	commit 02c6b984cb7a2e01f290544a53a24d30fc7ab32eAuthor: Daniel Stenberg <daniel@haxx.se>Date:   Thu Oct 3 13:24:43 2019 +0200    urlapi: fix use-after-free bug        Follow-up from 2c20109a9b5d04        Added test 663 to verify.        Reported by OSS-Fuzz    Bug: https://crbug.com/oss-fuzz/17954        Closes #4453	17954	lib/urlapi.c;tests/data/Makefile.inc	64;82;858;926;84;0
curl-20190407-64cbae310	64cbae310	2f44e94ef	Sun Apr 7 22:55:38 2019 +0200	multi_runsingle(): fix use-after-free	commit 64cbae31078b2b64818a1d793516fbe73a7e4c45Author: Even Rouault <even.rouault@spatialys.com>Date:   Sun Apr 7 14:07:35 2019 +0200    multi_runsingle(): fix use-after-free        Fixes #3745    Closes #3746        The following snippet    ```        int main()    {        CURL* hCurlHandle = curl_easy_init();        curl_easy_setopt(hCurlHandle, CURLOPT_URL, "http://example.com");        curl_easy_setopt(hCurlHandle, CURLOPT_PROXY, "1");        curl_easy_perform(hCurlHandle);        curl_easy_cleanup(hCurlHandle);        return 0;    }    ```    triggers the following Valgrind warning        ```    ==4125== Invalid read of size 8    ==4125==    at 0x4E7D1EE: Curl_llist_remove (llist.c:97)    ==4125==    by 0x4E7EF5C: detach_connnection (multi.c:798)    ==4125==    by 0x4E80545: multi_runsingle (multi.c:1451)    ==4125==    by 0x4E8197C: curl_multi_perform (multi.c:2072)    ==4125==    by 0x4E766A0: easy_transfer (easy.c:625)    ==4125==    by 0x4E76915: easy_perform (easy.c:719)    ==4125==    by 0x4E7697C: curl_easy_perform (easy.c:738)    ==4125==    by 0x4008BE: main (in /home/even/curl/test)    ==4125==  Address 0x9b3d1d0 is 1,120 bytes inside a block of size 1,600 free'd    ==4125==    at 0x4C2ECF0: free (vg_replace_malloc.c:530)    ==4125==    by 0x4E62C36: conn_free (url.c:756)    ==4125==    by 0x4E62D34: Curl_disconnect (url.c:818)    ==4125==    by 0x4E48DF9: Curl_once_resolved (hostip.c:1097)    ==4125==    by 0x4E8052D: multi_runsingle (multi.c:1446)    ==4125==    by 0x4E8197C: curl_multi_perform (multi.c:2072)    ==4125==    by 0x4E766A0: easy_transfer (easy.c:625)    ==4125==    by 0x4E76915: easy_perform (easy.c:719)    ==4125==    by 0x4E7697C: curl_easy_perform (easy.c:738)    ==4125==    by 0x4008BE: main (in /home/even/curl/test)    ==4125==  Block was alloc'd at    ==4125==    at 0x4C2F988: calloc (vg_replace_malloc.c:711)    ==4125==    by 0x4E6438E: allocate_conn (url.c:1654)    ==4125==    by 0x4E685B4: create_conn (url.c:3496)    ==4125==    by 0x4E6968F: Curl_connect (url.c:4023)    ==4125==    by 0x4E802E7: multi_runsingle (multi.c:1368)    ==4125==    by 0x4E8197C: curl_multi_perform (multi.c:2072)    ==4125==    by 0x4E766A0: easy_transfer (easy.c:625)    ==4125==    by 0x4E76915: easy_perform (easy.c:719)    ==4125==    by 0x4E7697C: curl_easy_perform (easy.c:738)    ==4125==    by 0x4008BE: main (in /home/even/curl/test)    ```        This has been bisected to commit 2f44e94        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=14109    Credit to OSS Fuzz	14109	lib/multi.c	1448
curl-20180929-2dfc0dd6b	2dfc0dd6b	2b3351b8e	Sat Sep 29 15:03:57 2018 +0200	multi: fix memory leak in content encoding related error path	commit 2dfc0dd6b59db0816821508418addcf62863c84cAuthor: Daniel Stenberg <daniel@haxx.se>Date:   Sat Sep 29 11:32:07 2018 +0200    multi: fix memory leak in content encoding related error path        ... a missing multi_done() call.        Credit to OSS-Fuzz    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10728    Closes #3063	10728	lib/multi.c	2005
curl-20180925-304bb2f7c	304bb2f7c	4058cf2a7	Tue Sep 25 17:03:45 2018 +0200	Curl_http2_done: fix memleak in error path	commit 304bb2f7c1b463373aa31c1530144c67f6afddb2Author: Daniel Stenberg <daniel@haxx.se>Date:   Tue Sep 25 11:48:43 2018 +0200    Curl_http2_done: fix memleak in error path        Free 'header_recvbuf' unconditionally even if 'h2' isn't (yet) set, for    early failures.        Detected by OSS-Fuzz        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10669    Closes #3046	10669	lib/http2.c	1142;1161
curl-20180925-4058cf2a7	4058cf2a7	16fefeee1	Tue Sep 25 10:30:08 2018 +0200	http: fix memleak in rewind error path	commit 4058cf2a7f7e2590c26588c4eb476ac5c029cb5aAuthor: Daniel Stenberg <daniel@haxx.se>Date:   Tue Sep 25 07:49:35 2018 +0200    http: fix memleak in rewind error path        If the rewind would fail, a strdup() would not get freed.        Detected by OSS-Fuzz        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10665    Closes #3044	10665	lib/http.c	537;552
curl-20180924-ef695fc30	ef695fc30	e2dd435d4	Mon Sep 24 16:38:11 2018 +0200	Curl_retry_request: fix memory leak	commit ef695fc30144c8b92700c0161cdafd141c70ae60Author: Daniel Stenberg <daniel@haxx.se>Date:   Mon Sep 24 14:05:24 2018 +0200    Curl_retry_request: fix memory leak        Detected by OSS-Fuzz        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10648    Closes #3042	10648	lib/transfer.c	1705
curl-20180730-09e401e01	09e401e01	fe60cbfbb	Mon Jul 30 17:59:36 2018 +0200	smb: fix memory leak on early failure	commit 09e401e01bf943026a1abf9b93582c2015c4e338Author: Daniel Stenberg <daniel@haxx.se>Date:   Sun Jul 29 17:58:10 2018 +0200    smb: fix memory leak on early failure        ... by making sure connection related data (->share) is stored in the    connection and not in the easy handle.        Detected by OSS-fuzz    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9369    Fixes #2769    Closes #2810	9369	lib/smb.c;lib/smb.h	59;73;98;173;182;194;228;253;475;491;910;948;962;35
curl-20180712-5b511b095	5b511b095	2c33105db	Thu Jul 12 14:47:11 2018 +0200	smb: fix memory-leak in URL parse error path	commit 5b511b0958f06f72c99494364cbb8f33c4900dd4Author: Daniel Stenberg <daniel@haxx.se>Date:   Thu Jul 12 11:44:57 2018 +0200    smb: fix memory-leak in URL parse error path        Detected by OSS-Fuzz    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9369    Closes #2740	9369	lib/smb.c	969;981;995
curl-20180117-cb5accab9	cb5accab9	25c40c9af	Wed Jan 17 10:41:38 2018 +0100	ftp-wildcard: fix matching an empty string with "*[^a]"	commit cb5accab9ee3abdee777b59b463b5e0ca05a490aAuthor: Daniel Stenberg <daniel@haxx.se>Date:   Sat Jan 13 21:52:15 2018 +0100    ftp-wildcard: fix matching an empty string with "*[^a]"        .... and avoid advancing the pointer to trigger an out of buffer read.        Detected by OSS-fuzz    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=5251    Assisted-by: Max Dymond	5251	lib/curl_fnmatch.c;tests/unit/unit1307.c	5;376;5;27;100;119
curl-20171127-0b664ba96	0b664ba96	9b5e12a54	Mon Nov 27 08:19:34 2017 +0100	wildcardmatch: fix heap buffer overflow in setcharset	commit 0b664ba968437715819bfe4c7ada5679d16ebbc3Author: Daniel Stenberg <daniel@haxx.se>Date:   Fri Nov 10 08:52:45 2017 +0100    wildcardmatch: fix heap buffer overflow in setcharset        The code would previous read beyond the end of the pattern string if the    match pattern ends with an open bracket when the default pattern    matching function is used.        Detected by OSS-Fuzz:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=4161        CVE-2017-8817        Bug: https://curl.haxx.se/docs/adv_2017-ae72.html	4161	lib/curl_fnmatch.c;tests/data/Makefile.inc	133;196;274;125;0
curl-20170929-20ea22ff7	20ea22ff7	49d75a4c1	Fri Sep 29 12:06:34 2017 +0200	cookie: fix memory leak on oversized rejection	commit 20ea22ff735097a02721fcb5cd44433973af6190Author: Daniel Stenberg <daniel@haxx.se>Date:   Fri Sep 29 08:50:15 2017 +0200    cookie: fix memory leak on oversized rejection        Regression brought by 2bc230de63b        Detected by OSS-fuzz: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3513    Assisted-by: Max Dymond        Closes #1930	3513	lib/cookie.c	438
curl-20170811-6e0e152ce	6e0e152ce	783d43464	Fri Aug 11 11:52:56 2017 +0200	parse_proxy(): fix memory leak in case of invalid proxy server name	commit 6e0e152ce5cfe2b7b024726d48a011f81826ebdeAuthor: Even Rouault <even.rouault@spatialys.com>Date:   Fri Aug 11 11:29:09 2017 +0200    parse_proxy(): fix memory leak in case of invalid proxy server name        Fixes the below leak:        $ valgrind --leak-check=full ~/install-curl-git/bin/curl --proxy "http://a:b@/x" http://127.0.0.1    curl: (5) Couldn't resolve proxy name    ==5048==    ==5048== HEAP SUMMARY:    ==5048==     in use at exit: 532 bytes in 12 blocks    ==5048==   total heap usage: 5,288 allocs, 5,276 frees, 445,271 bytes allocated    ==5048==    ==5048== 2 bytes in 1 blocks are definitely lost in loss record 1 of 12    ==5048==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)    ==5048==    by 0x4E6CB79: parse_login_details (url.c:5614)    ==5048==    by 0x4E6BA82: parse_proxy (url.c:5091)    ==5048==    by 0x4E6C46D: create_conn_helper_init_proxy (url.c:5346)    ==5048==    by 0x4E6EA18: create_conn (url.c:6498)    ==5048==    by 0x4E6F9B4: Curl_connect (url.c:6967)    ==5048==    by 0x4E86D05: multi_runsingle (multi.c:1436)    ==5048==    by 0x4E88432: curl_multi_perform (multi.c:2160)    ==5048==    by 0x4E7C515: easy_transfer (easy.c:708)    ==5048==    by 0x4E7C74A: easy_perform (easy.c:794)    ==5048==    by 0x4E7C7B1: curl_easy_perform (easy.c:813)    ==5048==    by 0x414025: operate_do (tool_operate.c:1563)    ==5048==    ==5048== 2 bytes in 1 blocks are definitely lost in loss record 2 of 12    ==5048==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)    ==5048==    by 0x4E6CBB6: parse_login_details (url.c:5621)    ==5048==    by 0x4E6BA82: parse_proxy (url.c:5091)    ==5048==    by 0x4E6C46D: create_conn_helper_init_proxy (url.c:5346)    ==5048==    by 0x4E6EA18: create_conn (url.c:6498)    ==5048==    by 0x4E6F9B4: Curl_connect (url.c:6967)    ==5048==    by 0x4E86D05: multi_runsingle (multi.c:1436)    ==5048==    by 0x4E88432: curl_multi_perform (multi.c:2160)    ==5048==    by 0x4E7C515: easy_transfer (easy.c:708)    ==5048==    by 0x4E7C74A: easy_perform (easy.c:794)    ==5048==    by 0x4E7C7B1: curl_easy_perform (easy.c:813)    ==5048==    by 0x414025: operate_do (tool_operate.c:1563)        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2984    Credit to OSS Fuzz for discovery        Closes #1761	2984	lib/url.c	5149
