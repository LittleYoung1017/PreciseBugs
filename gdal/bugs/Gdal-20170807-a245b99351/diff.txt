diff --git a/gdal/ogr/ogrsf_frmts/dgn/ogr_dgn.h b/gdal/ogr/ogrsf_frmts/dgn/ogr_dgn.h
index 70c69f893c..162f43a8cd 100644
--- a/gdal/ogr/ogrsf_frmts/dgn/ogr_dgn.h
+++ b/gdal/ogr/ogrsf_frmts/dgn/ogr_dgn.h
@@ -48,7 +48,7 @@ class OGRDGNLayer : public OGRLayer
 
     char               *pszLinkFormat;
 
-    OGRFeature         *ElementToFeature( DGNElemCore * );
+    OGRFeature         *ElementToFeature( DGNElemCore *, int nRecLevel );
 
     void                ConsiderBrush( DGNElemCore *, const char *pszPen,
                                        OGRFeature *poFeature );
diff --git a/gdal/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp b/gdal/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
index 2651d4851c..48c9583228 100644
--- a/gdal/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
+++ b/gdal/ogr/ogrsf_frmts/dgn/ogrdgnlayer.cpp
@@ -248,7 +248,7 @@ OGRFeature *OGRDGNLayer::GetFeature( GIntBig nFeatureId )
     // DGNReadElement(), but I will defer that for now.
 
     DGNElemCore *psElement = DGNReadElement( hDGN );
-    OGRFeature *poFeature = ElementToFeature( psElement );
+    OGRFeature *poFeature = ElementToFeature( psElement, 0 );
     DGNFreeElement( hDGN, psElement );
 
     if( poFeature == NULL )
@@ -303,7 +303,7 @@ void OGRDGNLayer::ConsiderBrush( DGNElemCore *psElement, const char *pszPen,
 /*                          ElementToFeature()                          */
 /************************************************************************/
 
-OGRFeature *OGRDGNLayer::ElementToFeature( DGNElemCore *psElement )
+OGRFeature *OGRDGNLayer::ElementToFeature( DGNElemCore *psElement, int nRecLevel )
 
 {
     OGRFeature  *poFeature = new OGRFeature( poFeatureDefn );
@@ -652,7 +652,8 @@ OGRFeature *OGRDGNLayer::ElementToFeature( DGNElemCore *psElement )
 
           /* collect subsequent child geometries. */
           // we should disable the spatial filter ... add later.
-          for( int iChild = 0; iChild < psHdr->numelems; iChild++ )
+          for( int iChild = 0; iChild < psHdr->numelems &&
+                               nRecLevel < 20; iChild++ )
           {
               OGRFeature *poChildFeature = NULL;
               DGNElemCore *psChildElement = DGNReadElement( hDGN );
@@ -660,7 +661,8 @@ OGRFeature *OGRDGNLayer::ElementToFeature( DGNElemCore *psElement )
 
               if( psChildElement != NULL )
               {
-                  poChildFeature = ElementToFeature( psChildElement );
+                  poChildFeature = ElementToFeature( psChildElement,
+                                                     nRecLevel + 1 );
                   DGNFreeElement( hDGN, psChildElement );
               }
 
@@ -726,7 +728,7 @@ OGRFeature *OGRDGNLayer::GetNextFeature()
             continue;
         }
 
-        OGRFeature *poFeature = ElementToFeature( psElement );
+        OGRFeature *poFeature = ElementToFeature( psElement, 0 );
         DGNFreeElement( hDGN, psElement );
 
         if( poFeature == NULL )
