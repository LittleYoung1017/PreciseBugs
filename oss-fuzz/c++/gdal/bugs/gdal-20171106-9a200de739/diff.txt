diff --git a/autotest/ogr/data/insert-recursive-pair.dxf b/autotest/ogr/data/insert-recursive-pair.dxf
index d33f91f825..5aa0dc5d6e 100644
--- a/autotest/ogr/data/insert-recursive-pair.dxf
+++ b/autotest/ogr/data/insert-recursive-pair.dxf
@@ -103,10 +103,44 @@ RecursiveBlock1
  30
 0.0
   0
-ENDBLK
+INSERT
   5
 DEF2
 100
+AcDbEntity
+100
+AcDbBlockReference
+  8
+0
+  2
+RecursiveBlock1
+ 10
+0.0
+ 20
+0.0
+ 30
+0.0
+  0
+POINT
+  5
+DEF3
+100
+AcDbEntity
+100
+AcDbPoint
+  8
+0
+ 10
+0.0
+ 20
+0.0
+ 30
+0.0
+  0
+ENDBLK
+  5
+DEF4
+100
 AcDbEntity
   8
 0
diff --git a/autotest/ogr/ogr_dxf.py b/autotest/ogr/ogr_dxf.py
index baad340ed8..d2f98e94c9 100755
--- a/autotest/ogr/ogr_dxf.py
+++ b/autotest/ogr/ogr_dxf.py
@@ -2826,7 +2826,7 @@ def ogr_dxf_43():
     # Inlining, merging
     ds = ogr.Open('data/insert-recursive-pair.dxf')
     lyr = ds.GetLayer(0)
-    if lyr.GetFeatureCount() != 0:
+    if lyr.GetFeatureCount() != 1:
         return 'fail'
 
     return 'success'
diff --git a/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h b/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
index 3c930ddd2a..d57c72e43f 100644
--- a/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
+++ b/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
@@ -277,7 +277,7 @@ class OGRDXFLayer : public OGRLayer
                                            std::queue<OGRDXFFeature *>& apoExtraFeatures,
                                            const bool bInlineNestedBlocks,
                                            const bool bMergeGeometry,
-                                           const int iRecursionDepth = 0 );
+                                           std::vector<CPLString> *paosInsertedBlocks = NULL );
     OGRDXFFeature *     InsertBlockReference( const CPLString& osBlockName,
                                               const OGRDXFInsertTransformer& oTransformer,
                                               OGRDXFFeature* const poFeature );
diff --git a/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp b/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
index 45f34cce37..70756c6873 100644
--- a/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
+++ b/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
@@ -2494,14 +2494,24 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
     std::queue<OGRDXFFeature *>& apoExtraFeatures,
     const bool bInlineRecursively,
     const bool bMergeGeometry,
-    const int iRecursionDepth /* = 0 */ )
+    std::vector<CPLString> *paosInsertedBlocks /* = NULL */ )
 {
-    // Make sure we are not recursing too deeply (avoid stack overflows)
+/* -------------------------------------------------------------------- */
+/*      Set up protection against excessive recursion.                  */
+/* -------------------------------------------------------------------- */
+    std::vector<CPLString> aosInsertedBlocks;
+    if( !paosInsertedBlocks )
+        paosInsertedBlocks = &aosInsertedBlocks;
+
+    // Make sure we are not recursing too deeply (avoid stack overflows) or
+    // inserting a block within itself (avoid billion-laughs type issues).
     // 128 is a totally arbitrary limit
-    if( iRecursionDepth > 128 )
+    if( paosInsertedBlocks->size() > 128 ||
+        std::find( paosInsertedBlocks->begin(), paosInsertedBlocks->end(),
+        osBlockName ) != paosInsertedBlocks->end() )
     {
-        CPLDebug( "DXF",
-            "Block recursion limit exceeded. Ignoring further INSERTs" );
+        CPLDebug( "DXF", "Dangerous block recursion detected. "
+            "Some INSERT entities have been skipped." );
 
         delete poFeature;
         return NULL;
@@ -2531,6 +2541,8 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
         throw std::invalid_argument("osBlockName");
     }
 
+    paosInsertedBlocks->push_back( osBlockName );
+
 /* -------------------------------------------------------------------- */
 /*      If we have complete features associated with the block, push    */
 /*      them on the pending feature stack copying over key override     */
@@ -2574,7 +2586,7 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
             {
                 poSubFeature = InsertBlockInline( poSubFeature->osBlockName,
                     oInnerTransformer, poSubFeature, apoInnerExtraFeatures,
-                    true, bMergeGeometry, iRecursionDepth + 1 );
+                    true, bMergeGeometry, paosInsertedBlocks );
             }
             catch( const std::invalid_argument& )
             {
@@ -2679,6 +2691,8 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
         }
     }
 
+    paosInsertedBlocks->pop_back();
+
 /* -------------------------------------------------------------------- */
 /*      Return the merged geometry if applicable.  Otherwise            */
 /*      return NULL and let the machinery find the rest of the          */
