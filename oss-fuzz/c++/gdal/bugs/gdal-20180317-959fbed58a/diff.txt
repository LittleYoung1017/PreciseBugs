diff --git a/autotest/gdrivers/vrtrawlink.py b/autotest/gdrivers/vrtrawlink.py
index 516f0edc60..0503c99b80 100755
--- a/autotest/gdrivers/vrtrawlink.py
+++ b/autotest/gdrivers/vrtrawlink.py
@@ -305,6 +305,60 @@ def vrtrawlink_7():
 
     return 'success'
 
+###############################################################################
+# Test error case (too much memory allocation)
+
+def vrtrawlink_8():
+
+    for i in range(2):
+        with gdaltest.error_handler():
+            ds = gdal.Open("""<VRTDataset rasterXSize="200000" rasterYSize="1">
+        <VRTRasterBand dataType="Byte" band="1" subClass="VRTRawRasterBand">
+            <SourceFilename relativetoVRT="0">data/small.raw</SourceFilename>
+            <ImageOffset>0</ImageOffset>
+            <PixelOffset>200000</PixelOffset>
+            <LineOffset>1</LineOffset>
+            <ByteOrder>LSB</ByteOrder>
+        </VRTRasterBand>
+        </VRTDataset>""")
+        if ds:
+            return 'fail'
+
+    return 'success'
+
+###############################################################################
+# Test error case (inexisting file)
+
+def vrtrawlink_9():
+
+    with gdaltest.error_handler():
+        ds = gdal.Open("""<VRTDataset rasterXSize="1 rasterYSize="1">
+    <VRTRasterBand dataType="Byte" band="1" subClass="VRTRawRasterBand">
+        <SourceFilename relativetoVRT="0">i/do/not/exist</SourceFilename>
+    </VRTRasterBand>
+    </VRTDataset>""")
+    if ds:
+        return 'fail'
+
+    return 'success'
+
+###############################################################################
+# Test error case (invalid byte order)
+
+def vrtrawlink_10():
+
+    with gdaltest.error_handler():
+        ds = gdal.Open("""<VRTDataset rasterXSize="1 rasterYSize="1">
+    <VRTRasterBand dataType="Byte" band="1" subClass="VRTRawRasterBand">
+        <SourceFilename relativetoVRT="0">data/small.raw</SourceFilename>
+        <ByteOrder>invalid</ByteOrder>
+    </VRTRasterBand>
+    </VRTDataset>""")
+    if ds:
+        return 'fail'
+
+    return 'success'
+
 ###############################################################################
 # Cleanup.
 
@@ -329,6 +383,9 @@ gdaltest_list = [
     vrtrawlink_5,
     vrtrawlink_6,
     vrtrawlink_7,
+    vrtrawlink_8,
+    vrtrawlink_9,
+    vrtrawlink_10,
     vrtrawlink_cleanup ]
 
 if __name__ == '__main__':
diff --git a/gdal/frmts/vrt/vrtrawrasterband.cpp b/gdal/frmts/vrt/vrtrawrasterband.cpp
index 9c959f4b09..74f39ec92f 100644
--- a/gdal/frmts/vrt/vrtrawrasterband.cpp
+++ b/gdal/frmts/vrt/vrtrawrasterband.cpp
@@ -246,7 +246,7 @@ CPLErr VRTRawRasterBand::SetRawLink( const char *pszFilename,
                         nPixelOffset, nLineOffset, nImageOffset, 0,
                         reinterpret_cast<VSILFILE*>(fp)) )
     {
-        VSIFCloseL(reinterpret_cast<VSILFILE*>(fp));
+        CPLCloseShared(fp);
         return CE_Failure;
     }
 
@@ -269,6 +269,7 @@ CPLErr VRTRawRasterBand::SetRawLink( const char *pszFilename,
             CPLError( CE_Failure, CPLE_AppDefined,
                       "Illegal ByteOrder value '%s', should be LSB or MSB.",
                       pszByteOrder );
+            CPLCloseShared(fp);
             return CE_Failure;
         }
     }
