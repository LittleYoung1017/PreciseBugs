diff --cc gdal/gcore/nasakeywordhandler.cpp
index 96ac7de2b3,96ac7de2b3..d575f39de1
--- a/gdal/gcore/nasakeywordhandler.cpp
+++ b/gdal/gcore/nasakeywordhandler.cpp
@@@ -71,6 -71,6 +71,7 @@@ CPL_CVSID("$Id$"
  /************************************************************************/
  
  NASAKeywordHandler::NASAKeywordHandler() :
++    papszKeywordList(nullptr),
      pszHeaderNext(nullptr),
      m_bStripSurroundingQuotes(false)
  {
@@@ -84,6 -84,6 +85,8 @@@
  NASAKeywordHandler::~NASAKeywordHandler()
  
  {
++    CSLDestroy( papszKeywordList );
++    papszKeywordList = nullptr;
  }
  
  /************************************************************************/
@@@ -138,15 -138,15 +141,10 @@@ int NASAKeywordHandler::Ingest( VSILFIL
  /*                             ReadGroup()                              */
  /************************************************************************/
  
--int NASAKeywordHandler::ReadGroup( const std::string& osPathPrefix, CPLJSONObject &oCur,
++int NASAKeywordHandler::ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCur,
                                     int nRecLevel )
  
  {
--    if( osPathPrefix.size() > 256 )
--    {
--        CPLError(CE_Failure, CPLE_NotSupported, "Too big prefix for GROUP");
--        return FALSE;
--    }
      if( nRecLevel == 100 )
          return FALSE;
      for( ; true; )
@@@ -159,7 -159,7 +157,7 @@@
          {
              CPLJSONObject oNewGroup;
              oNewGroup.Add( "_type", EQUAL(osName,"OBJECT") ? "object" : "group" );
--            if( !ReadGroup( (osPathPrefix + osValue + ".").c_str(),
++            if( !ReadGroup( (CPLString(pszPathPrefix) + osValue + ".").c_str(),
                              oNewGroup, nRecLevel + 1 ) )
              {
                  return FALSE;
@@@ -194,8 -194,8 +192,9 @@@
          }
          else
          {
--            osName = osPathPrefix + osName;
--            aosKeywordList.AddNameValue( osName, osValue );
++            osName = pszPathPrefix + osName;
++            papszKeywordList = CSLSetNameValue( papszKeywordList,
++                                                osName, osValue );
          }
      }
  }
@@@ -620,7 -620,7 +619,12 @@@ const char *NASAKeywordHandler::GetKeyw
                                              const char *pszDefault )
  
  {
--    return aosKeywordList.FetchNameValueDef(pszPath, pszDefault);
++    const char *pszResult = CSLFetchNameValue( papszKeywordList, pszPath );
++
++    if( pszResult == nullptr )
++        return pszDefault;
++
++    return pszResult;
  }
  
  /************************************************************************/
@@@ -629,7 -629,7 +633,7 @@@
  
  char **NASAKeywordHandler::GetKeywordList()
  {
--    return aosKeywordList.List();
++    return papszKeywordList;
  }
  
  /************************************************************************/
diff --cc gdal/gcore/nasakeywordhandler.h
index cb787e56b4,cb787e56b4..961e2eccfd
--- a/gdal/gcore/nasakeywordhandler.h
+++ b/gdal/gcore/nasakeywordhandler.h
@@@ -49,7 -49,7 +49,7 @@@
  
  class CPL_DLL NASAKeywordHandler
  {
--    CPLStringList aosKeywordList{};
++    char     **papszKeywordList = nullptr;
  
      CPLString osHeaderText{};
      const char *pszHeaderNext = nullptr;
@@@ -64,7 -64,7 +64,7 @@@
                        bool bParseList = false,
                        bool* pbIsString = nullptr);
      int     ReadPair( CPLString &osName, CPLString &osValue, CPLJSONObject &oCur );
--    int     ReadGroup( const std::string& osPathPrefix, CPLJSONObject &oCur, int nRecLevel );
++    int     ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCur, int nRecLevel );
  
      NASAKeywordHandler(const NASAKeywordHandler&) = delete;
      NASAKeywordHandler& operator=(const NASAKeywordHandler&) = delete;
