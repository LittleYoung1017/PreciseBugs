diff --git a/ogr/ogrsf_frmts/sxf/ogrsxfdatasource.cpp b/ogr/ogrsf_frmts/sxf/ogrsxfdatasource.cpp
index 733e6134fe..4d50b49623 100644
--- a/ogr/ogrsf_frmts/sxf/ogrsxfdatasource.cpp
+++ b/ogr/ogrsf_frmts/sxf/ogrsxfdatasource.cpp
@@ -56,7 +56,7 @@ OGRSXFDataSource::OGRSXFDataSource() :
     fpSXF(nullptr),
     hIOMutex(nullptr)
 {
-    oSXFPassport.stMapDescription.pSpatRef = nullptr;
+    memset(&oSXFPassport.informationFlags, 0, sizeof(oSXFPassport.informationFlags));
 }
 
 /************************************************************************/
@@ -491,15 +491,19 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
     if (passport.version == 3)
     {
         short nNoObjClass, nNoSemClass;
-        /* nObjectsRead = */ VSIFReadL(&nNoObjClass, 2, 1, fpSXFIn);
-        /* nObjectsRead = */ VSIFReadL(&nNoSemClass, 2, 1, fpSXFIn);
+        if( VSIFReadL(&nNoObjClass, 2, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
+        if( VSIFReadL(&nNoSemClass, 2, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         GByte byMask[8];
-        /* nObjectsRead = */ VSIFReadL(&byMask, 8, 1, fpSXFIn);
+        if( VSIFReadL(&byMask, 8, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
 
         int nCorners[8];
 
         //get projected corner coords
-        /* nObjectsRead = */ VSIFReadL(&nCorners, 32, 1, fpSXFIn);
+        if( VSIFReadL(&nCorners, 32, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
 
         for( int i = 0; i < 8; i++ )
         {
@@ -522,7 +526,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
             bIsX = !bIsX;
         }
         //get geographic corner coords
-        /* nObjectsRead = */ VSIFReadL(&nCorners, 32, 1, fpSXFIn);
+        if( VSIFReadL(&nCorners, 32, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
 
         for( int i = 0; i < 8; i++ )
         {
@@ -533,7 +538,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
     else if (passport.version == 4)
     {
         int nEPSG = 0;
-        /* nObjectsRead = */ VSIFReadL(&nEPSG, 4, 1, fpSXFIn);
+        if( VSIFReadL(&nEPSG, 4, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         CPL_LSBPTR32(&nEPSG);
 
         if (nEPSG >= MIN_EPSG && nEPSG <= MAX_EPSG) //TODO: check epsg valid range
@@ -543,7 +549,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
         }
 
         double dfCorners[8];
-        /* nObjectsRead = */ VSIFReadL(&dfCorners, 64, 1, fpSXFIn);
+        if( VSIFReadL(&dfCorners, 64, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
 
         for( int i = 0; i < 8; i++ )
         {
@@ -566,7 +573,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
             bIsX = !bIsX;
         }
         //get geographic corner coords
-        /* nObjectsRead = */ VSIFReadL(&dfCorners, 64, 1, fpSXFIn);
+        if( VSIFReadL(&dfCorners, 64, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
 
         for( int i = 0; i < 8; i++ )
         {
@@ -581,7 +589,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
     }
 
     GByte anData[8] = { 0 };
-    /* nObjectsRead = */ VSIFReadL(&anData, 8, 1, fpSXFIn);
+    if( VSIFReadL(&anData, 8, 1, fpSXFIn) != 1 )
+        return OGRERR_FAILURE;
     long iEllips = anData[0];
     long iVCS = anData[1];
     long iProjSys = anData[2];
@@ -621,7 +630,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
             // cppcheck-suppress unusedStructMember
             GUInt32 nFrameCode;
         } buff;
-        /* nObjectsRead = */ VSIFReadL(&buff, 20, 1, fpSXFIn);
+        if( VSIFReadL(&buff, 20, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         CPL_LSBPTR32(&buff.nRes);
         CPL_LSBPTR32(&buff.nFrameCode);
         passport.stMapDescription.nResolution = buff.nRes; //resolution
@@ -633,7 +643,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
         }
 
         int anParams[5];
-        /* nObjectsRead = */ VSIFReadL(&anParams, 20, 1, fpSXFIn);
+        if( VSIFReadL(&anParams, 20, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         for(int i = 0; i < 5; i++)
         {
             CPL_LSBPTR32(&anParams[i]);
@@ -681,7 +692,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
 
         VSIFSeekL(fpSXFIn, 312, SEEK_SET);
         GUInt32 buff[10];
-        /* nObjectsRead = */ VSIFReadL(&buff, 40, 1, fpSXFIn);
+        if( VSIFReadL(&buff, 40, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         for(int i = 0; i < 10; i++)
         {
             CPL_LSBPTR32(&buff[i]);
@@ -692,7 +704,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
             passport.stMapDescription.stFrameCoords[i] = buff[1 + i];
 
         double adfParams[6] = {};
-        /* nObjectsRead = */ VSIFReadL(&adfParams, 48, 1, fpSXFIn);
+        if( VSIFReadL(&adfParams, 48, 1, fpSXFIn) != 1 )
+            return OGRERR_FAILURE;
         for(int i = 0; i < 6; i++)
         {
             CPL_LSBPTR64(&adfParams[i]);
@@ -717,7 +730,8 @@ OGRErr OGRSXFDataSource::ReadSXFMapDescription(VSILFILE* fpSXFIn, SXFPassport& p
 
     passport.stMapDescription.dfScale = passport.nScale;
 
-    double dfCoeff = double(passport.stMapDescription.dfScale) / passport.stMapDescription.nResolution;
+    const double dfCoeff = passport.stMapDescription.nResolution == 0 ? 0 :
+        double(passport.stMapDescription.dfScale) / passport.stMapDescription.nResolution;
     passport.stMapDescription.bIsRealCoordinates = passport.informationFlags.bRealCoordinatesCompliance;
     passport.stMapDescription.stCoordAcc = passport.informationFlags.stCoordAcc;
 
diff --git a/ogr/ogrsf_frmts/sxf/org_sxf_defs.h b/ogr/ogrsf_frmts/sxf/org_sxf_defs.h
index 90f293d6e0..e049740063 100644
--- a/ogr/ogrsf_frmts/sxf/org_sxf_defs.h
+++ b/ogr/ogrsf_frmts/sxf/org_sxf_defs.h
@@ -195,24 +195,31 @@ enum SXFCoordinateMeasUnit
     SXF_COORD_MU_RADIAN
 } ;
 
-typedef struct
+struct SXFMapDescription
 {
     double stProjCoords[8]; //X(0) & Y(1) South West, X(2) & Y(3) North West, X(4) & Y(5) North East, X(6) & Y(7) South East
     double stGeoCoords[8];
     double stFrameCoords[8];
-    OGREnvelope Env;
-    OGRSpatialReference *pSpatRef;
-    SXFCoordinateMeasUnit eUnitInPlan;
-    double dfXOr;
-    double dfYOr;
-    double dfFalseNorthing;
-    double dfFalseEasting;
-    GUInt32 nResolution;
-    double dfScale;
-    bool bIsRealCoordinates;
-    SXFCoordinatesAccuracy stCoordAcc;
+    OGREnvelope Env{};
+    OGRSpatialReference *pSpatRef = nullptr;
+    SXFCoordinateMeasUnit eUnitInPlan = SXF_COORD_MU_METRE;
+    double dfXOr = 0;
+    double dfYOr = 0;
+    double dfFalseNorthing = 0;
+    double dfFalseEasting = 0;
+    GUInt32 nResolution = 0;
+    double dfScale = 0;
+    bool bIsRealCoordinates = false;
+    SXFCoordinatesAccuracy stCoordAcc = SXF_COORD_ACC_UNDEFINED;
+
+    SXFMapDescription()
+    {
+        memset(stProjCoords, 0, sizeof(stProjCoords));
+        memset(stGeoCoords, 0, sizeof(stProjCoords));
+        memset(stFrameCoords, 0, sizeof(stFrameCoords));
+    }
 
-} SXFMapDescription;
+};
 
 enum SXFCoordinateType
 {
@@ -292,19 +299,19 @@ enum SXFRecordAttributeType
 /*                         SXFPassport                                  */
 /************************************************************************/
 
-typedef struct{
-    GUInt16 nYear, nMonth, nDay;
-} SXFDate;
+struct SXFDate{
+    GUInt16 nYear = 0, nMonth = 0, nDay = 0;
+};
 
 struct SXFPassport
 {
-    GUInt32 version;
-    SXFDate dtCrateDate;
-    CPLString sMapSheet;
-    GUInt32 nScale;
-    CPLString sMapSheetName;
+    GUInt32 version = 0;
+    SXFDate dtCrateDate{};
+    CPLString sMapSheet{};
+    GUInt32 nScale = 0;
+    CPLString sMapSheetName{};
     SXFInformationFlags informationFlags;
-    SXFMapDescription stMapDescription;
+    SXFMapDescription stMapDescription{};
 };
 
 typedef struct
