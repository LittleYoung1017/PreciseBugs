diff --git a/autotest/gdrivers/vrtfilt.py b/autotest/gdrivers/vrtfilt.py
index e185fbef42..a205704eb4 100755
--- a/autotest/gdrivers/vrtfilt.py
+++ b/autotest/gdrivers/vrtfilt.py
@@ -198,6 +198,48 @@ def test_vrtfilt_7():
     gdal.GetDriverByName("VRT").Delete("/vsimem/src.vrt")
 
 
+###############################################################################
+
+
+def test_vrtfilt_invalid_kernel_size():
+
+    vrt_ds = gdal.GetDriverByName("VRT").Create("", 50, 50, 1)
+
+    filterSourceXML = """ <KernelFilteredSource>
+      <SourceFilename>data/rgbsmall.tif</SourceFilename>
+      <SourceBand>1</SourceBand>
+      <SrcRect xOff="0" yOff="0" xSize="50" ySize="50"/>
+      <DstRect xOff="0" yOff="0" xSize="50" ySize="50"/>
+      <Kernel>
+        <Size>-3</Size> <!-- negative value -->
+        <Coefs>0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111</Coefs>
+      </Kernel>
+    </KernelFilteredSource>"""
+
+    md = {}
+    md["source_0"] = filterSourceXML
+
+    with gdaltest.error_handler():
+        assert vrt_ds.GetRasterBand(1).SetMetadata(md, "vrt_sources") != gdal.CE_None
+
+    filterSourceXML = """ <KernelFilteredSource>
+      <SourceFilename>data/rgbsmall.tif</SourceFilename>
+      <SourceBand>1</SourceBand>
+      <SrcRect xOff="0" yOff="0" xSize="50" ySize="50"/>
+      <DstRect xOff="0" yOff="0" xSize="50" ySize="50"/>
+      <Kernel>
+        <Size>46341</Size> <!-- value larger than sqrt(INT_MAX) -->
+        <Coefs>0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111</Coefs>
+      </Kernel>
+    </KernelFilteredSource>"""
+
+    md = {}
+    md["source_0"] = filterSourceXML
+
+    with gdaltest.error_handler():
+        assert vrt_ds.GetRasterBand(1).SetMetadata(md, "vrt_sources") != gdal.CE_None
+
+
 ###############################################################################
 # Cleanup.
 
diff --git a/frmts/vrt/vrtfilters.cpp b/frmts/vrt/vrtfilters.cpp
index 131eb9be3c..bc8a9c2e68 100644
--- a/frmts/vrt/vrtfilters.cpp
+++ b/frmts/vrt/vrtfilters.cpp
@@ -30,9 +30,11 @@
 #include "cpl_port.h"
 #include "vrtdataset.h"
 
+#include <cmath>
 #include <cstddef>
 #include <cstdlib>
 #include <cstring>
+#include <limits>
 
 #include "cpl_conv.h"
 #include "cpl_error.h"
@@ -614,6 +616,14 @@ CPLErr VRTKernelFilteredSource::XMLInit( CPLXMLNode *psTree,
 
     if( nNewKernelSize == 0 )
         return CE_None;
+    // To prevent a integer overflow when computing nNewKernelSize * nNewKernelSize
+    if( nNewKernelSize < 0 ||
+        nNewKernelSize > static_cast<int>(std::sqrt(static_cast<double>(std::numeric_limits<int>::max()))) )
+    {
+        CPLError(CE_Failure, CPLE_IllegalArg,
+                 "Invalid value for kernel size: %d", nNewKernelSize);
+        return CE_Failure;
+    }
 
     char **papszCoefItems =
         CSLTokenizeString( CPLGetXMLValue(psTree,"Kernel.Coefs","") );
