diff --git a/gdal/port/cpl_aws.cpp b/gdal/port/cpl_aws.cpp
index fa089ec21b..135d7df15c 100644
--- a/gdal/port/cpl_aws.cpp
+++ b/gdal/port/cpl_aws.cpp
@@ -726,17 +726,32 @@ bool VSIS3HandleHelper::GetConfigurationFromAWSConfigFiles(
 
 #ifdef WIN32
     const char* pszHome = CPLGetConfigOption("USERPROFILE", NULL);
+    static const char SEP_STRING[] = "\\";
 #else
     const char* pszHome = CPLGetConfigOption("HOME", NULL);
+    static const char SEP_STRING[] = "/";
 #endif
-    const CPLString osDotAws( CPLFormFilename( pszHome, ".aws", NULL) );
+
+    CPLString osDotAws( pszHome ? pszHome : "" );
+    osDotAws += SEP_STRING;
+    osDotAws += ".aws";
 
     // Read first ~/.aws/credential file
-    osCredentials =
-        // GDAL specific config option (mostly for testing purpose, but also
-        // used in production in some cases)
-        CPLGetConfigOption( "CPL_AWS_CREDENTIALS_FILE",
-                        CPLFormFilename( osDotAws, "credentials", NULL ) );
+
+    // GDAL specific config option (mostly for testing purpose, but also
+    // used in production in some cases)
+    const char* pszCredentials =
+                    CPLGetConfigOption( "CPL_AWS_CREDENTIALS_FILE", NULL );
+    if( pszCredentials )
+    {
+        osCredentials = pszCredentials;
+    }
+    else
+    {
+        osCredentials = osDotAws;
+        osCredentials += SEP_STRING;
+        osCredentials += "credentials";
+    }
     VSILFILE* fp = VSIFOpenL( osCredentials, "rb" );
     if( fp != NULL )
     {
@@ -773,9 +788,18 @@ bool VSIS3HandleHelper::GetConfigurationFromAWSConfigFiles(
 
     // And then ~/.aws/config file (unless AWS_CONFIG_FILE is defined)
     const char* pszAWSConfigFileEnv =
-                        CPLGetConfigOption( "AWS_CONFIG_FILE", NULL );
-    const CPLString osConfig( pszAWSConfigFileEnv ? pszAWSConfigFileEnv :
-                              CPLFormFilename( osDotAws, "config", NULL ) );
+                            CPLGetConfigOption( "AWS_CONFIG_FILE", NULL );
+    CPLString osConfig;
+    if( pszAWSConfigFileEnv )
+    {
+        osConfig = pszAWSConfigFileEnv;
+    }
+    else
+    {
+        osConfig = osDotAws;
+        osConfig += SEP_STRING;
+        osConfig += "credentials";
+    }
     fp = VSIFOpenL( osConfig, "rb" );
     if( fp != NULL )
     {
diff --git a/gdal/port/cpl_google_cloud.cpp b/gdal/port/cpl_google_cloud.cpp
index e9bad551c8..0eb80d98f0 100644
--- a/gdal/port/cpl_google_cloud.cpp
+++ b/gdal/port/cpl_google_cloud.cpp
@@ -240,15 +240,27 @@ bool VSIGSHandleHelper::GetConfigurationFromConfigFile(
 {
 #ifdef WIN32
     const char* pszHome = CPLGetConfigOption("USERPROFILE", NULL);
+    static const char SEP_STRING[] = "\\";
 #else
     const char* pszHome = CPLGetConfigOption("HOME", NULL);
+    static const char SEP_STRING[] = "/";
 #endif
 
-    osCredentials =
-        // GDAL specific config option (mostly for testing purpose, but also
-        // used in production in some cases)
-        CPLGetConfigOption( "CPL_GS_CREDENTIALS_FILE",
-                        CPLFormFilename( pszHome, ".boto", NULL ) );
+    // GDAL specific config option (mostly for testing purpose, but also
+    // used in production in some cases)
+    const char* pszCredentials =
+                    CPLGetConfigOption( "CPL_GS_CREDENTIALS_FILE", NULL);
+    if( pszCredentials )
+    {
+        osCredentials = pszCredentials;
+    }
+    else
+    {
+        osCredentials = pszHome ? pszHome : "";
+        osCredentials += SEP_STRING;
+        osCredentials += ".boto";
+    }
+
     VSILFILE* fp = VSIFOpenL( osCredentials, "rb" );
     if( fp != NULL )
     {
