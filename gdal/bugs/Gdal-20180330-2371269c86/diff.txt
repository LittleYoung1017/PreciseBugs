diff --git a/autotest/ogr/data/geoconcept_multipolygon_singlepart_hole.txt b/autotest/ogr/data/geoconcept_multipolygon_singlepart_hole.txt
new file mode 100644
index 0000000000..9c2410d329
--- /dev/null
+++ b/autotest/ogr/data/geoconcept_multipolygon_singlepart_hole.txt
@@ -0,0 +1,8 @@
+//$DELIMITER "tab"
+//$QUOTED-TEXT "no"
+//$CHARSET ANSI
+//$UNIT Distance:m
+//$FORMAT 2
+//$SYSCOORD {Type: 17};{TimeZone: 31}
+//$FIELDS Class=test;Subclass=test;Kind=4;Fields=Private#Identifier	Private#Class	Private#Subclass	Private#Name	Private#NbFields	id	Private#X	Private#Y	Private#Graphics
+-1	test	test	test	1	1	0.00	0.00	4	0.00	1.00	1.00	1.00	1.00	0.00	0.00	0.00	1	0.10	0.10	3	0.10	0.90	0.90	0.90	0.10	0.10
diff --git a/autotest/ogr/data/geoconcept_multipolygon_singlepart_nohole.txt b/autotest/ogr/data/geoconcept_multipolygon_singlepart_nohole.txt
new file mode 100644
index 0000000000..e5f2595c75
--- /dev/null
+++ b/autotest/ogr/data/geoconcept_multipolygon_singlepart_nohole.txt
@@ -0,0 +1,8 @@
+//$DELIMITER "tab"
+//$QUOTED-TEXT "no"
+//$CHARSET ANSI
+//$UNIT Distance:m
+//$FORMAT 2
+//$SYSCOORD {Type: 17};{TimeZone: 31}
+//$FIELDS Class=test;Subclass=test;Kind=4;Fields=Private#Identifier	Private#Class	Private#Subclass	Private#Name	Private#NbFields	id	Private#X	Private#Y	Private#Graphics
+-1	test	test	test	1	1	0.00	0.00	4	0.00	1.00	1.00	1.00	1.00	0.00	0.00	0.00
diff --git a/autotest/ogr/data/geoconcept_multipolygon_twoparts_second_with_hole.txt b/autotest/ogr/data/geoconcept_multipolygon_twoparts_second_with_hole.txt
new file mode 100644
index 0000000000..2348ee1ca0
--- /dev/null
+++ b/autotest/ogr/data/geoconcept_multipolygon_twoparts_second_with_hole.txt
@@ -0,0 +1,8 @@
+//$DELIMITER "tab"
+//$QUOTED-TEXT "no"
+//$CHARSET ANSI
+//$UNIT Distance:m
+//$FORMAT 2
+//$SYSCOORD {Type: 17};{TimeZone: 31}
+//$FIELDS Class=test;Subclass=test;Kind=4;Fields=Private#Identifier	Private#Class	Private#Subclass	Private#Name	Private#NbFields	id	Private#X	Private#Y	Private#Graphics
+-1	test	test	test	1	1	-10.00	-10.00	3	-10.00	-9.00	-9.00	-9.00	-10.00	-10.00	2	0.00	0.00	4	0.00	1.00	1.00	1.00	1.00	0.00	0.00	0.00	0.10	0.10	3	0.10	0.90	0.90	0.90	0.10	0.10
diff --git a/autotest/ogr/ogr_geoconcept.py b/autotest/ogr/ogr_geoconcept.py
index 82317d48f1..488b3fc513 100755
--- a/autotest/ogr/ogr_geoconcept.py
+++ b/autotest/ogr/ogr_geoconcept.py
@@ -229,6 +229,53 @@ def ogr_gxt_3():
 
     return 'success'
 
+###############################################################################
+#
+
+def ogr_gxt_multipolygon_singlepart_nohole():
+
+    ds = ogr.Open('data/geoconcept_multipolygon_singlepart_nohole.txt')
+    lyr = ds.GetLayer(0)
+    feat = lyr.GetNextFeature()
+
+    if ogrtest.check_feature_geometry(feat,'MULTIPOLYGON (((0 0,0 1,1 1,1 0,0 0)))',
+                                      max_error = 0.000000001 ) != 0:
+        feat.DumpReadable()
+        return 'fail'
+
+    return 'success'
+
+###############################################################################
+#
+
+def ogr_gxt_multipolygon_singlepart_hole():
+
+    ds = ogr.Open('data/geoconcept_multipolygon_singlepart_hole.txt')
+    lyr = ds.GetLayer(0)
+    feat = lyr.GetNextFeature()
+
+    if ogrtest.check_feature_geometry(feat,'MULTIPOLYGON (((0 0,0 1,1 1,1 0,0 0),(0.1 0.1,0.1 0.9,0.9 0.9,0.1 0.1)))',
+                                      max_error = 0.000000001 ) != 0:
+        feat.DumpReadable()
+        return 'fail'
+
+    return 'success'
+
+###############################################################################
+#
+
+def ogr_gxt_multipolygon_twoparts_second_with_hole():
+
+    ds = ogr.Open('data/geoconcept_multipolygon_twoparts_second_with_hole.txt')
+    lyr = ds.GetLayer(0)
+    feat = lyr.GetNextFeature()
+
+    if ogrtest.check_feature_geometry(feat,'MULTIPOLYGON (((-10 -10,-10 -9,-9 -9,-10 -10)),((0 0,0 1,1 1,1 0,0 0),(0.1 0.1,0.1 0.9,0.9 0.9,0.1 0.1)))',
+                                      max_error = 0.000000001 ) != 0:
+        feat.DumpReadable()
+        return 'fail'
+
+    return 'success'
 
 ###############################################################################
 #
@@ -247,6 +294,9 @@ gdaltest_list = [
     ogr_gxt_1,
     ogr_gxt_2,
     ogr_gxt_3,
+    ogr_gxt_multipolygon_singlepart_nohole,
+    ogr_gxt_multipolygon_singlepart_hole,
+    ogr_gxt_multipolygon_twoparts_second_with_hole,
     ogr_gxt_cleanup,
     None ]
 
diff --git a/gdal/ogr/ogrsf_frmts/geoconcept/geoconcept.c b/gdal/ogr/ogrsf_frmts/geoconcept/geoconcept.c
index 5f08a095e3..d8a75a068e 100644
--- a/gdal/ogr/ogrsf_frmts/geoconcept/geoconcept.c
+++ b/gdal/ogr/ogrsf_frmts/geoconcept/geoconcept.c
@@ -1946,6 +1946,10 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
 
     Lpo= e= NULL;
     outer= ring= NULL;
+    if( i + 2 + (( d==v3D_GCIO||d==v3DM_GCIO ) ? 1 : 0) + 1 > nbtp )
+    {
+        goto onError;
+    }
     if( buildGeom )
     {
       if( !(outer= OGR_G_CreateGeometry(wkbPolygon)) )
@@ -1990,6 +1994,14 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
     }
     np= atoi(papszFields[i]);
     i++;
+    if( np < 0 ||
+        (np > 0 &&
+         i + (GIntBig)(2 + (( d==v3D_GCIO||d==v3DM_GCIO ) ? 1 : 0)) * np > nbtp) )
+    {
+        OGR_G_DestroyGeometry(outer);
+        OGR_G_DestroyGeometry(ring);
+        goto onError;
+    }
     for( ip= 1; ip<=np; ip++ )
     {
       x= CPLAtof(papszFields[i]);
@@ -2033,6 +2045,10 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
       i++;
       for( ipo= 1; ipo<=npo; ipo++ )
       {
+        if( i + (2 + (( d==v3D_GCIO||d==v3DM_GCIO ) ? 1 : 0)) > nbtp )
+        {
+            goto onError;
+        }
         if( buildGeom )
         {
           if( !(ring= OGR_G_CreateGeometry(wkbLinearRing)) )
@@ -2069,6 +2085,11 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
         i++;
         for( ip= 1; ip<=np; ip++ )
         {
+          if( i + (2 + (( d==v3D_GCIO||d==v3DM_GCIO ) ? 1 : 0)) > nbtp )
+          {
+              OGR_G_DestroyGeometry(ring);
+              goto onError;
+          }
           x= CPLAtof(papszFields[i]);
           i++;
           y= CPLAtof(papszFields[i]);
@@ -2092,14 +2113,21 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
         }
         if( buildGeom )
         {
-          /* is the ring of hole or another polygon ? */
-          for( ilpo= 0; ilpo<CPLListCount(Lpo); ilpo++)
+          /* is the ring a hole or another polygon ? */
+          const int nListCount = CPLListCount(Lpo);
+          for( ilpo= 0; ilpo<nListCount; ilpo++)
           {
             if( (e= CPLListGet(Lpo,ilpo)) )
             {
               if( (outer= (OGRGeometryH)CPLListGetData(e)) )
               {
-                if( OGR_G_Contains(outer,ring) )
+                OGRGeometryH hPolyRing = OGR_G_CreateGeometry(wkbPolygon);
+                int bRes;
+                OGR_G_AddGeometryDirectly(hPolyRing, ring);
+                bRes = OGR_G_Contains(outer,hPolyRing) ;
+                OGR_G_RemoveGeometry(hPolyRing, 0, FALSE);
+                OGR_G_DestroyGeometry(hPolyRing);
+                if( bRes )
                 {
                   OGR_G_AddGeometryDirectly(outer,ring);
                   ring= NULL;
@@ -2108,7 +2136,7 @@ static OGRGeometryH GCIOAPI_CALL _buildOGRGeometry_GCIO (
               }
             }
           }
-          if( !ring )
+          if( ring )
           {
             /* new polygon */
             if( !(outer= OGR_G_CreateGeometry(wkbPolygon)) )
