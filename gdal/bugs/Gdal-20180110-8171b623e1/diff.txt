diff --git a/gdal/frmts/hfa/hfa_p.h b/gdal/frmts/hfa/hfa_p.h
index 3016862905..d7443d30e2 100644
--- a/gdal/frmts/hfa/hfa_p.h
+++ b/gdal/frmts/hfa/hfa_p.h
@@ -37,6 +37,7 @@
 
 #include <cstdio>
 #include <vector>
+#include <set>
 
 #include "cpl_error.h"
 #include "cpl_vsi.h"
@@ -378,7 +379,7 @@ class HFAField
                                GUInt32 nDataOffset, int nDataSize,
                                const char *pszPrefix = nullptr );
 
-    int         GetInstBytes( GByte *, int );
+    int         GetInstBytes( GByte *, int, std::set<HFAField*>& oVisitedFields );
     int         GetInstCount( GByte * pabyData, int nDataSize );
 };
 
@@ -409,7 +410,7 @@ class HFAType
 
     void        Dump( FILE * );
 
-    int         GetInstBytes( GByte *, int );
+    int         GetInstBytes( GByte *, int, std::set<HFAField*>& oVisitedFields );
     int         GetInstCount( const char *pszField, GByte *pabyData,
                               GUInt32 nDataOffset, int nDataSize );
     bool        ExtractInstValue( const char * pszField,
diff --git a/gdal/frmts/hfa/hfafield.cpp b/gdal/frmts/hfa/hfafield.cpp
index c7ab131865..d505a4578f 100644
--- a/gdal/frmts/hfa/hfafield.cpp
+++ b/gdal/frmts/hfa/hfafield.cpp
@@ -793,10 +793,12 @@ HFAField::SetInstValue( const char *pszField, int nIndexValue,
                      iIndexCounter < nIndexValue && nExtraOffset < nDataSize;
                      iIndexCounter++ )
                 {
+                    std::set<HFAField*> oVisitedFields;
                     const int nInc =
                         poItemObjectType->
                             GetInstBytes(pabyData + nExtraOffset,
-                                         nDataSize - nExtraOffset);
+                                         nDataSize - nExtraOffset,
+                                         oVisitedFields);
                     if( nInc <= 0 || nExtraOffset > INT_MAX - nInc )
                     {
                         CPLError(CE_Failure, CPLE_AppDefined,
@@ -1290,10 +1292,12 @@ HFAField::ExtractInstValue( const char *pszField, int nIndexValue,
                      iIndexCounter < nIndexValue && nExtraOffset < nDataSize;
                      iIndexCounter++ )
                 {
+                    std::set<HFAField*> oVisitedFields;
                     const int nInc =
                         poItemObjectType->GetInstBytes(
                             pabyData + nExtraOffset,
-                            nDataSize - nExtraOffset);
+                            nDataSize - nExtraOffset,
+                            oVisitedFields);
                     if( nInc <= 0 || nExtraOffset > INT_MAX - nInc )
                     {
                         CPLError(CE_Failure, CPLE_AppDefined,
@@ -1385,9 +1389,16 @@ HFAField::ExtractInstValue( const char *pszField, int nIndexValue,
 /*      portion.                                                        */
 /************************************************************************/
 
-int HFAField::GetInstBytes( GByte *pabyData, int nDataSize )
+int HFAField::GetInstBytes( GByte *pabyData, int nDataSize,
+                            std::set<HFAField*>& oVisitedFields )
 
 {
+    if( oVisitedFields.find(this) != oVisitedFields.end() )
+    {
+        CPLError(CE_Failure, CPLE_AppDefined, "Recursion detected");
+        return -1;
+    }
+
     if( nBytes > -1 )
         return nBytes;
 
@@ -1463,13 +1474,15 @@ int HFAField::GetInstBytes( GByte *pabyData, int nDataSize )
     }
     else
     {
+        oVisitedFields.insert(this);
         for( int i = 0;
              i < nCount && nInstBytes < nDataSize && nInstBytes >= 0;
              i++ )
         {
             const int nThisBytes =
                 poItemObjectType->GetInstBytes(pabyData,
-                                                nDataSize - nInstBytes);
+                                               nDataSize - nInstBytes,
+                                               oVisitedFields);
             if( nThisBytes <= 0 || nInstBytes > INT_MAX - nThisBytes )
             {
                 CPLError(CE_Failure, CPLE_AppDefined, "Invalid return value");
@@ -1479,6 +1492,7 @@ int HFAField::GetInstBytes( GByte *pabyData, int nDataSize )
             nInstBytes += nThisBytes;
             pabyData += nThisBytes;
         }
+        oVisitedFields.erase(this);
     }
 
     return nInstBytes;
diff --git a/gdal/frmts/hfa/hfatype.cpp b/gdal/frmts/hfa/hfatype.cpp
index 33f7f57771..87d8adf463 100644
--- a/gdal/frmts/hfa/hfatype.cpp
+++ b/gdal/frmts/hfa/hfatype.cpp
@@ -251,8 +251,9 @@ HFAType::SetInstValue( const char *pszFieldPath,
             break;
         }
 
+        std::set<HFAField*> oVisitedFields;
         const int nInc = papoFields[iField]->GetInstBytes(
-            pabyData + nByteOffset, nDataSize - nByteOffset);
+            pabyData + nByteOffset, nDataSize - nByteOffset, oVisitedFields);
 
         if( nInc <= 0 ||
             nByteOffset > INT_MAX - nInc )
@@ -327,8 +328,9 @@ HFAType::GetInstCount( const char *pszFieldPath,
             break;
         }
 
+        std::set<HFAField*> oVisitedFields;
         const int nInc = papoFields[iField]->GetInstBytes(
-            pabyData + nByteOffset, nDataSize - nByteOffset);
+            pabyData + nByteOffset, nDataSize - nByteOffset, oVisitedFields);
 
         if( nInc <= 0 || nByteOffset > INT_MAX - nInc )
         {
@@ -419,8 +421,10 @@ HFAType::ExtractInstValue( const char *pszFieldPath,
             break;
         }
 
+        std::set<HFAField*> oVisitedFields;
         const int nInc = papoFields[iField]->GetInstBytes(
-            pabyData + nByteOffset, nDataSize - nByteOffset);
+            pabyData + nByteOffset, nDataSize - nByteOffset,
+            oVisitedFields);
 
         if( nInc <= 0 || nByteOffset > INT_MAX - nInc )
         {
@@ -460,7 +464,9 @@ void HFAType::DumpInstValue( FILE *fpOut,
         poField->DumpInstValue(fpOut, pabyData, nDataOffset,
                                nDataSize, pszPrefix);
 
-        const int nInstBytes = poField->GetInstBytes(pabyData, nDataSize);
+        std::set<HFAField*> oVisitedFields;
+        const int nInstBytes = poField->GetInstBytes(pabyData, nDataSize,
+                                                     oVisitedFields);
         if( nInstBytes <= 0 || nDataOffset > UINT_MAX - nInstBytes )
         {
             CPLError(CE_Failure, CPLE_AppDefined, "Invalid return value");
@@ -479,7 +485,8 @@ void HFAType::DumpInstValue( FILE *fpOut,
 /*      How many bytes in this particular instance of this type?        */
 /************************************************************************/
 
-int HFAType::GetInstBytes( GByte *pabyData, int nDataSize )
+int HFAType::GetInstBytes( GByte *pabyData, int nDataSize,
+                           std::set<HFAField*>& oVisitedFields )
 
 {
     if( nBytes >= 0 )
@@ -492,7 +499,7 @@ int HFAType::GetInstBytes( GByte *pabyData, int nDataSize )
         HFAField *poField = papoFields[iField];
 
         const int nInstBytes =
-            poField->GetInstBytes(pabyData, nDataSize - nTotal);
+            poField->GetInstBytes(pabyData, nDataSize - nTotal, oVisitedFields);
         if( nInstBytes <= 0 || nTotal > INT_MAX - nInstBytes )
         {
             CPLError(CE_Failure, CPLE_AppDefined, "Invalid return value");
