diff --git a/Zend/tests/weakrefs/weakmap_nested.phpt b/Zend/tests/weakrefs/weakmap_nested.phpt
new file mode 100644
index 0000000000..034a7a5241
--- /dev/null
+++ b/Zend/tests/weakrefs/weakmap_nested.phpt
@@ -0,0 +1,15 @@
+--TEST--
+Nested WeakMap for same object key
+--FILE--
+<?php
+$obj = new stdClass;
+$map = new WeakMap;
+$map2 = new WeakMap;
+$map[$obj] = $map2;
+$map2[$obj] = 1;
+unset($map2);
+unset($obj);
+?>
+===DONE===
+--EXPECT--
+===DONE===
diff --git a/Zend/zend_weakrefs.c b/Zend/zend_weakrefs.c
index ad20c4cabd..68a896dfa7 100644
--- a/Zend/zend_weakrefs.c
+++ b/Zend/zend_weakrefs.c
@@ -157,17 +157,12 @@ void zend_weakrefs_notify(zend_object *object) {
 	ZEND_ASSERT(tagged_ptr && "Tracking of the IS_OBJ_WEAKLY_REFERENCE flag should be precise");
 #endif
 	if (tagged_ptr) {
-		zend_hash_index_del(&EG(weakrefs), obj_addr);
 		zend_weakref_unref(obj_addr, tagged_ptr);
+		zend_hash_index_del(&EG(weakrefs), obj_addr);
 	}
 }
 
 void zend_weakrefs_shutdown(void) {
-	zend_ulong obj_addr;
-	void *tagged_ptr;
-	ZEND_HASH_FOREACH_NUM_KEY_PTR(&EG(weakrefs), obj_addr, tagged_ptr) {
-		zend_weakref_unref(obj_addr, tagged_ptr);
-	} ZEND_HASH_FOREACH_END();
 	zend_hash_destroy(&EG(weakrefs));
 }
 
