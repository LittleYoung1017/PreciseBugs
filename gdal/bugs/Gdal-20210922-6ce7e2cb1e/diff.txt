diff --git a/gdal/gcore/nasakeywordhandler.cpp b/gdal/gcore/nasakeywordhandler.cpp
index d575f39de1..96ac7de2b3 100644
--- a/gdal/gcore/nasakeywordhandler.cpp
+++ b/gdal/gcore/nasakeywordhandler.cpp
@@ -71,7 +71,6 @@ CPL_CVSID("$Id$")
 /************************************************************************/
 
 NASAKeywordHandler::NASAKeywordHandler() :
-    papszKeywordList(nullptr),
     pszHeaderNext(nullptr),
     m_bStripSurroundingQuotes(false)
 {
@@ -85,8 +84,6 @@ NASAKeywordHandler::NASAKeywordHandler() :
 NASAKeywordHandler::~NASAKeywordHandler()
 
 {
-    CSLDestroy( papszKeywordList );
-    papszKeywordList = nullptr;
 }
 
 /************************************************************************/
@@ -141,10 +138,15 @@ int NASAKeywordHandler::Ingest( VSILFILE *fp, int nOffset )
 /*                             ReadGroup()                              */
 /************************************************************************/
 
-int NASAKeywordHandler::ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCur,
+int NASAKeywordHandler::ReadGroup( const std::string& osPathPrefix, CPLJSONObject &oCur,
                                    int nRecLevel )
 
 {
+    if( osPathPrefix.size() > 256 )
+    {
+        CPLError(CE_Failure, CPLE_NotSupported, "Too big prefix for GROUP");
+        return FALSE;
+    }
     if( nRecLevel == 100 )
         return FALSE;
     for( ; true; )
@@ -157,7 +159,7 @@ int NASAKeywordHandler::ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCu
         {
             CPLJSONObject oNewGroup;
             oNewGroup.Add( "_type", EQUAL(osName,"OBJECT") ? "object" : "group" );
-            if( !ReadGroup( (CPLString(pszPathPrefix) + osValue + ".").c_str(),
+            if( !ReadGroup( (osPathPrefix + osValue + ".").c_str(),
                             oNewGroup, nRecLevel + 1 ) )
             {
                 return FALSE;
@@ -192,9 +194,8 @@ int NASAKeywordHandler::ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCu
         }
         else
         {
-            osName = pszPathPrefix + osName;
-            papszKeywordList = CSLSetNameValue( papszKeywordList,
-                                                osName, osValue );
+            osName = osPathPrefix + osName;
+            aosKeywordList.AddNameValue( osName, osValue );
         }
     }
 }
@@ -619,12 +620,7 @@ const char *NASAKeywordHandler::GetKeyword( const char *pszPath,
                                             const char *pszDefault )
 
 {
-    const char *pszResult = CSLFetchNameValue( papszKeywordList, pszPath );
-
-    if( pszResult == nullptr )
-        return pszDefault;
-
-    return pszResult;
+    return aosKeywordList.FetchNameValueDef(pszPath, pszDefault);
 }
 
 /************************************************************************/
@@ -633,7 +629,7 @@ const char *NASAKeywordHandler::GetKeyword( const char *pszPath,
 
 char **NASAKeywordHandler::GetKeywordList()
 {
-    return papszKeywordList;
+    return aosKeywordList.List();
 }
 
 /************************************************************************/
diff --git a/gdal/gcore/nasakeywordhandler.h b/gdal/gcore/nasakeywordhandler.h
index 961e2eccfd..cb787e56b4 100644
--- a/gdal/gcore/nasakeywordhandler.h
+++ b/gdal/gcore/nasakeywordhandler.h
@@ -49,7 +49,7 @@
 
 class CPL_DLL NASAKeywordHandler
 {
-    char     **papszKeywordList = nullptr;
+    CPLStringList aosKeywordList{};
 
     CPLString osHeaderText{};
     const char *pszHeaderNext = nullptr;
@@ -64,7 +64,7 @@ class CPL_DLL NASAKeywordHandler
                       bool bParseList = false,
                       bool* pbIsString = nullptr);
     int     ReadPair( CPLString &osName, CPLString &osValue, CPLJSONObject &oCur );
-    int     ReadGroup( const char *pszPathPrefix, CPLJSONObject &oCur, int nRecLevel );
+    int     ReadGroup( const std::string& osPathPrefix, CPLJSONObject &oCur, int nRecLevel );
 
     NASAKeywordHandler(const NASAKeywordHandler&) = delete;
     NASAKeywordHandler& operator=(const NASAKeywordHandler&) = delete;
