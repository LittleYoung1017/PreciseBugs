2b2c97062	74e54cc2a 648f6950c	Wed Sep 21 13:17:07 2022 -0400	Merge bitcoin/bitcoin#26149: Fix assert failure in miniscript string parsing	commit 2b2c970627f7b343dd07428bd73a146f175e3af9Merge: 74e54cc2a 648f6950cAuthor: Andrew Chow <github@achow101.com>Date:   Wed Sep 21 13:03:26 2022 -0400    Merge bitcoin/bitcoin#26149: Fix assert failure in miniscript string parsing        648f6950cd8d9ac767d76a1e302f37c611936a7a Correct sanity-checking script_size calculation (Pieter Wuille)        Pull request description:          Fix a bug in the script_size sanity-check in the miniscript string parser, found by oss-fuzz in https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51636, and introduced in e8cc2e4afc1142aa2b3da19cd5c17deea9963244 (#25540).          This bug would cause an assertion failure when feeding a miniscript with a `thresh(k,...)` fragment, with k >= 128, to an RPC.        ACKs for top commit:      darosior:        utACK 648f6950cd8d9ac767d76a1e302f37c611936a7a      achow101:        ACK 648f6950cd8d9ac767d76a1e302f37c611936a7a        Tree-SHA512: d86a0721758cd1e42ef02050b542f0935efdc19447a1ca76a3ade96352a6ee8261eef3d4a5cbdec77bf0ad14dfed42e9eb6bd4246b816a9f6f06d786900da9e7
c395c8d6b	d80640717 231583049	Mon Jul 18 15:05:39 2022 +0200	Merge bitcoin/bitcoin#25624: fuzz: Fix assert bug in txorphan target	commit c395c8d6bbd0afc836eac4e58c00a816fb967104Merge: d80640717 231583049Author: MacroFake <falke.marco@gmail.com>Date:   Mon Jul 18 15:05:37 2022 +0200    Merge bitcoin/bitcoin#25624: fuzz: Fix assert bug in txorphan target        2315830491b2cfa6b6e3e277700238e5ac92a8e0 fuzz: Fix assert bug in txorphan target (chinggg)        Pull request description:          Fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48914.          It is possible to construct big tx that got rejected in `AddTx`, so we cannot assume tx will be added successfully. We can only guarantee tx will not be added if orphanage already has it.        ACKs for top commit:      MarcoFalke:        lgtm ACK 2315830491b2cfa6b6e3e277700238e5ac92a8e0        Tree-SHA512: e173bc1a932639746de1192ed238e2e2318899f55371febb598facd0e811d8c54997f074f5e761757e1ffd3ae76d8edf9d673f020b2d97d5762ac656f632be81
dde7205c5	aaeb315ff fa07f84e3	Mon Jun 27 08:25:19 2022 +0200	Merge bitcoin/bitcoin#23418: Fix signed integer overflow in prioritisetransaction RPC	commit dde7205c576352a6052c1411d0fa8017e83d3ef4Merge: aaeb315ff fa07f84e3Author: MacroFake <falke.marco@gmail.com>Date:   Mon Jun 27 08:25:13 2022 +0200    Merge bitcoin/bitcoin#23418: Fix signed integer overflow in prioritisetransaction RPC        fa07f84e316171d60dd9941fb8db37e0a0de6654 Fix signed integer overflow in prioritisetransaction RPC (MarcoFalke)    fa52cf8e11b3af6e0a302d5d17aab6cea78899d5 refactor: Replace feeDelta by m_modified_fee (MarcoFalke)        Pull request description:          Signed integer overflow is UB in theory, but not in practice. Still,      it would be nice to avoid this UB to allow Bitcoin Core to be      compiled with sanitizers such as `-ftrapv` or ubsan.          It is impossible to predict when and if an overflow occurs, since      the overflow caused by a prioritisetransaction RPC might only be      later hit when descendant txs are added to the mempool.      Since it is impossible to predict reliably, leave it up to the user      to use the RPC endpoint responsibly, considering their mempool      limits and usage patterns.          Fixes: #20626      Fixes: #20383      Fixes: #19278      Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34146 / https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47132          ## Steps to reproduce          Build the code without the changes in this pull.          Make sure to pass the sanitizer flag:          ```      ./autogen.sh && ./configure --with-sanitizers=signed-integer-overflow && make clean && make -j $(nproc)      ```          ### Reproduce on RPC          ```      ./src/bitcoind -chain=regtest -noprinttoconsole &      ./src/bitcoin-cli -chain=regtest prioritisetransaction 00000000deadbeef00000000deadbeef00000000deadbeef00000000deadbeef 0 9123456789123456789      ./src/bitcoin-cli -chain=regtest prioritisetransaction 00000000deadbeef00000000deadbeef00000000deadbeef00000000deadbeef 0 9123456789123456789      |> txmempool.cpp:920:15: runtime error: signed integer overflow: 9123456789123456789 + 9123456789123456789 cannot be represented in type 'long int'          ./src/bitcoin-cli -chain=regtest stop      ```          ### By fuzzing          ```      wget https://github.com/bitcoin/bitcoin/files/8921302/clusterfuzz-testcase-minimized-validation_load_mempool-5599531390074880.bin.txt      FUZZ=validation_load_mempool ./src/test/fuzz/fuzz ./clusterfuzz-testcase-minimized-validation_load_mempool-5599531390074880.bin.txt      |> txmempool.cpp:920:15: runtime error: signed integer overflow: 7214801925397553184 + 2314885530818453536 cannot be represented in type 'long int'      |> validation_load_mempool: succeeded against 1 files in 0s.        ACKs for top commit:      vasild:        ACK fa07f84e316171d60dd9941fb8db37e0a0de6654      dunxen:        ACK fa07f84      LarryRuane:        ACK fa07f84e316171d60dd9941fb8db37e0a0de6654        Tree-SHA512: 4a357950af55a49c9113da0a50c2e743c5b752f0514dd8d16cd92bfde2f77dd0ef56aa98452626df6f7f7a5b51d1227021f6bc94091201a179f0d488ee32a0df
419afa934	8d83f9c1d aaaa37abb	Wed Sep 29 17:58:50 2021 +0200	Merge bitcoin/bitcoin#23064: fuzz: Fix memory leak in system fuzz target	commit 419afa93419e6840f78cb94b4a39d826eb10e139Merge: 8d83f9c1d aaaa37abbAuthor: MarcoFalke <falke.marco@gmail.com>Date:   Wed Sep 29 17:58:47 2021 +0200    Merge bitcoin/bitcoin#23064: fuzz: Fix memory leak in system fuzz target        aaaa37abbab69fe1fdc2d332bbaf6ecce0c5cc00 fuzz: Fix memory leak in system fuzz target (MarcoFalke)        Pull request description:          Might fix https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=36906          To test:          ```      $ FUZZ=system valgrind --tool=massif ./src/test/fuzz/fuzz ../btc_qa_assets/fuzz_seed_corpus/system/      ^C      $ massif-visualizer ./massif.out.952024      ```        ACKs for top commit:      practicalswift:        cr ACK aaaa37abbab69fe1fdc2d332bbaf6ecce0c5cc00        Tree-SHA512: 6aa47ea12ec76133ae326ed41c31414d7a418abe1f28b05f698e9bb5439bbe26b814c4827999b15b77b47608dbc71c9b35789d0b84e25f56928381d06d6460e5
d542603c5	624a19333 facd56750	Tue Jul 20 10:46:56 2021 +0800	Merge bitcoin/bitcoin#22502: scripted-diff: Revert "fuzz: Add Temporary debug assert for oss-fuzz issue"	commit d542603c5ac9143b638b256855a63e6665554913Merge: 624a19333 facd56750Author: fanquake <fanquake@gmail.com>Date:   Tue Jul 20 10:46:45 2021 +0800    Merge bitcoin/bitcoin#22502: scripted-diff: Revert "fuzz: Add Temporary debug assert for oss-fuzz issue"        facd56750c8a6aee88eeef75d8c8233778d35757 scripted-diff: Revert "fuzz: Add Temporary debug assert for oss-fuzz issue" (MarcoFalke)        Pull request description:          No longer needed, as it wouldn't help to debug this issue. See https://github.com/bitcoin/bitcoin/pull/22472#issuecomment-882692900        ACKs for top commit:      fanquake:        ACK facd56750c8a6aee88eeef75d8c8233778d35757        Tree-SHA512: 13352b3529c43d6e65ab127134b32158d3072dc2fbbb326fea9adfeada5a8610d0477ea75748b8b68e7abb3b9869a989df3a3169e92bdd458053d64bae6ed379
facd56750	7e1ba37b5	Mon Jul 19 19:12:54 2021 +0200	scripted-diff: Revert "fuzz: Add Temporary debug assert for oss-fuzz issue"	commit facd56750c8a6aee88eeef75d8c8233778d35757Author: MarcoFalke <falke.marco@gmail.com>Date:   Mon Jul 19 19:18:36 2021 +0200    scripted-diff: Revert "fuzz: Add Temporary debug assert for oss-fuzz issue"        -BEGIN VERIFY SCRIPT-    git show faf1af58f85da74f94c6b5f6910c7faf7b47cc88 | git apply --reverse    -END VERIFY SCRIPT-
922abe8ca	6eafa81b3 faf1af58f	Thu Jun 17 14:57:09 2021 +0200	Merge bitcoin/bitcoin#22268: fuzz: Add temporary debug assert for oss-fuzz issue	commit 922abe8ca3825a73fd2054d6bc8f557acefb5babMerge: 6eafa81b3 faf1af58fAuthor: MarcoFalke <falke.marco@gmail.com>Date:   Thu Jun 17 14:57:07 2021 +0200    Merge bitcoin/bitcoin#22268: fuzz: Add temporary debug assert for oss-fuzz issue        faf1af58f85da74f94c6b5f6910c7faf7b47cc88 fuzz: Add Temporary debug assert for oss-fuzz issue (MarcoFalke)        Pull request description:          oss-fuzz is acting weird, so add an earlier assert to help troubleshooting        ACKs for top commit:      practicalswift:        cr ACK faf1af58f85da74f94c6b5f6910c7faf7b47cc88        Tree-SHA512: 85830d7d47cf6b4edfe91a07bd5aa8f7110db0bade8df93868cf276ed04d5dd17e671f769e6a0fb5092012b86aa82bb411fb171411f15746981104ce634c88c1
faf1af58f	dd24567a2	Thu Jun 17 10:55:39 2021 +0200	fuzz: Add Temporary debug assert for oss-fuzz issue	commit faf1af58f85da74f94c6b5f6910c7faf7b47cc88Author: MarcoFalke <falke.marco@gmail.com>Date:   Thu Jun 17 11:17:10 2021 +0200    fuzz: Add Temporary debug assert for oss-fuzz issue
3f3c4d2e2	be4171679 fad0867d6	Mon May 24 11:02:00 2021 +0800	Merge bitcoin/bitcoin#22002: Fix crash when parsing command line with -noincludeconf=0	commit 3f3c4d2e2e7ee39ac98a149882eb3eacc17683cdMerge: be4171679 fad0867d6Author: fanquake <fanquake@gmail.com>Date:   Mon May 24 10:59:51 2021 +0800    Merge bitcoin/bitcoin#22002: Fix crash when parsing command line with -noincludeconf=0        fad0867d6ab9430070aa7d60bf7617a6508e0586 Cleanup -includeconf error message (MarcoFalke)    fa9f711c3746ca3962f15224285a453744cd45b3 Fix crash when parsing command line with -noincludeconf=0 (MarcoFalke)        Pull request description:          The error message has several issues:          * It may crash instead of cleanly shutting down, when `-noincludeconf=0` is passed      * It doesn't quote the value      * It includes an erroneous trailing `\n`      * It is redundantly mentioning `"-includeconf cannot be used from commandline;"` several times, when once should be more than sufficient          Fix all issues by:      * Replacing `get_str()` with `write()` to fix the crash and quoting issue      * Remove the `\n` and only print the first value to fix the other issues          Before:          ```      $ ./src/bitcoind -noincludeconf=0      terminate called after throwing an instance of 'std::runtime_error'        what():  JSON value is not a string as expected      Aborted (core dumped)          $ ./src/bitcoind -includeconf='a b' -includeconf=c      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=a b      -includeconf cannot be used from commandline; -includeconf=c      ```          After:          ```      $ ./src/bitcoind -noincludeconf=0      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=true          $ ./src/bitcoind -includeconf='a b' -includeconf=c      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf="a b"      ```          Hopefully fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34493          Testcase: https://github.com/bitcoin/bitcoin/files/6515429/clusterfuzz-testcase-minimized-system-6328535926046720.log          ```      FUZZ=system ./src/test/fuzz/fuzz ./clusterfuzz-testcase-minimized-system-6328535926046720.log      ```          See https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md        ACKs for top commit:      sipa:        utACK fad0867d6ab9430070aa7d60bf7617a6508e0586        Tree-SHA512: b44af93be6bf71b43669058c1449c4c6999f03b5b01b429851b149b12d77733408cb207e9a3edc6f0bffd6030c4c52165e8e23a1c2718ff5082a6ba254cc94a4
