diff --git a/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h b/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
index 544e23e701..692a081420 100644
--- a/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
+++ b/gdal/ogr/ogrsf_frmts/dxf/ogr_dxf.h
@@ -282,8 +282,7 @@ class OGRDXFLayer : public OGRLayer
                                            OGRDXFFeature* const poFeature,
                                            std::queue<OGRDXFFeature *>& apoExtraFeatures,
                                            const bool bInlineNestedBlocks,
-                                           const bool bMergeGeometry,
-                                           std::vector<CPLString> *paosInsertedBlocks = NULL );
+                                           const bool bMergeGeometry );
     OGRDXFFeature *     InsertBlockReference( const CPLString& osBlockName,
                                               const OGRDXFInsertTransformer& oTransformer,
                                               OGRDXFFeature* const poFeature );
@@ -391,6 +390,8 @@ class OGRDXFDataSource : public OGRDataSource
 
     OGRDXFReader        oReader;
 
+    std::vector<CPLString> aosBlockInsertionStack;
+
   public:
                         OGRDXFDataSource();
                         ~OGRDXFDataSource();
@@ -416,6 +417,9 @@ class OGRDXFDataSource : public OGRDataSource
     CPLString           GetBlockNameByRecordHandle( const char *pszID );
     std::map<CPLString,DXFBlockDefinition> &GetBlockMap() { return oBlockMap; }
 
+    bool                PushBlockInsertion( const CPLString& osBlockName );
+    void                PopBlockInsertion() { aosBlockInsertionStack.pop_back(); }
+
     // Layer and other Table Handling (ogrdatasource.cpp)
     bool                ReadTablesSection();
     bool                ReadLayerDefinition();
diff --git a/gdal/ogr/ogrsf_frmts/dxf/ogrdxf_blockmap.cpp b/gdal/ogr/ogrsf_frmts/dxf/ogrdxf_blockmap.cpp
index cfa8faa147..b0cca2a7dd 100644
--- a/gdal/ogr/ogrsf_frmts/dxf/ogrdxf_blockmap.cpp
+++ b/gdal/ogr/ogrsf_frmts/dxf/ogrdxf_blockmap.cpp
@@ -32,6 +32,8 @@
 #include "cpl_string.h"
 #include "cpl_csv.h"
 
+#include <algorithm>
+
 CPL_CVSID("$Id$")
 
 /************************************************************************/
@@ -101,9 +103,13 @@ bool OGRDXFDataSource::ReadBlocksSection()
 
         // Now we will process entities till we run out at the ENDBLK code.
 
+        PushBlockInsertion( osBlockName );
+
         OGRDXFFeature *poFeature = NULL;
         while( (poFeature = poReaderLayer->GetNextUnfilteredFeature()) != NULL )
             oBlockMap[osBlockName].apoFeatures.push_back( poFeature );
+
+        PopBlockInsertion();
     }
     if( nCode < 0 )
     {
@@ -159,6 +165,33 @@ CPLString OGRDXFDataSource::GetBlockNameByRecordHandle( const char *pszID )
         return oBlockRecordHandles[l_osID];
 }
 
+/************************************************************************/
+/*                         PushBlockInsertion()                         */
+/*                                                                      */
+/*      Add a block name to the stack of blocks being inserted.         */
+/*      Returns false if we are already inserting this block.           */
+/************************************************************************/
+
+bool OGRDXFDataSource::PushBlockInsertion( const CPLString& osBlockName )
+
+{
+    // Make sure we are not recursing too deeply (avoid stack overflows) or
+    // inserting a block within itself (avoid billion-laughs type issues).
+    // 128 is a totally arbitrary limit
+    if( aosBlockInsertionStack.size() > 128 ||
+        std::find( aosBlockInsertionStack.begin(),
+            aosBlockInsertionStack.end(), osBlockName )
+        != aosBlockInsertionStack.end() )
+    {
+        CPLDebug( "DXF", "Dangerous block recursion detected. "
+            "Some blocks have not been inserted." );
+        return false;
+    }
+
+    aosBlockInsertionStack.push_back( osBlockName );
+    return true;
+}
+
 /************************************************************************/
 /*                        ~DXFBlockDefinition()                         */
 /*                                                                      */
diff --git a/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp b/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
index 76d501e781..96c0794139 100644
--- a/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
+++ b/gdal/ogr/ogrsf_frmts/dxf/ogrdxflayer.cpp
@@ -2534,26 +2534,13 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
     OGRDXFFeature* const poFeature,
     std::queue<OGRDXFFeature *>& apoExtraFeatures,
     const bool bInlineRecursively,
-    const bool bMergeGeometry,
-    std::vector<CPLString> *paosInsertedBlocks /* = NULL */ )
+    const bool bMergeGeometry )
 {
 /* -------------------------------------------------------------------- */
-/*      Set up protection against excessive recursion.                  */
+/*      Set up protection against excessive recursion on this layer.    */
 /* -------------------------------------------------------------------- */
-    std::vector<CPLString> aosInsertedBlocks;
-    if( !paosInsertedBlocks )
-        paosInsertedBlocks = &aosInsertedBlocks;
-
-    // Make sure we are not recursing too deeply (avoid stack overflows) or
-    // inserting a block within itself (avoid billion-laughs type issues).
-    // 128 is a totally arbitrary limit
-    if( paosInsertedBlocks->size() > 128 ||
-        std::find( paosInsertedBlocks->begin(), paosInsertedBlocks->end(),
-        osBlockName ) != paosInsertedBlocks->end() )
+    if( !poDS->PushBlockInsertion( osBlockName ) )
     {
-        CPLDebug( "DXF", "Dangerous block recursion detected. "
-            "Some INSERT entities have been skipped." );
-
         delete poFeature;
         return NULL;
     }
@@ -2579,11 +2566,10 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
     if( poBlock == NULL )
     {
         //CPLDebug( "DXF", "Attempt to insert missing block %s", osBlockName );
+        poDS->PopBlockInsertion();
         throw std::invalid_argument("osBlockName");
     }
 
-    paosInsertedBlocks->push_back( osBlockName );
-
 /* -------------------------------------------------------------------- */
 /*      If we have complete features associated with the block, push    */
 /*      them on the pending feature stack copying over key override     */
@@ -2627,7 +2613,7 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
             {
                 poSubFeature = InsertBlockInline( poSubFeature->osBlockName,
                     oInnerTransformer, poSubFeature, apoInnerExtraFeatures,
-                    true, bMergeGeometry, paosInsertedBlocks );
+                    true, bMergeGeometry );
             }
             catch( const std::invalid_argument& )
             {
@@ -2738,7 +2724,7 @@ OGRDXFFeature *OGRDXFLayer::InsertBlockInline( const CPLString& osBlockName,
         }
     }
 
-    paosInsertedBlocks->pop_back();
+    poDS->PopBlockInsertion();
 
 /* -------------------------------------------------------------------- */
 /*      Return the merged geometry if applicable.  Otherwise            */
