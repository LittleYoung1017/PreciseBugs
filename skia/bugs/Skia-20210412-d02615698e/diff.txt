diff --git a/gn/sksl_tests.gni b/gn/sksl_tests.gni
index 7384307c7b..d01f404ca0 100644
--- a/gn/sksl_tests.gni
+++ b/gn/sksl_tests.gni
@@ -110,6 +110,7 @@ sksl_error_tests = [
   "/sksl/errors/DuplicateSymbol.sksl",
   "/sksl/errors/EmptyArray.sksl",
   "/sksl/errors/EmptyStruct.sksl",
+  "/sksl/errors/EnumTypeCoercion.sksl",
   "/sksl/errors/EnumValueMustBeConstInt.sksl",
   "/sksl/errors/ErrorsInDeadCode.sksl",
   "/sksl/errors/FloatRemainder.sksl",
diff --git a/resources/sksl/errors/EnumTypeCoercion.sksl b/resources/sksl/errors/EnumTypeCoercion.sksl
new file mode 100644
index 0000000000..b6a0d77cc1
--- /dev/null
+++ b/resources/sksl/errors/EnumTypeCoercion.sksl
@@ -0,0 +1 @@
+SkBlendMode w=0;
diff --git a/src/sksl/ir/SkSLType.cpp b/src/sksl/ir/SkSLType.cpp
index d5fdc65e15..a94c68c48c 100644
--- a/src/sksl/ir/SkSLType.cpp
+++ b/src/sksl/ir/SkSLType.cpp
@@ -269,9 +269,14 @@ std::unique_ptr<Expression> Type::coerceExpression(std::unique_ptr<Expression> e
         return nullptr;
     }
 
-    return this->isScalar()
-                   ? ConstructorScalarCast::Make(context, offset, *this, std::move(expr))
-                   : ConstructorCompoundCast::Make(context, offset, *this, std::move(expr));
+    if (this->isScalar()) {
+        return ConstructorScalarCast::Make(context, offset, *this, std::move(expr));
+    }
+    if (this->isVector() || this->isMatrix()) {
+        return ConstructorCompoundCast::Make(context, offset, *this, std::move(expr));
+    }
+    context.fErrors.error(offset, "cannot construct '" + this->displayName() + "'");
+    return nullptr;
 }
 
 bool Type::isOrContainsArray() const {
diff --git a/tests/sksl/errors/EnumTypeCoercion.glsl b/tests/sksl/errors/EnumTypeCoercion.glsl
new file mode 100644
index 0000000000..a2cc376e92
--- /dev/null
+++ b/tests/sksl/errors/EnumTypeCoercion.glsl
@@ -0,0 +1,4 @@
+### Compilation failed:
+
+error: 1: cannot construct 'SkBlendMode'
+1 error
