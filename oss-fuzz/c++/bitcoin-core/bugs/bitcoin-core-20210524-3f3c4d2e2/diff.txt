diff --cc src/util/system.cpp
index 76d63074e,76d63074e..9b3bd46b3
--- a/src/util/system.cpp
+++ b/src/util/system.cpp
@@@ -366,12 -366,12 +366,14 @@@ bool ArgsManager::ParseParameters(int a
      }
  
      // we do not allow -includeconf from command line
++    bool success = true;
      if (auto* includes = util::FindKey(m_settings.command_line_options, "includeconf")) {
--        const auto& include{*util::SettingsSpan(*includes).begin()}; // pick first value as example
--        error = "-includeconf cannot be used from commandline; -includeconf=" + include.write();
--        return false;
++        for (const auto& include : util::SettingsSpan(*includes)) {
++            error += "-includeconf cannot be used from commandline; -includeconf=" + include.get_str() + "\n";
++            success = false;
++        }
      }
--    return true;
++    return success;
  }
  
  std::optional<unsigned int> ArgsManager::GetArgFlags(const std::string& name) const
diff --cc test/functional/feature_includeconf.py
index 448182ede,448182ede..f22b7f266
--- a/test/functional/feature_includeconf.py
+++ b/test/functional/feature_includeconf.py
@@@ -42,14 -42,14 +42,7 @@@ class IncludeConfTest(BitcoinTestFramew
  
          self.log.info("-includeconf cannot be used as command-line arg")
          self.stop_node(0)
--        self.nodes[0].assert_start_raises_init_error(
--            extra_args=['-noincludeconf=0'],
--            expected_msg='Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=true',
--        )
--        self.nodes[0].assert_start_raises_init_error(
--            extra_args=['-includeconf=relative2.conf', '-includeconf=no_warn.conf'],
--            expected_msg='Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf="relative2.conf"',
--        )
++        self.nodes[0].assert_start_raises_init_error(extra_args=["-includeconf=relative2.conf"], expected_msg="Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=relative2.conf")
  
          self.log.info("-includeconf cannot be used recursively. subversion should end with 'main; relative)/'")
          with open(os.path.join(self.options.tmpdir, "node0", "relative.conf"), "a", encoding="utf8") as f:
