diff --git a/autotest/gcore/data/corrupted_deflate_singlestrip.tif b/autotest/gcore/data/corrupted_deflate_singlestrip.tif
new file mode 100644
index 0000000000..6fb8ddbc8e
Binary files /dev/null and b/autotest/gcore/data/corrupted_deflate_singlestrip.tif differ
diff --git a/autotest/gcore/tiff_read.py b/autotest/gcore/tiff_read.py
index b7ea0cd2f0..f4499cf51a 100755
--- a/autotest/gcore/tiff_read.py
+++ b/autotest/gcore/tiff_read.py
@@ -3092,6 +3092,19 @@ def tiff_read_uint33():
 
     return 'success'
 
+###############################################################################
+# Test fix for https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=1545
+def tiff_read_corrupted_deflate_singlestrip():
+
+    if not check_libtiff_internal_or_greater(4,0,8):
+        return 'skip'
+
+    with gdaltest.error_handler():
+        ds = gdal.Open('data/corrupted_deflate_singlestrip.tif')
+        ds.GetRasterBand(1).Checksum()
+
+    return 'success'
+
 ###############################################################################
 
 for item in init_list:
@@ -3197,11 +3210,12 @@ gdaltest_list.append( (tiff_read_big_tile) )
 gdaltest_list.append( (tiff_read_huge_number_strips) )
 gdaltest_list.append( (tiff_read_many_blocks) )
 gdaltest_list.append( (tiff_read_uint33) )
+gdaltest_list.append( (tiff_read_corrupted_deflate_singlestrip) )
 
 gdaltest_list.append( (tiff_read_online_1) )
 gdaltest_list.append( (tiff_read_online_2) )
 
-# gdaltest_list = [ tiff_read_ycbcr_lzw ]
+# gdaltest_list = [ tiff_read_online_1 ]
 
 if __name__ == '__main__':
 
diff --git a/gdal/frmts/gtiff/libtiff/tif_read.c b/gdal/frmts/gtiff/libtiff/tif_read.c
index 34163f56e6..cc4f5d2f62 100644
--- a/gdal/frmts/gtiff/libtiff/tif_read.c
+++ b/gdal/frmts/gtiff/libtiff/tif_read.c
@@ -1,4 +1,4 @@
-/* $Id: tif_read.c,v 1.58 2017-05-12 21:12:24 erouault Exp $ */
+/* $Id: tif_read.c,v 1.59 2017-05-13 15:34:06 erouault Exp $ */
 
 /*
  * Copyright (c) 1988-1997 Sam Leffler
@@ -277,7 +277,10 @@ TIFFFillStripPartial( TIFF *tif, int strip, tmsize_t read_ahead, int restart )
         if( restart )
                 return TIFFStartStrip(tif, strip);
         else
+        {
+                tif->tif_rawcc = tif->tif_rawdataloaded;
                 return 1;
+        }
 }
 
 /*
@@ -1260,7 +1263,10 @@ TIFFStartStrip(TIFF* tif, uint32 strip)
 	else
 	{
 		tif->tif_rawcp = tif->tif_rawdata;
-		tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
+		if( tif->tif_rawdataloaded > 0 )
+			tif->tif_rawcc = tif->tif_rawdataloaded;
+		else
+			tif->tif_rawcc = (tmsize_t)td->td_stripbytecount[strip];
 	}
 	return ((*tif->tif_predecode)(tif,
 			(uint16)(strip / td->td_stripsperimage)));
