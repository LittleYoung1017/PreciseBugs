{"buggy_code": ["'use strict';\n\nfunction undefsafe(obj, path, value, __res) {\n  // I'm not super keen on this private function, but it's because\n  // it'll also be use in the browser and I wont *one* function exposed\n  function split(path) {\n    var res = [];\n    var level = 0;\n    var key = '';\n\n    for (var i = 0; i < path.length; i++) {\n      var c = path.substr(i, 1);\n\n      if (level === 0 && (c === '.' || c === '[')) {\n        if (c === '[') {\n          level++;\n          i++;\n          c = path.substr(i, 1);\n        }\n\n        if (key) {\n          // the first value could be a string\n          res.push(key);\n        }\n        key = '';\n        continue;\n      }\n\n      if (c === ']') {\n        level--;\n        key = key.slice(0, -1);\n        continue;\n      }\n\n      key += c;\n    }\n\n    res.push(key);\n\n    return res;\n  }\n\n  // bail if there's nothing\n  if (obj === undefined || obj === null) {\n    return undefined;\n  }\n\n  var parts = split(path);\n  var key = null;\n  var type = typeof obj;\n  var root = obj;\n  var parent = obj;\n\n  var star =\n    parts.filter(function(_) {\n      return _ === '*';\n    }).length > 0;\n\n  // we're dealing with a primitive\n  if (type !== 'object' && type !== 'function') {\n    return obj;\n  } else if (path.trim() === '') {\n    return obj;\n  }\n\n  key = parts[0];\n  var i = 0;\n  for (; i < parts.length; i++) {\n    key = parts[i];\n    parent = obj;\n\n    if (key === '*') {\n      // loop through each property\n      var prop = '';\n      var res = __res || [];\n\n      for (prop in parent) {\n        var shallowObj = undefsafe(\n          obj[prop],\n          parts.slice(i + 1).join('.'),\n          value,\n          res\n        );\n        if (shallowObj && shallowObj !== res) {\n          if ((value && shallowObj === value) || value === undefined) {\n            if (value !== undefined) {\n              return shallowObj;\n            }\n\n            res.push(shallowObj);\n          }\n        }\n      }\n\n      if (res.length === 0) {\n        return undefined;\n      }\n\n      return res;\n    }\n\n    obj = obj[key];\n    if (obj === undefined || obj === null) {\n      break;\n    }\n  }\n\n  // if we have a null object, make sure it's the one the user was after,\n  // if it's not (i.e. parts has a length) then give undefined back.\n  if (obj === null && i !== parts.length - 1) {\n    obj = undefined;\n  } else if (!star && value) {\n    key = path.split('.').pop();\n    parent[key] = value;\n  }\n  return obj;\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = undefsafe;\n}\n", "Couldn't find the requested file /test/misc.test.js in remy/undefsafe."], "fixing_code": ["'use strict';\n\nfunction undefsafe(obj, path, value, __res) {\n  // I'm not super keen on this private function, but it's because\n  // it'll also be use in the browser and I wont *one* function exposed\n  function split(path) {\n    var res = [];\n    var level = 0;\n    var key = '';\n\n    for (var i = 0; i < path.length; i++) {\n      var c = path.substr(i, 1);\n\n      if (level === 0 && (c === '.' || c === '[')) {\n        if (c === '[') {\n          level++;\n          i++;\n          c = path.substr(i, 1);\n        }\n\n        if (key) {\n          // the first value could be a string\n          res.push(key);\n        }\n        key = '';\n        continue;\n      }\n\n      if (c === ']') {\n        level--;\n        key = key.slice(0, -1);\n        continue;\n      }\n\n      key += c;\n    }\n\n    res.push(key);\n\n    return res;\n  }\n\n  // bail if there's nothing\n  if (obj === undefined || obj === null) {\n    return undefined;\n  }\n\n  var parts = split(path);\n  var key = null;\n  var type = typeof obj;\n  var root = obj;\n  var parent = obj;\n\n  var star =\n    parts.filter(function(_) {\n      return _ === '*';\n    }).length > 0;\n\n  // we're dealing with a primitive\n  if (type !== 'object' && type !== 'function') {\n    return obj;\n  } else if (path.trim() === '') {\n    return obj;\n  }\n\n  key = parts[0];\n  var i = 0;\n  for (; i < parts.length; i++) {\n    key = parts[i];\n    parent = obj;\n\n    if (key === '*') {\n      // loop through each property\n      var prop = '';\n      var res = __res || [];\n\n      for (prop in parent) {\n        var shallowObj = undefsafe(\n          obj[prop],\n          parts.slice(i + 1).join('.'),\n          value,\n          res\n        );\n        if (shallowObj && shallowObj !== res) {\n          if ((value && shallowObj === value) || value === undefined) {\n            if (value !== undefined) {\n              return shallowObj;\n            }\n\n            res.push(shallowObj);\n          }\n        }\n      }\n\n      if (res.length === 0) {\n        return undefined;\n      }\n\n      return res;\n    }\n\n    if (Object.getOwnPropertyNames(obj).indexOf(key) == -1) {\n      return undefined;\n    }\n\n    obj = obj[key];\n    if (obj === undefined || obj === null) {\n      break;\n    }\n  }\n\n  // if we have a null object, make sure it's the one the user was after,\n  // if it's not (i.e. parts has a length) then give undefined back.\n  if (obj === null && i !== parts.length - 1) {\n    obj = undefined;\n  } else if (!star && value) {\n    key = path.split('.').pop();\n    parent[key] = value;\n  }\n  return obj;\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = undefsafe;\n}\n", "var test = require('tap').test;\nvar undefsafe = require('../lib/undefsafe');\n\ntest('cannot modify prototype chain', function(t) {\n  const pre = {}.__proto__.toString;\n  var payload = '__proto__.toString';\n  undefsafe({ a: 'b' }, payload, 'JHU');\n  t.notEqual({}.toString, 'JHU');\n  ({}.__proto__.toString = pre); // restore\n  t.end();\n});\n"], "buggy_code_start_loc": [101, 1], "buggy_code_end_loc": [101, 2], "fixing_code_start_loc": [102, 1], "fixing_code_end_loc": [106, 12], "type": "CWE-74", "message": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.", "other": {"cve": {"id": "CVE-2019-10795", "sourceIdentifier": "report@snyk.io", "published": "2020-02-18T16:15:10.470", "lastModified": "2020-02-27T16:47:45.537", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload."}, {"lang": "es", "value": "undefsafe versiones anteriores a 2.0.3, es vulnerable a una Contaminaci\u00f3n de Prototipo (Prototype Pollution). La funci\u00f3n \"a\" podr\u00eda ser enga\u00f1ada para agregar o modificar propiedades de Object.prototype mediante el uso de una carga \u00fatil __proto__."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-74"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:undefsafe_project:undefsafe:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "2.0.3", "matchCriteriaId": "77B757A9-C2ED-4FEA-BCDA-C20D9E8F3CE6"}]}]}], "references": [{"url": "https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822"}}