diff --git a/bazel/foreign_cc/BUILD b/bazel/foreign_cc/BUILD
index 09d67b2a4d..5dc37d92df 100644
--- a/bazel/foreign_cc/BUILD
+++ b/bazel/foreign_cc/BUILD
@@ -101,6 +101,9 @@ envoy_cmake_external(
         "CMAKE_USE_GSSAPI": "off",
         "HTTP_ONLY": "on",
         "CMAKE_INSTALL_LIBDIR": "lib",
+        # Explicitly enable Unix sockets and disable crypto for Windows
+        "USE_UNIX_SOCKETS": "on",
+        "CURL_DISABLE_CRYPTO_AUTH": "on",
         # C-Ares.
         "ENABLE_ARES": "on",
         "CARES_LIBRARY": "$EXT_BUILD_DEPS/ares",
diff --git a/test/dependencies/BUILD b/test/dependencies/BUILD
index 3d68e338f2..2e6ae296b7 100644
--- a/test/dependencies/BUILD
+++ b/test/dependencies/BUILD
@@ -14,5 +14,4 @@ envoy_cc_test(
     external_deps = [
         "curl",
     ],
-    tags = ["fails_on_windows"],
 )
diff --git a/test/dependencies/curl_test.cc b/test/dependencies/curl_test.cc
index 6e11ee6dc7..859e68c90d 100644
--- a/test/dependencies/curl_test.cc
+++ b/test/dependencies/curl_test.cc
@@ -9,28 +9,32 @@ TEST(CurlTest, BuiltWithExpectedFeatures) {
   // https://curl.haxx.se/libcurl/c/curl_version_info.html.
   curl_version_info_data* info = curl_version_info(CURLVERSION_NOW);
 
-  EXPECT_NE(0, info->features & CURL_VERSION_ASYNCHDNS);
-  EXPECT_NE(0, info->ares_num);
-  EXPECT_NE(0, info->features & CURL_VERSION_HTTP2);
-  EXPECT_NE(0, info->features & CURL_VERSION_LIBZ);
+  // In sequence as declared in curl.h. Overlook any toggle of the
+  // developer or os elections for DEBUG, CURL DEBUG and LARGE FILE
   EXPECT_NE(0, info->features & CURL_VERSION_IPV6);
-
-#ifndef WIN32
-  EXPECT_NE(0, info->features & CURL_VERSION_UNIX_SOCKETS);
-#else
-  EXPECT_EQ(0, info->features & CURL_VERSION_UNIX_SOCKETS);
-#endif
-
-  EXPECT_EQ(0, info->features & CURL_VERSION_BROTLI);
-  EXPECT_EQ(0, info->features & CURL_VERSION_GSSAPI);
-  EXPECT_EQ(0, info->features & CURL_VERSION_GSSNEGOTIATE);
   EXPECT_EQ(0, info->features & CURL_VERSION_KERBEROS4);
-  EXPECT_EQ(0, info->features & CURL_VERSION_KERBEROS5);
+  EXPECT_EQ(0, info->features & CURL_VERSION_SSL);
+  EXPECT_NE(0, info->features & CURL_VERSION_LIBZ);
   EXPECT_EQ(0, info->features & CURL_VERSION_NTLM);
-  EXPECT_EQ(0, info->features & CURL_VERSION_NTLM_WB);
+  EXPECT_EQ(0, info->features & CURL_VERSION_GSSNEGOTIATE);
+  EXPECT_NE(0, info->features & CURL_VERSION_ASYNCHDNS);
   EXPECT_EQ(0, info->features & CURL_VERSION_SPNEGO);
-  EXPECT_EQ(0, info->features & CURL_VERSION_SSL);
+  EXPECT_EQ(0, info->features & CURL_VERSION_IDN);
   EXPECT_EQ(0, info->features & CURL_VERSION_SSPI);
+  EXPECT_EQ(0, info->features & CURL_VERSION_CONV);
+  EXPECT_EQ(0, info->features & CURL_VERSION_TLSAUTH_SRP);
+  EXPECT_EQ(0, info->features & CURL_VERSION_NTLM_WB);
+  EXPECT_NE(0, info->features & CURL_VERSION_HTTP2);
+  EXPECT_EQ(0, info->features & CURL_VERSION_GSSAPI);
+  EXPECT_EQ(0, info->features & CURL_VERSION_KERBEROS5);
+  EXPECT_NE(0, info->features & CURL_VERSION_UNIX_SOCKETS);
+  EXPECT_EQ(0, info->features & CURL_VERSION_PSL);
+  EXPECT_EQ(0, info->features & CURL_VERSION_HTTPS_PROXY);
+  EXPECT_EQ(0, info->features & CURL_VERSION_MULTI_SSL);
+  EXPECT_EQ(0, info->features & CURL_VERSION_BROTLI);
+  EXPECT_EQ(0, info->features & CURL_VERSION_ALTSVC);
+  EXPECT_EQ(0, info->features & CURL_VERSION_HTTP3);
+  EXPECT_NE(0, info->ares_num);
 }
 
 } // namespace Dependencies
