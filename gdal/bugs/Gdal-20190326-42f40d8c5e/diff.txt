diff --git a/gdal/frmts/rasterlite/rasterlitedataset.cpp b/gdal/frmts/rasterlite/rasterlitedataset.cpp
index 995e55d420..0926660873 100644
--- a/gdal/frmts/rasterlite/rasterlitedataset.cpp
+++ b/gdal/frmts/rasterlite/rasterlitedataset.cpp
@@ -189,6 +189,11 @@ CPLErr RasterliteBand::IReadBlock( int nBlockXOff, int nBlockYOff, void * pImage
         OGR_G_GetEnvelope(hGeom, &oEnvelope);
 
         const int nTileId = OGR_F_GetFieldAsInteger(hFeat, 1);
+        if( poGDS->m_nLastBadTileId == nTileId )
+        {
+            OGR_F_Destroy(hFeat);
+            continue;
+        }
         const int nTileXSize = OGR_F_GetFieldAsInteger(hFeat, 2);
         const int nTileYSize = OGR_F_GetFieldAsInteger(hFeat, 3);
 
@@ -271,6 +276,7 @@ CPLErr RasterliteBand::IReadBlock( int nBlockXOff, int nBlockYOff, void * pImage
             }
             if (hDSTile == nullptr)
             {
+                poGDS->m_nLastBadTileId = nTileId;
                 CPLError(CE_Failure, CPLE_AppDefined, "Can't open tile %d",
                          nTileId);
             }
@@ -282,6 +288,7 @@ CPLErr RasterliteBand::IReadBlock( int nBlockXOff, int nBlockYOff, void * pImage
                 nReqBand = 1;
             else
             {
+                poGDS->m_nLastBadTileId = nTileId;
                 GDALClose(hDSTile);
                 hDSTile = nullptr;
             }
@@ -293,6 +300,7 @@ CPLErr RasterliteBand::IReadBlock( int nBlockXOff, int nBlockYOff, void * pImage
                 {
                     CPLError(CE_Failure, CPLE_AppDefined, "Invalid dimensions for tile %d",
                              nTileId);
+                    poGDS->m_nLastBadTileId = nTileId;
                     GDALClose(hDSTile);
                     hDSTile = nullptr;
                 }
diff --git a/gdal/frmts/rasterlite/rasterlitedataset.h b/gdal/frmts/rasterlite/rasterlitedataset.h
index c4c2752201..79586eafe0 100644
--- a/gdal/frmts/rasterlite/rasterlitedataset.h
+++ b/gdal/frmts/rasterlite/rasterlitedataset.h
@@ -113,6 +113,8 @@ class RasterliteDataset final: public GDALPamDataset
 
     OGRDataSourceH hDS;
 
+    int m_nLastBadTileId = -1;
+
     void AddSubDataset( const char* pszDSName);
     int  GetBlockParams(OGRLayerH hRasterLyr, int nLevel, int* pnBands,
                         GDALDataType* peDataType,
