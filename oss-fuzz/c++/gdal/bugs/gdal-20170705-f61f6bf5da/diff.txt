diff --git a/gdal/ogr/ogrsf_frmts/selafin/io_selafin.cpp b/gdal/ogr/ogrsf_frmts/selafin/io_selafin.cpp
index 6a8057b164..9a5f55859c 100644
--- a/gdal/ogr/ogrsf_frmts/selafin/io_selafin.cpp
+++ b/gdal/ogr/ogrsf_frmts/selafin/io_selafin.cpp
@@ -325,10 +325,10 @@ namespace Selafin {
         return 1;
     }
 
-    int read_string(VSILFILE *fp,char *&pszData,bool bDiscard) {
+    int read_string(VSILFILE *fp,char *&pszData,int nFileSize,bool bDiscard) {
         int nLength=0;
         read_integer(fp,nLength);
-        if (nLength<=0 || nLength+1<=0) {
+        if (nLength<=0 || nLength == INT_MAX || nLength > nFileSize) {
             CPLError(CE_Failure,CPLE_FileIO,"%s",SELAFIN_ERROR_MESSAGE);
             return 0;
         }
@@ -339,14 +339,22 @@ namespace Selafin {
             }
         }
         else {
-            pszData=(char*)CPLMalloc(sizeof(char)*(nLength+1));
+            pszData=(char*)VSI_MALLOC_VERBOSE(nLength+1);
+            if( pszData == NULL )
+            {
+                return 0;
+            }
             if ((int)VSIFReadL(pszData,1,nLength,fp)<(int)nLength) {
                 CPLError(CE_Failure,CPLE_FileIO,"%s",SELAFIN_ERROR_MESSAGE);
+                VSIFree(pszData);
+                pszData = NULL;
                 return 0;
             }
             pszData[nLength]=0;
             if (VSIFSeekL(fp,4,SEEK_CUR)!=0) {
                 CPLError(CE_Failure,CPLE_FileIO,"%s",SELAFIN_ERROR_MESSAGE);
+                VSIFree(pszData);
+                pszData = NULL;
                 return 0;
             }
         }
@@ -490,7 +498,7 @@ namespace Selafin {
         poHeader->pszFilename=CPLStrdup(pszFilename);
         int *panTemp = NULL;
         // Read the title
-        int nLength = read_string(fp,poHeader->pszTitle);
+        int nLength = read_string(fp,poHeader->pszTitle,nFileSize);
         if (nLength==0) {
             delete poHeader;
             return NULL;
@@ -526,7 +534,7 @@ namespace Selafin {
             return NULL;
         }
         for (int i=0;i<poHeader->nVar;++i) {
-            nLength=read_string(fp,poHeader->papszVariables[i]);
+            nLength=read_string(fp,poHeader->papszVariables[i],nFileSize);
             if (nLength==0) {
                 poHeader->nVar = i;
                 delete poHeader;
diff --git a/gdal/ogr/ogrsf_frmts/selafin/io_selafin.h b/gdal/ogr/ogrsf_frmts/selafin/io_selafin.h
index 193b00a9e4..8ad83f5393 100644
--- a/gdal/ogr/ogrsf_frmts/selafin/io_selafin.h
+++ b/gdal/ogr/ogrsf_frmts/selafin/io_selafin.h
@@ -200,7 +200,7 @@ int write_integer(VSILFILE *fp,int nData);
  * \param bDiscard If true, the function does not attempt to save the value read in the variable nData, but only advances in the file as it should. Default value is false.
  * \return Number of characters in string read
  */
-int read_string(VSILFILE *fp,char *&pszData,bool bDiscard=false);
+int read_string(VSILFILE *fp,char *&pszData,int nFileSize,bool bDiscard=false);
 
 /**
  * \brief Write a string to a Selafin file
