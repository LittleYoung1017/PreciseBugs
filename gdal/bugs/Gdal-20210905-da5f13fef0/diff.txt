diff --git a/autotest/ogr/data/flatgeobuf/invalid_multisurface_of_polyhedralsurface.fgb b/autotest/ogr/data/flatgeobuf/invalid_multisurface_of_polyhedralsurface.fgb
new file mode 100644
index 0000000000..cfde4505f4
Binary files /dev/null and b/autotest/ogr/data/flatgeobuf/invalid_multisurface_of_polyhedralsurface.fgb differ
diff --git a/autotest/ogr/ogr_flatgeobuf.py b/autotest/ogr/ogr_flatgeobuf.py
index 7d4155b21b..4ccb053dcf 100644
--- a/autotest/ogr/ogr_flatgeobuf.py
+++ b/autotest/ogr/ogr_flatgeobuf.py
@@ -801,7 +801,8 @@ def test_ogr_flatgeobuf_ossfuzz_bug_29462():
 
 @pytest.mark.parametrize("filename", ['data/flatgeobuf/invalid_polyhedralsurface_of_curvepolygon.fgb',
                                       'data/flatgeobuf/invalid_compoundcurve_non_contiguous_curves.fgb',
-                                      'data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb'])
+                                      'data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb',
+                                      'data/flatgeobuf/invalid_multisurface_of_polyhedralsurface.fgb'])
 def test_ogr_flatgeobuf_read_invalid_geometries(filename):
     with gdaltest.error_handler():
         ds = gdal.OpenEx(filename)
diff --git a/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp b/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
index 6ede8a5cba..966fdf30a9 100644
--- a/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
+++ b/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
@@ -352,7 +352,12 @@ OGRMultiSurface *GeometryReader::readMultiSurface()
         auto g = std::unique_ptr<OGRGeometry>(reader.read());
         if (dynamic_cast<OGRSurface *>(g.get()) == nullptr)
             return nullptr;
-        ms->addGeometryDirectly(g.release());
+        auto poSubGeom = g.release();
+        if( ms->addGeometryDirectly(poSubGeom) != OGRERR_NONE )
+        {
+            delete poSubGeom;
+            return nullptr;
+        }
     }
     return ms.release();
 }
