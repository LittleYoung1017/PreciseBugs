b8678994c0	2b789d0b0a	Tue Jul 18 10:43:56 2023 -0400	grpc-patch: fix for oss-fuzz build (#28409)	commit b8678994c0b374d6bad65d8bc4d76ad8e03bae79Author: Adi (Suissa) Peleg <adip@google.com>Date:   Tue Jul 18 10:43:56 2023 -0400    grpc-patch: fix for oss-fuzz build (#28409)        Signed-off-by: Adi Suissa-Peleg <adip@google.com>
3865cbaec0	210b2a2c9f	Thu Jan 6 09:57:01 2022 -0500	Fix oss-fuzz build compilation errors (#18919)	commit 3865cbaec08c5ce44b439eb77e46fe866e37e81aAuthor: Disconnect3d <dominik.b.czarnota@gmail.com>Date:   Thu Jan 6 15:57:01 2022 +0100    Fix oss-fuzz build compilation errors (#18919)        This PR fixes two compilation error that are happening in the oss-fuzz build of Envoy. Note that the latest oss-fuzz build errors out with only the error related to AsyncStream but AFAIR when it is fixed, a different compilation error has to be fixed which I fixed in the first commit that changes the socket.h file.            Fixes an oss-fuzz Envoy compilation error:    ```    Execution platform: @local_config_platform//:host    In file included from source/common/network/socket_option_impl.cc:1:    In file included from ./source/common/network/socket_option_impl.h:6:    In file included from ./envoy/network/listen_socket.h:14:    ./envoy/network/socket.h:26:3: error: definition of implicit copy assignment operator for 'SocketOptionName' is deprecated because it has a user-declared copy constructor [-Werror,-Wdeprecated-copy]      SocketOptionName(const SocketOptionName&) = default;      ^    source/common/network/socket_option_impl.cc:52:14: note: in implicit copy assignment operator for 'Envoy::Network::SocketOptionName' first required here      info.name_ = optname_;                 ^    1 error generated.    INFO: Elapsed time: 2620.084s, Critical Path: 126.35s    INFO: 4237 processes: 154 internal, 4083 local.    FAILED: Build did NOT complete successfully    ERROR:root:Building fuzzers failed.    ```        Signed-off-by: disconnect3d <dominik.b.czarnota@gmail.com>        * types_async_client.h: fix deprecated defaulted copy ctor        Fixes an oss-fuzz Envoy compilation error:    ```    Step #3 - "compile-afl-address-x86_64": Execution platform: @local_config_platform//:host    Step #3 - "compile-afl-address-x86_64": In file included from source/extensions/filters/http/ext_proc/client_impl.cc:1:    Step #3 - "compile-afl-address-x86_64": In file included from ./source/extensions/filters/http/ext_proc/client_impl.h:11:    Step #3 - "compile-afl-address-x86_64": [1m./source/common/grpc/typed_async_client.h:38:3: [0m[0;1;31merror: [0m[1mdefinition of implicit copy assignment operator for 'AsyncStream<envoy::service::ext_proc::v3::ProcessingRequest>' is deprecated because it has a user-declared copy constructor [-Werror,-Wdeprecated-copy][0m    Step #3 - "compile-afl-address-x86_64":   AsyncStream(const AsyncStream& other) = default;    Step #3 - "compile-afl-address-x86_64": [0;1;32m  ^    Step #3 - "compile-afl-address-x86_64": [0m[1msource/extensions/filters/http/ext_proc/client_impl.cc:34:11: [0m[0;1;30mnote: [0min implicit copy assignment operator for 'Envoy::Grpc::AsyncStream<envoy::service::ext_proc::v3::ProcessingRequest>' first required here[0m    Step #3 - "compile-afl-address-x86_64":   stream_ = client_.start(*descriptor, *this, options);    Step #3 - "compile-afl-address-x86_64": [0;1;32m          ^    Step #3 - "compile-afl-address-x86_64": [0m1 error generated.    ```        Signed-off-by: disconnect3d <dominik.b.czarnota@gmail.com>        * socket.h: delete default assignment operator        Signed-off-by: disconnect3d <dominik.b.czarnota@gmail.com>        * typed_async_client.h: remove default assignment op        Signed-off-by: disconnect3d <dominik.b.czarnota@gmail.com>
0e33d22bd4	904f88a4d3	Thu Dec 2 16:56:21 2021 -0700	try fix for oss-fuzz build (#19164)	commit 0e33d22bd4fd567269a7249b0b73cdc47877beceAuthor: asraa <asraa@google.com>Date:   Thu Dec 2 17:56:21 2021 -0600    try fix for oss-fuzz build (#19164)        Signed-off-by: Asra Ali <asraa@google.com>
a7de9b8f20	68440033ec	Tue Aug 17 08:48:46 2021 -0700	Fix dns resolve fuzz bug (#17107)	commit a7de9b8f2061e01b54b2cca399128fa751dafdafAuthor: chaoqin-li1123 <55518381+chaoqin-li1123@users.noreply.github.com>Date:   Tue Aug 17 10:48:46 2021 -0500    Fix dns resolve fuzz bug (#17107)        The DNS resolver takes reference to a local variable as its member dns_resolver_options_, and may access invalid data during a DNS refresh, fix by copy the parameter in ctor of DnsResolverImpl.(https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=35272)        Signed-off-by: chaoqin-li1123 <chaoqinli@google.com>
ffcfe049ec	534a10299f	Thu May 27 09:11:24 2021 -0400	[fuzz]: fix oss fuzz bug 34650, validate server fuzz input for lb_subset_config (#16647)	commit ffcfe049ec4951a22a2be27c1909c7068a3a19e3Author: chaoqin-li1123 <55518381+chaoqin-li1123@users.noreply.github.com>Date:   Thu May 27 08:11:24 2021 -0500    [fuzz]: fix oss fuzz bug 34650, validate server fuzz input for lb_subset_config (#16647)        Commit Message: This pull request try to resolve fuzz bug(https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34650), key of subset selector can't be empty when use_single_host_per_subset is set to true.    Additional Description:    Risk Level:    Testing:    Docs Changes:    Release Notes:    Platform Specific Features:        Signed-off-by: chaoqin-li1123 <chaoqinli@google.com>
01a8b71b33	e9a149e459	Tue May 25 08:54:56 2021 -0400	[fuzz]: fix oss fuzz 30088, envoy:stat_merger_fuzz_test: ASSERT: name = (#16636)	commit 01a8b71b33d857803d0d7ff7b3be07698b9247abAuthor: Tim Walsh <twghu@users.noreply.github.com>Date:   Tue May 25 22:54:56 2021 +1000    [fuzz]: fix oss fuzz 30088, envoy:stat_merger_fuzz_test: ASSERT: name = (#16636)        [fuzz]: fix oss fuzz 30088, envoy:stat_merger_fuzz_test: ASSERT: name =        Commit Message: Update for oss-fuzz Issue 30088    Additional Description: Note that #4709 covers a number of oss-fuzz error This is part of the ongoing effort started for #4709.    Risk Level: Low    Testing: test/common/stats    Docs Changes: None    Release Notes:    Platform Specific Features:        Signed-off-by: Tim Walsh <temporal.differential@gmail.com>
e8cd93d4bb	8ac28e2335	Wed Mar 10 14:46:58 2021 -0500	upstream: fix subset_lb crash when host configured with no metadata (#15171)	commit e8cd93d4bb5016cace70ea73fe368dcf2c01c78cAuthor: yanjunxiang-google <78807980+yanjunxiang-google@users.noreply.github.com>Date:   Wed Mar 10 14:46:58 2021 -0500    upstream: fix subset_lb crash when host configured with no metadata (#15171)        This commit is to fix oss-fuzz test issue:    https://oss-fuzz.com/testcase-detail/5135200453525504        The problem is that when executing a fuzz test case with empty host    metadata, envoy crashed at subset_lb.cc:rebuildSingle(): line 131.        The root cause is that current envoy code is assuming host->medata is    valid, and directly using it without NULL check. In the case if metadata    is actually NULL, which is a valid configuration, it crashes.        The fix is to add a if (metadat != nullptr) before accessing metadata.        GTEST code is added to reproduce the issue, and verified the fix.        The fix is also verified by running the oss-fuzz test with that    special testcase input file.        Signed-off-by: Yanjun Xiang <yanjunxiang@google.com>
445026ea03	9d1690da35	Tue Jan 12 20:58:35 2021 -0500	[fuzz] Fix bugs in HPACK fuzz test (#14638)	commit 445026ea03f34584e019b3f1471d8c2e56b98909Author: asraa <asraa@google.com>Date:   Tue Jan 12 20:58:35 2021 -0500    [fuzz] Fix bugs in HPACK fuzz test (#14638)        - Use after free because nghttp2_nv object has pointers to the underlying strings and copying them resulted in a use after free when the copy was used after the original was destroyed    - Fixed sorting issues and tested leading/trailing whitespace headers (I can no longer reproduce an issue I saw where a null byte appeared after decoding whitespace, maybe the former fix fixed this)        Risk Level: Low    Testing: Added regression tests and cases for whitespace headers        Fixes    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28880    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28869        Signed-off-by: Asra Ali <asraa@google.com>
3a6e4a2648	cec00e6175	Mon Nov 2 10:29:06 2020 -0500	Fix divide-by-zero in GradientController (#13823)	commit 3a6e4a26480721207799c502c666874cc8b3784bAuthor: Joseph Griego <joseph.j.griego@gmail.com>Date:   Mon Nov 2 10:29:06 2020 -0500    Fix divide-by-zero in GradientController (#13823)        Fixes https://oss-fuzz.com/testcase-detail/6268043707285504        Signed-off-by: Joseph Griego <jjgriego@google.com>
9f10cfe5ee	443f0ef7ec	Mon Oct 19 16:15:51 2020 -0400	[fuzz] Fixed divide by zero bug (#13545)	commit 9f10cfe5eeec37eaa0170d5efeed0897a6419aebAuthor: Zach Reyes <39203661+zasweq@users.noreply.github.com>Date:   Mon Oct 19 16:15:51 2020 -0400    [fuzz] Fixed divide by zero bug (#13545)        Fixed divide by zero bug in admission control filter for HTTP.        Fixes issues: https://oss-fuzz.com/testcase-detail/5914972389113856        Risk Level: Low    Testing: Added regression test        Signed-off-by: Zach <zasweq@google.com>
eb9af96cd3	549acee6f6	Tue Oct 13 08:54:08 2020 -0400	router:  fix an invalid ASSERT when encoding metadata frames in the router. (#13511)	commit eb9af96cd317b823ee6822dc10aeb26d63e51608Author: asraa <asraa@google.com>Date:   Tue Oct 13 08:54:08 2020 -0400    router:  fix an invalid ASSERT when encoding metadata frames in the router. (#13511)        Commit Message: Fix an invalid ASSERT when encoding metadata frames in the router.    Additional Description:    METADATA frames can't end stream, so there must be data, trailers, or a reset stream frame to end the stream. The ASSERT was meant to verify that there is data following METADATA frames to end the stream (for example, in case a client sends headers only request and metadata is added, FM adds empty data to end the stream). However, trailers could also end the stream, or the client could send body later/never. The ASSERT is invalid.        The PR removes the ASSERT.        Open to suggestions to have an ASSERT, but I couldn't think of one that was worth it / could be detected here. "if we had a header only request before, ASSERT there is empty data", or "if there is no possibility of stream reset occurring at this stage, ASSERT there is data or trailers."        Risk Level: Low. This only affects the ASSERT, has no impact on traffic.    Testing: Integration test added as a regression. Fuzz testcase added.    Fixes:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26238        Signed-off-by: Asra Ali <asraa@google.com>
9af9afff54	aa14b97b89	Tue Sep 1 15:46:05 2020 -0400	[fuzz] fix minor fuzz test bugs (#12903)	commit 9af9afff54e30cab45ad7a80565ed9e300cda019Author: asraa <asraa@google.com>Date:   Tue Sep 1 15:46:05 2020 -0400    [fuzz] fix minor fuzz test bugs (#12903)        Matcher API was moved recently, PGV validation wasn't moved to the new directory. This was the previous fix: #12289    Mock encoder callbacks never set a definition for addEncodedTrailers        Risk Level: Low    Testing: Added regression tests    Fixes:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25163    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25273        Signed-off-by: Asra Ali <asraa@google.com>
4ac944d2d0	6b1901ad87	Wed Aug 26 10:20:06 2020 -0400	fuzz: fix oss-fuzz crashes in evaluator_fuzz_test due to header string validation (#12796)	commit 4ac944d2d05838e6150945c512192f66e284c50fAuthor: Arthur Yan <55563955+arthuryan-k@users.noreply.github.com>Date:   Wed Aug 26 10:20:06 2020 -0400    fuzz: fix oss-fuzz crashes in evaluator_fuzz_test due to header string validation (#12796)        Commit Message: Fixes oss-fuzz crashes in evaluator_fuzz_test (ASSERT: valid) due to header string validation    Catch invalid header strings before assert failure (cannot be fixed with pgv since this uses CEL protobuf messages)    Added unit test to context_test.cc    Added regression test to evaluator_corpus    Signed-off-by: Arthur Yan <arthuryan@google.com>
aecd2459f7	c6bfd7f9f5	Thu Aug 20 20:25:21 2020 -0400	Fix OSS Fuzz crashes due to validation issues in RBAC Config (#12757)	commit aecd2459f70a8f7ce6032a0e8fc7e9a8d04e9798Author: Zach Reyes <39203661+zasweq@users.noreply.github.com>Date:   Thu Aug 20 20:25:21 2020 -0400    Fix OSS Fuzz crashes due to validation issues in RBAC Config (#12757)        Added validation that action enum is within range        Risk Level: low    Testing: passes added regression tests    Docs Changes: N/A    Release Notes: N/A        Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24824&sort=-opened&can=1&q=proj%3Aenvoy%20status%3DNew        Signed-off-by: Zach Reyes <zasweq@google.com>
67c5b435fd	a520aeae8e	Mon Aug 10 10:39:42 2020 -0700	[fuzz] fix bad inputs and config bugs (#12504)	commit 67c5b435fd4723198091a658d913823b586b3854Author: asraa <asraa@google.com>Date:   Mon Aug 10 13:39:42 2020 -0400    [fuzz] fix bad inputs and config bugs (#12504)        * Unset metadata matcher causes crash, since no matcher is set    * `encodeHeaders` in HCM requires that the only 1xx header is a 101 upgrade    * stream info destructor issue -- this one no longer reproduces        Fixes:    https://oss-fuzz.com/testcase?key=4863844862918656    https://oss-fuzz.com/testcase-detail/5656400764862464    https://oss-fuzz.com/testcase-detail/5631179290836992        Signed-off-by: Asra Ali <asraa@google.com>
2539e0b787	e1d7d8e14c	Thu Jul 23 08:05:12 2020 -0400	fuzz: fix crash into filter fuzz test (#12224)	commit 2539e0b7878e84b2f28b9766be7de120c3246580Author: Sam Flattery <44659644+samflattery@users.noreply.github.com>Date:   Thu Jul 23 13:05:12 2020 +0100    fuzz: fix crash into filter fuzz test (#12224)        Commit Message: Fix crash in filter fuzz test due to validation not running until after cleaning    since the input config message contains an Any field, validation is not run on it, so I added a check to make sure that there was at least one sink before trying to deference    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24301    Signed-off-by: Sam Flattery <samflattery@google.com>
e355c58dcf	f76e2bb990	Mon Jul 20 15:27:11 2020 -0700	fuzz: fix oss-fuzz crash in route_fuzz_test due to validation (#12176)	commit e355c58dcf6519e5a55c84e9efd50d597e3b5a69Author: Arthur Yan <55563955+arthuryan-k@users.noreply.github.com>Date:   Mon Jul 20 18:27:11 2020 -0400    fuzz: fix oss-fuzz crash in route_fuzz_test due to validation (#12176)        Signed-off-by: Arthur Yan <arthuryan@google.com>
773b8ca4bd	17dd2da586	Wed Jul 8 19:14:29 2020 -0400	[fuzz] fix oss fuzz crashes due to validation  (#11919)	commit 773b8ca4bd861957b19f2c1154c1f308dde80022Author: Sam Flattery <44659644+samflattery@users.noreply.github.com>Date:   Thu Jul 9 00:14:29 2020 +0100    [fuzz] fix oss fuzz crashes due to validation  (#11919)        - add validation that an enum is within range    - add validation that a header is well formed        Risk Level: low    Testing: passes added regression tests    Docs Changes: N/A    Release Notes: N/A    Fixes:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23879    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23881        Signed-off-by: Sam Flattery <samflattery@google.com>
f190f05388	549d30ecc5	Wed Jun 24 09:22:01 2020 -0400	fuzz: fix oss crash on http utility function (#11687)	commit f190f05388ed4e0538c4006411e6554a60c0477dAuthor: Sam Flattery <44659644+samflattery@users.noreply.github.com>Date:   Wed Jun 24 14:22:01 2020 +0100    fuzz: fix oss crash on http utility function (#11687)        Commit Message: Fix crash on initializeAndValidateOptions fuzz test    the crash occurred because validateCustomSettingsParameters does not allow duplicate custom settings identifiers and the fuzzer fed it an input that had duplicates. fixed by catching expected exceptions from duplicate custom settings identifiers.    Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23616        Signed-off-by: Sam Flattery <samflattery@google.com>
019353e8aa	cfb163d348	Fri Jun 19 17:09:47 2020 -0400	fuzz: fix oss-fuzz crash related to channelArgsFromConfig (#11641)	commit 019353e8aabd28da8c73204167997cf9e51220a5Author: Arthur Yan <55563955+arthuryan-k@users.noreply.github.com>Date:   Fri Jun 19 17:09:47 2020 -0400    fuzz: fix oss-fuzz crash related to channelArgsFromConfig (#11641)        Added regression test to server_corpus        Risk Level: Low    Testing: passes regression test that originally crashed on oss-fuzz    Docs Changes: N/A    Release Notes: N/A        Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=22824        Signed-off-by: Arthur Yan <arthuryan@google.com>
aa0fc9db37	97a271b863	Wed Jun 10 19:36:20 2020 -0400	[fuzz] fix fuzz crashes related to not implemented protos (#11385)	commit aa0fc9db37674570c22927b4ee4ccf394b1d475fAuthor: asraa <asraa@google.com>Date:   Wed Jun 10 19:36:20 2020 -0400    [fuzz] fix fuzz crashes related to not implemented protos (#11385)        Fixes crashes (panic: not reached) due to not implemented protos being fuzzed.        - load balancing policy LOAD_BALANCING_POLICY_CONFIG not implemented, causing server_fuzz_test to crash    - connect matcher not supported in Jwt authentication filter, but matcher available @qiwzhang        Risk Level: Low    Testing: Regression testcases added        Fixes OSS-fuzz issues    - https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=21876    - https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=17762        Signed-off-by: Asra Ali <asraa@google.com>
5030f92440	8d473a8baf	Thu Jun 4 15:40:18 2020 -0400	fix all filter fuzz bugs (#11422)	commit 5030f92440b2d17dcca193c37178ec0d8aa06097Author: asraa <asraa@google.com>Date:   Thu Jun 4 15:40:18 2020 -0400    fix all filter fuzz bugs (#11422)        Closes fuzz bugs related to configuration and test issues in filter_fuzz_test        * Require that encodeComplete() is called after end_stream/trailers per the HCM/filter contract. Otherwise, you run into destruction issues.    * TAP configuration can't use unimplemented TapDS configuration. Had to enforce in code because it's a oneof, which can only be constrained to be required    * Squash filter configuration requires some JSON attachment template. Scrubbed if invalid JSON        Risk Level: Low    Testing: Regression corpuses added, fuzzer runs for a 2 minutes    Fixes OSS-fuzz issues:    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18938    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20844    * https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=22428        Signed-off-by: Asra Ali <asraa@google.com>
f7a63f14c8	67649af8d4	Tue Jun 2 18:57:18 2020 -0700	[fuzz] fix ext authz send (#11351)	commit f7a63f14c8159b25bbd90561098cadd7fc68cb94Author: asraa <asraa@google.com>Date:   Tue Jun 2 21:57:18 2020 -0400    [fuzz] fix ext authz send (#11351)        Commit Message: Fixes a fuzz-only bug where on clean-up, the ext authz client `request_` was cancelled, but `request_` was never set because the call was mocked out.        Additional Description: Attempting to cancel a nullptr request would never happen in practice, because cancelling the request only occurs when the filter is in the middle of calling. The cases where `check` doesn't end up sending the request (for eg cluster no longer exists) appropriately change the state to complete.        Fixes issue: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=22566    Risk level: Low    Testing: added corpus entry        Signed-off-by: Asra Ali <asraa@google.com>
e832401692	e71d1622d6	Thu May 14 15:36:41 2020 -0700	[fuzz] fix stats merger fuzz test (#11195)	commit e83240169291761d942d06cec45da17623dab27eAuthor: asraa <asraa@google.com>Date:   Thu May 14 18:36:41 2020 -0400    [fuzz] fix stats merger fuzz test (#11195)        Fixes stat merger fuzz test case. Handles empty spans.        Risk level: Low    Fixes OSS-Fuzz issue https://oss-fuzz.com/testcase-detail/4800677542100992        Signed-off-by: Asra Ali <asraa@google.com>
1ccbb2d7d2	923317f826	Mon Mar 23 11:11:17 2020 -0400	fuzz: fix stream reset handling in codec_impl_fuzz_test. (#10452)	commit 1ccbb2d7d24cbcf1f3043ec5b413d877a455d8cfAuthor: htuch <htuch@users.noreply.github.com>Date:   Mon Mar 23 11:11:17 2020 -0400    fuzz: fix stream reset handling in codec_impl_fuzz_test. (#10452)        This started to trip assertions around multiple in-flight streams in the H1 codec after recent    refactors.        Fixes oss-fuzz bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=21277        Risk level: Low    Testing: Corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
82e4b26a23	d1a36f1ea2	Fri Mar 13 17:55:58 2020 -0400	[build] fix fuzz build mode macro and test runs (#10322)	commit 82e4b26a23f807a75182c2d8f76f980be9bb09b0Author: asraa <asraa@google.com>Date:   Fri Mar 13 17:55:58 2020 -0400    [build] fix fuzz build mode macro and test runs (#10322)        I'm seeing a failure in OSS-Fuzz build, as well as fuzz CI tool #10289 due to fuzzing build macro FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION.        Basically, PR #10050 introduced regex rewrites that are tested in config_impl_test, which is executed to create the corpus for route_fuzz_test. Fuzz builds are built with the FUZZING_BUILD_MODE... macro, and the RE2 library that does the regex rewrites in the test only does single replacements in fuzzing mode rather than the global replacement in the tests, so the test fails, and the fuzz build fails.        This change defined FUZZING_BUILD_MODE... only for fuzzing build rules, and explicitly undefines them for the config_impl_test.        RE OSS-Fuzz builds, this is odd. Bazel CLI flags take precedence, so I'm not sure what to do when we build in that environment. I can't seem to #undef in the tests, but I need to come up with some solution.I don't like manually removing the CLI flag in our build script, but maybe? https://github.com/google/oss-fuzz/blob/66e0e379395d3a3ee741b08f4d306e1ed71c4003/infra/base-images/base-clang/Dockerfile        Testing: bazel build //test/common/router:route_fuzz_test_with_libfuzzer --config=asan-fuzzer        Signed-off-by: Asra Ali <asraa@google.com>
855b2a359a	b6d1fecfd2	Tue Feb 25 15:24:20 2020 -0800	[api] [fuzz] fix many header related config fuzz bugs (#10093)	commit 855b2a359a7133fd559ddbd757be4c0963cd8a73Author: asraa <asraa@google.com>Date:   Tue Feb 25 18:24:20 2020 -0500    [api] [fuzz] fix many header related config fuzz bugs (#10093)        This change includes validations on header names and values that appear in config fields. This prevents setting header keys/values with invalid characters in config fields, which pops up as ASSERT failures when converting to HeaderString values.        For reference, the well_known_regex for the header names and values do the following:    - HTTP_HEADER_NAME: whitelists alphanums and the whitelisted tokens (`!#$%&'*+-.^_|~\u0060`) in https://tools.ietf.org/html/rfc7230#section-3.2    - HTTP_HEADER_VALUE: blacklists control characters except SPC and TAB. Purposely meant to be permissive, and blacklist problems like nulls        Changes in `base.proto`    * Invalid headers to match (from [`HeaderValue`](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/core/base.proto#L234) proto)      - `clusterfuzz-testcase-minimized-route_fuzz_test-5635252339343360`        Changes in `route_components.proto`:    * [domains](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L75) with invalid control characters in `VirtualHost` config      - `clusterfuzz-testcase-minimized-route_fuzz_test-5699465522970624`    * Invalid [header_name](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L604) in hash policy      - `clusterfuzz-testcase-minimized-route_fuzz_test-5634743613259776`    * Invalid control characters in [upgrade_type](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L698) header      - `clusterfuzz-testcase-minimized-route_fuzz_test-5750746072481792`    * `RateLimit` message has a [header_name](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L1273) field      - `clusterfuzz-testcase-minimized-route_fuzz_test-5206842068697088`    * Invalid [response_headers_to_add](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L113) in      - `clusterfuzz-testcase-minimized-route_fuzz_test-4592245302362112`    * The [cluster_header](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/api/v2/route/route_components.proto#L723) change came up in a fuzz bug, but after that was fixed, the code ran in to another deeper issue to be fixed.    * The [name](https://github.com/envoyproxy/envoy/blob/bbdc33e53723dc02b6d51bb0f329c5b369adfe03/api/envoy/config/route/v3/route_components.proto#L1381) in `HeaderMatcher` message      - `clusterfuzz-testcase-minimized-route_fuzz_test-5635252339343360`        Changes in `custom_tag.proto`    * `CustomTag` has a [name](https://github.com/asraa/envoy/blob/88d35569818cb3a1236cce5d79299c4986ffdc77/api/envoy/type/tracing/v3/custom_tag.proto#L51)      - `clusterfuzz-testcase-minimized-route_fuzz_test-5661762636742656`        Changes in fuzz tests:    * `conn_manager_impl_fuzz_test` that fails on invalid characters in an authority header. this is not a config related change, just handled by replaced the invalid character in the fuzz test.       - `clusterfuzz-testcase-minimized-conn_manager_impl_fuzz_test-5714279517126656`    * `route_fuzz_test` was cleaned up now that a lot of the processing was moved to config.        Fixes:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19923    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=16143 (most of)        Signed-off-by: Asra Ali <asraa@google.com>
b7dcf08387	f5085e6557	Thu Jan 2 14:54:17 2020 -0500	[fuzz] fix server test fuzz bugs (#9486)	commit b7dcf083876f5d34d0dde5df535989a81dfa8023Author: asraa <asraa@google.com>Date:   Thu Jan 2 14:54:17 2020 -0500    [fuzz] fix server test fuzz bugs (#9486)        Fixes server_fuzz_test fuzz bugs:        * QUIC upstream not implemented in prod, so the fuzzer removes the HTTP3 codec types for http health checks        * PGV validate throws a not yet implemented error on URIs. I removed this check for now and replaced with a TODO. If I catch the std::exception that is thrown and bypass it with a warning statement in the logs, we skip over other validations, which means that any fuzz test or user using this uri field will be in danger of failing because of other invalid fields @JimmyCYJ. PGV issue tracked: envoyproxy/protoc-gen-validate#303        Fixes OSS-Fuzz Issues:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19614    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19689        Signed-off-by: Asra Ali <asraa@google.com>
b3f42a4ebb	75e768bc77	Tue Dec 10 06:34:19 2019 -0500	http: fix heap overflow vulnerability (CVE-2019-18801). (#75)	commit b3f42a4ebbd51e816cfde63ee672ce31e420602aAuthor: yanavlasov <yavlasov@google.com>Date:   Tue Dec 10 06:34:19 2019 -0500    http: fix heap overflow vulnerability (CVE-2019-18801). (#75)        Fixes oss-fuzz issue    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18431.        Risk level: Low (no functional change).    Testing: Additional unit and integration tests added that cover the      :method header overflow case and adjacent behaviors. Corpus entry      added.        Signed-off-by: Harvey Tuch <htuch@google.com>
b0a7a65d47	8b27ef7d7d	Wed Nov 6 11:01:48 2019 -0500	fuzz: fix false positive in new_buffer_fuzz_test. (#8903)	commit b0a7a65d4754903b929409e314afc5f60dbff206Author: htuch <htuch@users.noreply.github.com>Date:   Wed Nov 6 11:01:48 2019 -0500    fuzz: fix false positive in new_buffer_fuzz_test. (#8903)        This was bad accounting of moved buffer size.        Fixes oss-fuzz issue    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18452.        Risk level: Low    Testing: Corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
bf37452667	035b49cfa0	Tue Oct 29 12:57:09 2019 -0400	zlib: consume dev branch with timeouts/crashes fixes (#8788)	commit bf37452667a8f4b31028df17be0ee5e64b766f20Author: asraa <asraa@google.com>Date:   Tue Oct 29 12:57:09 2019 -0400    zlib: consume dev branch with timeouts/crashes fixes (#8788)        Consume zlib's dev branch instead of their v1.11.2.1 release branch. Many issues are fixed since their release from Jan 2017, including timeouts and out of bound errors reported by our fuzzers.    The dev branch is about 45 commits ahead of v1.11.2.1 release, making importing specific patches (probably 5-10 relevant to the issues we've seen so far), hard to keep up with.        Testing: Added all corpus entries for crashes and timeouts.    Fixes OSS-Fuzz issues:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18379    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18530    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18423        Signed-off-by: Asra Ali <asraa@google.com>
e6a52ce9fd	2b99b59789	Mon Oct 21 12:43:01 2019 -0700	fuzz: fix move max alloc handling in buffer_fuzz_test. (#8693)	commit e6a52ce9fd66f9177bd8143fcdf120c01a1fec01Author: htuch <htuch@users.noreply.github.com>Date:   Tue Oct 22 03:43:01 2019 +0800    fuzz: fix move max alloc handling in buffer_fuzz_test. (#8693)        Hopefully the last of these issues, was triggering asserts in    ClusterFuzz.        Fixes oss-fuzz issue    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18354        Risk level: Low (test only)    Testing: Failing corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
eadd63f7be	60707bdc37	Thu Sep 26 15:31:16 2019 -0700	fuzz: fix oss-fuzz build (#8401)	commit eadd63f7be4cc0a45872fb1c39cd552eefefe894Author: asraa <asraa@google.com>Date:   Thu Sep 26 18:31:16 2019 -0400    fuzz: fix oss-fuzz build (#8401)        Update rules_foreign_cc to include bazelbuild/rules_foreign_cc#321    This allows curl to be built with Envoy's libraries for dependencies (c-ares, zlib, ssl) without sandboxing.        Testing: OSS-Fuzz builds pointed to this branch        Signed-off-by: Asra Ali <asraa@google.com>
5aede462bb	d2e2cd6fa3	Tue Aug 20 13:13:50 2019 -0400	fuzz: codec impl timeout fix + speed ups (#7963)	commit 5aede462bb7fd8e39cd329fd270d3b74e7d7d39aAuthor: asraa <asraa@google.com>Date:   Tue Aug 20 13:13:50 2019 -0400    fuzz: codec impl timeout fix + speed ups (#7963)        Some speed-ups and validations for codec impl fuzz test:        * validate actions aren't empty (another approach would be to scrub / clean these)    * limit actions to 1024    * require oneofs        Fixes OSS-Fuzz Issue:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=16481    Testing: local asan/libfuzzer exec/sec go from 25 to 50        Signed-off-by: Asra Ali <asraa@google.com>
08dc244288	165290e19d	Wed Jul 10 17:19:15 2019 -0400	fuzz: fix filesystem bug, use std::__fs::filesystem (#7507)	commit 08dc2442882665d6e96262eaec03099a9a8f535dAuthor: asraa <asraa@google.com>Date:   Wed Jul 10 17:19:15 2019 -0400    fuzz: fix filesystem bug, use std::__fs::filesystem (#7507)        Since OSS-Fuzz minijail prohibits mkdir calls, we use std::__fs::filesystem namespace which implements filesystem.        The OSS-Fuzz image was taking the mkdir branch, since neither filesystem nor experimental/filesystem was found. However, we are able to use std::__fs::filesystem branch in the OSS-Fuzz image and the std::experimental::filesystem branch locally.        Risk Level: Low    Testing: Add RELEASE_ASSERT(1==0, "") under the #if defined(_LIBCPP_VERSION) && TEST_STD_VER < 17 branch to verify that branch is taken in oss-fuzz docker. run_fuzzer with oss-fuzz docker is successful.    Fixes OSS-Fuzz issue:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15414        Signed-off-by: Asra Ali <asraa@google.com>
62cf5d8abf	ad57ed8511	Mon Jun 24 16:04:56 2019 -0400	fuzz: fix filesystem crash (#7360)	commit 62cf5d8abf94e7c3d0faafbc1cf2c372b3a60e63Author: asraa <asraa@google.com>Date:   Mon Jun 24 16:04:56 2019 -0400    fuzz: fix filesystem crash (#7360)        Possible fix for filesystem crash in server fuzz test due to #7339        Testing: Add corpus entry    Issue    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15414        Signed-off-by: Asra Ali <asraa@google.com>
e085962324	49b5a91532	Thu Jun 20 11:41:31 2019 -0700	fuzz: fix oss-fuzz build failure  (#7339)	commit e0859623248fe445473d88eb85af717354e006d6Author: asraa <asraa@google.com>Date:   Thu Jun 20 14:41:31 2019 -0400    fuzz: fix oss-fuzz build failure  (#7339)        Signed-off-by: Asra Ali <asraa@google.com>
ff960238f9	4461f43111	Tue Jun 11 23:46:47 2019 -0400	fuzz: fix invalid headers in utility fuzz test (#7235)	commit ff960238f966e906d26ef0c21c89d7b52b174b9cAuthor: asraa <asraa@google.com>Date:   Tue Jun 11 23:46:47 2019 -0400    fuzz: fix invalid headers in utility fuzz test (#7235)        Replaces invalid characters in xff string.        Risk Level: Low    Testing: Add crashing corpus entry.        Referenced in oss-fuzz issue    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15070        Signed-off-by: Asra Ali <asraa@google.com>
76b944b2b8	3e0ee3c152	Tue Jun 11 13:30:51 2019 -0400	test: fix build failures by ignoring corpus generation on ppc build and clean headers (#7222)	commit 76b944b2b8df47755bf2ea4868caca42a0d8d54bAuthor: asraa <asraa@google.com>Date:   Tue Jun 11 13:30:51 2019 -0400    test: fix build failures by ignoring corpus generation on ppc build and clean headers (#7222)        Fix build failures by removing corpus generation from a binary when building on a ppc in route_fuzz_test and clean invalid characters from header entries in the fuzz test.        Risk Level: Low    Testing: Add crashing corpus entry.    Fixes bug:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15070        Signed-off-by: Asra Ali <asraa@google.com>
9bdf99060f	1fdaf8e74f	Tue Jun 4 10:07:30 2019 -0700	fuzz: fix unitialized ptr to downstreamSslConnectionInfo in TestStreamInfo and add mock (#7155)	commit 9bdf99060fce442b025be7478357fdbb974ce993Author: asraa <asraa@google.com>Date:   Tue Jun 4 13:07:30 2019 -0400    fuzz: fix unitialized ptr to downstreamSslConnectionInfo in TestStreamInfo and add mock (#7155)        Initializes downstreamSslConnectionInfo pointer in TestStreamInfo and adds a mock object for it in fuzzers.    Fixes crash in:    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=15066        Risk Level: Low    Testing: Add a corpus entry with downstream info.        Signed-off-by: Asra Ali <asraa@google.com>
be6a483e2b	4b2b946b93	Fri May 31 17:35:42 2019 -0400	timer: fix oss-fuzz issue #11852 (#6982)	commit be6a483e2b2a47e3e353ed3e8e8db854fb6da87bAuthor: Ismo Puustinen <ismo.puustinen@intel.com>Date:   Sat Jun 1 00:35:42 2019 +0300    timer: fix oss-fuzz issue #11852 (#6982)        Fix a time conversion signed int overflow (https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11852).        Risk Level: low    Testing: fuzz        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>
5982d112a0	1f9e2fd690	Tue Mar 12 11:11:34 2019 -0400	upstream: fix oss-fuzz issue #11095. (#6220)	commit 5982d112a0ec9ec2f7b4b7de1d51e86c33d77c1aAuthor: Ismo Puustinen <ismo.puustinen@intel.com>Date:   Tue Mar 12 17:11:34 2019 +0200    upstream: fix oss-fuzz issue #11095. (#6220)        Fix a crash found by oss-fuzz (see https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=11095). The bug is caused by trying to request IP information from a unix domain socket address.        Risk Level: low    Testing: local fuzzing and a regression test for HostDescriptionImpl constructor        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>
21b3e65762	5e9963ff4c	Fri Mar 8 16:10:20 2019 -0500	upstream: fix oss-fuzz issue #11329. (#6209)	commit 21b3e6576260640e74b1d311cdea65bd30c04a3bAuthor: Ismo Puustinen <ismo.puustinen@intel.com>Date:   Fri Mar 8 23:10:20 2019 +0200    upstream: fix oss-fuzz issue #11329. (#6209)        * upstream: fix an oss-fuzz issue.        Fix oss-fuzz issue #11329. If no hosts were specified in    static_resources, a crash would happen when the 'hosts' pointer was    dereferenced.        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>        * Added fixed fuzz test case to corpus.        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>        * Add test for static cluster with no hosts.        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>        * Initialize the HostVector instead of checking for nullptr.        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>        * Clean up test.        Signed-off-by: Ismo Puustinen <ismo.puustinen@intel.com>
99696cda33	32bdce35d0	Mon Feb 25 17:41:56 2019 -0500	upstream: fix abort in ring hash lb's config parsing (#6054)	commit 99696cda3336af26fe0b048d91e0d6eb279bb81cAuthor: Dan Rosen <mergeconflict@google.com>Date:   Mon Feb 25 17:41:56 2019 -0500    upstream: fix abort in ring hash lb's config parsing (#6054)        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13327        For ring hash lb, move all configuration parsing from Ring's ctor to the LB's ctor, where it's safe to throw exceptions from. Also, re-add proto field constraints to guard against extreme inputs from clusterfuzz and other actors of questionable intent.        Risk Level: Low    Testing: Added clusterfuzz testcase; existing tests still pass.        Signed-off-by: Dan Rosen <mergeconflict@google.com>
a0f91a9ffa	2f905d4427	Sun Feb 24 22:59:28 2019 -0500	fuzz: fix some buffer fuzz infrastructure bugs. (#6041)	commit a0f91a9ffa215c2039deccdb6eb01efbb151127dAuthor: htuch <htuch@users.noreply.github.com>Date:   Sun Feb 24 22:59:28 2019 -0500    fuzz: fix some buffer fuzz infrastructure bugs. (#6041)        Fixes oss-fuzz issues:    - https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13267      (Make write actions more robust to implementation differences)    - https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13324      https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13268      (Bound memory allocations more tightly)        Risk level: Low    Testing: Corpus entries added.        Signed-off-by: Harvey Tuch <htuch@google.com>
c9e01ed6db	85c5271324	Sun Feb 24 21:38:44 2019 -0500	buffer: fix handling of empty string prepends. (#6042)	commit c9e01ed6db5de00099cb6daaf9e34612d8b5f302Author: htuch <htuch@users.noreply.github.com>Date:   Sun Feb 24 21:38:44 2019 -0500    buffer: fix handling of empty string prepends. (#6042)        Prepending an empty string seems to mess up libevent internally.    evbuffer_prepend doesn't have a check for empty (unlike evbuffer_prepend_buffer    which does). This then results in an allocation of an empty chain, which causes    problems with a following move/append. This only seems to happen the the    original buffer was created via addBufferFragment(), this forces the code    execution path in evbuffer_prepend related to immutable buffers.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13263.        Risk level: Low    Testing: Corpus entry and unit test added.        Signed-off-by: Harvey Tuch <htuch@google.com>
6ff86030be	e2fe9a7774	Thu Feb 21 14:02:08 2019 -0500	config_validation/server: fix initialization order redux. (#6023)	commit 6ff86030be9e9ca078ad7a1e45616dcd2e45e6b7Author: htuch <htuch@users.noreply.github.com>Date:   Thu Feb 21 14:02:08 2019 -0500    config_validation/server: fix initialization order redux. (#6023)        Another heap-user-after-free, this time we were missing a fix that had been applied to server.h but    not config_validation/server.h (#4940). While working on this, attempted to make fully consistent and as    simple/clear as possible the constraints on member ordering.        This PR is in the tradition (!) of #5847, #4940, #4937. I think long-term we might want to think of    more dynamic and explicit declaration of ordering constraints, it's evidently pretty fragile. Also,    the lack of single-source-of-truth and duplication across prod and config server code bites again.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13228.        Risk level: Low    Testing: Corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
7cc5244a83	9304b437a7	Thu Feb 14 16:50:39 2019 -0500	fuzz: fix false positives triggered by H1 codec fuzzer. (#5959)	commit 7cc5244a838e2af5a7e410a8d9c244fc65c02187Author: htuch <htuch@users.noreply.github.com>Date:   Thu Feb 14 16:50:39 2019 -0500    fuzz: fix false positives triggered by H1 codec fuzzer. (#5959)        This PR addresses oss-fuzz issues https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13081.        This false positive (heap-use-after-free) resulted from a    misunderstanding around how we handle request/response encode/decoder    ownership.        As a bonus, fixed stream ID in corpus; it represents an index into the    list of created streams, not the HTTP/2 level stream ID.        Risk level: Low    Testing: Corpus entry added, validated under ASAN.        Signed-off-by: Harvey Tuch <htuch@google.com>
6061f6ce56	b2218acfc0	Thu Feb 7 17:01:05 2019 -0500	build: fix ubsan oss-fuzz build. (#5875)	commit 6061f6ce562337e3e6c9641c0001b6e9dc7195eeAuthor: htuch <htuch@users.noreply.github.com>Date:   Thu Feb 7 17:01:05 2019 -0500    build: fix ubsan oss-fuzz build. (#5875)        We were still failing ClusterFuzz builds for ubsan, another external_cmake regression.        Risk level: Low    Testing: oss-fuzz undefined Docker build.        Signed-off-by: Harvey Tuch <htuch@google.com>
c54274a79f	e458dfa17e	Thu Feb 7 14:26:25 2019 -0500	router: fix null-terminator issue in path replacement. (#5867)	commit c54274a79f0d908a09fb1fa08b199f8b1f0c5ae8Author: htuch <htuch@users.noreply.github.com>Date:   Thu Feb 7 14:26:25 2019 -0500    router: fix null-terminator issue in path replacement. (#5867)        Fixes oss-fuzz issue    https://oss-fuzz.com/testcase-detail/5137346677178368.        Risk level: Low    Testing: Corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
5fd128d638	f2511a39cf	Wed Feb 6 18:23:29 2019 -0500	maglev: fix handling of unspecified locality weights. (#5863)	commit 5fd128d63810919840917bdf7da2d018edc5e32fAuthor: htuch <htuch@users.noreply.github.com>Date:   Wed Feb 6 18:23:29 2019 -0500    maglev: fix handling of unspecified locality weights. (#5863)        The config fuzzer showed that the locality weight assertion in    https://github.com/envoyproxy/envoy/pull/5831 was too strong. Extant behavior was and is that if    locality weight is not specified and locality LB weighting, we should just ignore the locality.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12923.        Risk level: Low    Testing: Corpus entry and unit test added.        Signed-off-by: Harvey Tuch <htuch@google.com>
98a441f153	6b216b3abe	Tue Feb 5 15:50:41 2019 -0500	build: fix oss-fuzz build. (#5843)	commit 98a441f153fbecf3f7fc4c6135ed1bbcf9c7e49fAuthor: htuch <htuch@users.noreply.github.com>Date:   Tue Feb 5 15:50:41 2019 -0500    build: fix oss-fuzz build. (#5843)        Due to the external_cmake changes (amongst others), we've regressed on    the fuzzer build. We need to do the final link now inside the cc_binary,    as external_cmake has issues with transitivity and unrelated binaries    (see https://github.com/bazelbuild/rules_foreign_cc/issues/222).        Risk level: Low    Testing: oss-fuzz Docker build for Envoy's fuzzers.        Signed-off-by: Harvey Tuch <htuch@google.com>
e8255dc9c6	115033e68b	Fri Nov 9 07:59:18 2018 -0500	fuzz: avoid fixed file placeholder hack with ctx.actions.declare_dire… (#5000)	commit e8255dc9c6059e2c0383e42de3c0f6c592bb807fAuthor: htuch <htuch@users.noreply.github.com>Date:   Fri Nov 9 07:59:18 2018 -0500    fuzz: avoid fixed file placeholder hack with ctx.actions.declare_dire… (#5000)        After chatting with Bazel team, this seems to be the recommended    approach. It would be nice if this was supported directly in genrule,    but c'est la vie :)        Risk Level: Low    Testing: Manual bazel test and oss-fuzz Docker image validation.        Signed-off-by: Harvey Tuch <htuch@google.com>
115033e68b	e01fcf46ee	Fri Nov 9 07:57:10 2018 -0500	build: fix broken fuzz build. (#5001)	commit 115033e68bedbd67535c8f5d844abd6e72d1ce2eAuthor: htuch <htuch@users.noreply.github.com>Date:   Fri Nov 9 07:57:10 2018 -0500    build: fix broken fuzz build. (#5001)        Clang in oss-fuzz compares about "-Wdefault-function-deleted", i.e.:        bzel-out/k8-fastbuild/bin/source/common/filesystem/_virtual_includes/directory_iterator_impl_lib_posix/common/filesystem/directory_iterator_impl.h:29:26:    error: explicitly defaulted move assignment operator is im    plicitly deleted [-Werror,-Wdefaulted-function-deleted]    DirectoryIteratorImpl& operator=(DirectoryIteratorImpl&&) = default;    ^    bazel-out/k8-fastbuild/bin/source/common/filesystem/_virtual_includes/directory_iterator_impl_lib_posix/common/filesystem/directory_iterator_impl.h:38:24:    note: move assignment operator of 'DirectoryIteratorImpl'    is implicitly deleted because field 'os_sys_calls_' is of reference type    'Api::OsSysCallsImpl &'    Api::OsSysCallsImpl& os_sys_calls_;        Unfortunately, -Wdefault-function-deleted doesn't seem to be available in CI Clang (or my local    Clang for that matter).        Risk Level: Low.    Testing: Build.        Signed-off-by: Harvey Tuch <htuch@google.com>
0f80888148	dc3c4616ae	Mon Oct 22 23:17:49 2018 -0400	date_formatter: fix keying bug in cached fromTime(). (#4814)	commit 0f80888148c581cb4d0c81aba40488d8507a4ca2Author: htuch <htuch@users.noreply.github.com>Date:   Mon Oct 22 23:17:49 2018 -0400    date_formatter: fix keying bug in cached fromTime(). (#4814)        Previously, two distinct format strings that mapped to identical intermediate representation with    ??? acting as placeholders would falsely share the same cached time format.        Also, as a bonus, used this as an opportuntiy to move towards TimeSource for DateFormatter.        Fixes oss-fuzz bug https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10109.        Risk Level: Low    Testing: Unit test and corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
b61b28fe7a	6ac936f275	Tue Oct 16 18:15:13 2018 -0400	health_check: fix divide-by-zero in retry interval calculations. (#4737)	commit b61b28fe7ae9927452477a0f4e337c53830a7070Author: htuch <htuch@users.noreply.github.com>Date:   Tue Oct 16 18:15:13 2018 -0400    health_check: fix divide-by-zero in retry interval calculations. (#4737)        A fuzz failure indicated a divide-by-zero in HealthCheckerImplBase::interval(). Beyond this, on    inspection, it seems we allow zero retry intervals, which can live lock the main thread. This PR    fixes these issues.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10786.        Risk Level: Low    Testing: Additional unit test and a corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
d331e481bf	8607e912a1	Mon Oct 15 17:13:34 2018 -0400	outlier_detection: fix divide-by-zero in success rate processing. (#4731)	commit d331e481bf7d92f0b2824f006a29bd2349be1f41Author: htuch <htuch@users.noreply.github.com>Date:   Mon Oct 15 17:13:34 2018 -0400    outlier_detection: fix divide-by-zero in success rate processing. (#4731)        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10812.        Risk Level: Low    Testing: Unit test and corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
c04ed769e0	bcc7a96d9e	Mon Oct 1 10:07:45 2018 -0700	router: disallow :-prefixed custom header removal. (#4576)	commit c04ed769e0e97fedeaeee1f183b7d23437046b60Author: htuch <htuch@users.noreply.github.com>Date:   Mon Oct 1 13:07:45 2018 -0400    router: disallow :-prefixed custom header removal. (#4576)        This is the remove counterpart to https://github.com/envoyproxy/envoy/pull/4220.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10737.        Risk Level: Low    Testing: Unit test and corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
7d0a09c35d	341709320a	Mon Sep 24 10:33:36 2018 -0700	fuzz: fix oss-fuzz build. (#4501)	commit 7d0a09c35df6626ba51dc32d0ba88feb8bc64b5aAuthor: htuch <htuch@users.noreply.github.com>Date:   Mon Sep 24 13:33:36 2018 -0400    fuzz: fix oss-fuzz build. (#4501)        * fuzz: fix oss-fuzz build.        This has been broken since #4435, since oss-fuzz doesn't use the fuzz test runner shim, it has its    own main.cc.        Risk Level: Low    Testing: check_build with oss-fuzz Docker image.        Signed-off-by: Harvey Tuch <htuch@google.com>
fedaac992d	cce8cf8b62	Mon Sep 10 11:44:09 2018 -0700	sds/dns: fix late SDS exception throw during c-ares callbacks. (#4377)	commit fedaac992dc7498cb8cb6b7f49025a5ef51df331Author: htuch <htuch@users.noreply.github.com>Date:   Mon Sep 10 14:44:09 2018 -0400    sds/dns: fix late SDS exception throw during c-ares callbacks. (#4377)        Previously, we only validated local info in SDS initialize(), which could happen during c-ares    resolution. This is too late to be throwing config validation exceptions, so instead do it at SdsApi    construction time.        Also, make sure we safely copy exception info for EnvoyExceptions; for libc++ in oss-fuzz,    attempting to copy/throw the exception in the post() was causing UBSAN failures.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10262.        Risk level: Low    Testing: Corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
0a1e92acc8	cddc732c71	Tue Sep 4 14:35:30 2018 -0400	test: fix heap use-after-free in ~IntegrationTestServer. (#4319)	commit 0a1e92acc8c39380a93657a961598f4611590622Author: htuch <htuch@users.noreply.github.com>Date:   Tue Sep 4 14:35:30 2018 -0400    test: fix heap use-after-free in ~IntegrationTestServer. (#4319)        When the server thread exits independently of the main test thread (e.g. exception catch), we    could race on the access to the server admin port via server_. We latch this in this PR to avoid    unsafe behavior. We might still have a stale address, but the request should then fail or timeout.        Fixes oss-fuzz issues https://oss-fuzz.com/v2/testcase-detail/5719024990683136 and    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10027.        Risk level: Low    Testing: TSAN integration tests.        Signed-off-by: Harvey Tuch <htuch@google.com>
00ffe44a29	af1183c287	Fri Aug 31 17:04:23 2018 -0400	utility: fix strftime overflow handling. (#4321)	commit 00ffe44a2951321e8a1ad2e54fd4e014c059f70cAuthor: htuch <htuch@users.noreply.github.com>Date:   Fri Aug 31 17:04:23 2018 -0400    utility: fix strftime overflow handling. (#4321)        Existing strftime uses did not correctly handle buffer overflow    conditions, where strftime returns 0 and the buffer contents are    undefined.        This was discovered by an internal equivalent of oss-fuzz.        Risk level: Low    Testing: Unit test and corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
1d34172bd0	1212423401	Fri Aug 31 10:41:27 2018 -0400	dns: fix exception unsafe behavior in c-ares callbacks. (#4307)	commit 1d34172bd058f31956741ec5f3346339fc624fd0Author: htuch <htuch@users.noreply.github.com>Date:   Fri Aug 31 10:41:27 2018 -0400    dns: fix exception unsafe behavior in c-ares callbacks. (#4307)        Previously, we were taking an exception due to the late validation of update_merge_window duration    in ClusterManagerImpl::scheduleUpdate, which happened under a c-ares strict DNS host resolution    callback. There are several related issues here:        1. c-ares is exception unsafe, see https://github.com/c-ares/c-ares/issues/219.    2. We should be validating Durations with PGV, see       https://github.com/lyft/protoc-gen-validate/issues/97.    3. We should defer the c-ares resolution callbacks to be outside the c-ares callback context for       exception safety.        This PR addresses (3) by moving callbacks, even when they are "immediate", to a dispatcher post, so    that we never take an exception under a c-ares callback.        A workaround for (2) is provided, in lieu of https://github.com/lyft/protoc-gen-validate/issues/97,    which is blocked on our ability to bump PGV version in Envoy, see    https://github.com/lyft/protoc-gen-star/issues/28.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9868.        Risk level: Medium (DNS clusters will have some timing changes).    Testing: Updated DNS implementation unit tests, server fuzz corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
f7d3cb6386	cb892b4855	Fri Aug 24 16:33:39 2018 -0400	http: fix allocation bug introduced in #4211. (#4245)	commit f7d3cb638662f0787699b763134e1e64118d573fAuthor: htuch <htuch@users.noreply.github.com>Date:   Fri Aug 24 16:33:39 2018 -0400    http: fix allocation bug introduced in #4211. (#4245)        There were some non-local invariants that header_map_impl_fuzz_test surfaced around minimum dynamic    buffer size. This PR improves comments and documentation of invariants and fixes the allocation issue    to maintain them.        Fixes oss-fuzz issue https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=10038.        Risk level: Low. It's recommended to bump to this for potential security reasons if you are already post    #4211.    Testing: Unit test and corpus entry added.        Signed-off-by: Harvey Tuch <htuch@google.com>
db4783b451	9058d469c0	Mon Aug 20 15:28:55 2018 -0400	fuzz: fixes oss-fuzz: 9895 (#4189)	commit db4783b4513c74e3ef970c60510c1200a49f6982Author: Anirudh <m.anirudh18@gmail.com>Date:   Tue Aug 21 00:58:55 2018 +0530    fuzz: fixes oss-fuzz: 9895 (#4189)        Fixes oss-fuzz issue (9895): https://oss-fuzz.com/v2/testcase-detail/6195059702628352    The given input testcase had multiple START_TIME formatters as value, these are now supported.        Risk Level: Low    Testing: Tested unit tests (bazel test //test/common/router:header_parser_fuzz_test), built and ran fuzzers with oss-fuzz.        Signed-off-by: Anirudh M <m.anirudh18@gmail.com>
eb5ea98ff4	b27068bd06	Tue Jul 31 10:35:43 2018 -0700	fuzz: fixes oss-fuzz: 9599, 9600 (#3979)	commit eb5ea98ff41743542842d3f7ab93c7c957352062Author: Anirudh <m.anirudh18@gmail.com>Date:   Tue Jul 31 23:05:43 2018 +0530    fuzz: fixes oss-fuzz: 9599, 9600 (#3979)        Signed-off-by: Anirudh M <m.anirudh18@gmail.com>
7d61b00171	dc03a9a419	Mon Jul 30 12:53:44 2018 -0400	fuzz: fixes oss-fuzz: 9621 (#3988)	commit 7d61b00171fb3cc349a9d834dafdf10f0c70addaAuthor: Anirudh <m.anirudh18@gmail.com>Date:   Mon Jul 30 22:23:44 2018 +0530    fuzz: fixes oss-fuzz: 9621 (#3988)        The issue is due to on the crash of Envoy::Network::Utility::getAddressWithPort because of the invalid port_value. Added max constraint validate rule to the port_value field.        Risk Level: Low        Testing: Tested unit tests (bazel test //test/server/config_validation:config_fuzz_test), built and ran fuzzers with oss-fuzz.        Signed-off-by: Anirudh M <m.anirudh18@gmail.com>
0e2c79599d	42109e5642	Thu Jul 26 17:12:36 2018 -0700	fuzz: fixes oss-fuzz: 9204 (#3935)	commit 0e2c79599d3944bd154020e669ff045988c17c54Author: Anirudh <m.anirudh18@gmail.com>Date:   Fri Jul 27 05:42:36 2018 +0530    fuzz: fixes oss-fuzz: 9204 (#3935)        oss-fuzz issue (9204): https://oss-fuzz.com/v2/testcase-detail/5366294281977856    I suppose Envoy doesn't support multiple health checks still. Instead of assertion, have replaced it with throw. This doesn't crash the build. Let me know if any changes.        Risk Level: Low        Testing: Tested unit tests (bazel test //server:server_fuzz_test), built and ran fuzzers with oss-fuzz.        Signed-off-by: Anirudh M <m.anirudh18@gmail.com>
8459237140	ec0179a78b	Wed Jul 25 10:58:44 2018 -0700	fuzz: fixes oss-fuzz: 8363 (#3905)	commit 845923714078e5a3528e85d4b58f2cc95850a1c6Author: Anirudh <m.anirudh18@gmail.com>Date:   Wed Jul 25 23:28:44 2018 +0530    fuzz: fixes oss-fuzz: 8363 (#3905)        oss-fuzz issue (8363): https://oss-fuzz.com/v2/testcase-detail/5988544525893632    The crash was because of passing nan to Envoy::ProtobufPercentHelper::convertPercent, it asserts since it is not in the numeric range. Instead of adding a check in this function, have added a check in the preprocessor so that it goes to checkAndReturnDefault and the default value is used.    Have also added the crashing testcase to the corpus.        Risk Level: Low    Testing: Tested unit tests (bazel test //server:server_fuzz_test), built and ran fuzzers with oss-fuzz.        Signed-off-by: Anirudh M <m.anirudh18@gmail.com>
7e9d53a61d	339db5f347	Wed Apr 18 12:15:33 2018 -0700	bazel: fix bug in compiler flag selection. (#3127)	commit 7e9d53a61d46f288b5cc1dc08288abb4c5399d9eAuthor: htuch <htuch@users.noreply.github.com>Date:   Wed Apr 18 15:15:33 2018 -0400    bazel: fix bug in compiler flag selection. (#3127)        * bazel: fix bug in compiler flag selection.        See https://github.com/google/oss-fuzz/issues/1337.        Risk Level: Low.    Test: CI builds.        Signed-off-by: Harvey Tuch <htuch@google.com>
