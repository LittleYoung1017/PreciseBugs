diff --cc ogr/ogrsf_frmts/ods/ogr_ods.h
index d915cb1259,d915cb1259..528b86962c
--- a/ogr/ogrsf_frmts/ods/ogr_ods.h
+++ b/ogr/ogrsf_frmts/ods/ogr_ods.h
@@@ -156,8 -156,8 +156,6 @@@ class OGRODSDataSource final: public GD
      int                 nRowsRepeated;
      int                 nCurCol;
      int                 nCellsRepeated;
--    // Accumulated memory allocations related to repeated cells.
--    size_t              m_nAccRepeatedMemory = 0;
      bool                bEndTableParsing;
  
      OGRODSLayer        *poCurLayer;
diff --cc ogr/ogrsf_frmts/ods/ogrodsdatasource.cpp
index c010136c22,c010136c22..d9bf2ed5e7
--- a/ogr/ogrsf_frmts/ods/ogrodsdatasource.cpp
+++ b/ogr/ogrsf_frmts/ods/ogrodsdatasource.cpp
@@@ -850,9 -850,9 +850,8 @@@ void OGRODSDataSource::FillRepeatedCell
          return;
      }
  
--    // Use 16 as minimum cost for each allocation.
      const size_t nCellMemSize =
--        std::max<size_t>(16, (!osValue.empty()) ? osValue.size() : osFormula.size());
++        (!osValue.empty()) ? osValue.size() : osFormula.size();
      if( nCellMemSize > static_cast<size_t>(10 * 1024 * 1024) /
              (std::max(nCellsRepeated, 1) * nRowsRepeated) )
      {
@@@ -862,20 -862,20 +861,6 @@@
          nCellsRepeated = 0;
          return;
      }
--
--    m_nAccRepeatedMemory +=
--        nCellMemSize * std::max(nCellsRepeated, 1) * nRowsRepeated;
--    if( m_nAccRepeatedMemory > static_cast<size_t>(10 * 1024 * 1024) )
--    {
--        CPLError(CE_Failure, CPLE_NotSupported,
--                 "Too much accumulated memory for row/cell repetition. "
--                 "Parsing stopped");
--        bEndTableParsing = true;
--        nCellsRepeated = 0;
--        bStopParsing = true;
--        return;
--    }
--
      for(int i = 0; i < nCellsRepeated; i++)
      {
          if( !osValue.empty() )
