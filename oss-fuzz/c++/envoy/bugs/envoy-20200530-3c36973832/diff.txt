diff --git a/.devcontainer/Dockerfile b/.devcontainer/Dockerfile
index d17a43c3f4..35439f303f 100644
--- a/.devcontainer/Dockerfile
+++ b/.devcontainer/Dockerfile
@@ -10,12 +10,14 @@ ENV ENVOY_STDLIB=libstdc++
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get -y update \
   && apt-get -y install --no-install-recommends libpython2.7 net-tools psmisc vim 2>&1 \
-  #
+  # Change pcap gid to some larger number which doesn't conflict with common gid (1000)
+  && groupmod -g 65515 pcap && chgrp pcap /usr/sbin/tcpdump \
   # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.
   && groupadd --gid $USER_GID $USERNAME \
-  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
+  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME -d /build \
   # [Optional] Add sudo support for non-root user
   && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
   && chmod 0440 /etc/sudoers.d/$USERNAME
 
 ENV DEBIAN_FRONTEND=
+ENV PATH=/opt/llvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json
index b4c56432ce..58eda81be3 100644
--- a/.devcontainer/devcontainer.json
+++ b/.devcontainer/devcontainer.json
@@ -18,6 +18,10 @@
     "files.exclude": {
       "**/.clangd/**": true,
       "**/bazel-*/**": true
+    },
+    "files.watcherExclude": {
+      "**/.clangd/**": true,
+      "**/bazel-*/**": true
     }
   },
   "remoteUser": "vscode",
@@ -30,4 +34,4 @@
     "llvm-vs-code-extensions.vscode-clangd",
     "webfreak.debug"
   ]
-}
\ No newline at end of file
+}
diff --git a/.devcontainer/setup.sh b/.devcontainer/setup.sh
index 4dd2ddbff9..9a8e4ab5ac 100755
--- a/.devcontainer/setup.sh
+++ b/.devcontainer/setup.sh
@@ -8,8 +8,11 @@ BAZELRC_FILE=~/.bazelrc bazel/setup_clang.sh /opt/llvm
 # Use generated toolchain config because we know the base container is the one we're using in RBE.
 # Not using libc++ here because clangd will raise some tidy issue in libc++ header as of version 9.
 echo "build --config=rbe-toolchain-clang" >> ~/.bazelrc
-echo "build --symlink_prefix=/" >> ~/.bazelrc
 echo "build ${BAZEL_BUILD_EXTRA_OPTIONS}" | tee -a ~/.bazelrc
-echo "startup --output_base=/build/tmp"
 
-[[ ! -z "${BUILD_DIR}" ]] && sudo chown -R "$(id -u):$(id -g)" ${BUILD_DIR}
\ No newline at end of file
+# Ideally we want this line so bazel doesn't pollute things outside of the devcontainer, but some of
+# API tooling (proto_sync) depends on symlink like bazel-bin.
+# TODO(lizan): Fix API tooling and enable this again
+#echo "build --symlink_prefix=/" >> ~/.bazelrc
+
+[[ ! -z "${BUILD_DIR}" ]] && sudo chown -R "$(id -u):$(id -g)" ${BUILD_DIR}
diff --git a/tools/vscode/refresh_compdb.sh b/tools/vscode/refresh_compdb.sh
index c40074be87..1f6a279256 100755
--- a/tools/vscode/refresh_compdb.sh
+++ b/tools/vscode/refresh_compdb.sh
@@ -1,9 +1,9 @@
 #!/usr/bin/env bash
 
-tools/proto_format/proto_format.sh fix
+[[ -z "${SKIP_PROTO_FORMAT}" ]] && tools/proto_format/proto_format.sh fix
 
-# Setting platform suffix here so the compdb headers won't be overwritten by another bazel run
-BAZEL_BUILD_OPTIONS=--platform_suffix=-compdb tools/gen_compilation_database.py --run_bazel_build -k
+# Setting TEST_TMPDIR here so the compdb headers won't be overwritten by another bazel run
+TEST_TMPDIR=${BUILD_DIR:-/tmp}/envoy-compdb tools/gen_compilation_database.py --run_bazel_build -k
 
 # Kill clangd to reload the compilation database
 killall -v /opt/llvm/bin/clangd
