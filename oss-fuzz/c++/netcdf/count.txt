0582c204	de403a0f	Fri Sep 24 11:59:48 2021 +0200	Fix a stack-read-overflow in ncindexlookup()	commit 0582c2044a89fe0e4de34394142901cf60a3a198Author: Even Rouault <even.rouault@spatialys.com>Date:   Fri Sep 24 11:59:48 2021 +0200    Fix a stack-read-overflow in ncindexlookup()        Fixes an issue with strlen() reading outside the stack allocated buffer    by NC4_HDF5_inq_att, when reading a name whose length is NC_MAX_NAME.        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39189 found    on GDAL        ==1895951== Conditional jump or move depends on uninitialised value(s)    ==1895951==    at 0x483EF58: strlen (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)    ==1895951==    by 0x48EF73E: ncindexlookup (ncindex.c:60)    ==1895951==    by 0x48E81DF: nc4_find_grp_att (nc4internal.c:587)    ==1895951==    by 0x48E5B39: nc4_get_att_ptrs (nc4attr.c:72)    ==1895951==    by 0x48F98A0: NC4_HDF5_inq_att (hdf5attr.c:818)    ==1895951==    by 0x48847F7: nc_inq_att (dattinq.c:91)    ==1895951==    by 0x10D693: pr_att (ncdump.c:767)    ==1895951==    by 0x110ADB: do_ncdump_rec (ncdump.c:1887)    ==1895951==    by 0x1112F1: do_ncdump (ncdump.c:2038)    ==1895951==    by 0x11248B: main (ncdump.c:2478)    ==1895951==    ==1895951== Use of uninitialised value of size 8    ==1895951==    at 0x48A24E4: crc64_little (dcrc64.c:173)    ==1895951==    by 0x48A27F4: NC_crc64 (dcrc64.c:229)    ==1895951==    by 0x4892D49: NC_hashmapkey (nchashmap.c:159)    ==1895951==    by 0x489314B: NC_hashmapget (nchashmap.c:263)    ==1895951==    by 0x48EF75F: ncindexlookup (ncindex.c:60)    ==1895951==    by 0x48E81DF: nc4_find_grp_att (nc4internal.c:587)    ==1895951==    by 0x48E5B39: nc4_get_att_ptrs (nc4attr.c:72)    ==1895951==    by 0x48F98A0: NC4_HDF5_inq_att (hdf5attr.c:818)    ==1895951==    by 0x48847F7: nc_inq_att (dattinq.c:91)    ==1895951==    by 0x10D693: pr_att (ncdump.c:767)    ==1895951==    by 0x110ADB: do_ncdump_rec (ncdump.c:1887)    ==1895951==    by 0x1112F1: do_ncdump (ncdump.c:2038)    ==1895951==
1989ddc2	d18378c6	Wed Aug 2 21:57:36 2017 +0200	Fix stack buffer overflow in nc4_check_name()	commit 1989ddc252d936c0893ab50d8b315325b9c55e29Author: Even Rouault <even.rouault@spatialys.com>Date:   Wed Aug 2 21:54:25 2017 +0200    Fix stack buffer overflow in nc4_check_name()        nc4_check_name() checks that the provided string doesn't exceed NC_MAX_NAME,    but fails to do so after calling nc_utf8_normalize(). This extra check is    needed since a caller of nc4_check_name(), like NC4_def_dim, allocates    norm_name as char norm_name[NC_MAX_NAME + 1]        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2840    Credit to OSS-Fuzz
4779c827	b3418d2c	Fri Jun 23 12:16:53 2017 +0200	Fix undefined left shift in get_ix_int()	commit 4779c8278f67964d9dfc6dc13449543fc15226a4Author: Even Rouault <even.rouault@spatialys.com>Date:   Fri Jun 23 12:16:53 2017 +0200    Fix undefined left shift in get_ix_int()        Getting the value of the x variable on the file corresponding to the below ncdump output    with -fsanitize=undefined raises        ncx.c:1034:14: runtime error: left shift of 128 by 24 places cannot be represented in type 'int'        This is due to *cp being promoted to int before doing the left shift, instead    of the intended unsigned. So do the cast to unsigned internally rather than    externally        ncdump file to reproduce:        netcdf temp {    dimensions:            x = 2 ;            y = 2 ;            v = 2 ;    variables:            int x(v) ;            byte y(y, x) ;    data:         x = _, _ ;         y =      -127, -127,      -127, -127 ;    }        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2356        Credit to OSS Fuzz
b3418d2c	92270070	Thu Jun 15 12:46:37 2017 +0200	Fix undefined left shift in ncx_get_size_t()	commit b3418d2cd6e8d48adae5f3895a1e16ab9b3b1a84Author: Even Rouault <even.rouault@spatialys.com>Date:   Thu Jun 15 12:46:37 2017 +0200    Fix undefined left shift in ncx_get_size_t()        Running a build on the .nc file corresponding to the below ncdump output    with -fsanitize=undefined raises        libsrc/ncx.c:4722:26: runtime error: left shift of 255 by 24 places cannot be represented in type 'int'        This is due to *cp being promoted to int before doing the left shift, instead    of the intended unsigned. So do the cast to unsigned internally rather than    externally        ncdump file to reproduce:        netcdf temp {    dimensions:            y = UNLIMITED ; // (0 currently)            x = 109067 ;    variables:            byte t(y, x, x) ;    data:    }        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=2265        Credit to OSS Fuzz
