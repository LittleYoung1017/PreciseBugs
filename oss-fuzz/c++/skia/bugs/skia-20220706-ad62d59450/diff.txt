diff --git a/src/core/SkVertices.cpp b/src/core/SkVertices.cpp
index 7569de7079..1e364ef8e2 100644
--- a/src/core/SkVertices.cpp
+++ b/src/core/SkVertices.cpp
@@ -279,13 +279,16 @@ sk_sp<SkVertices> SkVerticesPriv::Decode(SkReadBuffer& buffer) {
 
         // Check that the header fields and buffer are valid. If this is data with the experimental
         // custom attributes feature - we don't support that any more.
-        if (!safe || !buffer.isValid() || attrCount) {
+        // We also don't support serialized triangle-fan data. We stopped writing that long ago,
+        // so it should never appear in valid encoded data.
+        if (!safe || !buffer.isValid() || attrCount ||
+            mode == SkVertices::kTriangleFan_VertexMode) {
             return nullptr;
         }
 
         const SkVertices::Desc desc{mode, vertexCount, indexCount, hasTexs, hasColors};
         SkVertices::Sizes sizes(desc);
-        if (!sizes.isValid()) {
+        if (!sizes.isValid() || sizes.fArrays > buffer.available()) {
             return nullptr;
         }
 
@@ -304,9 +307,7 @@ sk_sp<SkVertices> SkVerticesPriv::Decode(SkReadBuffer& buffer) {
         }
         buffer.readByteArray(builder.texCoords(), sizes.fTSize);
         buffer.readByteArray(builder.colors(), sizes.fCSize);
-        size_t isize = (mode == SkVertices::kTriangleFan_VertexMode) ? sizes.fBuilderTriFanISize
-                                                                     : sizes.fISize;
-        buffer.readByteArray(builder.indices(), isize);
+        buffer.readByteArray(builder.indices(), sizes.fISize);
 
         if (!buffer.isValid()) {
             return nullptr;
