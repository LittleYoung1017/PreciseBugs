824f0e911	a36924781	Fri Jun 23 17:47:13 2023 +0000	Fix libpki build	commit 824f0e9113916d0258ce515079492f43d3ed67c3Author: David Benjamin <davidben@google.com>Date:   Fri Jun 23 11:18:47 2023 -0400    Fix libpki build        This is breaking the oss-fuzz build. Changes made:        - No need make a subproject, I think. In particular, keep the minimum      CMake versions matching.        - Let's not include it in install just yet, since it's still      experimental.        - I removed the comment about public headers. The target doesn't      actually provide any public headers for the moment.        - Apparently the "modern CMake" way to set properties is per-target      rather than using the directory-wide options, so I've switched to      that.        Bug: oss-fuzz:60049    Change-Id: I511667ca8e83cb1997f82b329ed38f980574305e    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/61126    Reviewed-by: Bob Beck <bbe@google.com>    Auto-Submit: David Benjamin <davidben@google.com>    Commit-Queue: Bob Beck <bbe@google.com>
a028a5e01	eb0b7e4df	Mon Feb 6 18:07:30 2023 +0000	Fix leak in set_dist_point_name error handling.	commit a028a5e01f2cd627e31f3d3dbdd8fe1f707734b4Author: David Benjamin <davidben@google.com>Date:   Mon Feb 6 12:22:07 2023 -0500    Fix leak in set_dist_point_name error handling.        The temporary X509_NAME wasn't destroyed if the section didn't exist.    Also document the weird 0 vs -1 convention (see callers), and revise the    NULL check added in    https://boringssl-review.googlesource.com/c/boringssl/+/56705. It    doesn't make a difference, but we should only apply the NULL check after    we've looked at the name, and return -1 because, after the name is    checked, it's a known syntax error.        Also fix a couple of comments that were wrong. It's that the RDNSequence    we take from X509_NAME must have one RDN, not that there's one    RDNSequence. (This is a consequence of X509_NAME's somewhat odd    in-memory representation.)        Bug: oss-fuzz:55700    Change-Id: I5745752bfa82802d361803868f962b2b0fa4bd32    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56929    Auto-Submit: David Benjamin <davidben@google.com>    Commit-Queue: Bob Beck <bbe@google.com>    Reviewed-by: Bob Beck <bbe@google.com>
eb0b7e4df	8f220ece1	Fri Feb 3 21:12:58 2023 +0000	Fix leak in error-handling for issuingDistributionPoint	commit eb0b7e4df6eb5a082c2b977784f4270b55c58361Author: David Benjamin <davidben@google.com>Date:   Fri Feb 3 15:32:52 2023 -0500    Fix leak in error-handling for issuingDistributionPoint        Handling of duplicate keys is all over the place. For set_reasons, it    tried to catch it but leaked memory. Also fix a hypothetical memory leak    in crldp_from_section, but I think it's actually impossible because any    list of CONF_VALUE from a section, rather than from X509V3_parse_list,    cannot have duplicates. It just overrides the previous value.        (Ideally we'd be consistent about whether duplicates override previous    values or are caught, but I'm opting to just leave the existing behavior    alone because no one should be using these APIs in the first place.)        Bug: oss-fuzz:55669    Change-Id: I95d23c257203dcd799d19f334ef847a97d060aad    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56865    Reviewed-by: Bob Beck <bbe@google.com>    Auto-Submit: David Benjamin <davidben@google.com>    Commit-Queue: David Benjamin <davidben@google.com>
3c7053975	50de086ab	Thu Feb 2 22:39:35 2023 +0000	Fix leak on error in v2i_POLICY_MAPPINGS	commit 3c7053975b35a631f477f42f07502003d35aa2ffAuthor: David Benjamin <davidben@google.com>Date:   Thu Feb 2 17:25:07 2023 -0500    Fix leak on error in v2i_POLICY_MAPPINGS        If obj2 were invalid, obj1 leaks. Also both leak if creating the    POLICY_MAPPINGS object fails on allocation error. Just swap the order,    so the ASN1_OBJECTs go to an owned pointer from the start.        Bug: oss-fuzz:55636    Change-Id: Ibf0bf58f44db510623035004f6eb1e00961a5454    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56805    Reviewed-by: Bob Beck <bbe@google.com>    Commit-Queue: Bob Beck <bbe@google.com>    Reviewed-by: Adam Langley <agl@google.com>    Auto-Submit: David Benjamin <davidben@google.com>    Commit-Queue: David Benjamin <davidben@google.com>    Commit-Queue: Adam Langley <agl@google.com>
07d353680	a5ab81885	Wed Feb 1 14:42:33 2023 +0000	Fix leak on invalid input to a2i_GENERAL_NAME.	commit 07d353680fa7d96e77ba93382deddd030793def4Author: David Benjamin <davidben@google.com>Date:   Tue Jan 31 15:18:56 2023 -0500    Fix leak on invalid input to a2i_GENERAL_NAME.        Also add some tests for this syntax. The error-handling here is slightly    subtle. Although we do call GENERAL_NAME_free on the temporary    GENERAL_NAME on error, GENERAL_NAME's value is freed based on the    type field. That means if you add an object to the value but don't set    the type, it won't be freed.        Only the OTHERNAME codepath was affected by this, and a malloc    failure-only case in the is_string path. I've gone ahead and reworked    all the paths so setting the type happens at the same time as setting    the value, so this invariant is more locally obvious.        This only impacts the unsafe, stringly-typed extensions-building APIs    that no one should be using anyway.        Bug: oss-fuzz:55569    Change-Id: I6390e4ac1142264cdc86f95fd850f1b8f81e3fc9    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56725    Reviewed-by: Adam Langley <agl@google.com>    Commit-Queue: David Benjamin <davidben@google.com>    Auto-Submit: David Benjamin <davidben@google.com>
507ac8300	a7fbc543c	Tue Jan 31 17:59:34 2023 +0000	Fix error-handling in X509V3_EXT_add_nconf_sk and X509v3_add_ext.	commit 507ac830036d7531489490831814cf03e0d7c4d6Author: David Benjamin <davidben@google.com>Date:   Tue Jan 31 12:14:20 2023 -0500    Fix error-handling in X509V3_EXT_add_nconf_sk and X509v3_add_ext.        See also upstream's abcf241114c4dc33af95288ae7f7d10916c67db0.        Fixed: oss-fuzz:55555, oss-fuzz:55556, oss-fuzz:55560    Change-Id: I3b015822806ced39a498017bd2329323ed8dfbf0    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/56685    Auto-Submit: David Benjamin <davidben@google.com>    Reviewed-by: Bob Beck <bbe@google.com>    Commit-Queue: David Benjamin <davidben@google.com>
27a3328a3	62c4f1547	Mon Sep 13 17:55:46 2021 +0000	Fix the TLS fuzzers for ECH draft-13.	commit 27a3328a37c320750398bebeaa02f84318811bf3Author: David Benjamin <davidben@google.com>Date:   Mon Sep 13 13:33:20 2021 -0400    Fix the TLS fuzzers for ECH draft-13.        Replace the hardcoded ECH config, which wasn't updated for draft-13,    with a call to SSL_marshal_ech_config.        Bug: 275, oss-fuzz:38054    Change-Id: I10c12b22015c9c0cb90dd6185eb375153a2531f4    Reviewed-on: https://boringssl-review.googlesource.com/c/boringssl/+/49445    Commit-Queue: David Benjamin <davidben@google.com>    Reviewed-by: Adam Langley <agl@google.com>
ddedf6d45	17dc94e87	Fri Aug 10 14:44:43 2018 +0000	Fix SSL_CTX_set1_sigalgs_list fuzzer.	commit ddedf6d455e33d6a0b3bc40581700f3d252029d7Author: David Benjamin <davidben@google.com>Date:   Fri Aug 10 08:42:41 2018 -0500    Fix SSL_CTX_set1_sigalgs_list fuzzer.        SSL_CTX_set1_sigalgs_list wants a NUL-terminated string, so we need to use    GetString to give it one.        Bug: oss-fuzz:9808    Change-Id: Id7f676aa514c36de9dea900763db3cbbf5c79a4c    Reviewed-on: https://boringssl-review.googlesource.com/30804    Reviewed-by: Adam Langley <agl@google.com>
