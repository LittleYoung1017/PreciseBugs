diff --git a/gdal/frmts/elas/elasdataset.cpp b/gdal/frmts/elas/elasdataset.cpp
index 85434212d7..796e6b063c 100644
--- a/gdal/frmts/elas/elasdataset.cpp
+++ b/gdal/frmts/elas/elasdataset.cpp
@@ -194,7 +194,7 @@ CPLErr ELASRasterBand::IReadBlock( CPL_UNUSED int nBlockXOff,
 
     ELASDataset *poGDS = (ELASDataset *) poDS;
 
-    int nDataSize = GDALGetDataTypeSize(eDataType) * poGDS->GetRasterXSize() / 8;
+    int nDataSize = GDALGetDataTypeSizeBytes(eDataType) * poGDS->GetRasterXSize();
     long nOffset = poGDS->nLineOffset * nBlockYOff + 1024 + (nBand-1) * nDataSize;
 
 /* -------------------------------------------------------------------- */
@@ -227,7 +227,7 @@ CPLErr ELASRasterBand::IWriteBlock( CPL_UNUSED int nBlockXOff,
 
     ELASDataset *poGDS = (ELASDataset *) poDS;
 
-    int nDataSize = GDALGetDataTypeSize(eDataType) * poGDS->GetRasterXSize() / 8;
+    int nDataSize = GDALGetDataTypeSizeBytes(eDataType) * poGDS->GetRasterXSize();
     long nOffset = poGDS->nLineOffset * nBlockYOff + 1024 + (nBand-1) * nDataSize;
 
     if( VSIFSeekL( poGDS->fp, nOffset, SEEK_SET ) != 0
@@ -412,8 +412,25 @@ GDALDataset *ELASDataset::Open( GDALOpenInfo * poOpenInfo )
 /*      Band offsets are always multiples of 256 within a multi-band    */
 /*      scanline of data.                                               */
 /* -------------------------------------------------------------------- */
+    if( GDALGetDataTypeSizeBytes(poDS->eRasterDataType) >
+                                    (INT_MAX - 256) / poDS->nRasterXSize )
+    {
+        delete poDS;
+        return NULL;
+    }
     poDS->nBandOffset =
-        (poDS->nRasterXSize * GDALGetDataTypeSize(poDS->eRasterDataType)/8);
+        (poDS->nRasterXSize * GDALGetDataTypeSizeBytes(poDS->eRasterDataType));
+
+    if( poDS->nBandOffset > 1000000 )
+    {
+        VSIFSeekL( poDS->fp, 0, SEEK_END );
+        if( VSIFTellL( poDS->fp ) < static_cast<vsi_l_offset>(poDS->nBandOffset) )
+        {
+            CPLError(CE_Failure, CPLE_FileIO, "File too short");
+            delete poDS;
+            return NULL;
+        }
+    }
 
     if( poDS->nBandOffset % 256 != 0 )
     {
@@ -525,7 +542,7 @@ GDALDataset *ELASDataset::Create( const char * pszFilename,
 /* -------------------------------------------------------------------- */
 /*      How long will each band of a scanline be?                       */
 /* -------------------------------------------------------------------- */
-    int nBandOffset = nXSize * GDALGetDataTypeSize(eType)/8;
+    int nBandOffset = nXSize * GDALGetDataTypeSizeBytes(eType);
 
     if( nBandOffset % 256 != 0 )
     {
@@ -558,7 +575,7 @@ GDALDataset *ELASDataset::Create( const char * pszFilename,
 
     sHeader.IH19[0] = 0x04;
     sHeader.IH19[1] = 0xd2;
-    sHeader.IH19[3] = (GByte) (GDALGetDataTypeSize(eType) / 8);
+    sHeader.IH19[3] = (GByte) (GDALGetDataTypeSizeBytes(eType));
 
     if( eType == GDT_Byte )
         sHeader.IH19[2] = 1 << 2;
