diff --git a/gdal/ogr/ogrsf_frmts/vrt/ogrvrtlayer.cpp b/gdal/ogr/ogrsf_frmts/vrt/ogrvrtlayer.cpp
index 587b7bd913..0d06d8ed85 100644
--- a/gdal/ogr/ogrsf_frmts/vrt/ogrvrtlayer.cpp
+++ b/gdal/ogr/ogrsf_frmts/vrt/ogrvrtlayer.cpp
@@ -551,10 +551,9 @@ bool OGRVRTLayer::FullInitialize()
 
     // Figure out the data source name.  It may be treated relative
     // to vrt filename, but normally it is used directly.
-    char *pszSrcDSName =
-        const_cast<char *>(CPLGetXMLValue(psLTree, "SrcDataSource", nullptr));
+    std::string osSrcDSName = CPLGetXMLValue(psLTree, "SrcDataSource", "");
 
-    if( pszSrcDSName == nullptr )
+    if( osSrcDSName.empty() )
     {
         CPLError(CE_Failure, CPLE_AppDefined,
                  "Missing SrcDataSource for layer %s.", osName.c_str());
@@ -570,31 +569,26 @@ bool OGRVRTLayer::FullInitialize()
              i++ )
         {
             const char *pszPrefix = apszPrefixes[i];
-            if( EQUALN(pszSrcDSName, pszPrefix, strlen(pszPrefix)) )
+            if( EQUALN(osSrcDSName.c_str(), pszPrefix, strlen(pszPrefix)) )
             {
-                const char *pszLastPart = strrchr(pszSrcDSName, ':') + 1;
+                auto nLastPart = osSrcDSName.find(':') + 1;
                 // CSV:z:/foo.xyz
-                if( (pszLastPart[0] == '/' || pszLastPart[0] == '\\') &&
-                    pszLastPart - pszSrcDSName >= 3 && pszLastPart[-3] == ':' )
-                    pszLastPart -= 2;
-                CPLString osPrefix(pszSrcDSName);
-                osPrefix.resize(pszLastPart - pszSrcDSName);
-                pszSrcDSName = CPLStrdup((osPrefix +
-                    CPLProjectRelativeFilename(osVRTDirectory, pszLastPart)).c_str());
+                if( (osSrcDSName[nLastPart] == '/' || osSrcDSName[nLastPart] == '\\') &&
+                    nLastPart >= 3 && osSrcDSName[nLastPart-3] == ':' )
+                    nLastPart -= 2;
+                CPLString osPrefix(osSrcDSName);
+                osPrefix.resize(nLastPart);
+                osSrcDSName = osPrefix +
+                    CPLProjectRelativeFilename(osVRTDirectory, osSrcDSName.c_str() + nLastPart);
                 bDone = true;
                 break;
             }
         }
         if( !bDone )
         {
-            pszSrcDSName = CPLStrdup(
-                CPLProjectRelativeFilename(osVRTDirectory, pszSrcDSName));
+            osSrcDSName = CPLProjectRelativeFilename(osVRTDirectory, osSrcDSName.c_str());
         }
     }
-    else
-    {
-        pszSrcDSName = CPLStrdup(pszSrcDSName);
-    }
 
     // Are we accessing this datasource in shared mode?  We default
     // to shared for SrcSQL requests, but we also allow the XML to
@@ -618,7 +612,7 @@ bool OGRVRTLayer::FullInitialize()
     // Try to access the datasource.
 try_again:
     CPLErrorReset();
-    if( EQUAL(pszSrcDSName, "@dummy@") )
+    if( EQUAL(osSrcDSName.c_str(), "@dummy@") )
     {
         GDALDriver *poMemDriver =
             OGRSFDriverRegistrar::GetRegistrar()->GetDriverByName("Memory");
@@ -631,7 +625,7 @@ try_again:
     }
     else if( bSrcDSShared )
     {
-        if( poDS->IsInForbiddenNames(pszSrcDSName) )
+        if( poDS->IsInForbiddenNames(osSrcDSName.c_str()) )
         {
             CPLError(CE_Failure, CPLE_AppDefined,
                      "Cyclic VRT opening detected!");
@@ -645,7 +639,7 @@ try_again:
             if( bUpdate )
                 l_nFlags |= GDAL_OF_UPDATE;
             poSrcDS = (GDALDataset *)GDALOpenEx(
-                pszSrcDSName, l_nFlags, nullptr,
+                osSrcDSName.c_str(), l_nFlags, nullptr,
                 (const char *const *)papszOpenOptions, nullptr);
             CSLDestroy(papszOpenOptions);
             // Is it a VRT datasource?
@@ -666,7 +660,7 @@ try_again:
             if( bUpdate )
                 l_nFlags |= GDAL_OF_UPDATE;
             poSrcDS = (GDALDataset *)GDALOpenEx(
-                pszSrcDSName, l_nFlags, nullptr,
+                osSrcDSName.c_str(), l_nFlags, nullptr,
                 (const char *const *)papszOpenOptions, nullptr);
             CSLDestroy(papszOpenOptions);
             // Is it a VRT datasource?
@@ -701,13 +695,13 @@ try_again:
             CPLError(CE_Warning, CPLE_AppDefined,
                      "Cannot open datasource `%s' in update mode. "
                      "Trying again in read-only mode",
-                     pszSrcDSName);
+                     osSrcDSName.c_str());
             bUpdate = false;
             goto try_again;
         }
         if( strlen(CPLGetLastErrorMsg()) == 0 )
             CPLError(CE_Failure, CPLE_AppDefined,
-                     "Failed to open datasource `%s'.", pszSrcDSName);
+                     "Failed to open datasource `%s'.", osSrcDSName.c_str());
         goto error;
     }
 
@@ -745,14 +739,11 @@ try_again:
         {
             CPLError(CE_Failure, CPLE_AppDefined,
                      "Failed to find layer '%s' on datasource '%s'.",
-                     pszSrcLayerName, pszSrcDSName);
+                     pszSrcLayerName, osSrcDSName.c_str());
             goto error;
         }
     }
 
-    CPLFree(pszSrcDSName);
-    pszSrcDSName = nullptr;
-
     // Search for GeometryField definitions.
 
     // Create as many OGRVRTGeomFieldProps as there are
@@ -1120,7 +1111,6 @@ try_again:
 
 error:
     bError = true;
-    CPLFree(pszSrcDSName);
     poFeatureDefn->Release();
     poFeatureDefn = new OGRFeatureDefn(osName);
     poFeatureDefn->SetGeomType(wkbNone);
