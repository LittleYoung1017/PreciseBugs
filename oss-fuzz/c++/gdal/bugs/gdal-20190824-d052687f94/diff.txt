diff --git a/gdal/frmts/raw/ctable2dataset.cpp b/gdal/frmts/raw/ctable2dataset.cpp
index 0f7f03eeb3..6a7d8ee0b8 100644
--- a/gdal/frmts/raw/ctable2dataset.cpp
+++ b/gdal/frmts/raw/ctable2dataset.cpp
@@ -218,6 +218,7 @@ GDALDataset *CTable2Dataset::Open( GDALOpenInfo * poOpenInfo )
 /* -------------------------------------------------------------------- */
 /*      Setup the bands.                                                */
 /* -------------------------------------------------------------------- */
+    CPLErrorReset();
     RawRasterBand *poBand =
         new RawRasterBand( poDS, 1, poDS->fpImage,
                            160 + 4 + static_cast<vsi_l_offset>(nRasterXSize) *
@@ -235,7 +236,11 @@ GDALDataset *CTable2Dataset::Open( GDALOpenInfo * poOpenInfo )
                            GDT_Float32, CPL_IS_LSB, RawRasterBand::OwnFP::NO );
     poBand->SetDescription( "Longitude Offset (radians)" );
     poDS->SetBand( 2, poBand );
-
+    if( CPLGetLastErrorType() != CE_None )
+    {
+        delete poDS;
+        return nullptr;
+    }
 /* -------------------------------------------------------------------- */
 /*      Initialize any PAM information.                                 */
 /* -------------------------------------------------------------------- */
diff --git a/gdal/gcore/rawdataset.cpp b/gdal/gcore/rawdataset.cpp
index 200c7c04b9..0b3db8c559 100644
--- a/gdal/gcore/rawdataset.cpp
+++ b/gdal/gcore/rawdataset.cpp
@@ -71,6 +71,8 @@ RawRasterBand::RawRasterBand( GDALDataset *poDSIn, int nBandIn,
     poDS = poDSIn;
     nBand = nBandIn;
     eDataType = eDataTypeIn;
+    nRasterXSize = poDSIn->GetRasterXSize();
+    nRasterYSize = poDSIn->GetRasterYSize();
 
     CPLDebug("GDALRaw",
              "RawRasterBand(%p,%d,%p,\n"
@@ -149,6 +151,60 @@ void RawRasterBand::Initialize()
 
     bDirty = FALSE;
 
+    vsi_l_offset nSmallestOffset = nImgOffset;
+    vsi_l_offset nLargestOffset = nImgOffset;
+    if( nLineOffset < 0 )
+    {
+        if( static_cast<vsi_l_offset>(-nLineOffset) * (nRasterYSize - 1) > nImgOffset )
+        {
+            CPLError(CE_Failure, CPLE_AppDefined,
+                    "Inconsistent nLineOffset, nRasterYSize and nImgOffset");
+            pLineBuffer = nullptr;
+            return;
+        }
+        nSmallestOffset -= static_cast<vsi_l_offset>(-nLineOffset) * (nRasterYSize - 1);
+    }
+    else
+    {
+        if( nImgOffset > std::numeric_limits<vsi_l_offset>::max() -
+                    static_cast<vsi_l_offset>(nLineOffset) * (nRasterYSize - 1) )
+        {
+            CPLError(CE_Failure, CPLE_AppDefined,
+                    "Inconsistent nLineOffset, nRasterYSize and nImgOffset");
+            pLineBuffer = nullptr;
+            return;
+        }
+        nLargestOffset += static_cast<vsi_l_offset>(nLineOffset) * (nRasterYSize - 1);
+    }
+    if( nPixelOffset < 0 )
+    {
+        if( static_cast<vsi_l_offset>(-nPixelOffset) * (nRasterXSize - 1) > nSmallestOffset )
+        {
+            CPLError(CE_Failure, CPLE_AppDefined,
+                    "Inconsistent nPixelOffset, nRasterXSize and nImgOffset");
+            pLineBuffer = nullptr;
+            return;
+        }
+    }
+    else
+    {
+        if( nLargestOffset > std::numeric_limits<vsi_l_offset>::max() -
+                    static_cast<vsi_l_offset>(nPixelOffset) * (nRasterXSize - 1) )
+        {
+            CPLError(CE_Failure, CPLE_AppDefined,
+                    "Inconsistent nPixelOffset, nRasterXSize and nImgOffset");
+            pLineBuffer = nullptr;
+            return;
+        }
+        nLargestOffset += static_cast<vsi_l_offset>(nPixelOffset) * (nRasterXSize - 1);
+    }
+    if( nLargestOffset > static_cast<vsi_l_offset>(GINTBIG_MAX) )
+    {
+        CPLError(CE_Failure, CPLE_AppDefined, "Too big largest offset");
+        pLineBuffer = nullptr;
+        return;
+    }
+
     // Allocate working scanline.
     nLoadedScanline = -1;
     const int nDTSize = GDALGetDataTypeSizeBytes(GetRasterDataType());
@@ -259,55 +315,21 @@ CPLErr RawRasterBand::AccessLine( int iLine )
 
     // Figure out where to start reading.
     // Write formulas such that unsigned int overflow doesn't occur
-    bool bBadOffset = false;
     vsi_l_offset nReadStart = nImgOffset;
     if( nLineOffset >= 0 )
     {
-        if( nImgOffset > std::numeric_limits<vsi_l_offset>::max() - static_cast<GUIntBig>(nLineOffset) * iLine )
-        {
-            bBadOffset = true;
-        }
-        else
-        {
-            nReadStart += static_cast<GUIntBig>(nLineOffset) * iLine;
-        }
+        nReadStart += static_cast<GUIntBig>(nLineOffset) * iLine;
     }
     else
     {
-        if( nImgOffset < static_cast<GUIntBig>(-static_cast<GIntBig>(nLineOffset)) * iLine )
-        {
-            bBadOffset = true;
-        }
-        else
-        {
-            nReadStart -= static_cast<GUIntBig>(-static_cast<GIntBig>(nLineOffset)) * iLine;
-        }
-    }
-    if( bBadOffset )
-    {
-        CPLError(CE_Failure, CPLE_FileIO,
-                    "Failed to seek to scanline %d.", iLine);
-        return CE_Failure;
+        nReadStart -= static_cast<GUIntBig>(-static_cast<GIntBig>(nLineOffset)) * iLine;
     }
     if( nPixelOffset < 0 )
     {
         const GUIntBig nPixelOffsetToSubtract =
             static_cast<GUIntBig>(-static_cast<GIntBig>(nPixelOffset)) * (nBlockXSize - 1);
-        if( nReadStart < nPixelOffsetToSubtract )
-        {
-            CPLError(CE_Failure, CPLE_FileIO,
-                        "Failed to seek to scanline %d.", iLine);
-            return CE_Failure;
-        }
         nReadStart -= nPixelOffsetToSubtract;
     }
-    if( nReadStart > static_cast<vsi_l_offset>(GINTBIG_MAX) )
-    {
-        CPLError(CE_Failure, CPLE_FileIO,
-                    "Failed to seek to scanline %d @ " CPL_FRMT_GUIB ".",
-                    iLine, nReadStart);
-        return CE_Failure;
-    }
 
     // Seek to the correct line.
     if( Seek(nReadStart, SEEK_SET) == -1 )
@@ -673,9 +695,12 @@ CPLErr RawRasterBand::IRasterIO( GDALRWFlag eRWFlag,
              && nPixelSpace == nBufDataSize
              && nLineSpace == nPixelSpace * nXSize )
         {
-            const vsi_l_offset nOffset =
-                nImgOffset + static_cast<vsi_l_offset>(nYOff) * nLineOffset +
-                nXOff;
+            vsi_l_offset nOffset = nImgOffset;
+            if( nLineOffset >= 0 )
+                nOffset += nYOff * nLineOffset;
+            else
+                nOffset -= nYOff * static_cast<vsi_l_offset>(-nLineOffset);
+
             const size_t nBytesToRead =
                 static_cast<size_t>(nXSize) * nYSize * nBandDataSize;
             if ( AccessBlock(nOffset, nBytesToRead, pData) != CE_None )
@@ -702,12 +727,18 @@ CPLErr RawRasterBand::IRasterIO( GDALRWFlag eRWFlag,
 
             for ( int iLine = 0; iLine < nBufYSize; iLine++ )
             {
-                const vsi_l_offset nOffset =
-                    nImgOffset +
-                    ((static_cast<vsi_l_offset>(nYOff) +
-                      static_cast<vsi_l_offset>(iLine * dfSrcYInc)) *
-                     nLineOffset) +
-                    nXOff * nPixelOffset;
+                const vsi_l_offset nLine =
+                    static_cast<vsi_l_offset>(nYOff) +
+                      static_cast<vsi_l_offset>(iLine * dfSrcYInc);
+                vsi_l_offset nOffset = nImgOffset;
+                if( nLineOffset >= 0 )
+                    nOffset += nLine * nLineOffset;
+                else
+                    nOffset -= nLine * static_cast<vsi_l_offset>(-nLineOffset);
+                if( nPixelOffset >= 0 )
+                    nOffset += nXOff * nPixelOffset;
+                else
+                    nOffset -= nXOff * static_cast<vsi_l_offset>(-nPixelOffset);
                 if ( AccessBlock(nOffset,
                                  nBytesToRW, pabyData) != CE_None )
                 {
@@ -786,9 +817,12 @@ CPLErr RawRasterBand::IRasterIO( GDALRWFlag eRWFlag,
             }
 
             // Seek to the correct block.
-            const vsi_l_offset nOffset =
-                nImgOffset + static_cast<vsi_l_offset>(nYOff) * nLineOffset +
-                nXOff;
+            vsi_l_offset nOffset = nImgOffset;
+            if( nLineOffset >= 0 )
+                nOffset += nYOff * nLineOffset;
+            else
+                nOffset -= nYOff * static_cast<vsi_l_offset>(-nLineOffset);
+
             if( Seek(nOffset, SEEK_SET) == -1 )
             {
                 CPLError(CE_Failure, CPLE_FileIO,
@@ -846,17 +880,23 @@ CPLErr RawRasterBand::IRasterIO( GDALRWFlag eRWFlag,
 
             for ( int iLine = 0; iLine < nBufYSize; iLine++ )
             {
-                const vsi_l_offset nBlockOff =
-                    nImgOffset +
-                    (static_cast<vsi_l_offset>(nYOff) +
-                     static_cast<vsi_l_offset>(iLine * dfSrcYInc)) *
-                        nLineOffset +
-                    static_cast<vsi_l_offset>(nXOff) * nPixelOffset;
+                const vsi_l_offset nLine =
+                    static_cast<vsi_l_offset>(nYOff) +
+                      static_cast<vsi_l_offset>(iLine * dfSrcYInc);
+                vsi_l_offset nOffset = nImgOffset;
+                if( nLineOffset >= 0 )
+                    nOffset += nLine * nLineOffset;
+                else
+                    nOffset -= nLine * static_cast<vsi_l_offset>(-nLineOffset);
+                if( nPixelOffset >= 0 )
+                    nOffset += nXOff * nPixelOffset;
+                else
+                    nOffset -= nXOff * static_cast<vsi_l_offset>(-nPixelOffset);
 
                 // If the data for this band is completely contiguous we don't
                 // have to worry about pre-reading from disk.
                 if( nPixelOffset > nBandDataSize )
-                    AccessBlock(nBlockOff, nBytesToRW, pabyData);
+                    AccessBlock(nOffset, nBytesToRW, pabyData);
 
                 // Copy data from user block buffer to disk buffer and
                 // subsample, if needed.
@@ -905,11 +945,11 @@ CPLErr RawRasterBand::IRasterIO( GDALRWFlag eRWFlag,
                 }
 
                 // Seek to the right line in block.
-                if( Seek(nBlockOff, SEEK_SET) == -1 )
+                if( Seek(nOffset, SEEK_SET) == -1 )
                 {
                     CPLError(CE_Failure, CPLE_FileIO,
                              "Failed to seek to " CPL_FRMT_GUIB " to read.",
-                             nBlockOff);
+                             nOffset);
                     CPLFree(pabyData);
                     return CE_Failure;
                 }
