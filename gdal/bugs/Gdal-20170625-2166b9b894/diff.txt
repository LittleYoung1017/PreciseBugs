diff --git a/gdal/frmts/grib/degrib18/g2clib-1.0.4/g2_unpack3.c b/gdal/frmts/grib/degrib18/g2clib-1.0.4/g2_unpack3.c
index 61168881b6..a4ba79cc95 100644
--- a/gdal/frmts/grib/degrib18/g2clib-1.0.4/g2_unpack3.c
+++ b/gdal/frmts/grib/degrib18/g2clib-1.0.4/g2_unpack3.c
@@ -163,11 +163,19 @@ g2int g2_unpack3(unsigned char *cgrib,g2int cgrib_length,g2int *iofst,g2int **ig
           for (i=*mapgridlen;i<newlen;i++) {
             nbits=abs(mapgrid->ext[j])*8;
             if ( mapgrid->ext[j] >= 0 ) {
-              gbit2(cgrib,cgrib_length,ligdstmpl+i,*iofst,nbits);
+              if(gbit2(cgrib,cgrib_length,ligdstmpl+i,*iofst,nbits) < 0)
+              {
+                  ierr = 6;
+                  break;
+              }
             }
             else {
-              gbit2(cgrib,cgrib_length,&isign,*iofst,1);
-              gbit2(cgrib,cgrib_length,ligdstmpl+i,*iofst+1,nbits-1);
+              if( gbit2(cgrib,cgrib_length,&isign,*iofst,1) < 0 ||
+                  gbit2(cgrib,cgrib_length,ligdstmpl+i,*iofst+1,nbits-1) < 0 )
+              {
+                  ierr = 6;
+                  break;
+              }
               if (isign == 1) ligdstmpl[i]=-1*ligdstmpl[i];
             }
             *iofst=*iofst+nbits;
@@ -178,6 +186,12 @@ g2int g2_unpack3(unsigned char *cgrib,g2int cgrib_length,g2int *iofst,g2int **ig
         }
         if( mapgrid->ext != 0 ) free(mapgrid->ext);
         if( mapgrid != 0 ) free(mapgrid);
+        if( ierr != 0 )
+        {
+            *idefnum=0;
+            *ideflist=0;   //NULL
+            return(ierr);
+        }
       }
       else {              // No Grid Definition Template
         *mapgridlen=0;
diff --git a/gdal/frmts/grib/degrib18/g2clib-1.0.4/gbits.c b/gdal/frmts/grib/degrib18/g2clib-1.0.4/gbits.c
index 5766a7a92b..359611c1e8 100644
--- a/gdal/frmts/grib/degrib18/g2clib-1.0.4/gbits.c
+++ b/gdal/frmts/grib/degrib18/g2clib-1.0.4/gbits.c
@@ -1,4 +1,5 @@
 #include "grib2.h"
+#include "limits.h"
 
 int gbit(unsigned char *in,g2int *iout,g2int iskip,g2int nbyte)
 {
@@ -36,6 +37,9 @@ int gbits(unsigned char *in,g2int in_length,g2int *iout,g2int iskip,g2int nbyte,
 
 //     nbit is the start position of the field in bits
       nbit = iskip;
+      if( n> 0 && (nbyte + nskip > INT_MAX / n ||
+                   iskip > INT_MAX - n*(nbyte + nskip)) )
+          return -1;
       for (i=0;i<n;i++) {
          bitcnt = nbyte;
          l_index=nbit/8;
