diff --git a/gdal/frmts/iso8211/ddffield.cpp b/gdal/frmts/iso8211/ddffield.cpp
index bf409f2eb2..ff2db5deef 100644
--- a/gdal/frmts/iso8211/ddffield.cpp
+++ b/gdal/frmts/iso8211/ddffield.cpp
@@ -169,7 +169,7 @@ const char *DDFField::GetSubfieldData( DDFSubfieldDefn *poSFDefn,
         {
             DDFSubfieldDefn * poThisSFDefn = poDefn->GetSubfield( iSF );
 
-            if( nDataSize < iOffset )
+            if( nDataSize <= iOffset )
             {
                 CPLError(CE_Failure, CPLE_AppDefined,
                          "Invalid data size for subfield %s of %s",
diff --git a/gdal/ogr/ogrsf_frmts/s57/s57reader.cpp b/gdal/ogr/ogrsf_frmts/s57/s57reader.cpp
index 468231bd27..dbb529f031 100644
--- a/gdal/ogr/ogrsf_frmts/s57/s57reader.cpp
+++ b/gdal/ogr/ogrsf_frmts/s57/s57reader.cpp
@@ -477,8 +477,13 @@ bool S57Reader::Ingest()
 
         if( EQUAL(pszName,"VRID") )
         {
-            const int nRCNM = poRecord->GetIntSubfield( "VRID",0, "RCNM",0 );
-            const int nRCID = poRecord->GetIntSubfield( "VRID",0, "RCID",0 );
+            int bSuccess = FALSE;
+            const int nRCNM = poRecord->GetIntSubfield( "VRID",0, "RCNM",0, &bSuccess);
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
+            const int nRCID = poRecord->GetIntSubfield( "VRID",0, "RCID",0, &bSuccess);
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
 
             switch( nRCNM )
             {
@@ -507,16 +512,22 @@ bool S57Reader::Ingest()
 
         else if( EQUAL(pszName,"FRID") )
         {
-            int         nRCID = poRecord->GetIntSubfield( "FRID",0, "RCID",0);
+            int bSuccess = FALSE;
+            int         nRCID = poRecord->GetIntSubfield( "FRID",0, "RCID",0, &bSuccess);
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
 
             oFE_Index.AddRecord( nRCID, poRecord->Clone() );
         }
 
         else if( EQUAL(pszName,"DSID") )
         {
+            int bSuccess = FALSE;
             CPLFree( pszDSNM );
             pszDSNM =
-                CPLStrdup(poRecord->GetStringSubfield( "DSID", 0, "DSNM", 0 ));
+                CPLStrdup(poRecord->GetStringSubfield( "DSID", 0, "DSNM", 0, &bSuccess ));
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
 
             if( nOptionFlags & S57M_RETURN_DSID )
             {
@@ -529,8 +540,13 @@ bool S57Reader::Ingest()
 
         else if( EQUAL(pszName,"DSPM") )
         {
-            nCOMF = std::max(1, poRecord->GetIntSubfield( "DSPM",0, "COMF",0));
-            nSOMF = std::max(1, poRecord->GetIntSubfield( "DSPM",0, "SOMF",0));
+            int bSuccess = FALSE;
+            nCOMF = std::max(1, poRecord->GetIntSubfield( "DSPM",0, "COMF",0, &bSuccess));
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
+            nSOMF = std::max(1, poRecord->GetIntSubfield( "DSPM",0, "SOMF",0, &bSuccess));
+            if( !bSuccess && CPLGetLastErrorType() == CE_Failure )
+                break;
 
             if( nOptionFlags & S57M_RETURN_DSID )
             {
