diff --git a/ogr/ogrsf_frmts/cad/libopencad/CMakeLists.txt b/ogr/ogrsf_frmts/cad/libopencad/CMakeLists.txt
index 0494ee43ba..ccdeb7ff75 100644
--- a/ogr/ogrsf_frmts/cad/libopencad/CMakeLists.txt
+++ b/ogr/ogrsf_frmts/cad/libopencad/CMakeLists.txt
@@ -15,6 +15,8 @@ add_library(
   cadtables.cpp
   opencad.cpp)
 target_compile_definitions(libopencad PRIVATE "OCAD_EXTERN=")
+# Enable below line to debug ossfuzz issues
+# target_compile_definitions(libopencad PRIVATE "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION")
 target_include_directories(
   libopencad PRIVATE $<TARGET_PROPERTY:cpl,SOURCE_DIR> $<TARGET_PROPERTY:cpl,BINARY_DIR>
                      $<TARGET_PROPERTY:ogr_CAD,SOURCE_DIR> ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/dwg)
diff --git a/ogr/ogrsf_frmts/cad/libopencad/cadlayer.cpp b/ogr/ogrsf_frmts/cad/libopencad/cadlayer.cpp
index 20b3086411..4cbbc77725 100644
--- a/ogr/ogrsf_frmts/cad/libopencad/cadlayer.cpp
+++ b/ogr/ogrsf_frmts/cad/libopencad/cadlayer.cpp
@@ -201,35 +201,35 @@ void CADLayer::addHandle( long handle, CADObject::ObjectType type, long cadinser
                     CADEntityObject* pEntity =
                             dynamic_cast<CADEntityObject *>( entity.get() );
 
-                    if( dCurrentEntHandle == dLastEntHandle )
+                    if( nullptr == pEntity )
                     {
-                        if( nullptr != pEntity )
-                        {
-                            addHandle( dCurrentEntHandle, pEntity->getType(), handle );
-                            Matrix mat;
-                            mat.translate( pInsert->vertInsertionPoint );
-                            mat.scale( pInsert->vertScales );
-                            mat.rotate( pInsert->dfRotation );
-                            transformations[dCurrentEntHandle] = mat;
-                            break;
-                        }
-                        else
-                        {
-                            // shouldn't happen on a valid file, but can happen
-                            // on broken ones
-                            break;
-                        }
+                        // shouldn't happen on a valid file, but can happen
+                        // on broken ones
+                        break;
                     }
 
-                    if( nullptr != pEntity )
+                    if( dCurrentEntHandle == handle && type == pEntity->getType() )
                     {
-                        addHandle( dCurrentEntHandle, pEntity->getType(), handle );
-                        Matrix mat;
-                        mat.translate( pInsert->vertInsertionPoint );
-                        mat.scale( pInsert->vertScales );
-                        mat.rotate( pInsert->dfRotation );
-                        transformations[dCurrentEntHandle] = mat;
+                        // If the above condition is true, infinite recursion
+                        // would occur in the following addHandle() call.
+                        // Shouldn't happen on a valid file, but can happen
+                        // on broken ones, such as in https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46887
+                        break;
+                    }
+
+                    addHandle( dCurrentEntHandle, pEntity->getType(), handle );
+                    Matrix mat;
+                    mat.translate( pInsert->vertInsertionPoint );
+                    mat.scale( pInsert->vertScales );
+                    mat.rotate( pInsert->dfRotation );
+                    transformations[dCurrentEntHandle] = mat;
 
+                    if( dCurrentEntHandle == dLastEntHandle )
+                    {
+                        break;
+                    }
+                    else
+                    {
                         if( pEntity->stCed.bNoLinks )
                         {
                             ++dCurrentEntHandle;
@@ -241,12 +241,6 @@ void CADLayer::addHandle( long handle, CADObject::ObjectType type, long cadinser
                                     pEntity->stCed.hObjectHandle );
                         }
                     }
-                    else
-                    {
-                        // shouldn't happen on a valid file, but can happen
-                        // on broken ones
-                        break;
-                    }
                 }
             }
         }
