commit 3ff77f48629cb5a8e1680e8315f6446105711ac5Author: John Stiles <johnstiles@google.com>Date:   Mon Sep 6 22:17:58 2021 -0400    Fix inliner bug discovered by fuzzer.        Intrinsic-call optimization can be triggered during inlining. In this    case, inlining turned `normalize(x)` into `normalize(constant-value)`.        DSL is used to implement optimizations for a handful of intrinsic calls,    including `normalize`, which internally relies on `length`.        The DSL expects that it can use the IRGenerator to handle function    calls. This was not working because we were finished with the initial    compilation pass, and the IRGenerator's symbol table is removed when    finish() was called.        We now temporarily give a symbol table back to the IRGenerator while    the inliner runs. We remove it again as soon as inlining is complete.        Change-Id: I6da98788d93749ffeb008c1f4c3f72b436e8ceeb    Bug: oss-fuzz:37994    Reviewed-on: https://skia-review.googlesource.com/c/skia/+/445956    Auto-Submit: John Stiles <johnstiles@google.com>    Reviewed-by: Brian Osman <brianosman@google.com>    Commit-Queue: John Stiles <johnstiles@google.com>
