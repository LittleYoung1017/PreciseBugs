diff --git a/Zend/tests/dynamic_prop_deprecation_002.phpt b/Zend/tests/dynamic_prop_deprecation_002.phpt
index 2ab7452fed..bd0d3aa5a7 100644
--- a/Zend/tests/dynamic_prop_deprecation_002.phpt
+++ b/Zend/tests/dynamic_prop_deprecation_002.phpt
@@ -7,7 +7,12 @@ set_error_handler(function($code, $msg){
     $GLOBALS['a']=null;
 });
 $a = new class{};
-[&$a->y];
+try {
+    [&$a->y];
+} catch (Throwable $ex) {
+	echo "Exception: " .$ex->getMessage() . "\n";
+}
 ?>
 --EXPECT--
-Err: Creation of dynamic property class@anonymous::$y is deprecated
\ No newline at end of file
+Err: Creation of dynamic property class@anonymous::$y is deprecated
+Exception: Cannot create dynamic property class@anonymous::$y
diff --git a/Zend/zend_object_handlers.c b/Zend/zend_object_handlers.c
index 721abe4699..746897f641 100644
--- a/Zend/zend_object_handlers.c
+++ b/Zend/zend_object_handlers.c
@@ -283,7 +283,13 @@ static ZEND_COLD zend_never_inline bool zend_deprecated_dynamic_property(
 	zend_error(E_DEPRECATED, "Creation of dynamic property %s::$%s is deprecated",
 		ZSTR_VAL(obj->ce->name), ZSTR_VAL(member));
 	if (UNEXPECTED(GC_DELREF(obj) == 0)) {
+		zend_class_entry *ce = obj->ce;
 		zend_objects_store_del(obj);
+		if (!EG(exception)) {
+			/* We cannot continue execution and have to throw an exception */
+			zend_throw_error(NULL, "Cannot create dynamic property %s::$%s",
+				ZSTR_VAL(ce->name), ZSTR_VAL(member));
+		}
 		return 0;
 	}
 	return 1;
