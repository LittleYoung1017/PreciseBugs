commit bd56e2ddd62e5706dfafdfe817d71e6d27a7fe49
Author: Chris Liddell <chris.liddell@artifex.com>
Date:   Fri Jun 4 16:45:56 2021 +0100

    Bug 703911: Erroneous freeing of stream string buffer
    
    Previously, s_close_filters() would close and free all the streams
    in a chain, including the lowest level source stream. If that stream
    was a string object based stream, s_close_filters() would also free
    that string buffer.
    
    On the other hand, it is far from obvious to calling code that
    the lowest level stream was memory buffer based, and equally difficult
    for the calling code to retrieve that buffer for itself.
    
    So, make two cases:
    sread_string(): This sets up the stream for cases where the caller
    retains ownership of the buffer - as in the case where the buffer
    comes from a Postscript string object (where ownership is retained
    by Postscript VM). Thus s_close_filters() will not free the buffer.
    
    and:
    
    sread_transient_string(): This sets up the stream, transferring
    ownership of the buffer to stream. In which case s_close_filters()
    will free the buffer.
    
    Comes from:
    https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34459&q=ghostscript&can=2
