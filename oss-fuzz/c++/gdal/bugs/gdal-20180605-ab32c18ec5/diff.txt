diff --git a/autotest/gdrivers/data/test_ers_recursive.tar b/autotest/gdrivers/data/test_ers_recursive.tar
new file mode 100644
index 0000000000..8c2be6dad0
Binary files /dev/null and b/autotest/gdrivers/data/test_ers_recursive.tar differ
diff --git a/autotest/gdrivers/ers.py b/autotest/gdrivers/ers.py
index 411fec3342..69d86d52b9 100755
--- a/autotest/gdrivers/ers.py
+++ b/autotest/gdrivers/ers.py
@@ -369,6 +369,15 @@ def ers_10():
 
     return 'success'
 
+###############################################################################
+# Test fix for https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=8744
+
+
+def ers_recursive_opening():
+    ds = gdal.Open('/vsitar/data/test_ers_recursive.tar/test.ers')
+    ds.GetFileList()
+    return 'success'
+
 ###############################################################################
 # Cleanup
 
@@ -389,6 +398,7 @@ gdaltest_list = [
     ers_8,
     ers_9,
     ers_10,
+    ers_recursive_opening,
     ers_cleanup
 ]
 
diff --git a/gdal/frmts/ers/ersdataset.cpp b/gdal/frmts/ers/ersdataset.cpp
index 95a9e062c8..442f7007e7 100644
--- a/gdal/frmts/ers/ersdataset.cpp
+++ b/gdal/frmts/ers/ersdataset.cpp
@@ -605,6 +605,9 @@ static double ERSDMS2Dec( const char *pszDMS )
 char **ERSDataset::GetFileList()
 
 {
+    static thread_local int nRecLevel = 0;
+    if( nRecLevel > 0 )
+        return nullptr;
 
     // Main data file, etc.
     char **papszFileList = GDALPamDataset::GetFileList();
@@ -616,7 +619,9 @@ char **ERSDataset::GetFileList()
     // If we have a dependent file, merge its list of files in.
     if( poDepFile )
     {
+        nRecLevel ++;
         char **papszDepFiles = poDepFile->GetFileList();
+        nRecLevel --;
         papszFileList =
             CSLInsertStrings( papszFileList, -1, papszDepFiles );
         CSLDestroy( papszDepFiles );
@@ -949,17 +954,23 @@ GDALDataset *ERSDataset::Open( GDALOpenInfo * poOpenInfo )
 /* -------------------------------------------------------------------- */
     if( EQUAL(poHeader->Find("DataSetType",""),"Translated") )
     {
-        poDS->poDepFile = (GDALDataset *)
-            GDALOpenShared( osDataFilePath, poOpenInfo->eAccess );
-
-        if( poDS->poDepFile != nullptr
-            && poDS->poDepFile->GetRasterCount() >= nBands )
+        static thread_local int nRecLevel = 0;
+        if( nRecLevel == 0 )
         {
-            for( int iBand = 0; iBand < nBands; iBand++ )
+            nRecLevel ++;
+            poDS->poDepFile = (GDALDataset *)
+                GDALOpen( osDataFilePath, poOpenInfo->eAccess );
+            nRecLevel --;
+
+            if( poDS->poDepFile != nullptr
+                && poDS->poDepFile->GetRasterCount() >= nBands )
             {
-                // Assume pixel interleaved.
-                poDS->SetBand( iBand+1,
-                               poDS->poDepFile->GetRasterBand( iBand+1 ) );
+                for( int iBand = 0; iBand < nBands; iBand++ )
+                {
+                    // Assume pixel interleaved.
+                    poDS->SetBand( iBand+1,
+                                poDS->poDepFile->GetRasterBand( iBand+1 ) );
+                }
             }
         }
     }
