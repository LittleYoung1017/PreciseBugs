diff --git a/autotest/gdrivers/zarr_driver.py b/autotest/gdrivers/zarr_driver.py
index 0d7e429cf1..63024456b3 100644
--- a/autotest/gdrivers/zarr_driver.py
+++ b/autotest/gdrivers/zarr_driver.py
@@ -318,6 +318,8 @@ def test_zarr_invalid_json_remove_member(member):
                                          {"dtype": "!"},
                                          {"dtype": "!b"},
                                          {"dtype": "<u16"},
+                                         {"dtype": "<u0"},
+                                         {"dtype": "<u10000"},
                                          {"fill_value": []},
                                          {"fill_value": "x"},
                                          {"fill_value": "NaN"},
diff --git a/gdal/frmts/zarr/zarr_array.cpp b/gdal/frmts/zarr/zarr_array.cpp
index d814a30f95..8e65dd7b50 100644
--- a/gdal/frmts/zarr/zarr_array.cpp
+++ b/gdal/frmts/zarr/zarr_array.cpp
@@ -2304,6 +2304,8 @@ static GDALExtendedDataType ParseDtype(bool isZarrV2,
                     nBytes = atoi(str.c_str() + 2);
                 }
             }
+            if( nBytes <= 0 || nBytes >= 1000 )
+                break;
 
             if( chEndianness == '<' )
                 elt.needByteSwapping = (CPL_IS_LSB == 0);
@@ -2450,7 +2452,8 @@ static GDALExtendedDataType ParseDtype(bool isZarrV2,
     }
     while(false);
     CPLError(CE_Failure, CPLE_AppDefined,
-             "Invalid or unsupported format for dtype");
+             "Invalid or unsupported format for dtype: %s",
+             obj.ToString().c_str());
     return GDALExtendedDataType::Create(GDT_Unknown);
 }
 
