diff --git a/autotest/ogr/data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb b/autotest/ogr/data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb
new file mode 100644
index 0000000000..7c1e02291d
Binary files /dev/null and b/autotest/ogr/data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb differ
diff --git a/autotest/ogr/ogr_flatgeobuf.py b/autotest/ogr/ogr_flatgeobuf.py
index c54a58eb56..7d4155b21b 100644
--- a/autotest/ogr/ogr_flatgeobuf.py
+++ b/autotest/ogr/ogr_flatgeobuf.py
@@ -800,7 +800,8 @@ def test_ogr_flatgeobuf_ossfuzz_bug_29462():
 
 
 @pytest.mark.parametrize("filename", ['data/flatgeobuf/invalid_polyhedralsurface_of_curvepolygon.fgb',
-                                      'data/flatgeobuf/invalid_compoundcurve_non_contiguous_curves.fgb'])
+                                      'data/flatgeobuf/invalid_compoundcurve_non_contiguous_curves.fgb',
+                                      'data/flatgeobuf/invalid_curvepolygon_linestring_three_points.fgb'])
 def test_ogr_flatgeobuf_read_invalid_geometries(filename):
     with gdaltest.error_handler():
         ds = gdal.OpenEx(filename)
diff --git a/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp b/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
index 9609848e3a..6ede8a5cba 100644
--- a/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
+++ b/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
@@ -315,7 +315,12 @@ OGRCurvePolygon *GeometryReader::readCurvePolygon()
         auto g = std::unique_ptr<OGRGeometry>(reader.read());
         if (dynamic_cast<OGRCurve *>(g.get()) == nullptr)
             return nullptr;
-        cp->addRingDirectly(g.release()->toCurve());
+        auto poCurve = g.release()->toCurve();
+        if( cp->addRingDirectly(poCurve) != OGRERR_NONE )
+        {
+            delete poCurve;
+            return nullptr;
+        }
     }
     return cp.release();
 }
