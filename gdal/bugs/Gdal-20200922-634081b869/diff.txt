diff --git a/gdal/frmts/pcidsk/sdk/core/pcidsk_pubutils.cpp b/gdal/frmts/pcidsk/sdk/core/pcidsk_pubutils.cpp
index 6624563709..c4f1c7a973 100644
--- a/gdal/frmts/pcidsk/sdk/core/pcidsk_pubutils.cpp
+++ b/gdal/frmts/pcidsk/sdk/core/pcidsk_pubutils.cpp
@@ -192,7 +192,7 @@ bool PCIDSK::IsDataTypeComplex(eChanType type)
  * @return the string for the segment type.
  */
 
-std::string PCIDSK::SegmentTypeName( eSegType type )
+std::string PCIDSK::SegmentTypeName( int /* eSegType actually */ type )
 
 {
     switch( type )
diff --git a/gdal/frmts/pcidsk/sdk/pcidsk_types.h b/gdal/frmts/pcidsk/sdk/pcidsk_types.h
index 1f7d26303b..a4aa509d8d 100644
--- a/gdal/frmts/pcidsk/sdk/pcidsk_types.h
+++ b/gdal/frmts/pcidsk/sdk/pcidsk_types.h
@@ -70,7 +70,7 @@ namespace PCIDSK
     // Helper functions for working with segments and data types
     int PCIDSK_DLL DataTypeSize( eChanType );
     std::string PCIDSK_DLL DataTypeName( eChanType );
-    std::string PCIDSK_DLL SegmentTypeName( eSegType );
+    std::string PCIDSK_DLL SegmentTypeName( int /* eSegType actually */ );
     eChanType PCIDSK_DLL GetDataTypeFromName(std::string const& type_name);
     bool PCIDSK_DLL IsDataTypeComplex(eChanType type);
 
diff --git a/gdal/frmts/pcidsk/sdk/segment/cpcidsksegment.cpp b/gdal/frmts/pcidsk/sdk/segment/cpcidsksegment.cpp
index d0cb38d350..de56bb1f56 100644
--- a/gdal/frmts/pcidsk/sdk/segment/cpcidsksegment.cpp
+++ b/gdal/frmts/pcidsk/sdk/segment/cpcidsksegment.cpp
@@ -106,7 +106,9 @@ void CPCIDSKSegment::LoadSegmentPointer( const char *segment_pointer )
     PCIDSKBuffer segptr( segment_pointer, 32 );
 
     segment_flag = segptr.buffer[0];
-    segment_type = (eSegType) (atoi(segptr.Get(1,3)));
+    const int segment_type_int = atoi(segptr.Get(1,3));
+    segment_type = SegmentTypeName(segment_type_int) == "UNKNOWN" ?
+        SEG_UNKNOWN : static_cast<eSegType>(segment_type_int);
     data_offset = atouint64(segptr.Get(12,11));
     if( data_offset == 0 )
         data_offset = 0; // throw exception maybe ?
