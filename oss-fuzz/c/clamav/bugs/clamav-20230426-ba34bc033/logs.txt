commit ba34bc033c32a22fefe18985e186777390c2dc1cAuthor: Micah Snyder <micasnyd@cisco.com>Date:   Wed Apr 19 16:10:16 2023 -0700    Coverity and OSS-Fuzz fixes in PDF module        Prevent double-extraction of same PDF object        Two indirect references to the same PDF object may cause it to try to    extract that object twice. This also may cause it to set the extraction    path twice, which leaks the memory from the first time.        This commit records when object extraction is attempted and prevents    doing it again. It also adds a couple extra checks to make sure that the    object path string is not leaked.        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=58072        Also:        - Coverity-317959: Fix complaint about logically dead code. No need to      check if UE variable is NULL because we would've returned earlier if it      was NULL.        - A bunch of medium-severity coverity issues for PDF parser regarding      checking if a `pdf` pointer is NULL after dereferencing it.        - Coverity-192930: bytes_remaining was being checked twice in a row      without chainging it. Turns out we should have been changing it after      moving the `index` pointer.        - Coverity-192920: Switch to use CLI_REALLOC instead of cli_realloc2.      This is because cli_realloc2 would free `pdf->objs` on failure and we      still need it.
