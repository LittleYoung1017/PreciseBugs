diff --git a/gdal/frmts/grib/degrib18/degrib/degrib1.cpp b/gdal/frmts/grib/degrib18/degrib/degrib1.cpp
index 9546c25316..e9cc4cdb8b 100644
--- a/gdal/frmts/grib/degrib18/degrib/degrib1.cpp
+++ b/gdal/frmts/grib/degrib18/degrib/degrib1.cpp
@@ -1817,6 +1817,22 @@ int ReadGrib1Record (DataSource &fp, sChar f_unit, double **Grib_Data,
 
    /* Allocate memory for the grid. */
    if (meta->gds.numPts > *grib_DataLen) {
+      if( meta->gds.numPts > 100 * 1024 * 1024 )
+      {
+          long curPos = fp.DataSourceFtell();
+          fp.DataSourceFseek(0, SEEK_END);
+          long fileSize = fp.DataSourceFtell();
+          fp.DataSourceFseek(curPos, SEEK_SET);
+          // allow a compression ratio of 1:1000
+          if( meta->gds.numPts / 1000 > (uInt4)fileSize )
+          {
+            errSprintf ("ERROR: File too short\n");
+            *grib_DataLen = 0;
+            *Grib_Data = NULL;
+            return -2;
+          }
+      }
+
       *grib_DataLen = meta->gds.numPts;
       *Grib_Data = (double *) realloc ((void *) (*Grib_Data),
                                        (*grib_DataLen) * sizeof (double));
diff --git a/gdal/frmts/grib/gribdataset.cpp b/gdal/frmts/grib/gribdataset.cpp
index 46aa0ff92c..e385f1685c 100644
--- a/gdal/frmts/grib/gribdataset.cpp
+++ b/gdal/frmts/grib/gribdataset.cpp
@@ -323,7 +323,7 @@ CPLErr GRIBRasterBand::IReadBlock( int /* nBlockXOff */,
     {
         // Simple 1:1 case.
         memcpy(pImage,
-               m_Grib_Data + nRasterXSize * (nRasterYSize - nBlockYOff - 1),
+               m_Grib_Data + static_cast<size_t>(nRasterXSize) * (nRasterYSize - nBlockYOff - 1),
                nRasterXSize * sizeof(double));
 
         return CE_None;
@@ -337,7 +337,7 @@ CPLErr GRIBRasterBand::IReadBlock( int /* nBlockXOff */,
     const int nCopyWords = std::min(nRasterXSize, nGribDataXSize);
 
     memcpy(pImage,
-           m_Grib_Data + nGribDataXSize * (nGribDataYSize - nBlockYOff - 1),
+           m_Grib_Data + static_cast<size_t>(nGribDataXSize) * (nGribDataYSize - nBlockYOff - 1),
            nCopyWords * sizeof(double));
 
     return CE_None;
