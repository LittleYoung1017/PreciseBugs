diff --cc autotest/ogr/data/flatgeobuf/invalid_compoundcurve_non_contiguous_curves.fgb
index 007d2bc43e,007d2bc43e..0000000000
deleted file mode 100644,100644
Binary files differ
diff --cc autotest/ogr/data/flatgeobuf/invalid_polyhedralsurface_of_curvepolygon.fgb
index bd6e1d5e33,bd6e1d5e33..0000000000
deleted file mode 100644,100644
Binary files differ
diff --cc autotest/ogr/ogr_flatgeobuf.py
index c54a58eb56,c54a58eb56..ac416134f0
--- a/autotest/ogr/ogr_flatgeobuf.py
+++ b/autotest/ogr/ogr_flatgeobuf.py
@@@ -795,19 -795,19 +795,6 @@@ def test_ogr_flatgeobuf_ossfuzz_bug_294
      assert not gdal.VSIStatL('/vsimem/test.fgb')
  
  
--###############################################################################
--# Check that we don't crash or leak
--
--
--@pytest.mark.parametrize("filename", ['data/flatgeobuf/invalid_polyhedralsurface_of_curvepolygon.fgb',
--                                      'data/flatgeobuf/invalid_compoundcurve_non_contiguous_curves.fgb'])
--def test_ogr_flatgeobuf_read_invalid_geometries(filename):
--    with gdaltest.error_handler():
--        ds = gdal.OpenEx(filename)
--        lyr = ds.GetLayer(0)
--        for f in lyr:
--            pass
--
  ###############################################################################
  
  
diff --cc gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
index 9609848e3a,9609848e3a..096b310ae4
--- a/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
+++ b/gdal/ogr/ogrsf_frmts/flatgeobuf/geometryreader.cpp
@@@ -294,12 -294,12 +294,7 @@@ OGRCompoundCurve *GeometryReader::readC
          auto g = std::unique_ptr<OGRGeometry>(reader.read());
          if (dynamic_cast<OGRCurve *>(g.get()) == nullptr)
              return nullptr;
--        auto poCurve = g.release()->toCurve();
--        if( cc->addCurveDirectly(poCurve) != OGRERR_NONE )
--        {
--            delete poCurve;
--            return nullptr;
--        }
++        cc->addCurveDirectly(g.release()->toCurve());
      }
      return cc.release();
  }
@@@ -361,14 -361,14 +356,9 @@@ OGRPolyhedralSurface *GeometryReader::r
      for (uoffset_t i = 0; i < parts->size(); i++) {
          GeometryReader reader { parts->Get(i), m_hasZ, m_hasM };
          auto g = std::unique_ptr<OGRGeometry>(reader.read());
--        if (g == nullptr )
--            return nullptr;
--        auto poSubGeom = g.release();
--        if( ps->addGeometryDirectly(poSubGeom) != OGRERR_NONE )
--        {
--            delete poSubGeom;
++        if (dynamic_cast<OGRSurface *>(g.get()) == nullptr)
              return nullptr;
--        }
++        ps->addGeometryDirectly(g.release());
      }
      return ps.release();
  }
