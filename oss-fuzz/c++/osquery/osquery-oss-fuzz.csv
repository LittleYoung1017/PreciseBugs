osquery-20200326-ef2763afb	ef2763afb	8ca769ce0	Thu Mar 26 22:17:13 2020 -0400	Hotfix a use-after-free accessing rows data (#6328)	commit ef2763afbc53c164186fe9229b926ead23f2a406Author: Stefano Bonicatti <stefano.bonicatti@gmail.com>Date:   Fri Mar 27 03:17:13 2020 +0100    Hotfix a use-after-free accessing rows data (#6328)        When a query triggers multiple xFilter calls    and there's an operation that has to work on the sum of rows    resulting from all those calls, we trigger a use-after-free    when such operation tries to access the rows data.        This happens because each xFilter call we clear the rows    resulting from the previous xFilter call, and because    when returning the values of a text column we don't copy it,    but return a pointer to it.        A contrived example of a query with the issue is:    SELECT path=count(*) FROM file WHERE path = '/' OR path = '1'        This changes the last sqlite3_result_text parameter    from SQLITE_STATIC to SQLITE_TRANSIENT.        Addresses https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20833	20833	osquery/sql/dynamic_table_row.cpp	107
osquery-20200326-e70de5b8a	e70de5b8a	8b8462d02	Thu Mar 26 20:25:42 2020 -0400	Fix stack overflow when parsing deeply nested configs (#6325)	commit e70de5b8a778abab132d25c0d81245cc32550d85Author: Stefano Bonicatti <stefano.bonicatti@gmail.com>Date:   Fri Mar 27 01:25:42 2020 +0100    Fix stack overflow when parsing deeply nested configs (#6325)        Parsing a configuration file as a JSON document    which contains deeply nested elements can lead to a stack overflow    when using the recursive parser of RapidJSON.    Since the configuration isn't changed or parsed frequently,    use the slower iterative parser instead.        Copying the configuration JSON document    that contains deeply nested elements, using the CopyFrom API,    can lead to a stack overflow, due to the recursive nature    of the RapidJSON GenericValue construction.    Detect the depth/nesting level of a config document    and limit it to 32 levels.        Using an iterative parser, while it avoids stack overflows,    can cause memory exhaustion if the config size is too big.    Limit the maximum config size, stripped from its comments, to 1MiB.        Addresses https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20779	20779	osquery/config/config.cpp;osquery/config/config.h;osquery/config/tests/config_tests.cpp;osquery/utils/json/json.cpp;osquery/utils/json/json.h	10;39;609;631;718;243;6;20;29;119;185;375;666;286;368;49;346
osquery-20200320-2e84e8cdf	2e84e8cdf	0409360ac	Fri Mar 20 08:39:08 2020 -0400	Fix parsing an invalid decorators config (#6317)	commit 2e84e8cdf145b3ebe869ef6754824657bb421d38Author: Stefano Bonicatti <stefano.bonicatti@gmail.com>Date:   Fri Mar 20 13:39:08 2020 +0100    Fix parsing an invalid decorators config (#6317)        The "decorators" configuration value must be a JSON object,    otherwise we try to search through its inexistent members    and dereference a null pointer.        Added also a regression test.        Addresses https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19274	19274	plugins/config/parsers/decorators.cpp;plugins/config/parsers/tests/decorators_tests.cpp	6;99;117;310;60;74;85;123;133;141
osquery-20200205-9f30fd3f5	9f30fd3f5	ccffaf7d8	Wed Feb 5 15:09:09 2020 -0500	Fix heap buffer overflow in callDoubleFunc and powerFunc (#6225)	commit 9f30fd3f57c4d154367ed925cea3c8064a755359Author: Stefano Bonicatti <stefano.bonicatti@gmail.com>Date:   Wed Feb 5 21:09:09 2020 +0100    Fix heap buffer overflow in callDoubleFunc and powerFunc (#6225)        sqlite3_result_error() third parameter is the length    of the string of the second parameter, not the error code.        We set that to -1, which means that the length of the string    will be taken using strlen().        Addresses https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=18694	18694	osquery/sql/sqlite_math.cpp	67;139
