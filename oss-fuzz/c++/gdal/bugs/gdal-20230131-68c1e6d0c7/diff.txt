diff --git a/autotest/ogr/data/gml/only_boundedby_invalid.gml b/autotest/ogr/data/gml/only_boundedby_invalid.gml
new file mode 100644
index 0000000000..9f8339ad56
--- /dev/null
+++ b/autotest/ogr/data/gml/only_boundedby_invalid.gml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
+<foo:FeatureCollection xmlns:foo="http://example.com" xmlns:gml="http://www.opengis.net/gml">
+  <foo:myMember>
+    <foo:Foo fid="fid1">
+      <foo:boundedBy>
+        <gml:coordinates>0,1 2,3</gml:coordinates>
+        <something_unexpected/>
+      </foo:boundedBy>
+    </foo:Foo>
+  </foo:myMember>
+</foo:FeatureCollection>
diff --git a/autotest/ogr/ogr_gml_read.py b/autotest/ogr/ogr_gml_read.py
index e19c6502d1..beb2479d87 100755
--- a/autotest/ogr/ogr_gml_read.py
+++ b/autotest/ogr/ogr_gml_read.py
@@ -4648,3 +4648,19 @@ def test_ogr_gml_read_boundedby_only_gml_null_only():
     assert os.path.exists("data/gml/only_boundedby_only_null.gfs")
     check()
     gdal.Unlink("data/gml/only_boundedby_only_null.gfs")
+
+
+###############################################################################
+# Test reading a file with only a boundedBy property in features that is
+# invalid
+
+
+def test_ogr_gml_read_boundedby_invalid():
+
+    if not gdaltest.have_gml_reader:
+        pytest.skip()
+
+    with gdaltest.error_handler():
+        ds = gdal.OpenEx("data/gml/only_boundedby_invalid.gml")
+        lyr = ds.GetLayer(0)
+        assert lyr.GetFeatureCount() == 0
diff --git a/ogr/ogrsf_frmts/gml/gmlhandler.cpp b/ogr/ogrsf_frmts/gml/gmlhandler.cpp
index af9dea299e..25f8f16766 100644
--- a/ogr/ogrsf_frmts/gml/gmlhandler.cpp
+++ b/ogr/ogrsf_frmts/gml/gmlhandler.cpp
@@ -749,6 +749,13 @@ OGRErr GMLHandler::startElementBoundedBy(const char *pszName, int /*nLenName*/,
 OGRErr GMLHandler::startElementGeometry(const char *pszName, int nLenName,
                                         void *attr)
 {
+    if (stateStack[nStackDepth] == STATE_BOUNDED_BY_IN_FEATURE &&
+        apsXMLNode.empty())
+    {
+        CPLError(CE_Failure, CPLE_AppDefined, "Invalid <boundedBy> construct");
+        return OGRERR_FAILURE;
+    }
+
     /* Create new XML Element */
     CPLXMLNode *psCurNode = (CPLXMLNode *)CPLCalloc(sizeof(CPLXMLNode), 1);
     psCurNode->eType = CXT_Element;
