compress-20230322-69a8ecc	69a8ecc	7633d62	Wed Mar 22 14:45:21 2023 +0100	zstd: Fix amd64 not always detecting corrupt data (#785)	commit 69a8ecc12ba38c39dc31da8b5d232eabb484fadaAuthor: Klaus Post <klauspost@gmail.com>Date:   Wed Mar 22 06:45:21 2023 -0700    zstd: Fix amd64 not always detecting corrupt data (#785)        * zstd: Fix amd64 not always detecting corrupt data        Fix undetected corrupt data in amd64 assembly.        In rare cases overreads would not get returned as errors, if a multiple of 256 bits was overread.    This would make the "bitsread" equal the expected 64.        Whenever all bytes has been read from memory we start checking if more than 64 bits has been read on every fill. This ensures that an overflow can never occur.        No invalid memory was accessed, this is merely a question if errors are reported.        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=57290	57290	internal/fuzz/helpers.go;zstd/_generate/gen.go;zstd/fuzz_test.go;zstd/seqdec.go;zstd/seqdec_amd64.go;zstd/seqdec_amd64.s	62;34;247;261;502;529;545;565;66;92;236;5;134;202;247;277;291;38;49;105;116;320;356;367;613;649;660;700;711;889;925;936;1140;1804;1815;1871;1882;2291;2356;2367;2407;2418;2801;2866;2877;2933;2944;3455;3520;3531;3571;3582;4067
compress-20230308-3588812	3588812	0f734cf	Wed Mar 8 13:16:33 2023 +0100	zstd: Fix ineffective block size check (#771)	commit 3588812afd4945050f7e65c79f8541366c1c8ec7Author: Klaus Post <klauspost@gmail.com>Date:   Wed Mar 8 04:16:33 2023 -0800    zstd: Fix ineffective block size check (#771)        When falling back to Go decoding block sizes were not checked correctly.        Fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=56755	56755	zstd/fuzz_test.go;zstd/seqdec.go;zstd/seqdec_amd64.go	62;86;314;427;148
