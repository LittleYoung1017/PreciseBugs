47b6696dcdf	6f073f258f1	Fri Jul 7 00:17:31 2023 +0000	librpc:ndr: Fix overflow in ndr_push_expand	commit 47b6696dcdfe7c5cb6e58ac6586ba45d39c39cc6Author: Joseph Sutton <josephsutton@catalyst.net.nz>Date:   Thu Jul 6 10:50:05 2023 +1200    librpc:ndr: Fix overflow in ndr_push_expand        If ‘size’ was equal to UINT32_MAX, the expression ‘size+1’ could    overflow to zero.        This could result in inadequate memory being allocated, which could    cause ndr_pull_compression_xpress_huff_raw_chunk() to overflow memory    with zero bytes.        Credit to OSS-Fuzz.        REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=57728        BUG: https://bugzilla.samba.org/show_bug.cgi?id=15415        Signed-off-by: Joseph Sutton <josephsutton@catalyst.net.nz>    Reviewed-by: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>
ff2de50aa4b	7dab9edca86	Fri May 5 02:54:30 2023 +0000	librpc: Fix talloc hierarchy for ndr_compression_state	commit ff2de50aa4bf086880ab8cd1c2aee7e998c2c22aAuthor: Andrew Bartlett <abartlet@samba.org>Date:   Mon May 1 14:13:15 2023 +1200    librpc: Fix talloc hierarchy for ndr_compression_state        The complexity of generic_mszip_free() is not needed, nor is a talloc    destructor required if the memory is correctly created in a tree.        Credit to OSS-Fuzz for showing the use-after-free        REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=57608        BUG: https://bugzilla.samba.org/show_bug.cgi?id=15349        Signed-off-by: Andrew Bartlett <abartlet@samba.org>    Reviewed-by: Joseph Sutton <josephsutton@catalyst.net.nz>
233a0cd6de9	72f16b63544	Wed Aug 17 10:08:35 2022 +0000	lib:fuzzing: Fix shellcheck errors in build_samba.sh	commit 233a0cd6de9d0d0aac07f1f8d753780e53dbe2b0Author: Andreas Schneider <asn@samba.org>Date:   Tue Feb 22 18:01:31 2022 +0100    lib:fuzzing: Fix shellcheck errors in build_samba.sh        lib/fuzzing/oss-fuzz/build_samba.sh:24:27: error: Double quote array    expansions to avoid re-splitting elements. [SC2068]        Signed-off-by: Andreas Schneider <asn@samba.org>    Reviewed-by: Pavel Filipenský <pfilipensky@samba.org>
7880537674c	a20d41accdc	Tue Apr 12 18:54:50 2022 +0000	s3:winbind: Fix uninitialized validation_level variable	commit 7880537674ccfec42fb37a682dadc1a0f848947eAuthor: Samuel Cabrero <scabrero@samba.org>Date:   Tue Apr 12 11:48:28 2022 +0200    s3:winbind: Fix uninitialized validation_level variable        Found by oss-fuzz:        ../../source3/winbindd/winbindd_pam.c:2879:7: error: variable 'validation_level' is used uninitialized whenever 'if' condition is true [-Werror,-Wsometimes-uninitialized]                     if (!(state->request->flags & WBFLAG_BIG_NTLMV2_BLOB) ||                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:3003:6: note: uninitialized use occurs here                 validation_level,                 ^~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:2879:3: note: remove the 'if' if its condition is always false                     if (!(state->request->flags & WBFLAG_BIG_NTLMV2_BLOB) ||                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:2879:7: error: variable 'validation_level' is used uninitialized whenever '||' condition is true [-Werror,-Wsometimes-uninitialized]                     if (!(state->request->flags & WBFLAG_BIG_NTLMV2_BLOB) ||                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:3003:6: note: uninitialized use occurs here                 validation_level,                 ^~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:2879:7: note: remove the '||' if its condition is always false                     if (!(state->request->flags & WBFLAG_BIG_NTLMV2_BLOB) ||                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ../../source3/winbindd/winbindd_pam.c:2853:27: note: initialize the variable 'validation_level' to silence this warning             uint16_t validation_level;                                      ^                                       = 0     1 warning and 2 errors generated.        BUG: https://bugzilla.samba.org/show_bug.cgi?id=15044        Signed-off-by: Samuel Cabrero <scabrero@samba.org>    Reviewed-by: Jeremy Allison <jra@samba.org>        Autobuild-User(master): Jeremy Allison <jra@samba.org>    Autobuild-Date(master): Tue Apr 12 18:54:50 UTC 2022 on sn-devel-184
f94b1d3b31f	541f9ee5ab6	Thu Sep 9 00:53:54 2021 +0000	fuzzing/oss-fuzz: fix samba build script for Ubuntu 20.04	commit f94b1d3b31f2fb5bdbfce7b5f79d80f098b91975Author: Uri Simchoni <uri@samba.org>Date:   Sat Sep 4 10:30:56 2021 +0300    fuzzing/oss-fuzz: fix samba build script for Ubuntu 20.04        Add a linker flag to generate fuzzer binaries with an RPATH    header instead of RUNPATH.        Signed-off-by: Uri Simchoni <uri@samba.org>    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
541f9ee5ab6	e608dcd2d67	Thu Sep 9 00:53:54 2021 +0000	fuzzing/oss-fuzz: fix RPATH comments for post-Ubuntu-16.04 era	commit 541f9ee5ab66b41a2a8d9c54183b095ad99f3769Author: Uri Simchoni <uri@samba.org>Date:   Sat Sep 4 10:11:58 2021 +0300    fuzzing/oss-fuzz: fix RPATH comments for post-Ubuntu-16.04 era        Remove what appears to be a copy+paste error in one place, and    explain that RPATH/RUNPATH is set by the linker, not by chrpath    utility.        Signed-off-by: Uri Simchoni <uri@samba.org>    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
2fe8d3eeac4	18e08c70900	Thu Sep 9 00:53:54 2021 +0000	fuzzing/oss-fuzz: fix image build recipe for Ubuntu 20.04	commit 2fe8d3eeac4cddedfeac936ce785c2c6f12d86efAuthor: Uri Simchoni <uri@samba.org>Date:   Fri Sep 3 18:46:17 2021 +0000    fuzzing/oss-fuzz: fix image build recipe for Ubuntu 20.04        Update the build_image.sh script to install Ubuntu 20.04 packages    instead of Ubuntu 16.04 on the oss-fuzz container - this will    allow the oss-fuzz container to be based on Ubuntu 20.04.        REF: https://github.com/google/oss-fuzz/issues/6301#issuecomment-911705365        Signed-off-by: Uri Simchoni <uri@samba.org>    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
8cce23acb9f	cf1baa8be90	Thu Jul 8 09:30:40 2021 +0000	witness.idl: fix length calculation for witness_IPaddrInfoList	commit 8cce23acb9f9bdde8bff3c3a7ffa83361e3a64a6Author: Stefan Metzmacher <metze@samba.org>Date:   Fri Jul 31 11:27:25 2020 +0200    witness.idl: fix length calculation for witness_IPaddrInfoList        If r->num is 0, we should not dereference r->addr.        Using ndr_size_witness_IPaddrInfoList() also make this much simpler    and avoids the magic 12.        Credit Oss-Fuzz        REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=22175    REF: https://oss-fuzz.com/testcase-detail/5686294157197312        BUG: https://bugzilla.samba.org/show_bug.cgi?id=14452        Signed-off-by: Stefan Metzmacher <metze@samba.org>    Reviewed-by: Samuel Cabrero <scabrero@samba.org>
d031391bed0	a01dfc29c1f	Wed Oct 21 23:07:37 2020 +0000	fuzzing: Fix the oss-fuzz coverage build	commit d031391bed0d3c23b602816d968417267535c746Author: Andrew Bartlett <abartlet@samba.org>Date:   Thu Oct 22 07:34:35 2020 +1300    fuzzing: Fix the oss-fuzz coverage build        It was long thought that the issue here was that no seed corpus was    provided, but actually the issue is that to obtain coverage output    just as we already know for gcc gcov, you must provide fuzzing flags    to both the compile and link phase.        Thankfully clang as a linker does not mind the strange non-linker options    from $COVERAGE_FLAGS.        REF: https://stackoverflow.com/questions/56112019/clang-does-not-generate-profraw-file-when-linking-manually    REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=19495#c48        Reviewed-by: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>    Signed-off-by: Andrew Bartlett <abartlet@samba.org>        Autobuild-User(master): Andrew Bartlett <abartlet@samba.org>    Autobuild-Date(master): Wed Oct 21 23:07:37 UTC 2020 on sn-devel-184
bf16cd72b28	889c461c009	Fri Aug 7 03:23:44 2020 +0000	ndr: fix ndr_pull_string_array() off by one alloc	commit bf16cd72b285662bcb4367cd2bdd6eac7655254fAuthor: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>Date:   Wed Aug 5 11:04:11 2020 +1200    ndr: fix ndr_pull_string_array() off by one alloc        The correct line should have been               talloc_realloc(ndr->current_mem_ctx, a, const char *, count + 2);        because if the loop does not increment count on exit (it exits via    break), so count is left pointing at the thing that just got put in.    i.e., if there was one item it is at a[0], count is 0, but we also    need the trailing NULL byte at a[1] and the length is 2. Thus + 2, not    + 1.        This will not affect ordinary (that is, non-malicious) traffic,    because talloc_realloc will not actually realloc unless it is saving a    kilobyte. Since the allocation grows slowly with the exponent ~1.25,    the actual reallocs will start happening at some point between 512 and    1024 items.        In the example we have, there were 666 pointers, and space for 824 was    allocated.        Rather than doing the +2 realloc, it is simpler to leave it off    altogether; in the common case (<512 items) it is a no-op anyway, and    in the best possible case it reduces the temporary array by 20%.        Credit to OSS-Fuzz.        REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24646        Signed-off-by: Douglas Bagnall <douglas.bagnall@catalyst.net.nz>    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
490bbb96b9b	14182350f83	Fri Feb 7 08:53:40 2020 +0000	libprc ndr tests: Fix ndrdump test ntlmssp_CHALLENGE_MESSAGE	commit 490bbb96b9bd082a190a590a6137f0e24f80a6e4Author: Gary Lockyer <gary@catalyst.net.nz>Date:   Fri Feb 7 10:50:07 2020 +1300    libprc ndr tests: Fix ndrdump test ntlmssp_CHALLENGE_MESSAGE        Fix the expected data in fuzzed_ntlmssp-CHALLENGE_MESSAGE.txt, as it    contained source code line numbers.        Andrew this test needs to be altered to us a regular expression and    remove the dependency on source line numbers.        Credit to OSS-Fuzz        REF: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=20083    BUG: https://bugzilla.samba.org/show_bug.cgi?id=14236        Signed-off-by: Gary Lockyer <gary@catalyst.net.nz>    Reviewed-by: Andrew Bartlett <abartlet@samba.org>
545711ffeaa	e6fc8e79aee	Wed Dec 11 04:21:28 2019 +0000	lib/fuzzing: Fix argument order to ldb_filter_from_tree in fuzz_ldb_parse_tree	commit 545711ffeaaa12689a4e9a14f23ba5a4afef2180Author: Andrew Bartlett <abartlet@samba.org>Date:   Wed Dec 11 14:09:25 2019 +1300    lib/fuzzing: Fix argument order to ldb_filter_from_tree in fuzz_ldb_parse_tree        Found by the oss-fuzz CI tooling.        Signed-off-by: Andrew Bartlett <abartlet@samba.org>    Reviewed-by: Gary Lockyer <gary@samba.org>        Autobuild-User(master): Andrew Bartlett <abartlet@samba.org>    Autobuild-Date(master): Wed Dec 11 04:21:28 UTC 2019 on sn-devel-184
