diff --git a/autotest/osr/osr_basic.py b/autotest/osr/osr_basic.py
index 243df4b0d7..6119c359b3 100755
--- a/autotest/osr/osr_basic.py
+++ b/autotest/osr/osr_basic.py
@@ -1380,6 +1380,25 @@ def osr_basic_25():
         print(sr2)
         return 'fail'
 
+    # LCC_2SP -> LCC_1SP : stdp1 ~= stdp2 ~= 0
+    sr.SetFromUserInput("""PROJCS["unnamed",
+    GEOGCS["RGF93",
+        DATUM["Reseau_Geodesique_Francais_1993",
+            SPHEROID["GRS 1980",6378137,298.257222101]],
+        UNIT["degree",0.0174532925199433]],
+    PROJECTION["Lambert_Conformal_Conic_2SP"],
+    PARAMETER["standard_parallel_1",.0000000000000001],
+    PARAMETER["standard_parallel_2",.0000000000000002],
+    PARAMETER["latitude_of_origin",10],
+    PARAMETER["central_meridian",3],
+    PARAMETER["false_easting",700000],
+    PARAMETER["false_northing",6600000]]""")
+    sr2 = sr.ConvertToOtherProjection('Lambert_Conformal_Conic_1SP')
+    if sr2 is not None:
+        gdaltest.post_reason('fail')
+        print(sr2)
+        return 'fail'
+
     # LCC_2SP -> LCC_1SP : Invalid eccentricity
     sr.SetFromUserInput("""PROJCS["unnamed",
     GEOGCS["RGF93",
diff --git a/gdal/ogr/ogrspatialreference.cpp b/gdal/ogr/ogrspatialreference.cpp
index ac0f09303b..9c0e4de6d1 100644
--- a/gdal/ogr/ogrspatialreference.cpp
+++ b/gdal/ogr/ogrspatialreference.cpp
@@ -7358,8 +7358,9 @@ OGRSpatialReference* OGRSpatialReference::convertToOtherProjection(
         const double m2 = msfn(phi2, ec);
         const double t1 = tsfn(phi1, ec);
         const double t2 = tsfn(phi2, ec);
-        const double n = (phi1 == phi2) ? sin(phi1) :
-                                (log(m1) - log(m2)) / (log(t1) - log(t2));
+        const double n_denom = log(t1) - log(t2);
+        const double n = (fabs(n_denom) < 1e-10) ? sin(phi1) :
+                                (log(m1) - log(m2)) / n_denom;
         if( fabs(n) < 1e-10 )
             return NULL;
         const double F = m1 / (n * pow(t1, n));
