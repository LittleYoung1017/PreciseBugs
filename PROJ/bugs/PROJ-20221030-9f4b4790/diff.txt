diff --cc src/projections/eqdc.cpp
index 325b5613,325b5613..4407ab62
--- a/src/projections/eqdc.cpp
+++ b/src/projections/eqdc.cpp
@@@ -119,12 -119,12 +119,8 @@@ PJ *PROJECTION(eqdc) 
          if (secant) { /* secant cone */
              sinphi = sin(Q->phi2);
              cosphi = cos(Q->phi2);
--            const double ml2 = pj_mlfn(Q->phi2, sinphi, cosphi, Q->en);
--            if (ml1 == ml2) {
--                proj_log_error(P, _("Eccentricity too close to 1"));
--                return destructor(P, PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE);
--            }
--            Q->n = (m1 - pj_msfn(sinphi, cosphi, P->es)) / (ml2 - ml1);
++            Q->n = (m1 - pj_msfn(sinphi, cosphi, P->es)) /
++                (pj_mlfn(Q->phi2, sinphi, cosphi, Q->en) - ml1);
              if (Q->n == 0) {
                  // Not quite, but es is very close to 1...
                  proj_log_error(P, _("Invalid value for eccentricity"));
diff --cc test/gie/builtins.gie
index 5f99497d,5f99497d..2b088b00
--- a/test/gie/builtins.gie
+++ b/test/gie/builtins.gie
@@@ -1375,9 -1375,9 +1375,6 @@@ expect    failure errno invalid_op_ille
  operation +proj=eqdc   +R=1 +lat_1=1e-9
  expect    failure errno invalid_op_illegal_arg_value
  
--operation +proj=eqdc +lat_1=1 +ellps=GRS80 +b=.1
--expect    failure errno invalid_op_illegal_arg_value
--
  ===============================================================================
  # Euler
  # 	Conic, Sph
