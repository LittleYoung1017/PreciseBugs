diff --git a/gn/sksl_tests.gni b/gn/sksl_tests.gni
index e4da75a8df..7392b036e0 100644
--- a/gn/sksl_tests.gni
+++ b/gn/sksl_tests.gni
@@ -163,6 +163,7 @@ sksl_error_tests = [
   "/sksl/errors/Ossfuzz44565.sksl",
   "/sksl/errors/Ossfuzz47935.sksl",
   "/sksl/errors/Ossfuzz48592.sksl",
+  "/sksl/errors/Ossfuzz49558.sksl",
   "/sksl/errors/OverflowFloatLiteral.rts",
   "/sksl/errors/OverflowFloatIntrinsic.sksl",
   "/sksl/errors/OverflowInlinedLiteral.sksl",
diff --git a/include/sksl/DSLSymbols.h b/include/sksl/DSLSymbols.h
index 34117b5bca..fc9009110d 100644
--- a/include/sksl/DSLSymbols.h
+++ b/include/sksl/DSLSymbols.h
@@ -49,16 +49,6 @@ std::shared_ptr<SymbolTable> CurrentSymbolTable();
  */
 DSLExpression Symbol(std::string_view name, Position pos = {});
 
-/**
- * Returns true if the name refers to a type (user or built-in) in the current symbol table.
- */
-bool IsType(std::string_view name);
-
-/**
- * Returns true if the name refers to a builtin type.
- */
-bool IsBuiltinType(std::string_view name);
-
 /**
  * Adds a variable to the current symbol table.
  */
diff --git a/resources/sksl/errors/Ossfuzz49558.sksl b/resources/sksl/errors/Ossfuzz49558.sksl
new file mode 100644
index 0000000000..4dd4307b42
--- /dev/null
+++ b/resources/sksl/errors/Ossfuzz49558.sksl
@@ -0,0 +1,5 @@
+lessThan
+
+/*%%*
+no type named 'lessThan'
+*%%*/
diff --git a/src/sksl/SkSLDSLParser.cpp b/src/sksl/SkSLDSLParser.cpp
index fa31ed232c..2bd667efcd 100644
--- a/src/sksl/SkSLDSLParser.cpp
+++ b/src/sksl/SkSLDSLParser.cpp
@@ -226,7 +226,7 @@ bool DSLParser::expectIdentifier(Token* result) {
     if (!this->expect(Token::Kind::TK_IDENTIFIER, "an identifier", result)) {
         return false;
     }
-    if (IsBuiltinType(this->text(*result))) {
+    if (CurrentSymbolTable()->isBuiltinType(this->text(*result))) {
         this->error(*result, "expected an identifier, but found type '" +
                              std::string(this->text(*result)) + "'");
         this->fEncounteredFatalError = true;
@@ -239,7 +239,7 @@ bool DSLParser::checkIdentifier(Token* result) {
     if (!this->checkNext(Token::Kind::TK_IDENTIFIER, result)) {
         return false;
     }
-    if (IsBuiltinType(this->text(*result))) {
+    if (CurrentSymbolTable()->isBuiltinType(this->text(*result))) {
         this->pushback(std::move(*result));
         return false;
     }
@@ -409,7 +409,8 @@ bool DSLParser::declaration() {
     }
     DSLModifiers modifiers = this->modifiers();
     Token lookahead = this->peek();
-    if (lookahead.fKind == Token::Kind::TK_IDENTIFIER && !IsType(this->text(lookahead))) {
+    if (lookahead.fKind == Token::Kind::TK_IDENTIFIER &&
+        !CurrentSymbolTable()->isType(this->text(lookahead))) {
         // we have an identifier that's not a type, could be the start of an interface block
         return this->interfaceBlock(modifiers);
     }
@@ -647,7 +648,7 @@ DSLStatement DSLParser::varDeclarationsOrExpressionStatement() {
     if (nextToken.fKind == Token::Kind::TK_HIGHP ||
         nextToken.fKind == Token::Kind::TK_MEDIUMP ||
         nextToken.fKind == Token::Kind::TK_LOWP ||
-        IsType(this->text(nextToken))) {
+        CurrentSymbolTable()->isType(this->text(nextToken))) {
         // Statements that begin with a typename are most often variable declarations, but
         // occasionally the type is part of a constructor, and these are actually expression-
         // statements in disguise. First, attempt the common case: parse it as a vardecl.
@@ -1005,7 +1006,7 @@ DSLType DSLParser::type(DSLModifiers* modifiers) {
     if (!this->expect(Token::Kind::TK_IDENTIFIER, "a type", &type)) {
         return DSLType(nullptr);
     }
-    if (!IsType(this->text(type))) {
+    if (!CurrentSymbolTable()->isType(this->text(type))) {
         this->error(type, "no type named '" + std::string(this->text(type)) + "'");
         return DSLType(nullptr);
     }
diff --git a/src/sksl/dsl/DSLSymbols.cpp b/src/sksl/dsl/DSLSymbols.cpp
index ffc61af111..9eb36e778a 100644
--- a/src/sksl/dsl/DSLSymbols.cpp
+++ b/src/sksl/dsl/DSLSymbols.cpp
@@ -7,13 +7,11 @@
 
 #include "include/sksl/DSLSymbols.h"
 
-#include "include/private/SkSLSymbol.h"
 #include "include/sksl/SkSLPosition.h"
 #include "src/sksl/SkSLCompiler.h"
 #include "src/sksl/SkSLThreadContext.h"
 #include "src/sksl/dsl/priv/DSLWriter.h"
 #include "src/sksl/ir/SkSLSymbolTable.h"
-#include "src/sksl/ir/SkSLType.h"
 #include "src/sksl/ir/SkSLVariable.h"
 
 #include <type_traits>
@@ -24,11 +22,6 @@ namespace dsl {
 
 class DSLVarBase;
 
-static bool is_type_in_symbol_table(std::string_view name, SkSL::SymbolTable* symbols) {
-    const SkSL::Symbol* s = (*symbols)[name];
-    return s && s->is<Type>();
-}
-
 void PushSymbolTable() {
     SymbolTable::Push(&ThreadContext::SymbolTable());
 }
@@ -45,14 +38,6 @@ DSLExpression Symbol(std::string_view name, Position pos) {
     return DSLExpression(ThreadContext::Compiler().convertIdentifier(pos, name), pos);
 }
 
-bool IsType(std::string_view name) {
-    return is_type_in_symbol_table(name, CurrentSymbolTable().get());
-}
-
-bool IsBuiltinType(std::string_view name) {
-    return is_type_in_symbol_table(name, CurrentSymbolTable()->builtinParent());
-}
-
 void AddToSymbolTable(DSLVarBase& var, Position pos) {
     const SkSL::Variable* skslVar = DSLWriter::Var(var);
     if (skslVar) {
diff --git a/src/sksl/generated/sksl_gpu.dehydrated.sksl b/src/sksl/generated/sksl_gpu.dehydrated.sksl
index 486dca352c..d579d6715c 100644
--- a/src/sksl/generated/sksl_gpu.dehydrated.sksl
+++ b/src/sksl/generated/sksl_gpu.dehydrated.sksl
@@ -148,7 +148,7 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 3,100,115,97,
 1,108,
 1,114,
-52,1,135,1,
+52,1,122,1,
 55,1,0,
 17,2,0,
 51,255,255,4,0,3,
@@ -183,1419 +183,1341 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 39,
 16,0,4,0,0,28,0,3,0,0,0,0,0,0,
 51,255,255,41,0,
-54,12,0,7,
-51,4,0,
-51,6,0,
-51,7,0,
-51,8,0,
-51,9,0,
-51,10,0,
-51,11,0,
-55,13,0,
+55,12,0,
 17,2,0,
 51,255,255,18,0,3,
-55,14,0,
+55,13,0,
 17,14,0,
 51,255,255,18,0,3,
-55,15,0,
+55,14,0,
 17,16,0,
 51,255,255,18,0,3,
-54,16,0,2,
+54,15,0,2,
 51,4,0,
-28,17,0,
-17,28,0,3,13,0,14,0,15,0,
+28,16,0,
+17,28,0,3,12,0,13,0,14,0,
 51,255,255,18,0,
-51,17,0,
-55,18,0,
+51,16,0,
+55,17,0,
 17,16,0,
 51,255,255,32,0,3,
-55,19,0,
+55,18,0,
 17,51,0,
 51,255,255,32,0,3,
-55,20,0,
+55,19,0,
 17,53,0,
 51,255,255,32,0,3,
-28,21,0,
-17,55,0,3,18,0,19,0,20,0,
+28,20,0,
+17,55,0,3,17,0,18,0,19,0,
 51,255,255,32,0,
-55,22,0,
+55,21,0,
 17,16,0,
 51,255,255,41,0,3,
-55,23,0,
+55,22,0,
 17,51,0,
 51,255,255,41,0,3,
-55,24,0,
+55,23,0,
 17,53,0,
 51,255,255,41,0,3,
-54,25,0,2,
-51,21,0,
-28,26,0,
-17,55,0,3,22,0,23,0,24,0,
+54,24,0,2,
+51,20,0,
+28,25,0,
+17,55,0,3,21,0,22,0,23,0,
 51,255,255,41,0,
-51,26,0,
-55,27,0,
+51,25,0,
+55,26,0,
 17,2,0,
 51,255,255,32,0,3,
-55,28,0,
+55,27,0,
 38,
 16,32,59,0,
 51,255,255,4,0,3,
-28,29,0,
+28,28,0,
 39,
-16,0,8,0,0,63,0,2,27,0,28,0,
+16,0,8,0,0,63,0,2,26,0,27,0,
 51,255,255,32,0,
-55,30,0,
+55,29,0,
 17,2,0,
 51,255,255,41,0,3,
-55,31,0,
+55,30,0,
 38,
 16,32,59,0,
 51,255,255,4,0,3,
-54,32,0,2,
-51,29,0,
-28,33,0,
+54,31,0,2,
+51,28,0,
+28,32,0,
 39,
-16,0,8,0,0,63,0,2,30,0,31,0,
+16,0,8,0,0,63,0,2,29,0,30,0,
 51,255,255,41,0,
-51,33,0,
-55,34,0,
+51,32,0,
+55,33,0,
 17,2,0,
 51,255,255,32,0,3,
-55,35,0,
+55,34,0,
 17,59,0,
 51,255,255,4,0,3,
-28,36,0,
-17,69,0,2,34,0,35,0,
+28,35,0,
+17,69,0,2,33,0,34,0,
 51,255,255,32,0,
-55,37,0,
+55,36,0,
 17,2,0,
 51,255,255,41,0,3,
-55,38,0,
+55,37,0,
 17,59,0,
 51,255,255,4,0,3,
-54,39,0,2,
-51,36,0,
-28,40,0,
-17,69,0,2,37,0,38,0,
+54,38,0,2,
+51,35,0,
+28,39,0,
+17,69,0,2,36,0,37,0,
 51,255,255,41,0,
-51,40,0,
-55,41,0,
+51,39,0,
+55,40,0,
 17,75,0,
 51,255,255,77,0,3,
-28,42,0,
-17,84,0,1,41,0,
+28,41,0,
+17,84,0,1,40,0,
 51,255,255,98,0,
-55,43,0,
+55,42,0,
 17,75,0,
 51,255,255,103,0,3,
-28,44,0,
-17,110,0,1,43,0,
+28,43,0,
+17,110,0,1,42,0,
 51,255,255,98,0,
-55,45,0,
+55,44,0,
 17,75,0,
 51,255,255,103,0,3,
-28,46,0,
-17,123,0,1,45,0,
+28,45,0,
+17,123,0,1,44,0,
 51,255,255,98,0,
-55,47,0,
+55,46,0,
 17,136,0,
 51,255,255,98,0,3,
-28,48,0,
-17,138,0,1,47,0,
+28,47,0,
+17,138,0,1,46,0,
 51,255,255,77,0,
-55,49,0,
+55,48,0,
 17,136,0,
 51,255,255,98,0,3,
-28,50,0,
-17,154,0,1,49,0,
+28,49,0,
+17,154,0,1,48,0,
 51,255,255,103,0,
-55,51,0,
+55,50,0,
 17,136,0,
 51,255,255,98,0,3,
-28,52,0,
-17,169,0,1,51,0,
+28,51,0,
+17,169,0,1,50,0,
 51,255,255,103,0,
-55,53,0,
+55,52,0,
 17,75,0,
 51,255,255,77,0,3,
-28,54,0,
-17,184,0,1,53,0,
+28,53,0,
+17,184,0,1,52,0,
 51,255,255,98,0,
-55,55,0,
+55,54,0,
 17,75,0,
 51,255,255,98,0,3,
-28,56,0,
-17,197,0,1,55,0,
+28,55,0,
+17,197,0,1,54,0,
 51,255,255,77,0,
-55,57,0,
+55,56,0,
 17,2,0,
 51,255,255,212,0,3,
-55,58,0,
+55,57,0,
 17,14,0,
 51,255,255,212,0,3,
-28,59,0,
-17,218,0,2,57,0,58,0,
+28,58,0,
+17,218,0,2,56,0,57,0,
 51,255,255,227,0,
-54,60,0,4,
-51,59,0,
-28,61,0,
+54,59,0,4,
+51,58,0,
+28,60,0,
 17,218,0,2,0,0,0,0,
 51,255,255,227,0,
-28,62,0,
+28,61,0,
 17,218,0,2,0,0,0,0,
 51,255,255,227,0,
-28,63,0,
+28,62,0,
 17,218,0,2,0,0,0,0,
 51,255,255,227,0,
-54,64,0,4,
-51,59,0,
-51,61,0,
-51,62,0,
-51,63,0,
-55,65,0,
+55,63,0,
 17,2,0,
 51,255,255,233,0,3,
-55,66,0,
+55,64,0,
 17,14,0,
 51,255,255,233,0,3,
-54,67,0,2,
-51,59,0,
-28,68,0,
-17,218,0,2,65,0,66,0,
+54,65,0,2,
+51,58,0,
+28,66,0,
+17,218,0,2,63,0,64,0,
 51,255,255,227,0,
-51,68,0,
-54,69,0,5,
-51,59,0,
-51,68,0,
+51,66,0,
+54,67,0,5,
+51,58,0,
+51,66,0,
+51,60,0,
 51,61,0,
 51,62,0,
-51,63,0,
-54,70,0,5,
-51,59,0,
-51,68,0,
-51,61,0,
-51,62,0,
-51,63,0,
-55,71,0,
+55,68,0,
 17,2,0,
 51,255,255,240,0,3,
-55,72,0,
+55,69,0,
 17,14,0,
 51,255,255,240,0,3,
-54,73,0,3,
-51,59,0,
-51,68,0,
-28,74,0,
-17,218,0,2,71,0,72,0,
+54,70,0,3,
+51,58,0,
+51,66,0,
+28,71,0,
+17,218,0,2,68,0,69,0,
 51,255,255,227,0,
-51,74,0,
-55,75,0,
+51,71,0,
+55,72,0,
 17,2,0,
 51,255,255,240,0,3,
-55,76,0,
+55,73,0,
 17,14,0,
 51,255,255,240,0,3,
-28,77,0,
-17,246,0,2,75,0,76,0,
+28,74,0,
+17,246,0,2,72,0,73,0,
 51,255,255,227,0,
-54,78,0,4,
-51,77,0,
-28,79,0,
+54,75,0,4,
+51,74,0,
+28,76,0,
 17,246,0,2,0,0,0,0,
 51,255,255,227,0,
-28,80,0,
+28,77,0,
 17,246,0,2,0,0,0,0,
 51,255,255,227,0,
-28,81,0,
+28,78,0,
 17,246,0,2,0,0,0,0,
 51,255,255,227,0,
-54,82,0,4,
-51,77,0,
-51,79,0,
-51,80,0,
-51,81,0,
-55,83,0,
+55,79,0,
 17,2,0,
 51,255,255,212,0,3,
-55,84,0,
+55,80,0,
 17,14,0,
 51,255,255,212,0,3,
-54,85,0,2,
-51,77,0,
-28,86,0,
-17,246,0,2,83,0,84,0,
+54,81,0,2,
+51,74,0,
+28,82,0,
+17,246,0,2,79,0,80,0,
 51,255,255,227,0,
-51,86,0,
-54,87,0,5,
-51,77,0,
-51,86,0,
-51,79,0,
-51,80,0,
-51,81,0,
-54,88,0,5,
+51,82,0,
+54,83,0,5,
+51,74,0,
+51,82,0,
+51,76,0,
 51,77,0,
-51,86,0,
-51,79,0,
-51,80,0,
-51,81,0,
-55,89,0,
+51,78,0,
+55,84,0,
 17,2,0,
 51,255,255,233,0,3,
-55,90,0,
+55,85,0,
 17,14,0,
 51,255,255,233,0,3,
-54,91,0,3,
-51,77,0,
-51,86,0,
-28,92,0,
-17,246,0,2,89,0,90,0,
+54,86,0,3,
+51,74,0,
+51,82,0,
+28,87,0,
+17,246,0,2,84,0,85,0,
 51,255,255,227,0,
-51,92,0,
-55,93,0,
+51,87,0,
+55,88,0,
 17,2,0,
 51,255,255,240,0,3,
-55,94,0,
+55,89,0,
 17,14,0,
 51,255,255,240,0,3,
-28,95,0,
-17,4,1,2,93,0,94,0,
+28,90,0,
+17,4,1,2,88,0,89,0,
 51,255,255,227,0,
-54,96,0,4,
-51,95,0,
-28,97,0,
+54,91,0,4,
+51,90,0,
+28,92,0,
 17,4,1,2,0,0,0,0,
 51,255,255,227,0,
-28,98,0,
+28,93,0,
 17,4,1,2,0,0,0,0,
 51,255,255,227,0,
-28,99,0,
+28,94,0,
 17,4,1,2,0,0,0,0,
 51,255,255,227,0,
-54,100,0,4,
-51,95,0,
-51,97,0,
-51,98,0,
-51,99,0,
-55,101,0,
+55,95,0,
 17,2,0,
 51,255,255,212,0,3,
-55,102,0,
+55,96,0,
 17,14,0,
 51,255,255,212,0,3,
-54,103,0,2,
-51,95,0,
-28,104,0,
-17,4,1,2,101,0,102,0,
+54,97,0,2,
+51,90,0,
+28,98,0,
+17,4,1,2,95,0,96,0,
 51,255,255,227,0,
-51,104,0,
-54,105,0,5,
-51,95,0,
-51,104,0,
-51,97,0,
 51,98,0,
-51,99,0,
-54,106,0,5,
-51,95,0,
-51,104,0,
-51,97,0,
+54,99,0,5,
+51,90,0,
 51,98,0,
-51,99,0,
-55,107,0,
+51,92,0,
+51,93,0,
+51,94,0,
+55,100,0,
 17,2,0,
 51,255,255,233,0,3,
-55,108,0,
+55,101,0,
 17,14,0,
 51,255,255,233,0,3,
-54,109,0,3,
-51,95,0,
-51,104,0,
-28,110,0,
-17,4,1,2,107,0,108,0,
+54,102,0,3,
+51,90,0,
+51,98,0,
+28,103,0,
+17,4,1,2,100,0,101,0,
 51,255,255,227,0,
-51,110,0,
-55,111,0,
+51,103,0,
+55,104,0,
 17,2,0,
 51,255,255,240,0,3,
-55,112,0,
+55,105,0,
 17,14,0,
 51,255,255,240,0,3,
-28,113,0,
-17,16,1,2,111,0,112,0,
+28,106,0,
+17,16,1,2,104,0,105,0,
 51,255,255,227,0,
-54,114,0,4,
-51,113,0,
-28,115,0,
+54,107,0,4,
+51,106,0,
+28,108,0,
 17,16,1,2,0,0,0,0,
 51,255,255,227,0,
-28,116,0,
+28,109,0,
 17,16,1,2,0,0,0,0,
 51,255,255,227,0,
-28,117,0,
+28,110,0,
 17,16,1,2,0,0,0,0,
 51,255,255,227,0,
-54,118,0,4,
-51,113,0,
-51,115,0,
-51,116,0,
-51,117,0,
-55,119,0,
+55,111,0,
 17,2,0,
 51,255,255,212,0,3,
-55,120,0,
+55,112,0,
 17,14,0,
 51,255,255,212,0,3,
-54,121,0,2,
-51,113,0,
-28,122,0,
-17,16,1,2,119,0,120,0,
+54,113,0,2,
+51,106,0,
+28,114,0,
+17,16,1,2,111,0,112,0,
 51,255,255,227,0,
-51,122,0,
-54,123,0,5,
-51,113,0,
-51,122,0,
-51,115,0,
-51,116,0,
-51,117,0,
-54,124,0,5,
-51,113,0,
-51,122,0,
-51,115,0,
-51,116,0,
-51,117,0,
-55,125,0,
+51,114,0,
+54,115,0,5,
+51,106,0,
+51,114,0,
+51,108,0,
+51,109,0,
+51,110,0,
+55,116,0,
 17,2,0,
 51,255,255,233,0,3,
-55,126,0,
+55,117,0,
 17,14,0,
 51,255,255,233,0,3,
-54,127,0,3,
-51,113,0,
-51,122,0,
-28,128,0,
-17,16,1,2,125,0,126,0,
+54,118,0,3,
+51,106,0,
+51,114,0,
+28,119,0,
+17,16,1,2,116,0,117,0,
 51,255,255,227,0,
-51,128,0,
-55,129,0,
+51,119,0,
+55,120,0,
 17,2,0,
 51,255,255,240,0,3,
-55,130,0,
+55,121,0,
 17,14,0,
 51,255,255,240,0,3,
-28,131,0,
-17,33,1,2,129,0,130,0,
+28,122,0,
+17,33,1,2,120,0,121,0,
 51,255,255,227,0,
-54,132,0,5,
-51,131,0,
-28,133,0,
+54,123,0,5,
+51,122,0,
+28,124,0,
 17,33,1,2,0,0,0,0,
 51,255,255,227,0,
-28,134,0,
+28,125,0,
 17,33,1,2,0,0,0,0,
 51,255,255,227,0,
-28,135,0,
+28,126,0,
 17,33,1,2,0,0,0,0,
 51,255,255,227,0,
-28,136,0,
+28,127,0,
 17,33,1,2,0,0,0,0,
 51,255,255,227,0,
-54,137,0,5,
-51,131,0,
-51,133,0,
-51,134,0,
-51,135,0,
-51,136,0,
-55,138,0,
+55,128,0,
 17,2,0,
 51,255,255,212,0,3,
-55,139,0,
+55,129,0,
 17,14,0,
 51,255,255,212,0,3,
-54,140,0,2,
-51,131,0,
-28,141,0,
-17,33,1,2,138,0,139,0,
+54,130,0,2,
+51,122,0,
+28,131,0,
+17,33,1,2,128,0,129,0,
 51,255,255,227,0,
-51,141,0,
-54,142,0,6,
 51,131,0,
-51,141,0,
-51,133,0,
-51,134,0,
-51,135,0,
-51,136,0,
-54,143,0,6,
+54,132,0,6,
+51,122,0,
 51,131,0,
-51,141,0,
-51,133,0,
-51,134,0,
-51,135,0,
-51,136,0,
-55,144,0,
+51,124,0,
+51,125,0,
+51,126,0,
+51,127,0,
+55,133,0,
 17,2,0,
 51,255,255,233,0,3,
-55,145,0,
+55,134,0,
 17,14,0,
 51,255,255,233,0,3,
-54,146,0,3,
+54,135,0,3,
+51,122,0,
 51,131,0,
-51,141,0,
-28,147,0,
-17,33,1,2,144,0,145,0,
+28,136,0,
+17,33,1,2,133,0,134,0,
 51,255,255,227,0,
-51,147,0,
-55,148,0,
+51,136,0,
+55,137,0,
 17,2,0,
 51,255,255,240,0,3,
-55,149,0,
+55,138,0,
 17,14,0,
 51,255,255,240,0,3,
-28,150,0,
-17,39,1,2,148,0,149,0,
+28,139,0,
+17,39,1,2,137,0,138,0,
 51,255,255,227,0,
-54,151,0,5,
-51,150,0,
-28,152,0,
+54,140,0,5,
+51,139,0,
+28,141,0,
 17,39,1,2,0,0,0,0,
 51,255,255,227,0,
-28,153,0,
+28,142,0,
 17,39,1,2,0,0,0,0,
 51,255,255,227,0,
-28,154,0,
+28,143,0,
 17,39,1,2,0,0,0,0,
 51,255,255,227,0,
-28,155,0,
+28,144,0,
 17,39,1,2,0,0,0,0,
 51,255,255,227,0,
-54,156,0,5,
-51,150,0,
-51,152,0,
-51,153,0,
-51,154,0,
-51,155,0,
-55,157,0,
+55,145,0,
 17,2,0,
 51,255,255,212,0,3,
-55,158,0,
+55,146,0,
 17,14,0,
 51,255,255,212,0,3,
-54,159,0,2,
-51,150,0,
-28,160,0,
-17,39,1,2,157,0,158,0,
+54,147,0,2,
+51,139,0,
+28,148,0,
+17,39,1,2,145,0,146,0,
 51,255,255,227,0,
-51,160,0,
-54,161,0,6,
-51,150,0,
-51,160,0,
-51,152,0,
-51,153,0,
-51,154,0,
-51,155,0,
-54,162,0,6,
-51,150,0,
-51,160,0,
-51,152,0,
-51,153,0,
-51,154,0,
-51,155,0,
-55,163,0,
+51,148,0,
+54,149,0,6,
+51,139,0,
+51,148,0,
+51,141,0,
+51,142,0,
+51,143,0,
+51,144,0,
+55,150,0,
 17,2,0,
 51,255,255,233,0,3,
-55,164,0,
+55,151,0,
 17,14,0,
 51,255,255,233,0,3,
-54,165,0,3,
-51,150,0,
-51,160,0,
-28,166,0,
-17,39,1,2,163,0,164,0,
+54,152,0,3,
+51,139,0,
+51,148,0,
+28,153,0,
+17,39,1,2,150,0,151,0,
 51,255,255,227,0,
-51,166,0,
-55,167,0,
+51,153,0,
+55,154,0,
 17,48,1,
 51,255,255,4,0,3,
-28,168,0,
-17,54,1,1,167,0,
+28,155,0,
+17,54,1,1,154,0,
 51,255,255,4,0,
-55,169,0,
+55,156,0,
 17,48,1,
 51,255,255,63,1,3,
-54,170,0,2,
-51,168,0,
-28,171,0,
-17,54,1,1,169,0,
+54,157,0,2,
+51,155,0,
+28,158,0,
+17,54,1,1,156,0,
 51,255,255,4,0,
-51,171,0,
-55,172,0,
+51,158,0,
+55,159,0,
 17,48,1,
 51,255,255,4,0,3,
-28,173,0,
-17,73,1,1,172,0,
+28,160,0,
+17,73,1,1,159,0,
 51,255,255,4,0,
-55,174,0,
+55,161,0,
 17,48,1,
 51,255,255,63,1,3,
-54,175,0,2,
-51,173,0,
-28,176,0,
-17,73,1,1,174,0,
+54,162,0,2,
+51,160,0,
+28,163,0,
+17,73,1,1,161,0,
 51,255,255,4,0,
-51,176,0,
-55,177,0,
+51,163,0,
+55,164,0,
 17,48,1,
 51,255,255,4,0,3,
-28,178,0,
-17,81,1,1,177,0,
+28,165,0,
+17,81,1,1,164,0,
 51,255,255,4,0,
-55,179,0,
+55,166,0,
 17,48,1,
 51,255,255,63,1,3,
-54,180,0,2,
-51,178,0,
-28,181,0,
-17,81,1,1,179,0,
+54,167,0,2,
+51,165,0,
+28,168,0,
+17,81,1,1,166,0,
 51,255,255,4,0,
-51,181,0,
-55,182,0,
+51,168,0,
+55,169,0,
 17,89,1,
 51,255,255,97,1,3,
-55,183,0,
+55,170,0,
 17,107,1,
 51,255,255,109,1,3,
-28,184,0,
-17,117,1,2,182,0,183,0,
+28,171,0,
+17,117,1,2,169,0,170,0,
 51,255,255,131,1,
-55,185,0,
+55,172,0,
 17,107,1,
 51,255,255,141,1,3,
-28,186,0,
-17,155,1,1,185,0,
+28,173,0,
+17,155,1,1,172,0,
 51,255,255,167,1,
-55,187,0,
+55,174,0,
 17,107,1,
 51,255,255,172,1,3,
-55,188,0,
+55,175,0,
 17,182,1,
 51,255,255,184,1,3,
-28,189,0,
-17,190,1,2,187,0,188,0,
+28,176,0,
+17,190,1,2,174,0,175,0,
 51,255,255,197,1,
-55,190,0,
+55,177,0,
 17,107,1,
 51,255,255,172,1,3,
-55,191,0,
+55,178,0,
 17,182,1,
 51,255,255,184,1,3,
-55,192,0,
+55,179,0,
 17,203,1,
 51,255,255,184,1,3,
-54,193,0,2,
-51,189,0,
-28,194,0,
-17,190,1,3,190,0,191,0,192,0,
+54,180,0,2,
+51,176,0,
+28,181,0,
+17,190,1,3,177,0,178,0,179,0,
 51,255,255,197,1,
-51,194,0,
-55,195,0,
+51,181,0,
+55,182,0,
 17,107,1,
 51,255,255,131,1,3,
-55,196,0,
+55,183,0,
 17,182,1,
 51,255,255,77,0,3,
-54,197,0,3,
-51,189,0,
-51,194,0,
-28,198,0,
-17,190,1,2,195,0,196,0,
+54,184,0,3,
+51,176,0,
+51,181,0,
+28,185,0,
+17,190,1,2,182,0,183,0,
 51,255,255,197,1,
-51,198,0,
-55,199,0,
+51,185,0,
+55,186,0,
 17,107,1,
 51,255,255,208,1,3,
-55,200,0,
+55,187,0,
 17,182,1,
 51,255,255,77,0,3,
-54,201,0,4,
-51,189,0,
-51,194,0,
-51,198,0,
-28,202,0,
-17,190,1,2,199,0,200,0,
+54,188,0,4,
+51,176,0,
+51,181,0,
+51,185,0,
+28,189,0,
+17,190,1,2,186,0,187,0,
 51,255,255,219,1,
-51,202,0,
-55,203,0,
+51,189,0,
+55,190,0,
 17,107,1,
 51,255,255,224,1,3,
-55,204,0,
+55,191,0,
 17,182,1,
 51,255,255,77,0,3,
-55,205,0,
+55,192,0,
 17,203,1,
 51,255,255,184,1,3,
-54,206,0,5,
+54,193,0,5,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
-51,194,0,
-51,198,0,
-51,202,0,
-28,207,0,
-17,190,1,3,203,0,204,0,205,0,
+28,194,0,
+17,190,1,3,190,0,191,0,192,0,
 51,255,255,197,1,
-51,207,0,
-55,208,0,
+51,194,0,
+55,195,0,
 17,107,1,
 51,255,255,224,1,3,
-55,209,0,
+55,196,0,
 17,182,1,
 51,255,255,77,0,3,
-54,210,0,6,
+54,197,0,6,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
-51,198,0,
-51,202,0,
-51,207,0,
-28,211,0,
-17,190,1,2,208,0,209,0,
+28,198,0,
+17,190,1,2,195,0,196,0,
 51,255,255,197,1,
-51,211,0,
-55,212,0,
+51,198,0,
+55,199,0,
 17,107,1,
 51,255,255,141,1,3,
-55,213,0,
+55,200,0,
 17,182,1,
 51,255,255,77,0,3,
-54,214,0,7,
+54,201,0,7,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
-51,202,0,
-51,207,0,
-51,211,0,
-28,215,0,
-17,190,1,2,212,0,213,0,
+28,202,0,
+17,190,1,2,199,0,200,0,
 51,255,255,197,1,
-51,215,0,
-55,216,0,
+51,202,0,
+55,203,0,
 17,107,1,
 51,255,255,141,1,3,
-55,217,0,
+55,204,0,
 17,182,1,
 51,255,255,243,1,3,
-54,218,0,8,
+54,205,0,8,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
 51,202,0,
-51,207,0,
-51,211,0,
-51,215,0,
-28,219,0,
-17,190,1,2,216,0,217,0,
+28,206,0,
+17,190,1,2,203,0,204,0,
 51,255,255,197,1,
-51,219,0,
-55,220,0,
+51,206,0,
+55,207,0,
 17,250,1,
 51,255,255,2,2,3,
-28,221,0,
-17,15,2,1,220,0,
+28,208,0,
+17,15,2,1,207,0,
 51,255,255,197,1,
-55,222,0,
+55,209,0,
 17,250,1,
 51,255,255,27,2,3,
-55,223,0,
+55,210,0,
 17,190,1,
 51,255,255,42,2,3,
-54,224,0,2,
-51,221,0,
-28,225,0,
-17,15,2,2,222,0,223,0,
+54,211,0,2,
+51,208,0,
+28,212,0,
+17,15,2,2,209,0,210,0,
 51,255,255,197,1,
-51,225,0,
-55,226,0,
+51,212,0,
+55,213,0,
 17,107,1,
 51,255,255,172,1,3,
-55,227,0,
+55,214,0,
 17,182,1,
 51,255,255,77,0,3,
-54,228,0,9,
+54,215,0,9,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
 51,202,0,
-51,207,0,
-51,211,0,
-51,215,0,
-51,219,0,
-28,229,0,
-17,190,1,2,226,0,227,0,
+51,206,0,
+28,216,0,
+17,190,1,2,213,0,214,0,
 51,255,255,197,1,
-51,229,0,
-55,230,0,
+51,216,0,
+55,217,0,
 17,107,1,
 51,255,255,172,1,3,
-55,231,0,
+55,218,0,
 17,182,1,
 51,255,255,77,0,3,
-55,232,0,
+55,219,0,
 17,203,1,
 51,255,255,184,1,3,
-54,233,0,10,
+54,220,0,10,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
 51,202,0,
-51,207,0,
-51,211,0,
-51,215,0,
-51,219,0,
-51,229,0,
-28,234,0,
-17,190,1,3,230,0,231,0,232,0,
+51,206,0,
+51,216,0,
+28,221,0,
+17,190,1,3,217,0,218,0,219,0,
 51,255,255,197,1,
-51,234,0,
-55,235,0,
+51,221,0,
+55,222,0,
 17,107,1,
 51,255,255,131,1,3,
-55,236,0,
+55,223,0,
 17,182,1,
 51,255,255,243,1,3,
-54,237,0,11,
+54,224,0,11,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
 51,202,0,
-51,207,0,
-51,211,0,
-51,215,0,
-51,219,0,
-51,229,0,
-51,234,0,
-28,238,0,
-17,190,1,2,235,0,236,0,
+51,206,0,
+51,216,0,
+51,221,0,
+28,225,0,
+17,190,1,2,222,0,223,0,
 51,255,255,197,1,
-51,238,0,
-55,239,0,
+51,225,0,
+55,226,0,
 17,107,1,
 51,255,255,131,1,3,
-55,240,0,
+55,227,0,
 17,182,1,
 51,255,255,243,1,3,
-55,241,0,
+55,228,0,
 17,203,1,
 51,255,255,184,1,3,
-54,242,0,12,
+54,229,0,12,
+51,176,0,
+51,181,0,
+51,185,0,
 51,189,0,
 51,194,0,
 51,198,0,
 51,202,0,
-51,207,0,
-51,211,0,
-51,215,0,
-51,219,0,
-51,229,0,
-51,234,0,
-51,238,0,
-28,243,0,
-17,190,1,3,239,0,240,0,241,0,
+51,206,0,
+51,216,0,
+51,221,0,
+51,225,0,
+28,230,0,
+17,190,1,3,226,0,227,0,228,0,
 51,255,255,197,1,
-51,243,0,
-55,244,0,
+51,230,0,
+55,231,0,
 17,46,2,
 51,255,255,184,1,3,
-55,245,0,
+55,232,0,
 17,190,1,
 51,255,255,42,2,3,
-28,246,0,
-17,58,2,2,244,0,245,0,
+28,233,0,
+17,58,2,2,231,0,232,0,
 51,255,255,184,1,
-55,247,0,
+55,234,0,
 17,46,2,
 51,255,255,77,0,3,
-55,248,0,
+55,235,0,
 17,190,1,
 51,255,255,42,2,3,
-54,249,0,2,
-51,246,0,
-28,250,0,
-17,58,2,2,247,0,248,0,
+54,236,0,2,
+51,233,0,
+28,237,0,
+17,58,2,2,234,0,235,0,
 51,255,255,77,0,
-51,250,0,
-55,251,0,
+51,237,0,
+55,238,0,
 17,46,2,
 51,255,255,243,1,3,
-55,252,0,
+55,239,0,
 17,190,1,
 51,255,255,42,2,3,
-54,253,0,3,
-51,246,0,
-51,250,0,
-28,254,0,
-17,58,2,2,251,0,252,0,
+54,240,0,3,
+51,233,0,
+51,237,0,
+28,241,0,
+17,58,2,2,238,0,239,0,
 51,255,255,243,1,
-51,254,0,
-55,255,0,
+51,241,0,
+55,242,0,
 17,46,2,
 51,255,255,103,0,3,
-55,0,1,
+55,243,0,
 17,190,1,
 51,255,255,42,2,3,
-54,1,1,4,
-51,246,0,
-51,250,0,
-51,254,0,
-28,2,1,
-17,58,2,2,255,0,0,1,
+54,244,0,4,
+51,233,0,
+51,237,0,
+51,241,0,
+28,245,0,
+17,58,2,2,242,0,243,0,
 51,255,255,103,0,
-51,2,1,
-55,3,1,
+51,245,0,
+55,246,0,
 17,46,2,
 51,255,255,184,1,3,
-55,4,1,
+55,247,0,
 17,78,2,
 51,255,255,77,0,3,
-28,5,1,
-17,85,2,2,3,1,4,1,
+28,248,0,
+17,85,2,2,246,0,247,0,
 51,255,255,184,1,
-55,6,1,
+55,249,0,
 17,46,2,
 51,255,255,77,0,3,
-55,7,1,
+55,250,0,
 17,78,2,
 51,255,255,77,0,3,
-54,8,1,2,
-51,5,1,
-28,9,1,
-17,85,2,2,6,1,7,1,
+54,251,0,2,
+51,248,0,
+28,252,0,
+17,85,2,2,249,0,250,0,
 51,255,255,77,0,
-51,9,1,
-55,10,1,
+51,252,0,
+55,253,0,
 17,46,2,
 51,255,255,243,1,3,
-55,11,1,
+55,254,0,
 17,78,2,
 51,255,255,77,0,3,
-54,12,1,3,
-51,5,1,
-51,9,1,
-28,13,1,
-17,85,2,2,10,1,11,1,
+54,255,0,3,
+51,248,0,
+51,252,0,
+28,0,1,
+17,85,2,2,253,0,254,0,
 51,255,255,243,1,
-51,13,1,
-55,14,1,
+51,0,1,
+55,1,1,
 17,46,2,
 51,255,255,103,0,3,
-55,15,1,
+55,2,1,
 17,78,2,
 51,255,255,77,0,3,
-54,16,1,4,
-51,5,1,
-51,9,1,
-51,13,1,
-28,17,1,
-17,85,2,2,14,1,15,1,
+54,3,1,4,
+51,248,0,
+51,252,0,
+51,0,1,
+28,4,1,
+17,85,2,2,1,1,2,1,
 51,255,255,103,0,
-51,17,1,
-55,18,1,
+51,4,1,
+55,5,1,
 17,105,2,
 51,255,255,197,1,3,
-55,19,1,
+55,6,1,
 17,109,2,
 51,255,255,197,1,3,
-28,20,1,
-17,113,2,2,18,1,19,1,
+28,7,1,
+17,113,2,2,5,1,6,1,
 51,255,255,197,1,
-55,21,1,
+55,8,1,
 17,105,2,
 51,255,255,197,1,3,
-55,22,1,
+55,9,1,
 17,109,2,
 51,255,255,197,1,3,
-28,23,1,
-17,125,2,2,21,1,22,1,
+28,10,1,
+17,125,2,2,8,1,9,1,
 51,255,255,197,1,
-55,24,1,
+55,11,1,
 17,105,2,
 51,255,255,197,1,3,
-55,25,1,
+55,12,1,
 17,109,2,
 51,255,255,197,1,3,
-28,26,1,
-17,135,2,2,24,1,25,1,
+28,13,1,
+17,135,2,2,11,1,12,1,
 51,255,255,197,1,
-55,27,1,
+55,14,1,
 17,105,2,
 51,255,255,197,1,3,
-55,28,1,
+55,15,1,
 17,109,2,
 51,255,255,197,1,3,
-28,29,1,
-17,145,2,2,27,1,28,1,
+28,16,1,
+17,145,2,2,14,1,15,1,
 51,255,255,197,1,
-55,30,1,
+55,17,1,
 17,105,2,
 51,255,255,197,1,3,
-55,31,1,
+55,18,1,
 17,109,2,
 51,255,255,197,1,3,
-28,32,1,
-17,160,2,2,30,1,31,1,
+28,19,1,
+17,160,2,2,17,1,18,1,
 51,255,255,197,1,
-55,33,1,
+55,20,1,
 17,105,2,
 51,255,255,197,1,3,
-55,34,1,
+55,21,1,
 17,109,2,
 51,255,255,197,1,3,
-28,35,1,
-17,175,2,2,33,1,34,1,
+28,22,1,
+17,175,2,2,20,1,21,1,
 51,255,255,197,1,
-55,36,1,
+55,23,1,
 17,105,2,
 51,255,255,197,1,3,
-55,37,1,
+55,24,1,
 17,109,2,
 51,255,255,197,1,3,
-28,38,1,
-17,188,2,2,36,1,37,1,
+28,25,1,
+17,188,2,2,23,1,24,1,
 51,255,255,197,1,
-55,39,1,
+55,26,1,
 17,105,2,
 51,255,255,197,1,3,
-55,40,1,
+55,27,1,
 17,109,2,
 51,255,255,197,1,3,
-28,41,1,
-17,201,2,2,39,1,40,1,
+28,28,1,
+17,201,2,2,26,1,27,1,
 51,255,255,197,1,
-55,42,1,
+55,29,1,
 17,105,2,
 51,255,255,197,1,3,
-55,43,1,
+55,30,1,
 17,109,2,
 51,255,255,197,1,3,
-28,44,1,
-17,215,2,2,42,1,43,1,
+28,31,1,
+17,215,2,2,29,1,30,1,
 51,255,255,197,1,
-55,45,1,
+55,32,1,
 17,105,2,
 51,255,255,197,1,3,
-55,46,1,
+55,33,1,
 17,109,2,
 51,255,255,197,1,3,
-28,47,1,
-17,229,2,2,45,1,46,1,
+28,34,1,
+17,229,2,2,32,1,33,1,
 51,255,255,197,1,
-55,48,1,
+55,35,1,
 17,105,2,
 51,255,255,197,1,3,
-55,49,1,
+55,36,1,
 17,109,2,
 51,255,255,197,1,3,
-28,50,1,
-17,244,2,2,48,1,49,1,
+28,37,1,
+17,244,2,2,35,1,36,1,
 51,255,255,197,1,
-55,51,1,
+55,38,1,
 17,105,2,
 51,255,255,197,1,3,
-55,52,1,
+55,39,1,
 17,109,2,
 51,255,255,197,1,3,
-28,53,1,
-17,3,3,2,51,1,52,1,
+28,40,1,
+17,3,3,2,38,1,39,1,
 51,255,255,197,1,
-55,54,1,
+55,41,1,
 17,105,2,
 51,255,255,197,1,3,
-55,55,1,
+55,42,1,
 17,109,2,
 51,255,255,197,1,3,
-28,56,1,
-17,13,3,2,54,1,55,1,
+28,43,1,
+17,13,3,2,41,1,42,1,
 51,255,255,197,1,
-55,57,1,
+55,44,1,
 17,105,2,
 51,255,255,197,1,3,
-55,58,1,
+55,45,1,
 17,109,2,
 51,255,255,197,1,3,
-55,59,1,
+55,46,1,
 17,24,3,
 51,255,255,197,1,3,
-28,60,1,
-17,32,3,3,57,1,58,1,59,1,
+28,47,1,
+17,32,3,3,44,1,45,1,46,1,
 51,255,255,197,1,
-55,61,1,
+55,48,1,
 17,105,2,
 51,255,255,197,1,3,
-55,62,1,
+55,49,1,
 17,109,2,
 51,255,255,197,1,3,
-28,63,1,
-17,50,3,2,61,1,62,1,
+28,50,1,
+17,50,3,2,48,1,49,1,
 51,255,255,197,1,
-55,64,1,
+55,51,1,
 17,105,2,
 51,255,255,197,1,3,
-55,65,1,
+55,52,1,
 17,109,2,
 51,255,255,197,1,3,
-28,66,1,
-17,65,3,2,64,1,65,1,
+28,53,1,
+17,65,3,2,51,1,52,1,
 51,255,255,197,1,
-55,67,1,
+55,54,1,
 17,107,1,
 51,255,255,78,3,3,
-55,68,1,
+55,55,1,
 17,84,3,
 51,255,255,78,3,3,
-28,69,1,
-17,86,3,2,67,1,68,1,
+28,56,1,
+17,86,3,2,54,1,55,1,
 51,255,255,111,3,
-55,70,1,
+55,57,1,
 17,105,2,
 51,255,255,197,1,3,
-55,71,1,
+55,58,1,
 17,109,2,
 51,255,255,197,1,3,
-28,72,1,
-17,116,3,2,70,1,71,1,
+28,59,1,
+17,116,3,2,57,1,58,1,
 51,255,255,197,1,
-55,73,1,
+55,60,1,
 17,16,0,
 51,255,255,197,1,3,
-55,74,1,
+55,61,1,
 17,51,0,
 51,255,255,197,1,3,
-55,75,1,
+55,62,1,
 17,130,3,
 51,255,255,111,3,3,
-54,76,1,2,
-51,72,1,
-28,77,1,
-17,116,3,3,73,1,74,1,75,1,
+54,63,1,2,
+51,59,1,
+28,64,1,
+17,116,3,3,60,1,61,1,62,1,
 51,255,255,197,1,
-51,77,1,
-55,78,1,
+51,64,1,
+55,65,1,
 17,105,2,
 51,255,255,197,1,3,
-55,79,1,
+55,66,1,
 17,109,2,
 51,255,255,197,1,3,
-28,80,1,
-17,135,3,2,78,1,79,1,
+28,67,1,
+17,135,3,2,65,1,66,1,
 51,255,255,197,1,
-55,81,1,
+55,68,1,
 17,105,2,
 51,255,255,197,1,3,
-55,82,1,
+55,69,1,
 17,109,2,
 51,255,255,197,1,3,
-55,83,1,
+55,70,1,
 17,149,3,
 51,255,255,111,3,3,
-28,84,1,
-17,154,3,3,81,1,82,1,83,1,
+28,71,1,
+17,154,3,3,68,1,69,1,70,1,
 51,255,255,197,1,
-55,85,1,
+55,72,1,
 17,105,2,
 51,255,255,197,1,3,
-55,86,1,
+55,73,1,
 17,109,2,
 51,255,255,197,1,3,
-54,87,1,2,
-51,84,1,
-28,88,1,
-17,154,3,2,85,1,86,1,
+54,74,1,2,
+51,71,1,
+28,75,1,
+17,154,3,2,72,1,73,1,
 51,255,255,197,1,
-51,88,1,
-55,89,1,
+51,75,1,
+55,76,1,
 17,167,3,
 51,255,255,111,3,3,
-55,90,1,
+55,77,1,
 17,84,3,
 51,255,255,111,3,3,
-28,91,1,
-17,169,3,2,89,1,90,1,
+28,78,1,
+17,169,3,2,76,1,77,1,
 51,255,255,111,3,
-55,92,1,
+55,79,1,
 17,167,3,
 51,255,255,185,3,3,
-55,93,1,
+55,80,1,
 17,84,3,
 51,255,255,111,3,3,
-54,94,1,2,
-51,91,1,
-28,95,1,
-17,169,3,2,92,1,93,1,
+54,81,1,2,
+51,78,1,
+28,82,1,
+17,169,3,2,79,1,80,1,
 51,255,255,185,3,
-51,95,1,
-55,96,1,
+51,82,1,
+55,83,1,
 17,107,1,
 51,255,255,78,3,3,
-55,97,1,
+55,84,1,
 17,84,3,
 51,255,255,78,3,3,
-28,98,1,
-17,191,3,2,96,1,97,1,
+28,85,1,
+17,191,3,2,83,1,84,1,
 51,255,255,111,3,
-55,99,1,
+55,86,1,
 17,105,2,
 51,255,255,197,1,3,
-55,100,1,
+55,87,1,
 17,109,2,
 51,255,255,197,1,3,
-28,101,1,
-17,214,3,2,99,1,100,1,
+28,88,1,
+17,214,3,2,86,1,87,1,
 51,255,255,197,1,
-55,102,1,
+55,89,1,
 17,107,1,
 51,255,255,78,3,3,
-55,103,1,
+55,90,1,
 17,84,3,
 51,255,255,78,3,3,
-28,104,1,
-17,232,3,2,102,1,103,1,
+28,91,1,
+17,232,3,2,89,1,90,1,
 51,255,255,111,3,
-55,105,1,
+55,92,1,
 17,105,2,
 51,255,255,197,1,3,
-55,106,1,
+55,93,1,
 17,109,2,
 51,255,255,197,1,3,
-28,107,1,
-17,254,3,2,105,1,106,1,
+28,94,1,
+17,254,3,2,92,1,93,1,
 51,255,255,197,1,
-55,108,1,
+55,95,1,
 17,105,2,
 51,255,255,197,1,3,
-55,109,1,
+55,96,1,
 17,109,2,
 51,255,255,197,1,3,
-28,110,1,
-17,15,4,2,108,1,109,1,
+28,97,1,
+17,15,4,2,95,1,96,1,
 51,255,255,197,1,
-55,111,1,
+55,98,1,
 17,107,1,
 51,255,255,78,3,3,
-55,112,1,
+55,99,1,
 17,84,3,
 51,255,255,78,3,3,
-28,113,1,
-17,32,4,2,111,1,112,1,
+28,100,1,
+17,32,4,2,98,1,99,1,
 51,255,255,111,3,
-55,114,1,
+55,101,1,
 17,105,2,
 51,255,255,197,1,3,
-55,115,1,
+55,102,1,
 17,109,2,
 51,255,255,197,1,3,
-28,116,1,
-17,54,4,2,114,1,115,1,
+28,103,1,
+17,54,4,2,101,1,102,1,
 51,255,255,197,1,
-55,117,1,
+55,104,1,
 17,105,2,
 51,255,255,197,1,3,
-55,118,1,
+55,105,1,
 17,109,2,
 51,255,255,197,1,3,
-28,119,1,
-17,71,4,2,117,1,118,1,
+28,106,1,
+17,71,4,2,104,1,105,1,
 51,255,255,197,1,
-55,120,1,
+55,107,1,
 17,105,2,
 51,255,255,197,1,3,
-55,121,1,
+55,108,1,
 17,109,2,
 51,255,255,197,1,3,
-28,122,1,
-17,88,4,2,120,1,121,1,
+28,109,1,
+17,88,4,2,107,1,108,1,
 51,255,255,197,1,
-55,123,1,
+55,110,1,
 17,105,2,
 51,255,255,197,1,3,
-55,124,1,
+55,111,1,
 17,109,2,
 51,255,255,197,1,3,
-28,125,1,
-17,104,4,2,123,1,124,1,
+28,112,1,
+17,104,4,2,110,1,111,1,
 51,255,255,197,1,
-55,126,1,
+55,113,1,
 17,119,4,
 51,255,255,185,3,3,
-28,127,1,
-17,125,4,1,126,1,
+28,114,1,
+17,125,4,1,113,1,
 51,255,255,111,3,
-55,128,1,
+55,115,1,
 17,148,4,
 51,255,255,185,3,3,
-55,129,1,
+55,116,1,
 17,160,4,
 51,255,255,111,3,3,
-55,130,1,
+55,117,1,
 17,166,4,
 51,255,255,185,3,3,
-28,131,1,
-17,175,4,3,128,1,129,1,130,1,
+28,118,1,
+17,175,4,3,115,1,116,1,117,1,
 51,255,255,185,3,
-55,132,1,
+55,119,1,
 17,119,4,
 51,255,255,185,3,3,
-28,133,1,
-17,202,4,1,132,1,
+28,120,1,
+17,202,4,1,119,1,
 51,255,255,111,3,
-55,134,1,
+55,121,1,
 17,119,4,
 51,255,255,185,3,3,
-55,135,1,
+55,122,1,
 17,226,4,
 51,255,255,185,3,3,
-28,136,1,
-17,235,4,2,134,1,135,1,
+28,123,1,
+17,235,4,2,121,1,122,1,
 51,255,255,185,3,
-55,137,1,
+55,124,1,
 17,105,2,
 51,255,255,197,1,3,
-55,138,1,
+55,125,1,
 17,109,2,
 51,255,255,197,1,3,
-55,139,1,
+55,126,1,
 17,7,5,
 51,255,255,78,3,3,
-28,140,1,
-17,15,5,3,137,1,138,1,139,1,
+28,127,1,
+17,15,5,3,124,1,125,1,126,1,
 51,255,255,197,1,
-55,141,1,
+55,128,1,
 17,105,2,
 51,255,255,197,1,3,
-55,142,1,
+55,129,1,
 17,109,2,
 51,255,255,197,1,3,
-28,143,1,
-17,26,5,2,141,1,142,1,
+28,130,1,
+17,26,5,2,128,1,129,1,
 51,255,255,197,1,
-55,144,1,
+55,131,1,
 17,105,2,
 51,255,255,197,1,3,
-55,145,1,
+55,132,1,
 17,109,2,
 51,255,255,197,1,3,
-28,146,1,
-17,36,5,2,144,1,145,1,
+28,133,1,
+17,36,5,2,131,1,132,1,
 51,255,255,197,1,
-55,147,1,
+55,134,1,
 17,105,2,
 51,255,255,197,1,3,
-55,148,1,
+55,135,1,
 17,109,2,
 51,255,255,197,1,3,
-28,149,1,
-17,53,5,2,147,1,148,1,
+28,136,1,
+17,53,5,2,134,1,135,1,
 51,255,255,197,1,
-55,150,1,
+55,137,1,
 17,105,2,
 51,255,255,197,1,3,
-55,151,1,
+55,138,1,
 17,109,2,
 51,255,255,197,1,3,
-28,152,1,
-17,65,5,2,150,1,151,1,
+28,139,1,
+17,65,5,2,137,1,138,1,
 51,255,255,197,1,
-55,153,1,
+55,140,1,
 17,136,0,
 51,255,255,243,1,3,
-28,154,1,
-17,82,5,1,153,1,
+28,141,1,
+17,82,5,1,140,1,
 51,255,255,77,0,
-55,155,1,
+55,142,1,
 17,16,0,
 51,255,255,77,0,3,
-55,156,1,
+55,143,1,
 17,51,0,
 51,255,255,77,0,3,
-28,157,1,
-17,87,5,2,155,1,156,1,
+28,144,1,
+17,87,5,2,142,1,143,1,
 51,255,255,184,1,
-55,158,1,
+55,145,1,
 17,16,0,
 51,255,255,78,3,3,
-55,159,1,
+55,146,1,
 17,51,0,
 51,255,255,78,3,3,
-54,160,1,2,
-51,157,1,
-28,161,1,
-17,87,5,2,158,1,159,1,
+54,147,1,2,
+51,144,1,
+28,148,1,
+17,87,5,2,145,1,146,1,
 51,255,255,111,3,
-51,161,1,69,0,
-100,1,
-106,1,
-42,1,
-104,1,
+51,148,1,69,0,
+87,1,
+93,1,
+29,1,
+91,1,
+96,1,
+64,1,
+58,1,
+54,1,
+73,1,
+130,0,
+236,0,
 109,1,
-77,1,
-71,1,
 67,1,
-86,1,
-143,0,
-249,0,
-122,1,
-80,1,
-74,1,
-60,1,
-92,1,
-255,0,
+61,1,
+47,1,
+79,1,
+242,0,
+10,1,
+254,0,
+4,1,
+248,0,
+82,1,
+70,1,
+100,1,
+103,1,
+40,1,
+112,1,
 23,1,
-11,1,
-17,1,
-5,1,
-95,1,
-83,1,
-113,1,
-116,1,
-53,1,
-125,1,
+85,1,
 36,1,
-98,1,
-49,1,
-29,1,
-33,1,
-119,1,
-39,1,
-89,1,
-252,0,
+16,1,
 20,1,
-8,1,
-14,1,
-2,1,
+106,1,
 26,1,
-133,1,
-123,0,
-148,0,
-153,0,
-18,0,
-25,0,
-93,0,
-108,0,
+76,1,
+239,0,
+7,1,
+251,0,
+1,1,
 245,0,
-230,0,
-32,0,
-63,0,
-78,0,
-157,0,
-9,0,
-138,0,
-47,0,
-35,0,
-39,0,
-37,0,
-127,1,
-215,0,
-197,0,
-159,0,
-49,0,
-41,0,
-45,0,
-43,0,
+13,1,
+120,1,
+112,0,
+135,0,
+140,0,
+17,0,
+24,0,
+86,0,
+99,0,
+232,0,
+217,0,
+31,0,
+60,0,
+73,0,
+144,0,
+8,0,
+125,0,
+46,0,
+34,0,
+38,0,
+36,0,
+114,1,
+202,0,
+184,0,
+146,0,
+48,0,
+40,0,
+44,0,
+42,0,
 20,
-29,20,1,
+29,7,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1603,30 +1525,30 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 51,255,255,197,1,1,
 25,
 51,255,255,111,3,0,0,0,0,1,
-29,23,1,
+29,10,1,
 2,
 52,1,0,0,0,0,1,
 44,
-57,21,1,0,1,
-29,26,1,
+57,8,1,0,1,
+29,13,1,
 2,
 52,1,0,0,0,0,1,
 44,
-57,25,1,0,1,
-29,29,1,
+57,12,1,0,1,
+29,16,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,27,1,0,0,
+57,14,1,0,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,27,1,0,1,3,2,
-57,28,1,0,1,
-29,32,1,
+57,14,1,0,1,3,2,
+57,15,1,0,1,
+29,19,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1636,26 +1558,26 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,31,1,0,1,3,2,
-57,30,1,0,0,
-57,31,1,0,1,
-29,35,1,
+57,18,1,0,1,3,2,
+57,17,1,0,0,
+57,18,1,0,1,
+29,22,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,33,1,0,2,
+57,20,1,0,2,
 50,
-57,34,1,0,1,3,1,
-29,38,1,
+57,21,1,0,1,3,1,
+29,25,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,37,1,0,2,
+57,24,1,0,2,
 50,
-57,36,1,0,1,3,1,
-29,41,1,
+57,23,1,0,1,3,1,
+29,28,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1664,9 +1586,9 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,40,1,0,1,3,2,
-57,39,1,0,1,
-29,44,1,
+57,27,1,0,1,3,2,
+57,26,1,0,1,
+29,31,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1675,25 +1597,25 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,42,1,0,1,3,2,
-57,43,1,0,1,
-29,47,1,
+57,29,1,0,1,3,2,
+57,30,1,0,1,
+29,34,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
 1,
 50,
-57,46,1,0,1,3,2,
-57,45,1,0,0,
+57,33,1,0,1,3,2,
+57,32,1,0,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,45,1,0,1,3,2,
-57,46,1,0,1,
-29,50,1,
+57,32,1,0,1,3,2,
+57,33,1,0,1,
+29,37,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1703,13 +1625,13 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,49,1,0,1,3,2,
-57,48,1,0,0,
+57,36,1,0,1,3,2,
+57,35,1,0,0,
 1,
 50,
-57,48,1,0,1,3,2,
-57,49,1,0,1,
-29,53,1,
+57,35,1,0,1,3,2,
+57,36,1,0,1,
+29,40,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1719,52 +1641,52 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,52,1,0,1,3,2,
-57,51,1,0,0,
+57,39,1,0,1,3,2,
+57,38,1,0,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,51,1,0,1,3,2,
-57,52,1,0,1,
-29,56,1,
+57,38,1,0,1,3,2,
+57,39,1,0,1,
+29,43,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
 51,255,255,197,1,255,255,103,5,2,
 1,
-57,54,1,0,0,
-57,55,1,0,
+57,41,1,0,0,
+57,42,1,0,
 25,
 51,255,255,111,3,0,0,128,63,1,
-29,60,1,
+29,47,1,
 2,
 52,1,1,0,
-55,162,1,
+55,149,1,
 17,107,5,
 51,255,255,78,3,2,1,0,
 0,0,2,
-56,162,1,
+56,149,1,
 51,255,255,78,3,0,
 1,
 50,
-57,59,1,0,2,0,1,0,
+57,46,1,0,2,0,1,0,
 1,
 50,
-57,59,1,0,2,2,3,2,
+57,46,1,0,2,2,3,2,
 1,
 8,
 51,255,255,78,3,2,
 50,
-57,58,1,0,1,3,
+57,45,1,0,1,3,
 50,
-57,57,1,0,1,3,0,
+57,44,1,0,1,3,0,
 27,
 51,255,255,78,3,255,255,103,5,2,
 50,
-57,59,1,0,2,2,3,
+57,46,1,0,2,2,3,
 25,
 51,255,255,111,3,0,0,0,0,
 44,
@@ -1776,33 +1698,33 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 51,255,255,111,3,0,0,128,63,
 1,
 1,
-57,57,1,0,2,
+57,44,1,0,2,
 50,
-57,162,1,0,1,0,0,
+57,149,1,0,1,0,0,
 1,
-57,58,1,0,2,
+57,45,1,0,2,
 50,
-57,162,1,0,1,1,1,
-29,63,1,
+57,149,1,0,1,1,1,
+29,50,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,61,1,0,2,
-57,62,1,0,1,
-29,66,1,
+57,48,1,0,2,
+57,49,1,0,1,
+29,53,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,64,1,0,0,
+57,51,1,0,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
-57,64,1,0,2,
-57,65,1,0,1,
-29,69,1,
+57,51,1,0,2,
+57,52,1,0,1,
+29,56,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -1812,170 +1734,170 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,68,1,0,1,0,20,
+57,55,1,0,1,0,20,
 50,
-57,68,1,0,1,1,
+57,55,1,0,1,1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,67,1,0,1,0,2,
+57,54,1,0,1,0,2,
 50,
-57,68,1,0,1,0,
+57,55,1,0,1,0,
 1,
 1,
 50,
-57,67,1,0,1,1,2,
+57,54,1,0,1,1,2,
 50,
-57,68,1,0,1,1,1,
+57,55,1,0,1,1,1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 1,
 50,
-57,68,1,0,1,1,1,
+57,55,1,0,1,1,1,
 50,
-57,68,1,0,1,0,2,
+57,55,1,0,1,0,2,
 1,
 50,
-57,67,1,0,1,1,1,
+57,54,1,0,1,1,1,
 50,
-57,67,1,0,1,0,1,
-29,72,1,
+57,54,1,0,1,0,1,
+29,59,1,
 2,
 52,1,1,0,
-55,163,1,
+55,150,1,
 17,113,5,
 51,255,255,197,1,2,1,0,
 0,0,3,
-56,163,1,
+56,150,1,
 51,255,255,197,1,0,
 8,
 51,255,255,197,1,4,
 27,
-51,255,255,111,3,69,1,2,
+51,255,255,111,3,56,1,2,
 50,
-57,70,1,0,2,0,3,
+57,57,1,0,2,0,3,
 50,
-57,71,1,0,2,0,3,
+57,58,1,0,2,0,3,
 27,
-51,255,255,111,3,69,1,2,
+51,255,255,111,3,56,1,2,
 50,
-57,70,1,0,2,1,3,
+57,57,1,0,2,1,3,
 50,
-57,71,1,0,2,1,3,
+57,58,1,0,2,1,3,
 27,
-51,255,255,111,3,69,1,2,
+51,255,255,111,3,56,1,2,
 50,
-57,70,1,0,2,2,3,
+57,57,1,0,2,2,3,
 50,
-57,71,1,0,2,2,3,
+57,58,1,0,2,2,3,
 1,
 50,
-57,70,1,0,1,3,0,
+57,57,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,70,1,0,1,3,2,
+57,57,1,0,1,3,2,
 50,
-57,71,1,0,1,3,
+57,58,1,0,1,3,
 22,
 1,
 50,
-57,163,1,2,3,0,1,2,22,
+57,150,1,2,3,0,1,2,22,
 1,
 1,
 50,
-57,71,1,0,3,0,1,2,2,
+57,58,1,0,3,0,1,2,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,70,1,0,1,3,0,
+57,57,1,0,1,3,0,
 1,
 50,
-57,70,1,0,3,0,1,2,2,
+57,57,1,0,3,0,1,2,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,71,1,0,1,3,
+57,58,1,0,1,3,
 44,
-57,163,1,0,1,
-29,77,1,
+57,150,1,0,1,
+29,64,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,72,1,2,
+51,255,255,197,1,59,1,2,
 53,
 12,
 51,255,255,120,5,1,
-57,75,1,0,
-57,74,1,0,
-57,73,1,0,
+57,62,1,0,
+57,61,1,0,
+57,60,1,0,
 53,
 12,
 51,255,255,120,5,1,
-57,75,1,0,
-57,73,1,0,
-57,74,1,0,1,
-29,80,1,
+57,62,1,0,
+57,60,1,0,
+57,61,1,0,1,
+29,67,1,
 2,
 52,1,1,0,
-55,164,1,
+55,151,1,
 17,113,5,
 51,255,255,197,1,2,1,0,
 0,0,3,
-56,164,1,
+56,151,1,
 51,255,255,197,1,0,
 27,
-51,255,255,197,1,29,1,2,
-57,78,1,0,
-57,79,1,0,
+51,255,255,197,1,16,1,2,
+57,65,1,0,
+57,66,1,0,
 22,
 1,
 50,
-57,164,1,1,3,0,1,2,15,
+57,151,1,1,3,0,1,2,15,
 27,
 51,255,255,185,3,255,255,125,5,2,
 50,
-57,164,1,0,3,0,1,2,
+57,151,1,0,3,0,1,2,
 1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,79,1,0,1,3,2,
+57,66,1,0,1,3,2,
 50,
-57,78,1,0,3,0,1,2,0,
+57,65,1,0,3,0,1,2,0,
 50,
-57,79,1,0,3,0,1,2,
+57,66,1,0,3,0,1,2,
 44,
-57,164,1,0,1,
-29,84,1,
+57,151,1,0,1,
+29,71,1,
 2,
 52,1,2,0,
-55,165,1,
+55,152,1,
 17,16,0,
 51,255,255,197,1,2,
-55,166,1,
+55,153,1,
 17,51,0,
 51,255,255,185,3,2,2,0,
 0,0,
 1,0,4,
-56,165,1,
+56,152,1,
 51,255,255,197,1,0,
 27,
-51,255,255,197,1,29,1,2,
-57,81,1,0,
-57,82,1,0,
-56,166,1,
+51,255,255,197,1,16,1,2,
+57,68,1,0,
+57,69,1,0,
+56,153,1,
 51,255,255,185,3,0,
 1,
 1,
@@ -1983,59 +1905,59 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,82,1,0,1,3,2,
+57,69,1,0,1,3,2,
 50,
-57,81,1,0,3,0,1,2,0,
+57,68,1,0,3,0,1,2,0,
 50,
-57,82,1,0,3,0,1,2,
+57,69,1,0,3,0,1,2,
 22,
 1,
 50,
-57,165,1,1,3,0,1,2,15,
+57,152,1,1,3,0,1,2,15,
 1,
-57,83,1,0,2,
+57,70,1,0,2,
 27,
 51,255,255,185,3,255,255,103,5,2,
 1,
 50,
-57,165,1,0,3,0,1,2,2,
-57,83,1,0,
+57,152,1,0,3,0,1,2,2,
+57,70,1,0,
 1,
-57,166,1,0,2,
-57,83,1,0,
+57,153,1,0,2,
+57,70,1,0,
 44,
-57,165,1,0,1,
-29,88,1,
+57,152,1,0,1,
+29,75,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,84,1,3,
-57,85,1,0,
-57,86,1,0,
+51,255,255,197,1,71,1,3,
+57,72,1,0,
+57,73,1,0,
 25,
 51,255,255,111,3,0,0,128,63,1,
-29,91,1,
+29,78,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,89,1,0,3,
-57,90,1,0,1,
-29,95,1,
+57,76,1,0,3,
+57,77,1,0,1,
+29,82,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
-57,92,1,0,3,
-57,93,1,0,1,
-29,98,1,
+57,79,1,0,3,
+57,80,1,0,1,
+29,85,1,
 2,
 52,1,0,0,0,0,1,
 32,0,
 1,
 50,
-57,97,1,0,1,0,16,
+57,84,1,0,1,0,16,
 25,
 51,255,255,111,3,0,0,0,0,
 2,
@@ -2043,28 +1965,28 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 44,
 1,
 50,
-57,96,1,0,1,0,2,
+57,83,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,97,1,0,1,1,1,
+57,84,1,0,1,1,1,
 2,
 52,1,1,0,
-55,167,1,
+55,154,1,
 17,129,5,
 51,255,255,111,3,2,1,0,
 0,0,2,
-56,167,1,
+56,154,1,
 51,255,255,111,3,0,
 1,
 50,
-57,96,1,0,1,1,1,
+57,83,1,0,1,1,1,
 50,
-57,96,1,0,1,0,
+57,83,1,0,1,0,
 32,0,
 1,
-57,167,1,0,16,
+57,154,1,0,16,
 25,
 51,255,255,111,3,0,0,0,0,
 2,
@@ -2074,109 +1996,109 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 50,
-57,96,1,0,1,1,2,
+57,83,1,0,1,1,2,
 50,
-57,97,1,0,1,1,0,
+57,84,1,0,1,1,0,
 1,
 50,
-57,96,1,0,1,0,2,
+57,83,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,97,1,0,1,1,0,
+57,84,1,0,1,1,0,
 1,
 50,
-57,97,1,0,1,0,2,
+57,84,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,96,1,0,1,1,1,
+57,83,1,0,1,1,1,
 2,
 52,1,0,0,0,0,2,
 22,
 1,
-57,167,1,1,15,
+57,154,1,1,15,
 27,
 51,255,255,111,3,255,255,103,5,2,
 50,
-57,97,1,0,1,1,
+57,84,1,0,1,1,
 27,
-51,255,255,111,3,91,1,2,
+51,255,255,111,3,78,1,2,
 1,
 50,
-57,97,1,0,1,0,2,
+57,84,1,0,1,0,2,
 50,
-57,96,1,0,1,1,
-57,167,1,0,
+57,83,1,0,1,1,
+57,154,1,0,
 44,
 1,
 1,
 1,
-57,167,1,0,2,
+57,154,1,0,2,
 50,
-57,96,1,0,1,1,0,
+57,83,1,0,1,1,0,
 1,
 50,
-57,96,1,0,1,0,2,
+57,83,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,97,1,0,1,1,0,
+57,84,1,0,1,1,0,
 1,
 50,
-57,97,1,0,1,0,2,
+57,84,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,96,1,0,1,1,1,1,1,
-29,101,1,
+57,83,1,0,1,1,1,1,1,
+29,88,1,
 2,
 52,1,0,0,0,0,1,
 44,
 8,
 51,255,255,197,1,4,
 27,
-51,255,255,111,3,98,1,2,
+51,255,255,111,3,85,1,2,
 50,
-57,99,1,0,2,0,3,
+57,86,1,0,2,0,3,
 50,
-57,100,1,0,2,0,3,
+57,87,1,0,2,0,3,
 27,
-51,255,255,111,3,98,1,2,
+51,255,255,111,3,85,1,2,
 50,
-57,99,1,0,2,1,3,
+57,86,1,0,2,1,3,
 50,
-57,100,1,0,2,1,3,
+57,87,1,0,2,1,3,
 27,
-51,255,255,111,3,98,1,2,
+51,255,255,111,3,85,1,2,
 50,
-57,99,1,0,2,2,3,
+57,86,1,0,2,2,3,
 50,
-57,100,1,0,2,2,3,
+57,87,1,0,2,2,3,
 1,
 50,
-57,99,1,0,1,3,0,
+57,86,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,99,1,0,1,3,2,
+57,86,1,0,1,3,2,
 50,
-57,100,1,0,1,3,1,
-29,104,1,
+57,87,1,0,1,3,1,
+29,91,1,
 2,
 52,1,0,0,0,0,1,
 32,0,
 1,
 50,
-57,103,1,0,1,1,16,
+57,90,1,0,1,1,16,
 50,
-57,103,1,0,1,0,
+57,90,1,0,1,0,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2184,29 +2106,29 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 50,
-57,102,1,0,1,1,2,
+57,89,1,0,1,1,2,
 50,
-57,103,1,0,1,1,0,
+57,90,1,0,1,1,0,
 1,
 50,
-57,102,1,0,1,0,2,
+57,89,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,103,1,0,1,1,0,
+57,90,1,0,1,1,0,
 1,
 50,
-57,103,1,0,1,0,2,
+57,90,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,102,1,0,1,1,1,
+57,89,1,0,1,1,1,
 32,0,
 1,
 50,
-57,102,1,0,1,0,16,
+57,89,1,0,1,0,16,
 25,
 51,255,255,111,3,0,0,0,0,
 2,
@@ -2214,19 +2136,19 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 44,
 1,
 50,
-57,103,1,0,1,0,2,
+57,90,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,102,1,0,1,1,1,
+57,89,1,0,1,1,1,
 2,
 52,1,1,0,
-55,168,1,
+55,155,1,
 17,129,5,
 51,255,255,111,3,2,1,0,
 0,0,2,
-56,168,1,
+56,155,1,
 51,255,255,111,3,0,
 27,
 51,255,255,111,3,255,255,125,5,2,
@@ -2234,86 +2156,86 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 51,255,255,111,3,0,0,0,0,
 1,
 50,
-57,103,1,0,1,1,1,
+57,90,1,0,1,1,1,
 27,
-51,255,255,111,3,91,1,2,
+51,255,255,111,3,78,1,2,
 1,
 1,
 50,
-57,103,1,0,1,1,1,
+57,90,1,0,1,1,1,
 50,
-57,103,1,0,1,0,2,
+57,90,1,0,1,0,2,
 50,
-57,102,1,0,1,1,
+57,89,1,0,1,1,
 50,
-57,102,1,0,1,0,
+57,89,1,0,1,0,
 44,
 1,
 1,
 1,
-57,168,1,0,2,
+57,155,1,0,2,
 50,
-57,102,1,0,1,1,0,
+57,89,1,0,1,1,0,
 1,
 50,
-57,102,1,0,1,0,2,
+57,89,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,103,1,0,1,1,0,
+57,90,1,0,1,1,0,
 1,
 50,
-57,103,1,0,1,0,2,
+57,90,1,0,1,0,2,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,102,1,0,1,1,1,1,
-29,107,1,
+57,89,1,0,1,1,1,1,
+29,94,1,
 2,
 52,1,0,0,0,0,1,
 44,
 8,
 51,255,255,197,1,4,
 27,
-51,255,255,111,3,104,1,2,
+51,255,255,111,3,91,1,2,
 50,
-57,105,1,0,2,0,3,
+57,92,1,0,2,0,3,
 50,
-57,106,1,0,2,0,3,
+57,93,1,0,2,0,3,
 27,
-51,255,255,111,3,104,1,2,
+51,255,255,111,3,91,1,2,
 50,
-57,105,1,0,2,1,3,
+57,92,1,0,2,1,3,
 50,
-57,106,1,0,2,1,3,
+57,93,1,0,2,1,3,
 27,
-51,255,255,111,3,104,1,2,
+51,255,255,111,3,91,1,2,
 50,
-57,105,1,0,2,2,3,
+57,92,1,0,2,2,3,
 50,
-57,106,1,0,2,2,3,
+57,93,1,0,2,2,3,
 1,
 50,
-57,105,1,0,1,3,0,
+57,92,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,105,1,0,1,3,2,
+57,92,1,0,1,3,2,
 50,
-57,106,1,0,1,3,1,
-29,110,1,
+57,93,1,0,1,3,1,
+29,97,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,72,1,2,
-57,109,1,0,
-57,108,1,0,1,
-29,113,1,
+51,255,255,197,1,59,1,2,
+57,96,1,0,
+57,95,1,0,1,
+29,100,1,
 2,
 52,1,0,0,0,0,1,
 32,0,
@@ -2322,53 +2244,53 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,20,
+57,98,1,0,1,0,20,
 50,
-57,111,1,0,1,1,
+57,98,1,0,1,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
 1,
 27,
-51,255,255,111,3,91,1,2,
+51,255,255,111,3,78,1,2,
 1,
 1,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 1,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,
+57,98,1,0,1,0,
 50,
-57,112,1,0,1,1,0,
+57,99,1,0,1,1,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,112,1,0,1,1,2,
+57,99,1,0,1,1,2,
 50,
-57,111,1,0,1,0,0,
+57,98,1,0,1,0,0,
 1,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 1,
 1,
 42,1,
 50,
-57,111,1,0,1,1,0,
+57,98,1,0,1,1,0,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,0,
+57,98,1,0,1,0,0,
 25,
 51,255,255,111,3,0,0,128,63,1,
 32,0,
@@ -2377,79 +2299,79 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,64,2,
 50,
-57,112,1,0,1,0,20,
+57,99,1,0,1,0,20,
 50,
-57,112,1,0,1,1,
+57,99,1,0,1,1,
 2,
 52,1,4,0,
-55,169,1,
+55,156,1,
 17,135,5,
 51,255,255,111,3,2,
-55,170,1,
+55,157,1,
 17,140,5,
 51,255,255,111,3,2,
-55,171,1,
+55,158,1,
 17,145,5,
 51,255,255,111,3,2,
-55,172,1,
+55,159,1,
 17,151,5,
 51,255,255,111,3,2,4,0,
 1,0,
 0,0,
 3,0,
 2,0,5,
-56,169,1,
+56,156,1,
 51,255,255,111,3,0,
 1,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 50,
-57,112,1,0,1,0,
-56,170,1,
+57,99,1,0,1,0,
+56,157,1,
 51,255,255,111,3,0,
 1,
-57,169,1,0,2,
+57,156,1,0,2,
 50,
-57,112,1,0,1,0,
-56,171,1,
+57,99,1,0,1,0,
+56,158,1,
 51,255,255,111,3,0,
 1,
 50,
-57,112,1,0,1,1,2,
+57,99,1,0,1,1,2,
 50,
-57,112,1,0,1,1,
-56,172,1,
+57,99,1,0,1,1,
+56,159,1,
 51,255,255,111,3,0,
 1,
-57,171,1,0,2,
+57,158,1,0,2,
 50,
-57,112,1,0,1,1,
+57,99,1,0,1,1,
 44,
 27,
-51,255,255,111,3,91,1,2,
+51,255,255,111,3,78,1,2,
 1,
 1,
 1,
 1,
-57,171,1,0,2,
+57,158,1,0,2,
 1,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 1,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,64,64,2,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,192,64,2,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 25,
 51,255,255,111,3,0,0,128,63,0,
 1,
@@ -2458,34 +2380,34 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,64,65,2,
 50,
-57,112,1,0,1,1,2,
-57,169,1,0,2,
+57,99,1,0,1,1,2,
+57,156,1,0,2,
 1,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,65,2,
-57,170,1,0,2,
+57,157,1,0,2,
 1,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 1,
-57,172,1,0,2,
+57,159,1,0,2,
 50,
-57,111,1,0,1,0,
-57,171,1,0,1,
+57,98,1,0,1,0,
+57,158,1,0,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2494,84 +2416,84 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 1,
 1,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,0,
+57,98,1,0,1,0,0,
 25,
 51,255,255,111,3,0,0,128,63,0,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 1,
 27,
 51,255,255,111,3,255,255,157,5,1,
 1,
 50,
-57,112,1,0,1,1,2,
+57,99,1,0,1,1,2,
 50,
-57,112,1,0,1,0,2,
+57,99,1,0,1,0,2,
 1,
 50,
-57,111,1,0,1,1,1,
+57,98,1,0,1,1,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,111,1,0,1,0,1,
+57,98,1,0,1,0,1,
 1,
 50,
-57,112,1,0,1,1,2,
+57,99,1,0,1,1,2,
 50,
-57,111,1,0,1,0,1,1,
-29,116,1,
+57,98,1,0,1,0,1,1,
+29,103,1,
 2,
 52,1,0,0,0,0,1,
 44,
 53,
 1,
 50,
-57,115,1,0,1,3,16,
+57,102,1,0,1,3,16,
 25,
 51,255,255,111,3,0,0,0,0,
-57,114,1,0,
+57,101,1,0,
 8,
 51,255,255,197,1,4,
 27,
-51,255,255,111,3,113,1,2,
+51,255,255,111,3,100,1,2,
 50,
-57,114,1,0,2,0,3,
+57,101,1,0,2,0,3,
 50,
-57,115,1,0,2,0,3,
+57,102,1,0,2,0,3,
 27,
-51,255,255,111,3,113,1,2,
+51,255,255,111,3,100,1,2,
 50,
-57,114,1,0,2,1,3,
+57,101,1,0,2,1,3,
 50,
-57,115,1,0,2,1,3,
+57,102,1,0,2,1,3,
 27,
-51,255,255,111,3,113,1,2,
+51,255,255,111,3,100,1,2,
 50,
-57,114,1,0,2,2,3,
+57,101,1,0,2,2,3,
 50,
-57,115,1,0,2,2,3,
+57,102,1,0,2,2,3,
 1,
 50,
-57,114,1,0,1,3,0,
+57,101,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,114,1,0,1,3,2,
+57,101,1,0,1,3,2,
 50,
-57,115,1,0,1,3,1,
-29,119,1,
+57,102,1,0,1,3,1,
+29,106,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2580,9 +2502,9 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 50,
-57,117,1,0,3,0,1,2,0,
+57,104,1,0,3,0,1,2,0,
 50,
-57,118,1,0,3,0,1,2,1,
+57,105,1,0,3,0,1,2,1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
@@ -2590,26 +2512,26 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 51,255,255,185,3,255,255,103,5,2,
 1,
 50,
-57,117,1,0,3,0,1,2,2,
+57,104,1,0,3,0,1,2,2,
 50,
-57,118,1,0,1,3,
+57,105,1,0,1,3,
 1,
 50,
-57,118,1,0,3,0,1,2,2,
+57,105,1,0,3,0,1,2,2,
 50,
-57,117,1,0,1,3,
+57,104,1,0,1,3,
 1,
 50,
-57,117,1,0,1,3,0,
+57,104,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,117,1,0,1,3,2,
+57,104,1,0,1,3,2,
 50,
-57,118,1,0,1,3,1,
-29,122,1,
+57,105,1,0,1,3,1,
+29,109,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2618,29 +2540,29 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 50,
-57,121,1,0,3,0,1,2,0,
+57,108,1,0,3,0,1,2,0,
 50,
-57,120,1,0,3,0,1,2,1,
+57,107,1,0,3,0,1,2,1,
 1,
 1,
 25,
 51,255,255,111,3,0,0,0,64,2,
 50,
-57,121,1,0,3,0,1,2,2,
+57,108,1,0,3,0,1,2,2,
 50,
-57,120,1,0,3,0,1,2,
+57,107,1,0,3,0,1,2,
 1,
 50,
-57,120,1,0,1,3,0,
+57,107,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,120,1,0,1,3,2,
+57,107,1,0,1,3,2,
 50,
-57,121,1,0,1,3,1,
-29,125,1,
+57,108,1,0,1,3,1,
+29,112,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2653,34 +2575,34 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,123,1,0,1,3,2,
+57,110,1,0,1,3,2,
 50,
-57,124,1,0,3,0,1,2,0,
+57,111,1,0,3,0,1,2,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,124,1,0,1,3,2,
+57,111,1,0,1,3,2,
 50,
-57,123,1,0,3,0,1,2,0,
+57,110,1,0,3,0,1,2,0,
 1,
 50,
-57,123,1,0,3,0,1,2,2,
+57,110,1,0,3,0,1,2,2,
 50,
-57,124,1,0,3,0,1,2,
+57,111,1,0,3,0,1,2,
 1,
 50,
-57,123,1,0,1,3,0,
+57,110,1,0,1,3,0,
 1,
 1,
 25,
 51,255,255,111,3,0,0,128,63,1,
 50,
-57,123,1,0,1,3,2,
+57,110,1,0,1,3,2,
 50,
-57,124,1,0,1,3,1,
-29,127,1,
+57,111,1,0,1,3,1,
+29,114,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2694,122 +2616,122 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 51,255,255,111,3,61,10,23,63,
 25,
 51,255,255,111,3,174,71,225,61,
-57,126,1,0,1,
-29,131,1,
+57,113,1,0,1,
+29,118,1,
 2,
 52,1,4,0,
-55,173,1,
+55,160,1,
 17,166,5,
 51,255,255,111,3,2,
-55,174,1,
+55,161,1,
 17,113,5,
 51,255,255,185,3,2,
-55,175,1,
+55,162,1,
 17,170,5,
 51,255,255,111,3,2,
-55,176,1,
+55,163,1,
 17,178,5,
 51,255,255,111,3,2,4,0,
 0,0,
 3,0,
 2,0,
 1,0,7,
-56,173,1,
+56,160,1,
 51,255,255,111,3,0,
 27,
-51,255,255,111,3,127,1,1,
-57,130,1,0,
-56,174,1,
+51,255,255,111,3,114,1,1,
+57,117,1,0,
+56,161,1,
 51,255,255,185,3,0,
 1,
 1,
-57,173,1,0,1,
+57,160,1,0,1,
 27,
-51,255,255,111,3,127,1,1,
-57,128,1,0,0,
-57,128,1,0,
-56,175,1,
+51,255,255,111,3,114,1,1,
+57,115,1,0,0,
+57,115,1,0,
+56,162,1,
 51,255,255,111,3,0,
 27,
 51,255,255,111,3,255,255,103,5,2,
 27,
 51,255,255,111,3,255,255,103,5,2,
 50,
-57,174,1,0,1,0,
+57,161,1,0,1,0,
 50,
-57,174,1,0,1,1,
+57,161,1,0,1,1,
 50,
-57,174,1,0,1,2,
-56,176,1,
+57,161,1,0,1,2,
+56,163,1,
 51,255,255,111,3,0,
 27,
 51,255,255,111,3,255,255,125,5,2,
 27,
 51,255,255,111,3,255,255,125,5,2,
 50,
-57,174,1,0,1,0,
+57,161,1,0,1,0,
 50,
-57,174,1,0,1,1,
+57,161,1,0,1,1,
 50,
-57,174,1,0,1,2,
+57,161,1,0,1,2,
 32,0,
 1,
 1,
-57,175,1,0,18,
+57,162,1,0,18,
 25,
 51,255,255,111,3,0,0,0,0,8,
 1,
-57,173,1,0,17,
-57,175,1,0,
+57,160,1,0,17,
+57,162,1,0,
 2,
 52,1,0,0,0,0,1,
 22,
 1,
-57,174,1,1,15,
+57,161,1,1,15,
 1,
-57,173,1,0,0,
+57,160,1,0,0,
 1,
 1,
-57,174,1,0,1,
-57,173,1,0,2,
+57,161,1,0,1,
+57,160,1,0,2,
 27,
-51,255,255,111,3,91,1,2,
-57,173,1,0,
+51,255,255,111,3,78,1,2,
+57,160,1,0,
 1,
-57,173,1,0,1,
-57,175,1,0,1,
+57,160,1,0,1,
+57,162,1,0,1,
 58,
 32,0,
 1,
 1,
-57,176,1,0,19,
-57,129,1,0,8,
+57,163,1,0,19,
+57,116,1,0,8,
 1,
-57,176,1,0,17,
-57,173,1,0,
+57,163,1,0,17,
+57,160,1,0,
 2,
 52,1,0,0,0,0,1,
 22,
 1,
-57,174,1,1,15,
+57,161,1,1,15,
 1,
-57,173,1,0,0,
+57,160,1,0,0,
 27,
-51,255,255,185,3,95,1,2,
+51,255,255,185,3,82,1,2,
 1,
 1,
-57,174,1,0,1,
-57,173,1,0,2,
+57,161,1,0,1,
+57,160,1,0,2,
 1,
-57,129,1,0,1,
-57,173,1,0,
+57,116,1,0,1,
+57,160,1,0,
 1,
-57,176,1,0,1,
-57,173,1,0,1,
+57,163,1,0,1,
+57,160,1,0,1,
 58,
 44,
-57,174,1,0,1,
-29,133,1,
+57,161,1,0,1,
+29,120,1,
 2,
 52,1,0,0,0,0,1,
 44,
@@ -2819,92 +2741,92 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 27,
 51,255,255,111,3,255,255,125,5,2,
 50,
-57,132,1,0,1,0,
+57,119,1,0,1,0,
 50,
-57,132,1,0,1,1,
+57,119,1,0,1,1,
 50,
-57,132,1,0,1,2,1,
+57,119,1,0,1,2,1,
 27,
 51,255,255,111,3,255,255,103,5,2,
 27,
 51,255,255,111,3,255,255,103,5,2,
 50,
-57,132,1,0,1,0,
+57,119,1,0,1,0,
 50,
-57,132,1,0,1,1,
+57,119,1,0,1,1,
 50,
-57,132,1,0,1,2,1,
-29,136,1,
+57,119,1,0,1,2,1,
+29,123,1,
 2,
 52,1,2,0,
-55,177,1,
+55,164,1,
 17,186,5,
 51,255,255,111,3,2,
-55,178,1,
+55,165,1,
 17,189,5,
 51,255,255,111,3,2,2,0,
 0,0,
 1,0,3,
-56,177,1,
+56,164,1,
 51,255,255,111,3,0,
 27,
 51,255,255,111,3,255,255,103,5,2,
 27,
 51,255,255,111,3,255,255,103,5,2,
 50,
-57,134,1,0,1,0,
+57,121,1,0,1,0,
 50,
-57,134,1,0,1,1,
+57,121,1,0,1,1,
 50,
-57,134,1,0,1,2,
-56,178,1,
+57,121,1,0,1,2,
+56,165,1,
 51,255,255,111,3,0,
 27,
 51,255,255,111,3,255,255,125,5,2,
 27,
 51,255,255,111,3,255,255,125,5,2,
 50,
-57,134,1,0,1,0,
+57,121,1,0,1,0,
 50,
-57,134,1,0,1,1,
+57,121,1,0,1,1,
 50,
-57,134,1,0,1,2,
+57,121,1,0,1,2,
 44,
 53,
 1,
-57,178,1,0,19,
-57,177,1,0,
+57,165,1,0,19,
+57,164,1,0,
 1,
 1,
 1,
-57,134,1,0,1,
-57,177,1,0,2,
+57,121,1,0,1,
+57,164,1,0,2,
 27,
-51,255,255,111,3,133,1,1,
-57,135,1,0,3,
+51,255,255,111,3,120,1,1,
+57,122,1,0,3,
 1,
-57,178,1,0,1,
-57,177,1,0,
+57,165,1,0,1,
+57,164,1,0,
 13,
 51,255,255,185,3,1,
 25,
 51,255,255,111,3,0,0,0,0,1,
-29,140,1,
+29,127,1,
 2,
 52,1,5,0,
-55,179,1,
+55,166,1,
 17,160,4,
 51,255,255,111,3,2,
-55,180,1,
+55,167,1,
 17,192,5,
 51,255,255,185,3,2,
-55,181,1,
+55,168,1,
 17,196,5,
 51,255,255,185,3,2,
-55,182,1,
+55,169,1,
 17,200,5,
 51,255,255,185,3,2,
-55,183,1,
+55,170,1,
 17,202,5,
 51,255,255,185,3,2,5,0,
 0,0,
@@ -2912,63 +2834,63 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 3,0,
 4,0,
 1,0,7,
-56,179,1,
+56,166,1,
 51,255,255,111,3,0,
 1,
 50,
-57,138,1,0,1,3,2,
+57,125,1,0,1,3,2,
 50,
-57,137,1,0,1,3,
-56,180,1,
+57,124,1,0,1,3,
+56,167,1,
 51,255,255,185,3,0,
 1,
 50,
-57,137,1,0,3,0,1,2,2,
+57,124,1,0,3,0,1,2,2,
 50,
-57,138,1,0,1,3,
-56,181,1,
+57,125,1,0,1,3,
+56,168,1,
 51,255,255,185,3,0,
 1,
 50,
-57,138,1,0,3,0,1,2,2,
+57,125,1,0,3,0,1,2,2,
 50,
-57,137,1,0,1,3,
-56,182,1,
+57,124,1,0,1,3,
+56,169,1,
 51,255,255,185,3,0,
 53,
 12,
 51,255,255,120,5,1,
 50,
-57,139,1,0,1,0,
-57,181,1,0,
-57,180,1,0,
-56,183,1,
+57,126,1,0,1,0,
+57,168,1,0,
+57,167,1,0,
+56,170,1,
 51,255,255,185,3,0,
 53,
 12,
 51,255,255,120,5,1,
 50,
-57,139,1,0,1,0,
-57,180,1,0,
-57,181,1,0,
+57,126,1,0,1,0,
+57,167,1,0,
+57,168,1,0,
 32,0,
 12,
 51,255,255,120,5,1,
 50,
-57,139,1,0,1,1,
+57,126,1,0,1,1,
 2,
 52,1,0,0,0,0,2,
 22,
 1,
-57,182,1,1,15,
+57,169,1,1,15,
 27,
-51,255,255,185,3,136,1,2,
-57,182,1,0,
-57,183,1,0,
+51,255,255,185,3,123,1,2,
+57,169,1,0,
+57,170,1,0,
 22,
 1,
-57,183,1,1,15,
-57,181,1,0,1,
+57,170,1,1,15,
+57,168,1,0,1,
 58,
 44,
 8,
@@ -2978,113 +2900,113 @@ static constexpr uint8_t SKSL_INCLUDE_sksl_gpu[] = {12,0,202,5,
 1,
 1,
 27,
-51,255,255,185,3,131,1,3,
-57,182,1,0,
-57,179,1,0,
-57,183,1,0,0,
+51,255,255,185,3,118,1,3,
+57,169,1,0,
+57,166,1,0,
+57,170,1,0,0,
 50,
-57,138,1,0,3,0,1,2,1,
-57,181,1,0,0,
+57,125,1,0,3,0,1,2,1,
+57,168,1,0,0,
 50,
-57,137,1,0,3,0,1,2,1,
-57,180,1,0,
+57,124,1,0,3,0,1,2,1,
+57,167,1,0,
 1,
 1,
 50,
-57,137,1,0,1,3,0,
+57,124,1,0,1,3,0,
 50,
-57,138,1,0,1,3,1,
-57,179,1,0,1,
-29,143,1,
+57,125,1,0,1,3,1,
+57,166,1,0,1,
+29,130,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,140,1,3,
-57,141,1,0,
-57,142,1,0,
+51,255,255,197,1,127,1,3,
+57,128,1,0,
+57,129,1,0,
 8,
 51,255,255,78,3,2,
 25,
 51,255,255,111,3,0,0,0,0,
 25,
 51,255,255,111,3,0,0,128,63,1,
-29,146,1,
+29,133,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,140,1,3,
-57,144,1,0,
-57,145,1,0,
+51,255,255,197,1,127,1,3,
+57,131,1,0,
+57,132,1,0,
 13,
 51,255,255,78,3,1,
 25,
 51,255,255,111,3,0,0,128,63,1,
-29,149,1,
+29,136,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,140,1,3,
-57,147,1,0,
-57,148,1,0,
+51,255,255,197,1,127,1,3,
+57,134,1,0,
+57,135,1,0,
 13,
 51,255,255,78,3,1,
 25,
 51,255,255,111,3,0,0,0,0,1,
-29,152,1,
+29,139,1,
 2,
 52,1,0,0,0,0,1,
 44,
 27,
-51,255,255,197,1,140,1,3,
-57,150,1,0,
-57,151,1,0,
+51,255,255,197,1,127,1,3,
+57,137,1,0,
+57,138,1,0,
 8,
 51,255,255,78,3,2,
 25,
 51,255,255,111,3,0,0,128,63,
 25,
 51,255,255,111,3,0,0,0,0,1,
-29,154,1,
+29,141,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
 50,
-57,153,1,0,2,0,1,3,
+57,140,1,0,2,0,1,3,
 50,
-57,153,1,0,1,2,1,
-29,157,1,
+57,140,1,0,1,2,1,
+29,144,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
 1,
 50,
-57,155,1,0,1,0,2,
+57,142,1,0,1,0,2,
 50,
-57,156,1,0,1,1,1,
+57,143,1,0,1,1,1,
 1,
 50,
-57,155,1,0,1,1,2,
+57,142,1,0,1,1,2,
 50,
-57,156,1,0,1,0,1,
-29,161,1,
+57,143,1,0,1,0,1,
+29,148,1,
 2,
 52,1,0,0,0,0,1,
 44,
 1,
 1,
 50,
-57,158,1,0,1,0,2,
+57,145,1,0,1,0,2,
 50,
-57,159,1,0,1,1,1,
+57,146,1,0,1,1,1,
 1,
 50,
-57,158,1,0,1,1,2,
+57,145,1,0,1,1,2,
 50,
-57,159,1,0,1,0,1,
+57,146,1,0,1,0,1,
 21,};
 static constexpr size_t SKSL_INCLUDE_sksl_gpu_LENGTH = sizeof(SKSL_INCLUDE_sksl_gpu);
diff --git a/src/sksl/ir/SkSLSymbolTable.cpp b/src/sksl/ir/SkSLSymbolTable.cpp
index c375856a63..747134af03 100644
--- a/src/sksl/ir/SkSLSymbolTable.cpp
+++ b/src/sksl/ir/SkSLSymbolTable.cpp
@@ -36,6 +36,27 @@ const Symbol* SymbolTable::operator[](std::string_view name) {
     return this->lookup(this, /*encounteredModuleBoundary=*/false, MakeSymbolKey(name));
 }
 
+bool SymbolTable::isType(const SymbolKey& key) const {
+    const Symbol** symbolPPtr = fSymbols.find(key);
+    if (!symbolPPtr) {
+        // The symbol wasn't found; recurse into the parent symbol table.
+        return fParent && fParent->isType(key);
+    }
+    // We found a symbol with the given name; was it a type?
+    return (*symbolPPtr)->is<Type>();
+}
+
+bool SymbolTable::isType(std::string_view name) const {
+    return this->isType(MakeSymbolKey(name));
+}
+
+bool SymbolTable::isBuiltinType(std::string_view name) const {
+    if (!this->isBuiltin()) {
+        return fParent && fParent->isBuiltinType(name);
+    }
+    return this->isType(name);
+}
+
 const Symbol* SymbolTable::lookup(SymbolTable* writableSymbolTable,
                                   bool encounteredModuleBoundary,
                                   const SymbolKey& key) {
diff --git a/src/sksl/ir/SkSLSymbolTable.h b/src/sksl/ir/SkSLSymbolTable.h
index bbdb431eae..0f2b3e7537 100644
--- a/src/sksl/ir/SkSLSymbolTable.h
+++ b/src/sksl/ir/SkSLSymbolTable.h
@@ -84,6 +84,20 @@ public:
      */
     const Symbol* operator[](std::string_view name);
 
+    /**
+     * Returns true if the name refers to a type (user or built-in) in the current symbol table.
+     */
+    bool isType(std::string_view name) const;
+
+    /**
+     * Returns true if the name refers to a builtin type.
+     */
+    bool isBuiltinType(std::string_view name) const;
+
+    /**
+     * Adds a symbol to this symbol table, without conferring ownership. The caller is responsible
+     * for keeping the Symbol alive throughout the lifetime of the program/module.
+     */
     void addWithoutOwnership(const Symbol* symbol);
 
     template <typename T>
@@ -124,14 +138,6 @@ public:
         return fBuiltin;
     }
 
-    /**
-     * Returns the built-in symbol table that this SymbolTable rests upon.
-     * If this symbol table is already a built-in, it will be returned as-is.
-     */
-    SkSL::SymbolTable* builtinParent() {
-        return this->isBuiltin() ? this : fParent->builtinParent();
-    }
-
     const std::string* takeOwnershipOfString(std::string n);
 
     /**
@@ -171,6 +177,8 @@ private:
                                    const Symbol* symbol,
                                    SkSpan<const FunctionDeclaration* const> overloadSet);
 
+    bool isType(const SymbolKey& key) const;
+
     bool fBuiltin = false;
     bool fAtModuleBoundary = false;
     std::forward_list<std::string> fOwnedStrings;
diff --git a/tests/sksl/errors/Ossfuzz49558.glsl b/tests/sksl/errors/Ossfuzz49558.glsl
new file mode 100644
index 0000000000..b004a0b9e8
--- /dev/null
+++ b/tests/sksl/errors/Ossfuzz49558.glsl
@@ -0,0 +1,6 @@
+### Compilation failed:
+
+error: 1: no type named 'lessThan'
+lessThan
+^^^^^^^^
+1 error
