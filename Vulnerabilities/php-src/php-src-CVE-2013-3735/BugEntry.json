{"buggy_code": ["PHP                                                                        NEWS\n|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n?? ??? 2013, PHP 5.4.16\n\n- Core:\n  . Fixed bug #64729 (compilation failure on x32). (Gustavo)\n  . Fixed bug #64853 (Use of no longer available ini directives causes crash on\n    TS build). (Anatol)\n\n- Fileinfo:\n  . Fixed bug #64830 (mimetype detection segfaults on mp3 file). (Anatol)\n\n- FPM:\n  . Ignore QUERY_STRING when sent in SCRIPT_FILENAME. (Remi)\n  . Fixed some possible memory or resource leaks and possible null dereference\n    detected by code coverity scan. (Remi)\n  . Log a warning when a syscall fails. (Remi)\n\n- SNMP:\n  . Fixed bug #64765 (Some IPv6 addresses get interpreted wrong).\n\t(Boris Lytochkin)\n  . Fixed bug #64159 (Truncated snmpget). (Boris Lytochkin)\n\n- Zend Engine:\n  . Fixed bug #64821 (Custom Exceptions crash when internal properties overridden).\n      (Anatol)\n\n09 May 2013, PHP 5.4.15\n- Core:\n  . Fixed bug #64578 (debug_backtrace in set_error_handler corrupts zend heap:\n    segfault). (Laruence)\n  . Fixed bug #64458 (dns_get_record result with string of length -1). (Stas)\n  . Fixed bug #64433 (follow_location parameter of context is ignored for most\n    response codes). (Sergey Akbarov)\n  . Fixed bugs #47675 and #64577 (fd leak on Solaris)\n\n- Fileinfo:\n  . Upgraded libmagic to 5.14. (Anatol)\n\n- MySQLi:\n  . Fixed bug #64726 (Segfault when calling fetch_object on a use_result and DB\n    pointer has closed). (Laruence)\n\n- Zip:\n  . Fixed bug #64342 (ZipArchive::addFile() has to check for file existence).\n    (Anatol)\n\n- Streams:\n  . Fixed Windows x64 version of stream_socket_pair() and improved error\n    handling. (Anatol Belski)\n  . Fixed bug #64770 (stream_select() fails with pipes returned by proc_open()\n    on Windows x64). (Anatol)\n\n11 Apr 2013, PHP 5.4.14\n\n- Core:\n  . Fixed bug #64529 (Ran out of opcode space). (Dmitry)\n  . Fixed bug #64515 (Memoryleak when using the same variablename two times in\n    function declaration). (Laruence)\n  . Fixed bug #64432 (more empty delimiter warning in strX methods). (Laruence)\n  . Fixed bug #64417 (ArrayAccess::&offsetGet() in a trait causes fatal error).\n    (Dmitry)\n  . Fixed bug #64370 (microtime(true) less than $_SERVER['REQUEST_TIME_FLOAT']).\n    (Anatol)\n  . Fixed bug #64239 (Debug backtrace changed behavior since 5.4.10 or 5.4.11).\n    (Dmitry, Laruence)\n  . Fixed bug #63976 (Parent class incorrectly using child constant in class\n    property). (Dmitry)\n  . Fixed bug #63914 (zend_do_fcall_common_helper_SPEC does not handle\n    exceptions properly). (Jeff Welch)\n  . Fixed bug #62343 (Show class_alias In get_declared_classes()) (Dmitry)\n\n- PCRE:\n  . Merged PCRE 8.32. (Anatol)\n\n- SNMP:\n  . Fixed bug #61981 (OO API, walk: $suffix_as_key is not working correctly).\n\t(Boris Lytochkin)\n\n- Zip:\n  . Bug #64452 (Zip crash intermittently). (Anatol)\n\n14 Mar 2013, PHP 5.4.13\n\n- Core:\n  . Fixed bug #64354 (Unserialize array of objects whose class can't\n    be autoloaded fail). (Laruence)\n  . Fixed bug #64235 (Insteadof not work for class method in 5.4.11).\n    (Laruence)\n  . Fixed bug #64197 (_Offsetof() macro used but not defined on ARM/Clang).\n    (Ard Biesheuvel)\n  . Implemented FR #64175 (Added HTTP codes as of RFC 6585). (Jonh Wendell)\n  . Fixed bug #64142 (dval to lval different behavior on ppc64). (Remi)\n  . Fixed bug #64070 (Inheritance with Traits failed with error). (Dmitry)\n\n- CLI server:\n  . Fixed bug #64128 (buit-in web server is broken on ppc64). (Remi)\n\n- Mbstring:\n  . mb_split() can now handle empty matches like preg_split() does. (Moriyoshi)\n\n- mysqlnd\n  . Fixed bug #63530 (mysqlnd_stmt::bind_one_parameter crashes, uses wrong alloc\n    for stmt->param_bind). (Andrey)\n\n- OpenSSL:\n  . New SSL stream context option to prevent CRIME attack vector. (Daniel Lowrey,\n\tLars)\n  . Fixed bug #61930 (openssl corrupts ssl key resource when using\n    openssl_get_publickey()). (Stas)\n\n- PDO_mysql:\n  . Fixed bug #60840 (undefined symbol: mysqlnd_debug_std_no_trace_funcs).\n    (Johannes)\n\n- Phar:\n  . Fixed timestamp update on Phar contents modification. (Dmitry)\n\n- SOAP\n  . Added check that soap.wsdl_cache_dir conforms to open_basedir\n    (CVE-2013-1635). (Dmitry)\n  . Disabled external entities loading (CVE-2013-1643, CVE-2013-1824).\n    (Dmitry)\n\n- Phar:\n  . Fixed timestamp update on Phar contents modification. (Dmitry)\n\n- SPL:\n  . Fixed bug #64264 (SPLFixedArray toArray problem). (Laruence)\n  . Fixed bug #64228 (RecursiveDirectoryIterator always assumes SKIP_DOTS).\n    (patch by kriss@krizalys.com, Laruence)\n  . Fixed bug #64106 (Segfault on SplFixedArray[][x] = y when extended).\n    (Nikita Popov)\n  . Fixed bug #52861 (unset fails with ArrayObject and deep arrays).\n    (Mike Willbanks)\n\n- SNMP:\n  . Fixed bug #64124 (IPv6 malformed). (Boris Lytochkin)\n\n21 Feb 2013, PHP 5.4.12\n\n- Core:\n  . Fixed bug #64099 (Wrong TSRM usage in zend_Register_class alias). (Johannes)\n  . Fixed bug #64011 (get_html_translation_table() output incomplete with\n    HTML_ENTITIES and ISO-8859-1). (Gustavo)\n  . Fixed bug #63982 (isset() inconsistently produces a fatal error on\n    protected property). (Stas)\n  . Fixed bug #63943 (Bad warning text from strpos() on empty needle).\n    (Laruence)\n  . Fixed bug #63899 (Use after scope error in zend_compile). (Laruence)\n  . Fixed bug #63893 (Poor efficiency of strtr() using array with keys of very\n    different length). (Gustavo)\n  . Fixed bug #63882 (zend_std_compare_objects crash on recursion). (Dmitry)\n  . Fixed bug #63462 (Magic methods called twice for unset protected\n    properties). (Stas)\n  . Fixed bug #62524 (fopen follows redirects for non-3xx statuses).\n    (Wes Mason)\n  . Support BITMAPV5HEADER in getimagesize(). (AsamK, Lars)\n\n- Date:\n  . Fixed bug #63699 (Performance improvements for various ext/date functions).\n    (Lars, original patch by njaguar at gmail dot com)\n  . Fixed bug #55397: Comparsion of incomplete DateTime causes SIGSEGV.\n    (Derick)\n\n- FPM:\n  . Fixed bug #63999 (php with fpm fails to build on Solaris 10 or 11). (Adam)\n\n- Litespeed:\n  . Fixed bug #63228 (-Werror=format-security error in lsapi code). (George)\n\n- ext/sqlite3:\n  . Fixed bug #63921 (sqlite3::bindvalue and relative PHP functions aren't\n    using sqlite3_*_int64 API). (srgoogleguy, Lars)\n\n- PDO_OCI\n  . Fixed bug #57702 (Multi-row BLOB fetches). (hswong3i, Laruence)\n  . Fixed bug #52958 (Segfault in PDO_OCI on cleanup after running a long\n    testsuite). (hswong3i, Lars)\n\n- PDO_sqlite:\n  . Fixed bug #63916 (PDO::PARAM_INT casts to 32bit int internally even\n    on 64bit builds in pdo_sqlite). (srgoogleguy, Lars)\n\n17 Jan 2013, PHP 5.4.11\n\n- Core:\n  . Fixed bug #63762 (Sigsegv when Exception::$trace is changed by user).\n    (Johannes)\n  . Fixed bug #43177 (Errors in eval()'ed code produce status code 500).\n    (Todd Ruth, Stas).\n\n- Filter:\n  . Fixed bug #63757 (getenv() produces memory leak with CGI SAPI). (Dmitry)\n  . Fixed bug #54096 (FILTER_VALIDATE_INT does not accept +0 and -0).\n    (martin at divbyzero dot net, Lars)\n\n- JSON:\n  . Fixed bug #63737 (json_decode does not properly decode with options\n    parameter). (Adam)\n\n- CLI server\n  . Update list of common mime types. Added webm, ogv, ogg. (Lars,\n    pascalc at gmail dot com)\n\n- cURL extension:\n  . Fixed bug (segfault due to libcurl connection caching). (Pierrick)\n  . Fixed bug #63859 (Memory leak when reusing curl-handle). (Pierrick)\n  . Fixed bug #63795 (CURL >= 7.28.0 no longer support value 1 for\n    CURLOPT_SSL_VERIFYHOST). (Pierrick)\n  . Fixed bug #63352 (Can't enable hostname validation when using curl stream\n    wrappers). (Pierrick)\n  . Fixed bug #55438 (Curlwapper is not sending http header randomly).\n    (phpnet@lostreality.org, Pierrick)\n\n20 Dec 2012, PHP 5.4.10\n\n- Core:\n  . Fixed bug #63726 (Memleak with static properties and internal/user\n    classes). (Laruence)\n  . Fixed bug #63635 (Segfault in gc_collect_cycles). (Dmitry)\n  . Fixed bug #63512 (parse_ini_file() with INI_SCANNER_RAW removes quotes\n    from value). (Pierrick)\n  . Fixed bug #63468 (wrong called method as callback with inheritance).\n    (Laruence)\n  . Fixed bug #63451 (config.guess file does not have AIX 7 defined,\n    shared objects are not created). (kemcline at au1 dot ibm dot com)\n  . Fixed bug #61557 (Crasher in tt-rss backend.php).\n    (i dot am dot jack dot mail at gmail dot com)\n  . Fixed bug #61272 (ob_start callback gets passed empty string).\n    (Mike, casper at langemeijer dot eu)\n\n- Date:\n  . Fixed bug #63666 (Poor date() performance). (Paul Taulborg).\n  . Fixed bug #63435 (Datetime::format('u') sometimes wrong by 1 microsecond).\n    (Remi)\n\n- Imap:\n  . Fixed bug #63126 (DISABLE_AUTHENTICATOR ignores array). (Remi)\n\n- Json:\n  . Fixed bug #63588 (use php_next_utf8_char and remove duplicate\n    implementation). (Remi)\n\n- MySQLi:\n  . Fixed bug #63361 (missing header). (Remi)\n\n- MySQLnd:\n  . Fixed bug #63398 (Segfault when polling closed link). (Laruence)\n\n- Fileinfo:\n  . Fixed bug #63590 (Different results in TS and NTS under Windows).\n    (Anatoliy)\n\n- FPM:\n  . Fixed bug #63581 Possible null dereference and buffer overflow (Remi)\n\n- Pdo_sqlite:\n  . Fixed Bug #63149 getColumnMeta should return the table name\n    when system SQLite used. (Remi)\n\n- Apache2 Handler SAPI:\n  . Enabled Apache 2.4 configure option for Windows (Pierre, Anatoliy)\n\n- Reflection:\n  . Fixed Bug #63614 (Fatal error on Reflection). (Laruence)\n\n- SOAP\n  . Fixed bug #63271 (SOAP wsdl cache is not enabled after initial requests).\n    (John Jawed, Dmitry)\n\n- Sockets\n  . Fixed bug #49341 (Add SO_REUSEPORT support for socket_set_option()).\n    (Igor Wiedler, Lars)\n\n- SPL\n  . Fixed bug #63680 (Memleak in splfixedarray with cycle reference). (Laruence)\n\n22 Nov 2012, PHP 5.4.9\n\n- Core:\n  . Fixed bug #63305 (zend_mm_heap corrupted with traits). (Dmitry, Laruence)\n  . Fixed bug #63369 ((un)serialize() leaves dangling pointers, causes crashes).\n    (Tony, Andrew Sitnikov)\n  . Fixed bug #63241 (PHP fails to open Windows deduplicated files).\n    (daniel dot stelter-gliese at innogames dot de)\n  . Fixed bug #62444 (Handle leak in is_readable on windows).\n    (krazyest at seznam dot cz)\n\n- Curl:\n  . Fixed bug #63363 (Curl silently accepts boolean true for SSL_VERIFYHOST).\n    Patch by John Jawed GitHub PR #221 (Anthony)\n\n- Fileinfo:\n  . Fixed bug #63248 (Load multiple magic files from a directory under Windows).\n    (Anatoliy)\n\n- Libxml\n  . Fixed bug #63389 (Missing context check on libxml_set_streams_context()\n    causes memleak). (Laruence)\n\n- Mbstring:\n  . Fixed bug #63447 (max_input_vars doesn't filter variables when\n    mbstring.encoding_translation = On). (Laruence)\n\n- OCI8:\n  . Fixed bug #63265 (Add ORA-00028 to the PHP_OCI_HANDLE_ERROR macro)\n    (Chris Jones)\n\n- PCRE:\n  . Fixed bug #63180 (Corruption of hash tables). (Dmitry)\n  . Fixed bug #63055 (Segfault in zend_gc with SF2 testsuite).\n    (Dmitry, Laruence)\n  . Fixed bug #63284 (Upgrade PCRE to 8.31). (Anatoliy)\n\n- PDO:\n  . Fixed bug #63235 (buffer overflow in use of SQLGetDiagRec).\n    (Martin Osvald, Remi)\n\n- PDO_pgsql:\n  . Fixed bug #62593 (Emulate prepares behave strangely with PARAM_BOOL).\n    (Will Fitch)\n\n- Phar:\n  . Fixed bug #63297 (Phar fails to write an openssl based signature).\n    (Anatoliy)\n\n- Streams:\n  . Fixed bug #63240 (stream_get_line() return contains delimiter string).\n    (Tjerk, Gustavo)\n\n- Reflection:\n  . Fixed bug #63399 (ReflectionClass::getTraitAliases() incorrectly resolves\n    traitnames). (Laruence)\n\n18 Oct 2012, PHP 5.4.8\n\n- CLI server:\n  . Implemented FR #63242 (Default error page in PHP built-in web server uses\n    outdated html/css). (pascal.chevrel@free.fr)\n  . Changed response to unknown HTTP method to 501 according to RFC.\n    (Niklas Lindgren).\n  . Support HTTP PATCH method. Patch by Niklas Lindgren, GitHub PR #190.\n    (Lars)\n\n- Core:\n  . Fixed bug #63219 (Segfault when aliasing trait method when autoloader\n    throws excpetion). (Laruence)\n  . Added optional second argument for assert() to specify custom message. Patch\n    by Lonny Kapelushnik (lonny@lonnylot.com). (Lars)\n  . Support building PHP with the native client toolchain. (Stuart Langley)\n  . Added --offline option for tests. (Remi)\n  . Fixed bug #63162 (parse_url does not match password component). (husman)\n  . Fixed bug #63111 (is_callable() lies for abstract static method). (Dmitry)\n  . Fixed bug #63093 (Segfault while load extension failed in zts-build).\n    (Laruence)\n  . Fixed bug #62976 (Notice: could not be converted to int when comparing\n    some builtin classes). (Laruence)\n  . Fixed bug #62955 (Only one directive is loaded from \"Per Directory Values\"\n    Windows registry). (aserbulov at parallels dot com)\n  . Fixed bug #62907 (Double free when use traits). (Dmitry)\n  . Fixed bug #61767 (Shutdown functions not called in certain error\n    situation). (Dmitry)\n  . Fixed bug #60909 (custom error handler throwing Exception + fatal error\n    = no shutdown function). (Dmitry)\n  . Fixed bug #60723 (error_log error time has changed to UTC ignoring default\n    timezone). (Laruence)\n\n- cURL:\n  . Fixed bug #62085 (file_get_contents a remote file by Curl wrapper will\n    cause cpu Soaring). (Pierrick)\n\n- Date:\n  . Fixed bug #62896 (\"DateTime->modify('+0 days')\" modifies DateTime object)\n    (Lonny Kapelushnik)\n  . Fixed bug #62561 (DateTime add 'P1D' adds 25 hours). (Lonny Kapelushnik)\n\n- DOM:\n  . Fixed bug #63015 (Incorrect arginfo for DOMErrorHandler). (Rob)\n\n- FPM:\n  . Fixed bug #62954 (startup problems fpm / php-fpm). (fat)\n  . Fixed bug #62886 (PHP-FPM may segfault/hang on startup). (fat)\n  . Fixed bug #63085 (Systemd integration and daemonize). (remi, fat)\n  . Fixed bug #62947 (Unneccesary warnings on FPM). (fat)\n  . Fixed bug #62887 (Only /status?plain&full gives \"last request cpu\"). (fat)\n  . Fixed bug #62216 (Add PID to php-fpm init.d script). (fat)\n\n- OCI8:\n  . Fixed bug #60901 (Improve \"tail\" syntax for AIX installation) (Chris Jones)\n\n- OpenSSL:\n  . Implemented FR #61421 (OpenSSL signature verification missing RMD160,\n    SHA224, SHA256, SHA384, SHA512). (Mark Jones)\n\n- PDO:\n  . Fixed bug #63258 (seg fault with PDO and dblib using DBSETOPT(H->link,\n    DBQUOTEDIDENT, 1)). (Laruence)\n  . Fixed bug #63235 (buffer overflow in use of SQLGetDiagRec).\n    (Martin Osvald, Remi)\n\n- PDO Firebird:\n  . Fixed bug #63214 (Large PDO Firebird Queries).\n    (james at kenjim dot com)\n\n- SOAP\n  . Fixed bug #50997 (SOAP Error when trying to submit 2nd Element of a choice).\n    (Dmitry)\n\n- SPL:\n  . Bug #62987 (Assigning to ArrayObject[null][something] overrides all\n    undefined variables). (Laruence)\n\n- mbstring:\n  . Allow passing null as a default value to mb_substr() and mb_strcut(). Patch\n    by Alexander Moskaliov via GitHub PR #133. (Lars)\n\n- Filter extension:\n  . Bug #49510: Boolean validation fails with FILTER_NULL_ON_FAILURE with empty\n    string or false. (Lars)\n\n- Sockets\n  . Fixed bug #63000 (MCAST_JOIN_GROUP on OSX is broken, merge of PR 185 by\n    Igor Wiedler). (Lars)\n\n13 Sep 2012, PHP 5.4.7\n\n- Core:\n  . Fixed bug (segfault while build with zts and GOTO vm-kind). (Laruence)\n  . Fixed bug #62844 (parse_url() does not recognize //). (Andrew Faulds).\n  . Fixed bug #62829 (stdint.h included on platform where HAVE_STDINT_H is not\n    set). (Felipe)\n  . Fixed bug #62763 (register_shutdown_function and extending class).\n    (Laruence)\n  . Fixed bug #62725 (Calling exit() in a shutdown function does not return\n    the exit value). (Laruence)\n  . Fixed bug #62744 (dangling pointers made by zend_disable_class). (Laruence)\n  . Fixed bug #62716 (munmap() is called with the incorrect length).\n    (slangley@google.com)\n  . Fixed bug #62358 (Segfault when using traits a lot). (Laruence)\n  . Fixed bug #62328 (implementing __toString and a cast to string fails)\n    (Laruence)\n  . Fixed bug #51363 (Fatal error raised by var_export() not caught by error\n    handler). (Lonny Kapelushnik)\n  . Fixed bug #40459 (Stat and Dir stream wrapper methods do not call\n    constructor). (Stas)\n\n- CURL:\n  . Fixed bug #62912 (CURLINFO_PRIMARY_* AND CURLINFO_LOCAL_* not exposed).\n\t(Pierrick)\n  . Fixed bug #62839 (curl_copy_handle segfault with CURLOPT_FILE). (Pierrick)\n\n- Intl:\n  . Fixed Spoofchecker not being registered on ICU 49.1. (Gustavo)\n  . Fix bug #62933 (ext/intl compilation error on icu 3.4.1). (Gustavo)\n  . Fix bug #62915 (defective cloning in several intl classes). (Gustavo)\n\n- Installation:\n  . Fixed bug #62460 (php binaries installed as binary.dSYM). (Reeze Xia)\n\n- PCRE:\n  . Fixed bug #55856 (preg_replace should fail on trailing garbage).\n    (reg dot php at alf dot nu)\n\n- PDO:\n  . Fixed bug #62685 (Wrong return datatype in PDO::inTransaction()). (Laruence)\n\n- Reflection:\n  . Fixed bug #62892 (ReflectionClass::getTraitAliases crashes on importing\n    trait methods as private). (Felipe)\n  . Fixed bug #62715 (ReflectionParameter::isDefaultValueAvailable() wrong\n    result). (Laruence)\n\n- Session:\n  . Fixed bug (segfault due to retval is not initialized). (Laruence)\n  . Fixed bug (segfault due to PS(mod_user_implemented) not be reseted\n    when close handler call exit). (Laruence)\n\n- SOAP\n  . Fixed bug #50997 (SOAP Error when trying to submit 2nd Element of a choice).\n    (Dmitry)\n\n- SPL:\n  . Fixed bug #62904 (Crash when cloning an object which inherits SplFixedArray)\n    (Laruence)\n  . Implemented FR #62840 (Add sort flag to ArrayObject::ksort). (Laruence)\n\n- Standard:\n  . Fixed bug #62836 (Seg fault or broken object references on unserialize()).\n    (Laruence)\n\n- FPM:\n  . Merged PR 121 by minitux to add support for slow request counting on PHP\n    FPM status page. (Lars)\n\n16 Aug 2012, PHP 5.4.6\n\n- CLI Server:\n  . Implemented FR #62700 (have the console output 'Listening on\n    http://localhost:8000'). (pascal.chevrel@free.fr)\n\n- Core:\n  . Fixed bug #62661 (Interactive php-cli crashes if include() is used in\n    auto_prepend_file). (Laruence)\n  . Fixed bug #62653: (unset($array[$float]) causes a crash). (Nikita Popov,\n    Laruence)\n  . Fixed bug #62565 (Crashes due non-initialized internal properties_table).\n    (Felipe)\n  . Fixed bug #60194 (--with-zend-multibyte and --enable-debug reports LEAK\n    with run-test.php). (Laruence)\n\n- CURL:\n  . Fixed bug #62499 (curl_setopt($ch, CURLOPT_COOKIEFILE, \"\") returns false).\n    (r.hampartsumyan@gmail.com, Laruence)\n\n- DateTime:\n  . Fixed Bug #62500 (Segfault in DateInterval class when extended). (Laruence)\n\n- Fileinfo:\n  . Fixed bug #61964 (finfo_open with directory causes invalid free).\n    (reeze.xia@gmail.com)\n\n- Intl:\n  . Fixed bug #62564 (Extending MessageFormatter and adding property causes\n    crash). (Felipe)\n\n- MySQLnd:\n  . Fixed bug #62594 (segfault in mysqlnd_res_meta::set_mode). (Laruence)\n\n- readline:\n  . Fixed bug #62612 (readline extension compilation fails with\n    sapi/cli/cli.h: No such file). (Johannes)\n\n- Reflection:\n  . Implemented FR #61602 (Allow access to name of constant used as default\n    value). (reeze.xia@gmail.com)\n\n- SimpleXML:\n  . Implemented FR #55218 Get namespaces from current node. (Lonny)\n\n- SPL:\n  . Fixed bug #62616 (ArrayIterator::count() from IteratorIterator instance\n    gives Segmentation fault). (Laruence, Gustavo)\n  . Fixed bug #61527 (ArrayIterator gives misleading notice on next() when\n    moved to the end). (reeze.xia@gmail.com)\n\n- Streams:\n  . Fixed bug #62597 (segfault in php_stream_wrapper_log_error with ZTS build).\n    (Laruence)\n\n- Zlib:\n  . Fixed bug #55544 (ob_gzhandler always conflicts with\n    zlib.output_compression). (Laruence)\n\n19 Jul 2012, PHP 5.4.5\n\n- Core:\n  . Fixed bug #62443 (Crypt SHA256/512 Segfaults With Malformed\n    Salt). (Anthony Ferrara)\n  . Fixed bug #62432 (ReflectionMethod random corrupt memory on high\n    concurrent). (Johannes)\n  . Fixed bug #62373 (serialize() generates wrong reference to the object).\n    (Moriyoshi)\n  . Fixed bug #62357 (compile failure: (S) Arguments missing for built-in\n    function __memcmp). (Laruence)\n  . Fixed bug #61998 (Using traits with method aliases appears to result in\n    crash during execution). (Dmitry)\n  . Fixed bug #51094 (parse_ini_file() with INI_SCANNER_RAW cuts a value that\n    includes a semi-colon). (Pierrick)\n  . Fixed potential overflow in _php_stream_scandir (CVE-2012-2688).\n    (Jason Powell, Stas)\n\n- EXIF:\n  . Fixed information leak in ext exif (discovered by Martin Noga,\n    Matthew \"j00ru\" Jurczyk, Gynvael Coldwind)\n\n- FPM:\n  . Fixed bug #62205 (php-fpm segfaults (null passed to strstr)). (fat)\n  . Fixed bug #62160 (Add process.priority to set nice(2) priorities). (fat)\n  . Fixed bug #62153 (when using unix sockets, multiples FPM instances\n  . Fixed bug #62033 (php-fpm exits with status 0 on some failures to start).\n    (fat)\n  . Fixed bug #61839 (Unable to cross-compile PHP with --enable-fpm). (fat)\n  . Fixed bug #61835 (php-fpm is not allowed to run as root). (fat)\n  . Fixed bug #61295 (php-fpm should not fail with commented 'user'\n  . Fixed bug #61218 (FPM drops connection while receiving some binary values\n    in FastCGI requests). (fat)\n  . Fixed bug #61045 (fpm don't send error log to fastcgi clients). (fat)\n    for non-root start). (fat)\n  . Fixed bug #61026 (FPM pools can listen on the same address). (fat)\n    can be launched without errors). (fat)\n\n- Iconv:\n  . Fix bug #55042 (Erealloc in iconv.c unsafe). (Stas)\n\n- Intl:\n  . Fixed bug #62083 (grapheme_extract() memory leaks). (Gustavo)\n  . ResourceBundle constructor now accepts NULL for the first two arguments.\n    (Gustavo)\n  . Fixed bug #62081 (IntlDateFormatter constructor leaks memory when called\n    twice). (Gustavo)\n  . Fixed bug #62070 (Collator::getSortKey() returns garbage). (Gustavo)\n  . Fixed bug #62017 (datefmt_create with incorrectly encoded timezone leaks\n    pattern). (Gustavo)\n  . Fixed bug #60785 (memory leak in IntlDateFormatter constructor). (Gustavo)\n\n- JSON:\n  . Fixed bug #61359 (json_encode() calls too many reallocs). (Stas)\n\n- libxml:\n  . Fixed bug #62266 (Custom extension segfaults during xmlParseFile with FPM\n    SAPI). (Gustavo)\n\n- Phar:\n  . Fixed bug #62227 (Invalid phar stream path causes crash). (Felipe)\n\n- Readline:\n  . Fixed bug #62186 (readline fails to compile - void function should not\n    return a value). (Johannes)\n\n- Reflection:\n  . Fixed bug #62384 (Attempting to invoke a Closure more than once causes\n    segfault). (Felipe)\n  . Fixed bug #62202 (ReflectionParameter::getDefaultValue() memory leaks\n    with constant). (Laruence)\n\n- Sockets:\n  . Fixed bug #62025 (__ss_family was changed on AIX 5.3). (Felipe)\n\n- SPL:\n  . Fixed bug #62433 (Inconsistent behavior of RecursiveDirectoryIterator to\n    dot files). (Laruence)\n  . Fixed bug #62262 (RecursiveArrayIterator does not implement Countable).\n    (Nikita Popov)\n\n- XML Writer:\n  . Fixed bug #62064 (memory leak in the XML Writer module).\n    (jean-pierre dot lozi at lip6 dot fr)\n\n- Zip:\n  . Upgraded libzip to 0.10.1 (Anatoliy)\n\n14 Jun 2012, PHP 5.4.4\n\n- COM:\n  . Fixed bug #62146 com_dotnet cannot be built shared. (Johannes)\n\n- CLI Server:\n  . Implemented FR #61977 (Need CLI web-server support for files with .htm &\n    svg extensions). (Sixd, Laruence)\n  . Improved performance while sending error page, this also fixed\n    bug #61785 (Memory leak when access a non-exists file without router).\n    (Laruence)\n  . Fixed bug #61546 (functions related to current script failed when chdir()\n    in cli sapi). (Laruence, reeze.xia@gmail.com)\n\n- Core:\n  . Fixed missing bound check in iptcparse(). (chris at chiappa.net)\n  . Fixed CVE-2012-2143. (Solar Designer)\n  . Fixed bug #62097 (fix for for bug #54547). (Gustavo)\n  . Fixed bug #62005 (unexpected behavior when incrementally assigning to a\n    member of a null object). (Laruence)\n  . Fixed bug #61978 (Object recursion not detected for classes that implement\n    JsonSerializable). (Felipe)\n  . Fixed bug #61991 (long overflow in realpath_cache_get()). (Anatoliy)\n  . Fixed bug #61922 (ZTS build doesn't accept zend.script_encoding config).\n    (Laruence)\n  . Fixed bug #61827 (incorrect \\e processing on Windows) (Anatoliy)\n  . Fixed bug #61782 (__clone/__destruct do not match other methods when checking\n    access controls). (Stas)\n  . Fixed bug #61764 ('I' unpacks n as signed if n > 2^31-1 on LP64). (Gustavo)\n  . Fixed bug #61761 ('Overriding' a private static method with a different\n    signature causes crash). (Laruence)\n  . Fixed bug #61730 (Segfault from array_walk modifying an array passed by\n    reference). (Laruence)\n  . Fixed bug #61728 (PHP crash when calling ob_start in request_shutdown\n    phase). (Laruence)\n  . Fixed bug #61713 (Logic error in charset detection for htmlentities).\n    (Anatoliy)\n  . Fixed bug #61660 (bin2hex(hex2bin($data)) != $data). (Nikita Popov)\n  . Fixed bug #61650 (ini parser crashes when using ${xxxx} ini variables\n    (without apache2)). (Laruence)\n  . Fixed bug #61605 (header_remove() does not remove all headers). (Laruence)\n  . Fixed bug #54547 (wrong equality of string numbers). (Gustavo)\n  . Fixed bug #54197 ([PATH=] sections incompatibility with user_ini.filename\n    set to null). (Anatoliy)\n  . Changed php://fd to be available only for CLI.\n\n- CURL:\n  . Fixed bug #61948 (CURLOPT_COOKIEFILE '' raises open_basedir restriction).\n    (Laruence)\n\n- Fileinfo\n  . Fixed bug #61812 (Uninitialised value used in libmagic).\n    (Laruence, Gustavo)\n  . Fixed bug #61566 failure caused by the posix lseek and read versions\n    under windows in cdf_read(). (Anatoliy)\n  . Fixed bug #61565 where php_stream_open_wrapper_ex tries to open a\n    directory descriptor under windows. (Anatoliy)\n\n- Intl\n  . Fixed bug #62082 (Memory corruption in internal function\n    get_icu_disp_value_src_php()). (Gustavo)\n\n- Libxml:\n  . Fixed bug #61617 (Libxml tests failed(ht is already destroyed)).\n    (Laruence)\n\n- PDO:\n  . Fixed bug #61755 (A parsing bug in the prepared statements can lead to\n    access violations). (Johannes)\n\n- Phar:\n  . Fixed bug #61065 (Secunia SA44335, CVE-2012-2386). (Rasmus)\n\n- Pgsql:\n  . Added pg_escape_identifier/pg_escape_literal. (Yasuo Ohgaki)\n\n- Streams:\n  . Fixed bug #61961 (file_get_contents leaks when access empty file with\n    maxlen set). (Reeze)\n\n- Zlib:\n  . Fixed bug #61820 (using ob_gzhandler will complain about headers already\n    sent when no compression). (Mike)\n  . Fixed bug #61443 (can't change zlib.output_compression on the fly). (Mike)\n  . Fixed bug #60761 (zlib.output_compression fails on refresh). (Mike)\n\n08 May 2012, PHP 5.4.3\n\n- CGI\n  . Re-Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823.\n    (Stas)\n  . Fix bug #61807 - Buffer Overflow in apache_request_headers.\n    (nyt-php at countercultured dot net).\n\n03 May 2012, PHP 5.4.2\n\n- Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823. (Rasmus)\n\n26 Apr 2012, PHP 5.4.1\n\n- CLI Server:\n  . Fixed bug #61461 (missing checks around malloc() calls). (Ilia)\n  . Implemented FR #60850 (Built in web server does not set\n    $_SERVER['SCRIPT_FILENAME'] when using router). (Laruence)\n  . \"Connection: close\" instead of \"Connection: closed\" (Gustavo)\n\n- Core:\n  . Fixed crash in ZTS using same class in many threads. (Johannes)\n  . Fixed bug #61374 (html_entity_decode tries to decode code points that don't\n    exist in ISO-8859-1). (Gustavo)\n  . Fixed bug #61273 (call_user_func_array with more than 16333 arguments\n    leaks / crashes). (Laruence)\n  . Fixed bug #61225 (Incorrect lexing of 0b00*+<NUM>). (Pierrick)\n  . Fixed bug #61165 (Segfault - strip_tags()). (Laruence)\n  . Fixed bug #61106 (Segfault when using header_register_callback). (Nikita\n    Popov)\n  . Fixed bug #61087 (Memory leak in parse_ini_file when specifying\n    invalid scanner mode). (Nikic, Laruence)\n  . Fixed bug #61072 (Memory leak when restoring an exception handler).\n    (Nikic, Laruence)\n  . Fixed bug #61058 (array_fill leaks if start index is PHP_INT_MAX).\n    (Laruence)\n  . Fixed bug #61052 (Missing error check in trait 'insteadof' clause). (Stefan)\n  . Fixed bug #61011 (Crash when an exception is thrown by __autoload\n    accessing a static property). (Laruence)\n  . Fixed bug #61000 (Exceeding max nesting level doesn't delete numerical\n    vars). (Laruence)\n  . Fixed bug #60978 (exit code incorrect). (Laruence)\n  . Fixed bug #60911 (Confusing error message when extending traits). (Stefan)\n  . Fixed bug #60801 (strpbrk() mishandles NUL byte). (Adam)\n  . Fixed bug #60717 (Order of traits in use statement can cause a fatal\n    error). (Stefan)\n  . Fixed bug #60573 (type hinting with \"self\" keyword causes weird errors).\n    (Laruence)\n  . Fixed bug #60569 (Nullbyte truncates Exception $message). (Ilia)\n  . Fixed bug #52719 (array_walk_recursive crashes if third param of the\n    function is by reference). (Nikita Popov)\n  . Improve performance of set_exception_handler while doing reset (Laruence)\n\n- fileinfo:\n  . Fix fileinfo test problems. (Anatoliy Belsky)\n\n- FPM\n  . Fixed bug #61430 (Transposed memset() params in sapi/fpm/fpm/fpm_shm.c).\n    (michaelhood at gmail dot com, Ilia)\n\n- Ibase\n  . Fixed bug #60947 (Segmentation fault while executing ibase_db_info).\n    (Ilia)\n\n- Installation\n  . Fixed bug #61172 (Add Apache 2.4 support). (Chris Jones)\n\n- Intl:\n  . Fixed bug #61487 (Incorrent bounds checking in grapheme_strpos).\n    (Stas)\n\n- mbstring:\n  . MFH mb_ereg_replace_callback() for security enhancements. (Rui)\n\n- mysqli\n  . Fixed bug #61003 (mysql_stat() require a valid connection). (Johannes).\n\n- mysqlnd\n  . Fixed bug #61704 (Crash apache, phpinfo() threading issue). (Johannes)\n  . Fixed bug #60948 (mysqlnd FTBFS when -Wformat-security is enabled).\n    (Johannes)\n\n- PDO\n  . Fixed bug #61292 (Segfault while calling a method on an overloaded PDO\n    object). (Laruence)\n\n- PDO_mysql\n  . Fixed bug #61207 (PDO::nextRowset() after a multi-statement query doesn't\n    always work). (Johannes)\n  . Fixed bug #61194 (PDO should export compression flag with myslqnd).\n    (Johannes)\n\n- PDO_odbc\n  . Fixed bug #61212 (PDO ODBC Segfaults on SQL_SUCESS_WITH_INFO). (Ilia)\n\n- Phar\n  . Fixed bug #61184 (Phar::webPhar() generates headers with trailing NUL\n    bytes). (Nikita Popov)\n\n- Readline:\n  . Fixed bug #61088 (Memory leak in readline_callback_handler_install).\n    (Nikic, Laruence)\n\n- Reflection:\n  . Implemented FR #61602 (Allow access to the name of constant\n    used as function/method parameter's default value). (reeze.xia@gmail.com)\n  . Fixed bug #60968 (Late static binding doesn't work with\n    ReflectionMethod::invokeArgs()). (Laruence)\n\n- Session\n  . Fixed bug #60634 (Segmentation fault when trying to die() in\n    SessionHandler::write()). (Ilia)\n\n- SOAP\n  . Fixed bug #61423 (gzip compression fails). (Ilia)\n  . Fixed bug #60887 (SoapClient ignores user_agent option and sends no\n    User-Agent header). (carloschilazo at gmail dot com)\n  . Fixed bug #60842, #51775 (Chunked response parsing error when\n    chunksize length line is > 10 bytes). (Ilia)\n  . Fixed bug #49853 (Soap Client stream context header option ignored).\n    (Dmitry)\n\n- SPL:\n  . Fixed bug #61453 (SplObjectStorage does not identify objects correctly).\n    (Gustavo)\n  . Fixed bug #61347 (inconsistent isset behavior of Arrayobject). (Laruence)\n\n- Standard:\n  . Fixed memory leak in substr_replace. (Pierrick)\n  . Make max_file_uploads ini directive settable outside of php.ini (Rasmus)\n  . Fixed bug #61409 (Bad formatting on phpinfo()). (Jakub Vrana)\n  . Fixed bug #60222 (time_nanosleep() does validate input params). (Ilia)\n  . Fixed bug #60106 (stream_socket_server silently truncates long unix socket\n    paths). (Ilia)\n\n- XMLRPC:\n  . Fixed bug #61264 (xmlrpc_parse_method_descriptions leaks temporary\n    variable). (Nikita Popov)\n  . Fixed bug #61097 (Memory leak in xmlrpc functions copying zvals). (Nikita\n    Popov)\n\n- Zlib:\n  . Fixed bug #61306 (initialization of global inappropriate for ZTS). (Gustavo)\n  . Fixed bug #61287 (A particular string fails to decompress). (Mike)\n  . Fixed bug #61139 (gzopen leaks when specifying invalid mode). (Nikita Popov)\n\n01 Mar 2012, PHP 5.4.0\n\n- Installation:\n  . autoconf 2.59+ is now supported (and required) for generating the\n    configure script with ./buildconf. Autoconf 2.60+ is desirable\n    otherwise the configure help order may be incorrect.  (Rasmus, Chris Jones)\n\n- Removed legacy features:\n  . break/continue $var syntax. (Dmitry)\n  . Safe mode and all related php.ini options. (Kalle)\n  . register_globals and register_long_arrays php.ini options. (Kalle)\n  . import_request_variables(). (Kalle)\n  . allow_call_time_pass_reference. (Pierrick)\n  . define_syslog_variables php.ini option and its associated function. (Kalle)\n  . highlight.bg php.ini option. (Kalle)\n  . safe_mode, safe_mode_gid, safe_mode_include_dir,\n    safe_mode_exec_dir, safe_mode_allowed_env_vars and\n    safe_mode_protected_env_vars php.ini options.\n  . zend.ze1_compatibility_mode php.ini option.\n  . Session bug compatibility mode (session.bug_compat_42 and\n    session.bug_compat_warn php.ini options). (Kalle)\n  . session_is_registered(), session_register() and session_unregister()\n    functions. (Kalle)\n  . y2k_compliance php.ini option. (Kalle)\n  . magic_quotes_gpc, magic_quotes_runtime and magic_quotes_sybase\n    php.ini options. get_magic_quotes_gpc, get_magic_quotes_runtime are kept\n    but always return false, set_magic_quotes_runtime raises an\n    E_CORE_ERROR. (Pierrick, Pierre)\n  . Removed support for putenv(\"TZ=..\") for setting the timezone. (Derick)\n  . Removed the timezone guessing algorithm in case the timezone isn't set with\n    date.timezone or date_default_timezone_set(). Instead of a guessed\n    timezone, \"UTC\" is now used instead. (Derick)\n\n- Moved extensions to PECL:\n  . ext/sqlite.  (Note: the ext/sqlite3 and ext/pdo_sqlite extensions are\n    not affected) (Johannes)\n\n- General improvements:\n  . Added short array syntax support ([1,2,3]), see UPGRADING guide for full\n    details. (rsky0711 at gmail . com, sebastian.deutsch at 9elements . com,\n    Pierre)\n  . Added binary number format (0b001010). (Jonah dot Harris at gmail dot com)\n  . Added support for Class::{expr}() syntax (Pierrick)\n  . Added multibyte support by default. Previously PHP had to be compiled\n    with --enable-zend-multibyte.  Now it can be enabled or disabled through\n    the zend.multibyte directive in php.ini. (Dmitry)\n  . Removed compile time dependency from ext/mbstring (Dmitry)\n  . Added support for Traits. (Stefan, with fixes by Dmitry and Laruence)\n  . Added closure $this support back. (Stas)\n  . Added array dereferencing support. (Felipe)\n  . Added callable typehint. (Hannes)\n  . Added indirect method call through array. FR #47160. (Felipe)\n  . Added DTrace support. (David Soria Parra)\n  . Added class member access on instantiation (e.g. (new foo)->bar()) support.\n    (Felipe)\n  . <?= is now always available regardless of the short_open_tag setting. (Rasmus)\n  . Implemented Zend Signal Handling (configurable option --enable-zend-signals,\n    off by default). (Lucas Nealan, Arnaud Le Blanc, Brian Shire, Ilia)\n  . Improved output layer, see README.NEW-OUTPUT-API for internals. (Mike)\n  . Improved UNIX build system to allow building multiple PHP binary SAPIs and\n    one SAPI module the same time. FR #53271, FR #52419. (Jani)\n  . Implemented closure rebinding as parameter to bindTo. (Gustavo Lopes)\n  . Improved the warning message of incompatible arguments. (Laruence)\n  . Improved ternary operator performance when returning arrays. (Arnaud, Dmitry)\n  . Changed error handlers to only generate docref links when the docref_root\n    php.ini setting is not empty. (Derick)\n  . Changed silent conversion of array to string to produce a notice. (Patrick)\n  . Changed default encoding from ISO-8859-1 to UTF-8 when not specified in\n    htmlspecialchars and htmlentities. (Rasmus)\n  . Changed casting of null/''/false into an Object when adding a property\n    from E_STRICT into a warning. (Scott)\n  . Changed E_ALL to include E_STRICT. (Stas)\n  . Disabled Windows CRT warning by default, can be enabled again using the\n    php.ini directive windows_show_crt_warnings. (Pierre)\n  . Fixed bug #55378: Binary number literal returns float number though its\n    value is small enough. (Derick)\n\n- Improved Zend Engine memory usage: (Dmitry)\n  . Improved parse error messages. (Felipe)\n  . Replaced zend_function.pass_rest_by_reference by\n    ZEND_ACC_PASS_REST_BY_REFERENCE in zend_function.fn_flags.\n  . Replaced zend_function.return_reference by ZEND_ACC_RETURN_REFERENCE\n    in zend_function.fn_flags.\n  . Removed zend_arg_info.required_num_args as it was only needed for internal\n    functions. Now the first arg_info for internal functions (which has special\n    meaning) is represented by the zend_internal_function_info structure.\n  . Moved zend_op_array.size, size_var, size_literal, current_brk_cont,\n    backpatch_count into CG(context) as they are used only during compilation.\n  . Moved zend_op_array.start_op into EG(start_op) as it's used only for\n    'interactive' execution of a single top-level op-array.\n  . Replaced zend_op_array.done_pass_two by ZEND_ACC_DONE_PASS_TWO in\n    zend_op_array.fn_flags.\n  . op_array.vars array is trimmed (reallocated) during pass_two.\n  . Replaced zend_class_entry.constants_updated by ZEND_ACC_CONSTANTS_UPDATED\n    in zend_class_entry.ce_flags.\n  . Reduced the size of zend_class_entry by sharing the same memory space\n    by different information for internal and user classes.\n    See zend_class_entry.info union.\n  . Reduced size of temp_variable.\n\n- Improved Zend Engine - performance tweaks and optimizations: (Dmitry)\n  . Inlined most probable code-paths for arithmetic operations directly into\n    executor.\n  . Eliminated unnecessary iterations during request startup/shutdown.\n  . Changed $GLOBALS into a JIT autoglobal, so it's initialized only if used.\n    (this may affect opcode caches!)\n  . Improved performance of @ (silence) operator.\n  . Simplified string offset reading. Given $str=\"abc\" then $str[1][0] is now\n    a legal construct.\n  . Added caches to eliminate repeatable run-time bindings of functions,\n    classes, constants, methods and properties.\n  . Added concept of interned strings. All strings constants known at compile\n    time are allocated in a single copy and never changed.\n  . ZEND_RECV now always has IS_CV as its result.\n  . ZEND_CATCH now has to be used only with constant class names.\n  . ZEND_FETCH_DIM_? may fetch array and dimension operands in different order.\n  . Simplified ZEND_FETCH_*_R operations. They can't be used with the\n    EXT_TYPE_UNUSED flag any more. This is a very rare and useless case.\n    ZEND_FREE might be required after them instead.\n  . Split ZEND_RETURN into two new instructions ZEND_RETURN and\n    ZEND_RETURN_BY_REF.\n  . Optimized access to global constants using values with pre-calculated\n    hash_values from the literals table.\n  . Optimized access to static properties using executor specialization.\n    A constant class name may be used as a direct operand of ZEND_FETCH_*\n    instruction without previous ZEND_FETCH_CLASS.\n  . zend_stack and zend_ptr_stack allocation is delayed until actual usage.\n\n- Other improvements to Zend Engine:\n  . Added an optimization which saves memory and emalloc/efree calls for empty\n    HashTables. (Stas, Dmitry)\n  . Added ability to reset user opcode handlers (Yoram).\n  . Changed the structure of op_array.opcodes. The constant values are moved from\n    opcode operands into a separate literal table. (Dmitry)\n  . Fixed (disabled) inline-caching for ZEND_OVERLOADED_FUNCTION methods.\n    (Dmitry)\n\n- Improved core functions:\n  . Enforce an extended class' __construct arguments to match the\n    abstract constructor in the base class.\n  . Disallow reusing superglobal names as parameter names.\n  . Added optional argument to debug_backtrace() and debug_print_backtrace()\n    to limit the amount of stack frames returned. (Sebastian, Patrick)\n  . Added hex2bin() function. (Scott)\n  . number_format() no longer truncates multibyte decimal points and thousand\n    separators to the first byte. FR #53457. (Adam)\n  . Added support for object references in recursive serialize() calls.\n    FR #36424. (Mike)\n  . Added support for SORT_NATURAL and SORT_FLAG_CASE in array\n    sort functions (sort, rsort, ksort, krsort, asort, arsort and\n    array_multisort). FR#55158 (Arpad)\n  . Added stream metadata API support and stream_metadata() stream class\n    handler. (Stas)\n  . User wrappers can now define a stream_truncate() method that responds\n    to truncation, e.g. through ftruncate(). FR #53888. (Gustavo)\n  . Improved unserialize() performance.\n    (galaxy dot mipt at gmail dot com, Kalle)\n  . Changed array_combine() to return empty array instead of FALSE when both\n    parameter arrays are empty. FR #34857. (joel.perras@gmail.com)\n  . Fixed bug #61095 (Incorect lexing of 0x00*+<NUM>). (Etienne)\n  . Fixed bug #60965 (Buffer overflow on htmlspecialchars/entities with\n    $double=false). (Gustavo)\n  . Fixed bug #60895 (Possible invalid handler usage in windows random\n    functions). (Pierre)\n  . Fixed bug #60879 (unserialize() Does not invoke __wakeup() on object).\n    (Pierre, Steve)\n  . Fixed bug #60825 (Segfault when running symfony 2 tests).\n    (Dmitry, Laruence)\n  . Fixed bug #60627 (httpd.worker segfault on startup with php_value).\n  . Fixed bug #60613 (Segmentation fault with $cls->{expr}() syntax). (Dmitry)\n  . Fixed bug #60611 (Segmentation fault with Cls::{expr}() syntax). (Laruence)\n    (Laruence)\n  . Fixed bug #60558 (Invalid read and writes). (Laruence)\n  . Fixed bug #60444 (Segmentation fault with include & class extending).\n    (Laruence, Dmitry).\n  . Fixed bug #60362 (non-existent sub-sub keys should not have values).\n    (Laruence, alan_k, Stas)\n  . Fixed bug #60350 (No string escape code for ESC (ascii 27), normally \\e).\n    (php at mickweiss dot com)\n  . Fixed bug #60321 (ob_get_status(true) no longer returns an array when\n    buffer is empty). (Pierrick)\n  . Fixed bug #60282 (Segfault when using ob_gzhandler() with open buffers).\n    (Laruence)\n  . Fixed bug #60240 (invalid read/writes when unserializing specially crafted\n    strings). (Mike)\n  . Fixed bug #60227 (header() cannot detect the multi-line header with\n     CR(0x0D)). (rui)\n  . Fixed bug #60174 (Notice when array in method prototype error).\n    (Laruence)\n  . Fixed bug #60169 (Conjunction of ternary and list crashes PHP).\n    (Laruence)\n  . Fixed bug #60038 (SIGALRM cause segfault in php_error_cb). (Laruence)\n    (klightspeed at netspace dot net dot au)\n  . Fixed bug #55871 (Interruption in substr_replace()). (Stas)\n  . Fixed bug #55801 (Behavior of unserialize has changed). (Mike)\n  . Fixed bug #55758 (Digest Authenticate missed in 5.4) . (Laruence)\n  . Fixed bug #55748 (multiple NULL Pointer Dereference with zend_strndup())\n    (CVE-2011-4153). (Stas)\n  . Fixed bug #55124 (recursive mkdir fails with current (dot) directory in path).\n    (Pierre)\n  . Fixed bug #55084 (Function registered by header_register_callback is\n    called only once per process). (Hannes)\n  . Implement FR #54514 (Get php binary path during script execution).\n    (Laruence)\n  . Fixed bug #52211 (iconv() returns part of string on error). (Felipe)\n  . Fixed bug #51860 (Include fails with toplevel symlink to /). (Dmitry)\n\n- Improved generic SAPI support:\n  . Added $_SERVER['REQUEST_TIME_FLOAT'] to include microsecond precision.\n    (Patrick)\n  . Added header_register_callback() which is invoked immediately\n    prior to the sending of headers and after default headers have\n    been added. (Scott)\n  . Added http_response_code() function. FR #52555. (Paul Dragoonis, Kalle)\n  . Fixed bug #55500 (Corrupted $_FILES indices lead to security concern).\n    (CVE-2012-1172). (Stas)\n  . Fixed bug #54374 (Insufficient validating of upload name leading to\n    corrupted $_FILES indices). (CVE-2012-1172). (Stas, lekensteyn at gmail dot com)\n\n- Improved CLI SAPI:\n  . Added built-in web server that is intended for testing purpose.\n    (Moriyoshi, Laruence, and fixes by Pierre, Derick, Arpad,\n    chobieee at gmail dot com)\n  . Added command line option --rz <name> which shows information of the\n    named Zend extension. (Johannes)\n  . Interactive readline shell improvements: (Johannes)\n    . Added \"cli.pager\" php.ini setting to set a pager for output.\n    . Added \"cli.prompt\" php.ini setting to configure the shell prompt.\n    . Added shortcut #inisetting=value to change php.ini settings at run-time.\n    . Changed shell not to terminate on fatal errors.\n    . Interactive shell works with shared readline extension. FR #53878.\n\n- Improved CGI/FastCGI SAPI: (Dmitry)\n  . Added apache compatible functions: apache_child_terminate(),\n    getallheaders(), apache_request_headers() and apache_response_headers()\n  . Improved performance of FastCGI request parsing.\n  . Fixed reinitialization of SAPI callbacks after php_module_startup().\n    (Dmitry)\n\n- Improved PHP-FPM SAPI:\n  . Removed EXPERIMENTAL flag. (fat)\n  . Fixed bug #60659 (FPM does not clear auth_user on request accept).\n    (bonbons at linux-vserver dot org)\n\n- Improved Litespeed SAPI:\n  . Fixed bug #55769 (Make Fails with \"Missing Separator\" error). (Adam)\n\n- Improved Date extension:\n  . Added the + modifier to parseFromFormat to allow trailing text in the\n    string to parse without throwing an error. (Stas, Derick)\n\n- Improved DBA extension:\n  . Added Tokyo Cabinet abstract DB support. (Michael Maclean)\n  . Added Berkeley DB 5 support. (Johannes, Chris Jones)\n\n- Improved DOM extension:\n  . Added the ability to pass options to loadHTML (Chregu, fxmulder at gmail dot com)\n\n- Improved filesystem functions:\n  . scandir() now accepts SCANDIR_SORT_NONE as a possible sorting_order value.\n    FR #53407. (Adam)\n\n- Improved HASH extension:\n  . Added Jenkins's one-at-a-time hash support. (Martin Jansen)\n  . Added FNV-1 hash support. (Michael Maclean)\n  . Made Adler32 algorithm faster. FR #53213. (zavasek at yandex dot ru)\n  . Removed Salsa10/Salsa20, which are actually stream ciphers (Mike)\n  . Fixed bug #60221 (Tiger hash output byte order) (Mike)\n\n- Improved intl extension:\n  . Added Spoofchecker class, allows checking for visibly confusable characters and\n    other security issues. (Scott)\n  . Added Transliterator class, allowing transliteration of strings.\n    (Gustavo)\n  . Added support for UTS #46. (Gustavo)\n  . Fixed build on Fedora 15 / Ubuntu 11. (Hannes)\n  . Fixed bug #55562 (grapheme_substr() returns false on big length). (Stas)\n\n- Improved JSON extension:\n  . Added new json_encode() option JSON_UNESCAPED_UNICODE. FR #53946.\n    (Alexander, Gwynne)\n  . Added JsonSerializable interface. (Sara)\n  . Added JSON_BIGINT_AS_STRING, extended json_decode() sig with $options.\n    (Sara)\n  . Added support for JSON_NUMERIC_CHECK option in json_encode() that converts\n    numeric strings to integers. (Ilia)\n  . Added new json_encode() option JSON_UNESCAPED_SLASHES. FR #49366. (Adam)\n  . Added new json_encode() option JSON_PRETTY_PRINT. FR #44331. (Adam)\n\n- Improved LDAP extension:\n  . Added paged results support. FR #42060. (ando@OpenLDAP.org,\n    iarenuno@eteo.mondragon.edu, jeanseb@au-fil-du.net, remy.saissy@gmail.com)\n\n- Improved mbstring extension:\n  . Added Shift_JIS/UTF-8 Emoji (pictograms) support. (Rui)\n  . Added JIS X0213:2004 (Shift_JIS-2004, EUC-JP-2004, ISO-2022-JP-2004)\n    support. (Rui)\n  . Ill-formed UTF-8 check for security enhancements. (Rui)\n  . Added MacJapanese (Shift_JIS) and gb18030 encoding support. (Rui)\n  . Added encode/decode in hex format to mb_[en|de]code_numericentity(). (Rui)\n  . Added user JIS X0213:2004 (Shift_JIS-2004, EUC-JP-2004, ISO-2022-JP-2004)\n    support. (Rui)\n  . Added the user defined area for CP936 and CP950 (Rui).\n  . Fixed bug #60306 (Characters lost while converting from cp936 to utf8).\n    (Laruence)\n\n- Improved MySQL extensions:\n  . MySQL: Deprecated mysql_list_dbs(). FR #50667. (Andrey)\n  . mysqlnd: Added named pipes support. FR #48082. (Andrey)\n  . MySQLi: Added iterator support in MySQLi. mysqli_result implements\n    Traversable. (Andrey, Johannes)\n  . PDO_mysql: Removed support for linking with MySQL client libraries older\n    than 4.1. (Johannes)\n  . ext/mysql, mysqli and pdo_mysql now use mysqlnd by default. (Johannes)\n  . Fixed bug #55473 (mysql_pconnect leaks file descriptors on reconnect).\n    (Andrey, Laruence)\n  . Fixed bug #55653 (PS crash with libmysql when binding same variable as\n    param and out). (Laruence)\n\n- Improved OpenSSL extension:\n  . Added AES support. FR #48632. (yonas dot y at gmail dot com, Pierre)\n  . Added no padding option to openssl_encrypt()/openssl_decrypt(). (Scott)\n  . Use php's implementation for Windows Crypto API in\n    openssl_random_pseudo_bytes. (Pierre)\n  . On error in openssl_random_pseudo_bytes() made sure we set strong result\n    to false. (Scott)\n  . Fixed possible attack in SSL sockets with SSL 3.0 / TLS 1.0.\n    CVE-2011-3389. (Scott)\n  . Fixed bug #61124 (Crash when decoding an invalid base64 encoded string).\n    (me at ktamura dot com, Scott)\n\n- Improved PDO:\n  . Fixed PDO objects binary incompatibility. (Dmitry)\n\n- PDO DBlib driver:\n  . Added nextRowset support.\n  . Fixed bug #50755 (PDO DBLIB Fails with OOM).\n\n- Improved PostgreSQL extension:\n  . Added support for \"extra\" parameter for PGNotify().\n    (r dot i dot k at free dot fr, Ilia)\n\n- Improved PCRE extension:\n  . Changed third parameter of preg_match_all() to optional. FR #53238. (Adam)\n\n- Improved Readline extension:\n  . Fixed bug #54450 (Enable callback support when built against libedit).\n    (fedora at famillecollet dot com, Hannes)\n\n- Improved Reflection extension:\n  . Added ReflectionClass::newInstanceWithoutConstructor() to create a new\n    instance of a class without invoking its constructor. FR #55490.\n    (Sebastian)\n  . Added ReflectionExtension::isTemporary() and\n    ReflectionExtension::isPersistent() methods. (Johannes)\n  . Added ReflectionZendExtension class. (Johannes)\n  . Added ReflectionClass::isCloneable(). (Felipe)\n\n- Improved Session extension:\n  . Expose session status via new function, session_status (FR #52982) (Arpad)\n  . Added support for object-oriented session handlers. (Arpad)\n  . Added support for storing upload progress feedback in session data. (Arnaud)\n  . Changed session.entropy_file to default to /dev/urandom or /dev/arandom if\n    either is present at compile time. (Rasmus)\n  . Fixed bug #60860 (session.save_handler=user without defined function core\n    dumps). (Felipe)\n  . Implement FR #60551 (session_set_save_handler should support a core's\n    session handler interface). (Arpad)\n  . Fixed bug #60640 (invalid return values). (Arpad)\n\n- Improved SNMP extension (Boris Lytochkin):\n  . Added OO API. FR #53594 (php-snmp rewrite).\n  . Sanitized return values of existing functions. Now it returns FALSE on\n    failure.\n  . Allow ~infinite OIDs in GET/GETNEXT/SET queries. Autochunk them to max_oids\n    upon request.\n  . Introducing unit tests for extension with ~full coverage.\n  . IPv6 support. (FR #42918)\n  . Way of representing OID value can now be changed when SNMP_VALUE_OBJECT\n    is used for value output mode. Use or'ed SNMP_VALUE_LIBRARY(default if\n    not specified) or SNMP_VALUE_PLAIN. (FR #54502)\n  . Fixed bug #60749 (SNMP module should not strip non-standard SNMP port\n    from hostname). (Boris Lytochkin)\n  . Fixed bug #60585 (php build fails with USE flag snmp when IPv6 support\n    is disabled). (Boris Lytochkin)\n  . Fixed bug #53862 (snmp_set_oid_output_format does not allow returning to default)\n  . Fixed bug #46065 (snmp_set_quick_print() persists between requests)\n  . Fixed bug #45893 (Snmp buffer limited to 2048 char)\n  . Fixed bug #44193 (snmp v3 noAuthNoPriv doesn't work)\n\n- Improved SOAP extension:\n  . Added new SoapClient option \"keep_alive\". FR #60329. (Pierrick)\n  . Fixed basic HTTP authentication for WSDL sub requests. (Dmitry)\n\n- Improved SPL extension:\n  . Added RegexIterator::getRegex() method. (Joshua Thijssen)\n  . Added SplObjectStorage::getHash() hook. (Etienne)\n  . Added CallbackFilterIterator and RecursiveCallbackFilterIterator. (Arnaud)\n  . Added missing class_uses(..) as pointed out by #55266 (Stefan)\n  . Immediately reject wrong usages of directories under Spl(Temp)FileObject\n    and friends. (Etienne, Pierre)\n  . FilesystemIterator, GlobIterator and (Recursive)DirectoryIterator now use\n    the default stream context. (Hannes)\n  . Fixed bug #60201 (SplFileObject::setCsvControl does not expose third\n    argument via Reflection). (Peter)\n  . Fixed bug #55287 (spl_classes() not includes CallbackFilter classes)\n    (sasezaki at gmail dot com, salathe)\n\n- Improved Sysvshm extension:\n  . Fixed bug #55750 (memory copy issue in sysvshm extension).\n    (Ilia, jeffhuang9999 at gmail dot com)\n\n- Improved Tidy extension:\n  . Fixed bug #54682 (Tidy::diagnose() NULL pointer dereference).\n    (Maksymilian Arciemowicz, Felipe)\n\n- Improved Tokenizer extension:\n  . Fixed bug #54089 (token_get_all with regards to __halt_compiler is\n    not binary safe). (Nikita Popov)\n\n- Improved XSL extension:\n  . Added XsltProcessor::setSecurityPrefs($options) and getSecurityPrefs() to\n    define forbidden operations within XSLT stylesheets, default is not to\n    enable write operations from XSLT. Bug #54446 (Chregu, Nicolas Gregoire)\n  . XSL doesn't stop transformation anymore, if a PHP function can't be called\n    (Christian)\n\n- Improved ZLIB extension:\n  . Re-implemented non-file related functionality. (Mike)\n  . Fixed bug #55544 (ob_gzhandler always conflicts with zlib.output_compression).\n    (Mike)\n\n14 Jun 2012, PHP 5.3.14\n\n- CLI SAPI:\n  . Fixed bug #61546 (functions related to current script failed when chdir()\n    in cli sapi). (Laruence, reeze.xia@gmail.com)\n\n- CURL:\n  . Fixed bug #61948 (CURLOPT_COOKIEFILE '' raises open_basedir restriction).\n    (Laruence)\n\n- COM:\n  . Fixed bug #62146 com_dotnet cannot be built shared. (Johannes)\n\n- Core:\n  . Fixed CVE-2012-2143. (Solar Designer)\n  . Fixed missing bound check in iptcparse(). (chris at chiappa.net)\n  . Fixed bug #62373 (serialize() generates wrong reference to the object).\n    (Moriyoshi)\n  . Fixed bug #62005 (unexpected behavior when incrementally assigning to a\n    member of a null object). (Laruence)\n  . Fixed bug #61991 (long overflow in realpath_cache_get()). (Anatoliy)\n  . Fixed bug #61764 ('I' unpacks n as signed if n > 2^31-1 on LP64). (Gustavo)\n  . Fixed bug #61730 (Segfault from array_walk modifying an array passed by\n    reference). (Laruence)\n  . Fixed bug #61713 (Logic error in charset detection for htmlentities).\n    (Anatoliy)\n  . Fixed bug #54197 ([PATH=] sections incompatibility with user_ini.filename\n    set to null). (Anatoliy)\n  . Changed php://fd to be available only for CLI.\n\n- Fileinfo:\n  . Fixed bug #61812 (Uninitialised value used in libmagic).\n    (Laruence, Gustavo)\n\n- Iconv extension:\n  . Fixed a bug that iconv extension fails to link to the correct library\n    when another extension makes use of a library that links to the iconv\n    library. See https://bugs.gentoo.org/show_bug.cgi?id=364139 for detail.\n    (Moriyoshi)\n\n- Intl:\n  . Fixed bug #62082 (Memory corruption in internal function\n    get_icu_disp_value_src_php()). (Gustavo)\n\n- JSON\n  . Fixed bug #61537 (json_encode() incorrectly truncates/discards\n    information). (Adam)\n\n- PDO:\n  . Fixed bug #61755 (A parsing bug in the prepared statements can lead to\n    access violations). (Johannes)\n\n- Phar:\n  . Fix bug #61065 (Secunia SA44335). (Rasmus)\n\n- Streams:\n  . Fixed bug #61961 (file_get_contents leaks when access empty file with\n    maxlen set). (Reeze)\n\n08 May 2012, PHP 5.3.13\n- CGI\n  . Improve fix for PHP-CGI query string parameter vulnerability, CVE-2012-2311.\n    (Stas)\n\n03 May 2012, PHP 5.3.12\n- Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823. (Rasmus)\n\n26 Apr 2012, PHP 5.3.11\n\n- Core:\n  . Fixed bug #61605 (header_remove() does not remove all headers).\n    (Laruence)\n  . Fixed bug #61541 (Segfault when using ob_* in output_callback).\n    (reeze.xia@gmail.com)\n  . Fixed bug #61273 (call_user_func_array with more than 16333 arguments\n    leaks / crashes). (Laruence)\n  . Fixed bug #61165 (Segfault - strip_tags()). (Laruence)\n  . Improved max_input_vars directive to check nested variables (Dmitry).\n  . Fixed bug #61095 (Incorect lexing of 0x00*+<NUM>). (Etienne)\n  . Fixed bug #61087 (Memory leak in parse_ini_file when specifying\n    invalid scanner mode). (Nikic, Laruence)\n  . Fixed bug #61072 (Memory leak when restoring an exception handler).\n    (Nikic, Laruence)\n  . Fixed bug #61058 (array_fill leaks if start index is PHP_INT_MAX).\n    (Laruence)\n  . Fixed bug #61043 (Regression in magic_quotes_gpc fix for CVE-2012-0831).\n    (Ond\u0159ej Sur\u00fd)\n  . Fixed bug #61000 (Exceeding max nesting level doesn't delete numerical\n    vars). (Laruence)\n  . Fixed bug #60895 (Possible invalid handler usage in windows random\n    functions). (Pierre)\n  . Fixed bug #60825 (Segfault when running symfony 2 tests).\n    (Dmitry, Laruence)\n  . Fixed bug #60801 (strpbrk() mishandles NUL byte). (Adam)\n  . Fixed bug #60569 (Nullbyte truncates Exception $message). (Ilia)\n  . Fixed bug #60227 (header() cannot detect the multi-line header with CR).\n    (rui, Gustavo)\n  . Fixed bug #60222 (time_nanosleep() does validate input params). (Ilia)\n  . Fixed bug #54374 (Insufficient validating of upload name leading to\n    corrupted $_FILES indices). (CVE-2012-1172). (Stas, lekensteyn at\n    gmail dot com, Pierre)\n  . Fixed bug #52719 (array_walk_recursive crashes if third param of the\n    function is by reference). (Nikita Popov)\n  . Fixed bug #51860 (Include fails with toplevel symlink to /). (Dmitry)\n\n- DOM\n  . Added debug info handler to DOM objects. (Gustavo, Joey Smith)\n\n- FPM\n  . Fixed bug #61430 (Transposed memset() params in sapi/fpm/fpm/fpm_shm.c).\n    (michaelhood at gmail dot com, Ilia)\n\n- Ibase\n  . Fixed bug #60947 (Segmentation fault while executing ibase_db_info).\n    (Ilia)\n\n- Installation\n  . Fixed bug #61172 (Add Apache 2.4 support). (Chris Jones)\n\n- Fileinfo\n  . Fixed bug #61173 (Unable to detect error from finfo constructor). (Gustavo)\n\n- Firebird Database extension (ibase):\n  . Fixed bug #60802 (ibase_trans() gives segfault when passing params).\n\n- Libxml:\n  . Fixed bug #61617 (Libxml tests failed(ht is already destroyed)).\n    (Laruence)\n  . Fixed bug #61367 (open_basedir bypass using libxml RSHUTDOWN).\n    (Tim Starling)\n\n- mysqli\n  . Fixed bug #61003 (mysql_stat() require a valid connection). (Johannes).\n\n- PDO_mysql\n  . Fixed bug #61207 (PDO::nextRowset() after a multi-statement query doesn't\n    always work). (Johannes)\n  . Fixed bug #61194 (PDO should export compression flag with myslqnd).\n    (Johannes)\n\n- PDO_odbc\n  . Fixed bug #61212 (PDO ODBC Segfaults on SQL_SUCESS_WITH_INFO). (Ilia)\n\n- PDO_pgsql\n  . Fixed bug #61267 (pdo_pgsql's PDO::exec() returns the number of SELECTed\n    rows on postgresql >= 9). (ben dot pineau at gmail dot com)\n\n- PDO_Sqlite extension:\n  . Add createCollation support. (Damien)\n\n- Phar:\n  . Fixed bug #61184 (Phar::webPhar() generates headers with trailing NUL\n    bytes). (Nikic)\n\n- PHP-FPM SAPI:\n  . Fixed bug #60811 (php-fpm compilation problem). (rasmus)\n\n- Readline:\n  . Fixed bug #61088 (Memory leak in readline_callback_handler_install).\n    (Nikic, Laruence)\n  . Add open_basedir checks to readline_write_history and readline_read_history.\n    (Rasmus, reported by Mateusz Goik)\n\n- Reflection:\n  . Fixed bug #61388 (ReflectionObject:getProperties() issues invalid reads\n    when get_properties returns a hash table with (inaccessible) dynamic\n    numeric properties). (Gustavo)\n  . Fixed bug #60968 (Late static binding doesn't work with\n    ReflectionMethod::invokeArgs()). (Laruence)\n\n- SOAP\n  . Fixed basic HTTP authentication for WSDL sub requests. (Dmitry)\n  . Fixed bug #60887 (SoapClient ignores user_agent option and sends no\n    User-Agent header). (carloschilazo at gmail dot com)\n  . Fixed bug #60842, #51775 (Chunked response parsing error when\n    chunksize length line is > 10 bytes). (Ilia)\n  . Fixed bug #49853 (Soap Client stream context header option ignored).\n    (Dmitry)\n\n- SPL\n  . Fixed memory leak when calling SplFileInfo's constructor twice. (Felipe)\n  . Fixed bug #61418 (Segmentation fault when DirectoryIterator's or\n    FilesystemIterator's iterators are requested more than once without\n    having had its dtor callback called in between). (Gustavo)\n  . Fixed bug #61347 (inconsistent isset behavior of Arrayobject). (Laruence)\n  . Fixed bug #61326 (ArrayObject comparison). (Gustavo)\n\n- SQLite3 extension:\n  . Add createCollation() method. (Brad Dewar)\n\n- Session:\n  . Fixed bug #60860 (session.save_handler=user without defined function core\n    dumps). (Felipe)\n  . Fixed bug #60634 (Segmentation fault when trying to die() in\n    SessionHandler::write()). (Ilia)\n\n- Streams:\n  . Fixed bug #61371 (stream_context_create() causes memory leaks on use\n    streams_socket_create). (Gustavo)\n  . Fixed bug #61253 (Wrappers opened with errors concurrency problem on ZTS).\n    (Gustavo)\n  . Fixed bug #61115 (stream related segfault on fatal error in\n    php_stream_context_link). (Gustavo)\n  . Fixed bug #60817 (stream_get_line() reads from stream even when there is\n    already sufficient data buffered). stream_get_line() now behaves more like\n    fgets(), as is documented. (Gustavo)\n  . Further fix for bug #60455 (stream_get_line misbehaves if EOF is not\n    detected together with the last read). (Gustavo)\n  . Fixed bug #60106 (stream_socket_server silently truncates long unix\n    socket paths). (Ilia)\n\n- Tidy:\n  . Fixed bug #54682 (tidy null pointer dereference). (Tony, David Soria Parra)\n\n- XMLRPC:\n  . Fixed bug #61264 (xmlrpc_parse_method_descriptions leaks temporary\n    variable). (Nikita Popov)\n  . Fixed bug #61097 (Memory leak in xmlrpc functions copying zvals). (Nikic)\n\n- Zlib:\n  . Fixed bug #61139 (gzopen leaks when specifying invalid mode). (Nikic)\n\n02 Feb 2012, PHP 5.3.10\n\n- Core:\n  . Fixed arbitrary remote code execution vulnerability reported by Stefan\n    Esser, CVE-2012-0830. (Stas, Dmitry)\n\n10 Jan 2012, PHP 5.3.9\n\n- Core:\n  . Added max_input_vars directive to prevent attacks based on hash collisions\n    (CVE-2011-4885) (Dmitry).\n  . Fixed bug #60205 (possible integer overflow in content_length). (Laruence)\n  . Fixed bug #60139 (Anonymous functions create cycles not detected by the\n    GC). (Dmitry)\n  . Fixed bug #60138 (GC crash with referenced array in RecursiveArrayIterator)\n    (Dmitry).\n  . Fixed bug #60120 (proc_open's streams may hang with stdin/out/err when\n    the data exceeds or is equal to 2048 bytes). (Pierre, Pascal Borreli)\n  . Fixed bug #60099 (__halt_compiler() works in braced namespaces). (Felipe)\n  . Fixed bug #60019 (Function time_nanosleep() is undefined on OS X). (Ilia)\n  . Fixed bug #55874 (GCC does not provide __sync_fetch_and_add on some archs).\n    (klightspeed at netspace dot net dot au)\n  . Fixed bug #55798 (serialize followed by unserialize with numeric object\n    prop. gives integer prop). (Gustavo)\n  . Fixed bug #55749 (TOCTOU issue in getenv() on Windows builds). (Pierre)\n  . Fixed bug #55707 (undefined reference to `__sync_fetch_and_add_4' on Linux\n    parisc). (Felipe)\n  . Fixed bug #55674 (fgetcsv & str_getcsv skip empty fields in some\n    tab-separated records). (Laruence)\n  . Fixed bug #55649 (Undefined function Bug()). (Laruence)\n  . Fixed bug #55622 (memory corruption in parse_ini_string). (Pierre)\n  . Fixed bug #55576 (Cannot conditionally move uploaded file without race\n    condition). (Gustavo)\n  . Fixed bug #55510: $_FILES 'name' missing first character after upload.\n    (Arpad)\n  . Fixed bug #55509 (segfault on x86_64 using more than 2G memory). (Laruence)\n  . Fixed bug #55504 (Content-Type header is not parsed correctly on\n    HTTP POST request). (Hannes)\n  . Fixed bug #55475 (is_a() triggers autoloader, new optional 3rd argument to\n    is_a and is_subclass_of). (alan_k)\n  . Fixed bug #52461 (Incomplete doctype and missing xmlns).\n    (virsacer at web dot de, Pierre)\n  . Fixed bug #55366 (keys lost when using substr_replace an array). (Arpad)\n  . Fixed bug #55273 (base64_decode() with strict rejects whitespace after\n    pad). (Ilia)\n  . Fixed bug #52624 (tempnam() by-pass open_basedir with nonnexistent\n    directory). (Felipe)\n  . Fixed bug #50982 (incorrect assumption of PAGE_SIZE size). (Dmitry)\n  . Fixed invalid free in call_user_method() function. (Felipe)\n  . Fixed bug #43200 (Interface implementation / inheritence not possible in\n    abstract classes). (Felipe)\n\n\n- BCmath:\n  . Fixed bug #60377 (bcscale related crashes on 64bits platforms). (shm)\n\n- Calendar:\n  . Fixed bug #55797 (Integer overflow in SdnToGregorian leads to segfault (in\n    optimized builds). (Gustavo)\n\n- cURL:\n  . Fixed bug #60439 (curl_copy_handle segfault when used with\n    CURLOPT_PROGRESSFUNCTION). (Pierrick)\n  . Fixed bug #54798 (Segfault when CURLOPT_STDERR file pointer is closed\n    before calling curl_exec). (Hannes)\n  . Fixed issues were curl_copy_handle() would sometimes lose copied\n    preferences. (Hannes)\n\n- DateTime:\n  . Fixed bug #60373 (Startup errors with log_errors on cause segfault).\n    (Derick)\n  . Fixed bug #60236 (TLA timezone dates are not converted properly from\n    timestamp). (Derick)\n  . Fixed bug #55253 (DateTime::add() and sub() result -1 hour on objects with\n    time zone type 2). (Derick)\n  . Fixed bug #54851 (DateTime::createFromFormat() doesn't interpret \"D\").\n    (Derick)\n  . Fixed bug #53502 (strtotime with timezone memory leak). (Derick)\n  . Fixed bug #52062 (large timestamps with DateTime::getTimestamp and\n    DateTime::setTimestamp). (Derick)\n  . Fixed bug #51994 (date_parse_from_format is parsing invalid date using 'yz'\n    format). (Derick)\n  . Fixed bug #52113 (Seg fault while creating (by unserialization)\n    DatePeriod). (Derick)\n  . Fixed bug #48476 (cloning extended DateTime class without calling\n    parent::__constr crashed PHP). (Hannes)\n\n- EXIF:\n  . Fixed bug #60150 (Integer overflow during the parsing of invalid exif\n    header). (CVE-2011-4566) (Stas, flolechaud at gmail dot com)\n\n- Fileinfo:\n  . Fixed bug #60094 (C++ comment fails in c89). (Laruence)\n  . Fixed possible memory leak in finfo_open(). (Felipe)\n  . Fixed memory leak when calling the Finfo constructor twice. (Felipe)\n\n- Filter:\n  . Fixed Bug #55478 (FILTER_VALIDATE_EMAIL fails with internationalized\n    domain name addresses containing >1 -). (Ilia)\n\n- FTP:\n  . Fixed bug #60183 (out of sync ftp responses). (bram at ebskamp dot me,\n    rasmus)\n\n- Gd:\n  . Fixed bug #60160 (imagefill() doesn't work correctly\n    for small images). (Florian)\n  . Fixed potential memory leak on a png error (Rasmus, Paul Saab)\n\n- Intl:\n  . Fixed bug #60192 (SegFault when Collator not constructed\n    properly). (Florian)\n  . Fixed memory leak in several Intl locale functions. (Felipe)\n\n- Json:\n  . Fixed bug #55543 (json_encode() with JSON_NUMERIC_CHECK fails on objects\n    with numeric string properties). (Ilia, dchurch at sciencelogic dot com)\n\n- Mbstring:\n  . Fixed possible crash in mb_ereg_search_init() using empty pattern. (Felipe)\n\n- MS SQL:\n  . Fixed bug #60267 (Compile failure with freetds 0.91). (Felipe)\n\n- MySQL:\n  . Fixed bug #55550 (mysql.trace_mode miscounts result sets). (Johannes)\n\n- MySQLi extension:\n  . Fixed bug #55859 (mysqli->stat property access gives error). (Andrey)\n  . Fixed bug #55582 (mysqli_num_rows() returns always 0 for unbuffered, when\n    mysqlnd is used). (Andrey)\n  . Fixed bug #55703 (PHP crash when calling mysqli_fetch_fields).\n    (eran at zend dot com, Laruence)\n\n- mysqlnd\n  . Fixed bug #55609 (mysqlnd cannot be built shared). (Johannes)\n  . Fixed bug #55067 (MySQL doesn't support compression - wrong config option).\n    (Andrey)\n\n- NSAPI SAPI:\n  . Don't set $_SERVER['HTTPS'] on unsecure connection (bug #55403). (Uwe\n    Schindler)\n\n- OpenSSL:\n  . Fixed bug #60279 (Fixed NULL pointer dereference in\n    stream_socket_enable_crypto, case when ssl_handle of session_stream is not\n    initialized.) (shm)\n  . Fix segfault with older versions of OpenSSL. (Scott)\n\n- Oracle Database extension (OCI8):\n  . Fixed bug #59985 (show normal warning text for OCI_NO_DATA).\n    (Chris Jones)\n  . Increased maximum Oracle error message buffer length for new 11.2.0.3 size.\n    (Chris Jones)\n  . Improve internal initalization failure error messages. (Chris Jones)\n\n- PDO\n  . Fixed bug #55776 (PDORow to session bug). (Johannes)\n\n- PDO Firebird:\n  . Fixed bug #48877 (\"bindValue\" and \"bindParam\" do not work for PDO Firebird).\n    (Mariuz)\n  . Fixed bug #47415 (PDO_Firebird segfaults when passing lowercased column name to bindColumn).\n  . Fixed bug #53280 (PDO_Firebird segfaults if query column count less than param count).\n    (Mariuz)\n\n- PDO MySQL driver:\n  . Fixed bug #60155 (pdo_mysql.default_socket ignored). (Johannes)\n  . Fixed bug #55870 (PDO ignores all SSL parameters when used with mysql\n    native driver). (Pierre)\n  . Fixed bug #54158 (MYSQLND+PDO MySQL requires #define\n    MYSQL_OPT_LOCAL_INFILE). (Andrey)\n\n- PDO OCI driver:\n  . Fixed bug #55768 (PDO_OCI can't resume Oracle session after it's been\n    killed). (mikhail dot v dot gavrilov at gmail dot com, Chris Jones, Tony)\n\n- Phar:\n  . Fixed bug #60261 (NULL pointer dereference in phar). (Felipe)\n  . Fixed bug #60164 (Stubs of a specific length break phar_open_from_fp\n    scanning for __HALT_COMPILER). (Ralph Schindler)\n  . Fixed bug #53872 (internal corruption of phar). (Hannes)\n  . Fixed bug #52013 (Unable to decompress files in a compressed phar). (Hannes)\n\n- PHP-FPM SAPI:\n  . Dropped restriction of not setting the same value multiple times, the last\n    one holds. (giovanni at giacobbi dot net, fat)\n  . Added .phar to default authorized extensions. (fat)\n  . Fixed bug #60659 (FPM does not clear auth_user on request accept).\n    (bonbons at linux-vserver dot org)\n  . Fixed bug #60629 (memory corruption when web server closed the fcgi fd).\n    (fat)\n  . Enhance error log when the primary script can't be open. FR #60199. (fat)\n  . Fixed bug #60179 (php_flag and php_value does not work properly). (fat)\n  . Fixed bug #55577 (status.html does not install). (fat)\n  . Fixed bug #55533 (The -d parameter doesn't work). (fat)\n  . Fixed bug #55526 (Heartbeat causes a lot of unnecessary events). (fat)\n  . Fixed bug #55486 (status show BIG processes number). (fat)\n  . Enhanced security by limiting access to user defined extensions.\n    FR #55181. (fat)\n  . Added process.max to control the number of process FPM can fork. FR #55166.\n    (fat)\n  . Implemented FR #54577 (Enhanced status page with full status and details\n    about each processes. Also provide a web page (status.html) for\n    real-time FPM status. (fat)\n  . Lowered default value for Process Manager. FR #54098. (fat)\n  . Implemented FR #52569 (Add the \"ondemand\" process-manager\n    to allow zero children). (fat)\n  . Added partial syslog support (on error_log only). FR #52052. (fat)\n\n- Postgres:\n  . Fixed bug #60244 (pg_fetch_* functions do not validate that row param\n    is >0). (Ilia)\n  . Added PGSQL_LIBPQ_VERSION/PGSQL_LIBPQ_VERSION_STR constants. (Yasuo)\n\n- Reflection:\n  . Fixed bug #60367 (Reflection and Late Static Binding). (Laruence)\n\n- Session:\n  . Fixed bug #55267 (session_regenerate_id fails after header sent). (Hannes)\n\n- SimpleXML:\n  . Reverted the SimpleXML->query() behaviour to returning empty arrays\n    instead of false when no nodes are found as it was since 5.3.3\n    (bug #48601). (chregu, rrichards)\n\n- SOAP\n  . Fixed bug #54911 (Access to a undefined member in inherit SoapClient may\n    cause Segmentation Fault). (Dmitry)\n  . Fixed bug #48216 (PHP Fatal error: SOAP-ERROR: Parsing WSDL:\n    Extra content at the end of the doc, when server uses chunked transfer\n    encoding with spaces after chunk size). (Dmitry)\n  . Fixed bug #44686 (SOAP-ERROR: Parsing WSDL with references). (Dmitry)\n\n- Sockets:\n  . Fixed bug #60048 (sa_len a #define on IRIX). (china at thewrittenword dot\n    com)\n\n- SPL:\n  . Fixed bug #60082 (Crash in ArrayObject() when using recursive references).\n    (Tony)\n  . Fixed bug #55807 (Wrong value for splFileObject::SKIP_EMPTY).\n    (jgotti at modedemploi dot fr, Hannes)\n  . Fixed bug #54304 (RegexIterator::accept() doesn't work with scalar values).\n    (Hannes)\n\n- Streams:\n  . Fixed bug #60455 (stream_get_line misbehaves if EOF is not detected together\n    with the last read). (Gustavo)\n\n- Tidy:\n  . Fixed bug #54682 (Tidy::diagnose() NULL pointer dereference).\n    (Maksymilian Arciemowicz, Felipe)\n\n- XSL:\n  . Added xsl.security_prefs ini option to define forbidden operations within\n    XSLT stylesheets, default is not to enable write operations. This option\n    won't be in 5.4, since there's a new method. Fixes Bug #54446. (Chregu,\n    Nicolas Gregoire)\n\n23 Aug 2011, PHP 5.3.8\n\n- Core:\n  . Fixed bug #55439 (crypt() returns only the salt for MD5). (Stas)\n\n- OpenSSL:\n  . Reverted a change in timeout handling restoring PHP 5.3.6 behavior,\n    as the new behavior caused mysqlnd SSL connections to hang (#55283).\n    (Pierre, Andrey, Johannes)\n\n18 Aug 2011, PHP 5.3.7\n- Upgraded bundled SQLite to version 3.7.7.1. (Scott)\n- Upgraded bundled PCRE to version 8.12. (Scott)\n\n- Zend Engine:\n  . Fixed bug #55156 (ReflectionClass::getDocComment() returns comment even\n    though the class has none). (Felipe)\n  . Fixed bug #55007 (compiler fail after previous fail). (Felipe)\n  . Fixed bug #54910 (Crash when calling call_user_func with unknown function\n    name). (Dmitry)\n  . Fixed bug #54804 (__halt_compiler and imported namespaces).\n    (Pierrick, Felipe)\n  . Fixed bug #54624 (class_alias and type hint). (Felipe)\n  . Fixed bug #54585 (track_errors causes segfault). (Dmitry)\n  . Fixed bug #54423 (classes from dl()'ed extensions are not destroyed).\n    (Tony, Dmitry)\n  . Fixed bug #54372 (Crash accessing global object itself returned from its\n    __get() handle). (Dmitry)\n  . Fixed bug #54367 (Use of closure causes problem in ArrayAccess). (Dmitry)\n  . Fixed bug #54358 (Closure, use and reference). (Dmitry)\n  . Fixed bug #54262 (Crash when assigning value to a dimension in a non-array).\n    (Dmitry)\n  . Fixed bug #54039 (use() of static variables in lambda functions can break\n    staticness). (Dmitry)\n\n- Core\n  . Updated crypt_blowfish to 1.2. ((CVE-2011-2483) (Solar Designer)\n  . Removed warning when argument of is_a() or is_subclass_of() is not\n    a known class. (Stas)\n  . Fixed crash in error_log(). (Felipe) Reported by Mateusz Kocielski.\n  . Added PHP_MANDIR constant telling where the manpages were installed into,\n    and an --man-dir argument to php-config. (Hannes)\n  . Fixed a crash inside dtor for error handling. (Ilia)\n  . Fixed buffer overflow on overlog salt in crypt(). (Cl\u00e9ment LECIGNE, Stas)\n  . Implemented FR #54459 (Range function accuracy). (Adam)\n\n  . Fixed bug #55399 (parse_url() incorrectly treats ':' as a valid path).\n    (Ilia)\n  . Fixed bug #55339 (Segfault with allow_call_time_pass_reference = Off).\n    (Dmitry)\n  . Fixed bug #55295 [NEW]: popen_ex on windows, fixed possible heap overflow\n    (Pierre)\n  . Fixed bug #55258 (Windows Version Detecting Error).\n    ( xiaomao5 at live dot com, Pierre)\n  . Fixed bug #55187 (readlink returns weird characters when false result).\n   (Pierre)\n  . Fixed bug #55082 (var_export() doesn't escape properties properly).\n    (Gustavo)\n  . Fixed bug #55014 (Compile failure due to improper use of ctime_r()). (Ilia)\n  . Fixed bug #54939 (File path injection vulnerability in RFC1867 File upload\n    filename). (Felipe) Reported by Krzysztof Kotowicz. (CVE-2011-2202)\n  . Fixed bug #54935 php_win_err can lead to crash. (Pierre)\n  . Fixed bug #54924 (assert.* is not being reset upon request shutdown). (Ilia)\n  . Fixed bug #54895 (Fix compiling with older gcc version without need for\n    membar_producer macro). (mhei at heimpold dot de)\n  . Fixed bug #54866 (incorrect accounting for realpath_cache_size).\n    (Dustin Ward)\n  . Fixed bug #54723 (getimagesize() doesn't check the full ico signature).\n    (Scott)\n  . Fixed bug #54721 (Different Hashes on Windows, BSD and Linux on wrong Salt\n    size). (Pierre, os at irj dot ru)\n  . Fixed bug #54580 (get_browser() segmentation fault when browscap ini\n    directive is set through php_admin_value). (Gustavo)\n  . Fixed bug #54332 (Crash in zend_mm_check_ptr // Heap corruption). (Dmitry)\n  . Fixed bug #54305 (Crash in gc_remove_zval_from_buffer). (Dmitry)\n  . Fixed bug #54238 (use-after-free in substr_replace()). (Stas)\n    (CVE-2011-1148)\n  . Fixed bug #54204 (Can't set a value with a PATH section in php.ini).\n    (Pierre)\n  . Fixed bug #54180 (parse_url() incorrectly parses path when ? in fragment).\n    (tomas dot brastavicius at quantum dot lt, Pierrick)\n  . Fixed bug #54137 (file_get_contents POST request sends additional line\n    break). (maurice-php at mertinkat dot net, Ilia)\n  . Fixed bug #53848 (fgetcsv() ignores spaces at beginnings of fields). (Ilia)\n  . Alternative fix for bug #52550, as applied to the round() function (signed\n    overflow), as the old fix impacted the algorithm for numbers with magnitude\n    smaller than 0. (Gustavo)\n  . Fixed bug #53727 (Inconsistent behavior of is_subclass_of with interfaces)\n    (Ralph Schindler, Dmitry)\n  . Fixed bug #52935 (call exit in user_error_handler cause stream relate\n    core). (Gustavo)\n  . Fixed bug #51997 (SEEK_CUR with 0 value, returns a warning). (Ilia)\n  . Fixed bug #50816 (Using class constants in array definition fails).\n    (Pierrick, Dmitry)\n  . Fixed bug #50363 (Invalid parsing in convert.quoted-printable-decode\n    filter). (slusarz at curecanti dot org)\n  . Fixed bug #48465 (sys_get_temp_dir() possibly inconsistent when using\n    TMPDIR on Windows). (Pierre)\n\n- Apache2 Handler SAPI:\n  . Fixed bug #54529 (SAPI crashes on apache_config.c:197).\n    (hebergement at riastudio dot fr)\n\n- CLI SAPI:\n  . Fixed bug #52496 (Zero exit code on option parsing failure). (Ilia)\n\n- cURL extension:\n  . Added ini option curl.cainfo (support for custom cert db). (Pierre)\n  . Added CURLINFO_REDIRECT_URL support. (Daniel Stenberg, Pierre)\n  . Added support for CURLOPT_MAX_RECV_SPEED_LARGE and\n    CURLOPT_MAX_SEND_SPEED_LARGE. FR #51815. (Pierrick)\n\n- DateTime extension:\n  . Fixed bug where the DateTime object got changed while using date_diff().\n    (Derick)\n  . Fixed bug #54340 (DateTime::add() method bug). (Adam)\n  . Fixed bug #54316 (DateTime::createFromFormat does not handle trailing '|'\n    correctly). (Adam)\n  . Fixed bug #54283 (new DatePeriod(NULL) causes crash). (Felipe)\n  . Fixed bug #51819 (Case discrepancy in timezone names cause Uncaught\n    exception and fatal error). (Hannes)\n\n- DBA extension:\n  . Supress warning on non-existent file open with Berkeley DB 5.2. (Chris Jones)\n  . Fixed bug #54242 (dba_insert returns true if key already exists). (Felipe)\n\n- Exif extesion:\n  . Fixed bug #54121 (error message format string typo). (Ilia)\n\n- Fileinfo extension:\n  . Fixed bug #54934 (Unresolved symbol strtoull in HP-UX 11.11). (Felipe)\n\n- Filter extension:\n  . Added 3rd parameter to filter_var_array() and filter_input_array()\n    functions that allows disabling addition of empty elements. (Ilia)\n  . Fixed bug #53037 (FILTER_FLAG_EMPTY_STRING_NULL is not implemented). (Ilia)\n\n- Interbase extension:\n  . Fixed bug #54269 (Short exception message buffer causes crash). (Felipe)\n\n- intl extension:\n  . Implemented FR #54561 (Expose ICU version info). (David Zuelke, Ilia)\n  . Implemented FR #54540 (Allow loading of arbitrary resource bundles when\n    fallback is disabled). (David Zuelke, Stas)\n\n- Imap extension:\n  . Fixed bug #55313 (Number of retries not set when params specified).\n    (kevin at kevinlocke dot name)\n\n- json extension:\n  . Fixed bug #54484 (Empty string in json_decode doesn't reset\n    json_last_error()). (Ilia)\n\n- LDAP extension:\n  . Fixed bug #53339 (Fails to build when compilng with gcc 4.5 and DSO\n    libraries). (Clint Byrum, Raphael)\n\n- libxml extension:\n  . Fixed bug #54601 (Removing the doctype node segfaults). (Hannes)\n  . Fixed bug #54440 (libxml extension ignores default context). (Gustavo)\n\n- mbstring extension:\n  . Fixed bug #54494 (mb_substr() mishandles UTF-32LE and UCS-2LE). (Gustavo)\n\n- MCrypt extension:\n  . Change E_ERROR to E_WARNING in mcrypt_create_iv when not enough data\n    has been fetched (Windows). (Pierre)\n  . Fixed bug #55169 (mcrypt_create_iv always fails to gather sufficient random\n    data on Windows). (Pierre)\n\n- mysqlnd\n  . Fixed crash when using more than 28,000 bound parameters. Workaround is to\n    set mysqlnd.net_cmd_buffer_size to at least 9000. (Andrey)\n  . Fixed bug #54674 mysqlnd valid_sjis_(head|tail) is using invalid operator\n    and range). (nihen at megabbs dot com, Andrey)\n\n- MySQLi extension:\n  . Fixed bug #55283 (SSL options set by mysqli_ssl_set ignored for MySQLi\n    persistent connections). (Andrey)\n  . Fixed Bug #54221 (mysqli::get_warnings segfault when used in multi queries).\n    (Andrey)\n\n- OpenSSL extension:\n  . openssl_encrypt()/openssl_decrypt() truncated keys of variable length\n    ciphers to the OpenSSL default for the algorithm. (Scott)\n  . On blocking SSL sockets respect the timeout option where possible.\n    (Scott)\n  . Fixed bug #54992 (Stream not closed and error not returned when SSL\n    CN_match fails). (Gustavo, laird_ngrps at dodo dot com dot au)\n\n- Oracle Database extension (OCI8):\n  . Added oci_client_version() returning the runtime Oracle client library\n    version. (Chris Jones)\n\n. PCRE extension:\n  . Increased the backtrack limit from 100000 to 1000000 (Rasmus)\n\n- PDO extension:\n  . Fixed bug #54929 (Parse error with single quote in sql comment). (Felipe)\n  . Fixed bug #52104 (bindColumn creates Warning regardless of ATTR_ERRMODE\n    settings). (Ilia)\n\n- PDO DBlib driver:\n  . Fixed bug #54329 (MSSql extension memory leak).\n    (dotslashpok at gmail dot com)\n  . Fixed bug #54167 (PDO_DBLIB returns null on SQLUNIQUE field).\n    (mjh at hodginsmedia dot com, Felipe)\n\n- PDO ODBC driver:\n  . Fixed data type usage in 64bit. (leocsilva at gmail dot com)\n\n- PDO MySQL driver:\n  . Fixed bug #54644 (wrong pathes in php_pdo_mysql_int.h). (Tony, Johannes)\n  . Fixed bug #53782 (foreach throws irrelevant exception). (Johannes, Andrey)\n  . Implemented FR #48587 (MySQL PDO driver doesn't support SSL connections).\n    (Rob)\n\n- PDO PostgreSQL driver:\n  . Fixed bug #54318 (Non-portable grep option used in PDO pgsql\n    configuration). (bwalton at artsci dot utoronto dot ca)\n\n- PDO Oracle driver:\n  . Fixed bug #44989 (64bit Oracle RPMs still not supported by pdo-oci).\n    (jbnance at tresgeek dot net)\n\n- Phar extension:\n  . Fixed bug #54395 (Phar::mount() crashes when calling with wrong parameters).\n    (Felipe)\n\n- PHP-FPM SAPI:\n  . Implemented FR #54499 (FPM ping and status_path should handle HEAD request). (fat)\n  . Implemented FR #54172 (Overriding the pid file location of php-fpm). (fat)\n  . Fixed missing Expires and Cache-Control headers for ping and status pages.\n    (fat)\n  . Fixed memory leak. (fat) Reported and fixed by Giovanni Giacobbi.\n  . Fixed wrong value of log_level when invoking fpm with -tt. (fat)\n  . Added xml format to the status page. (fat)\n  . Removed timestamp in logs written by children processes. (fat)\n  . Fixed exit at FPM startup on fpm_resources_prepare() errors. (fat)\n  . Added master rlimit_files and rlimit_core in the global configuration\n    settings. (fat)\n  . Removed pid in debug logs written by chrildren processes. (fat)\n  . Added custom access log (also added per request %CPU and memory\n    mesurement). (fat)\n  . Added a real scoreboard and several improvements to the status page. (fat)\n\n- Reflection extension:\n  . Fixed bug #54347 (reflection_extension does not lowercase module function\n    name). (Felipe, laruence at yahoo dot com dot cn)\n\n- SOAP extension:\n  . Fixed bug #55323 (SoapClient segmentation fault when XSD_TYPEKIND_EXTENSION\n    contains itself). (Dmitry)\n  . Fixed bug #54312 (soap_version logic bug). (tom at samplonius dot org)\n\n- Sockets extension:\n  . Fixed stack buffer overflow in socket_connect(). (CVE-2011-1938)\n    Found by Mateusz Kocielski, Marek Kroemeke and Filip Palian. (Felipe)\n  . Changed socket_set_block() and socket_set_nonblock() so they emit warnings\n    on error. (Gustavo)\n  . Fixed bug #51958 (socket_accept() fails on IPv6 server sockets). (Gustavo)\n\n- SPL extension:\n  . Fixed bug #54971 (Wrong result when using iterator_to_array with use_keys\n    on true). (Pierrick)\n  . Fixed bug #54970 (SplFixedArray::setSize() isn't resizing). (Felipe)\n  . Fixed bug #54609 (Certain implementation(s) of SplFixedArray cause hard\n    crash). (Felipe)\n  . Fixed bug #54384 (Dual iterators, GlobIterator, SplFileObject and\n    SplTempFileObject crash when user-space classes don't call the paren\n    constructor). (Gustavo)\n  . Fixed bug #54292 (Wrong parameter causes crash in\n    SplFileObject::__construct()). (Felipe)\n  . Fixed bug #54291 (Crash iterating DirectoryIterator for dir name starting\n    with \\0). (Gustavo)\n  . Fixed bug #54281 (Crash in non-initialized RecursiveIteratorIterator).\n    (Felipe)\n\n- Streams:\n  . Fixed bug #54946 (stream_get_contents infinite loop). (Hannes)\n  . Fixed bug #54623 (Segfault when writing to a persistent socket after\n    closing a copy of the socket). (Gustavo)\n  . Fixed bug #54681 (addGlob() crashes on invalid flags). (Felipe)\n\n\n17 Mar 2011, PHP 5.3.6\n- Upgraded bundled Sqlite3 to version 3.7.4. (Ilia)\n- Upgraded bundled PCRE to version 8.11. (Ilia)\n\n- Zend Engine:\n  . Indirect reference to $this fails to resolve if direct $this is never used\n    in method. (Scott)\n  . Added options to debug backtrace functions. (Stas)\n  . Fixed bug numerous crashes due to setlocale (crash on error, pcre, mysql\n    etc.) on Windows in thread safe mode. (Pierre)\n  . Fixed Bug #53971 (isset() and empty() produce apparently spurious runtime\n    error). (Dmitry)\n  . Fixed Bug #53958 (Closures can't 'use' shared variables by value and by\n    reference). (Dmitry)\n  . Fixed Bug #53629 (memory leak inside highlight_string()). (Hannes, Ilia)\n  . Fixed Bug #51458 (Lack of error context with nested exceptions). (Stas)\n  . Fixed Bug #47143 (Throwing an exception in a destructor causes a fatal\n    error). (Stas)\n  . Fixed bug #43512 (same parameter name can be used multiple times in\n    method/function definition). (Felipe)\n\n- Core:\n  . Added ability to connect to HTTPS sites through proxy with basic\n    authentication using stream_context/http/header/Proxy-Authorization (Dmitry)\n  . Changed default value of ini directive serialize_precision from 100 to 17.\n    (Gustavo)\n  . Fixed bug #54055 (buffer overrun with high values for precision ini\n    setting). (Gustavo)\n  . Fixed bug #53959 (reflection data for fgetcsv out-of-date). (Richard)\n  . Fixed bug #53577 (Regression introduced in 5.3.4 in open_basedir with a\n    trailing forward slash). (lekensteyn at gmail dot com, Pierre)\n  . Fixed bug #53682 (Fix compile on the VAX). (Rasmus, jklos)\n  . Fixed bug #48484 (array_product() always returns 0 for an empty array).\n    (Ilia)\n  . Fixed bug #48607 (fwrite() doesn't check reply from ftp server before\n    exiting). (Ilia)\n\n\n- Calendar extension:\n  . Fixed bug #53574 (Integer overflow in SdnToJulian, sometimes leading to\n    segfault). (Gustavo)\n\n- DOM extension:\n  . Implemented FR #39771 (Made DOMDocument::saveHTML accept an optional DOMNode\n    like DOMDocument::saveXML). (Gustavo)\n\n- DateTime extension:\n  . Fixed a bug in DateTime->modify() where absolute date/time statements had\n    no effect. (Derick)\n  . Fixed bug #53729 (DatePeriod fails to initialize recurrences on 64bit\n    big-endian systems). (Derick, rein@basefarm.no)\n  . Fixed bug #52808 (Segfault when specifying interval as two dates). (Stas)\n  . Fixed bug #52738 (Can't use new properties in class extended from\n    DateInterval). (Stas)\n  . Fixed bug #52290 (setDate, setISODate, setTime works wrong when DateTime\n    created from timestamp). (Stas)\n  . Fixed bug #52063 (DateTime constructor's second argument doesn't have a\n    null default value). (Gustavo, Stas)\n\n- Exif extension:\n  . Fixed bug #54002 (crash on crafted tag, reported by Luca Carettoni).\n    (Pierre) (CVE-2011-0708)\n\n- Filter extension:\n  . Fixed bug #53924 (FILTER_VALIDATE_URL doesn't validate port number).\n    (Ilia, Gustavo)\n  . Fixed bug #53150 (FILTER_FLAG_NO_RES_RANGE is missing some IP ranges).\n    (Ilia)\n  . Fixed bug #52209 (INPUT_ENV returns NULL for set variables (CLI)). (Ilia)\n  . Fixed bug #47435 (FILTER_FLAG_NO_RES_RANGE don't work with ipv6).\n    (Ilia, valli at icsurselva dot ch)\n\n- Fileinfo extension:\n  . Fixed bug #54016 (finfo_file() Cannot determine filetype in archives).\n    (Hannes)\n\n- Gettext\n  . Fixed bug #53837 (_() crashes on Windows when no LANG or LANGUAGE\n    environment variable are set). (Pierre)\n\n- IMAP extension:\n  . Implemented FR #53812 (get MIME headers of the part of the email). (Stas)\n  . Fixed bug #53377 (imap_mime_header_decode() doesn't ignore \\t during long\n    MIME header unfolding). (Adam)\n\n- Intl extension:\n  . Fixed bug #53612 (Segmentation fault when using cloned several intl\n    objects). (Gustavo)\n  . Fixed bug #53512 (NumberFormatter::setSymbol crash on bogus $attr values).\n    (Felipe)\n  . Implemented clone functionality for number, date & message formatters.\n    (Stas).\n\n- JSON extension:\n  . Fixed bug #53963 (Ensure error_code is always set during some failed\n    decodings). (Scott)\n\n- mysqlnd\n  . Fixed problem with always returning 0 as num_rows for unbuffered sets.\n    (Andrey, Ulf)\n\n- MySQL Improved extension:\n  . Added 'db' and 'catalog' keys to the field fetching functions (FR #39847).\n    (Kalle)\n  . Fixed buggy counting of affected rows when using the text protocol. The\n    collected statistics were wrong when multi_query was used with mysqlnd\n    (Andrey)\n  . Fixed bug #53795 (Connect Error from MySqli (mysqlnd) when using SSL).\n    (Kalle)\n  . Fixed bug #53503 (mysqli::query returns false after successful LOAD DATA\n    query). (Kalle, Andrey)\n  . Fixed bug #53425 (mysqli_real_connect() ignores client flags when built to\n    call libmysql). (Kalle, tre-php-net at crushedhat dot com)\n\n- OpenSSL extension:\n  . Fixed stream_socket_enable_crypto() not honoring the socket timeout in\n    server mode. (Gustavo)\n  . Fixed bug #54060 (Memory leaks when openssl_encrypt). (Pierre)\n  . Fixed bug #54061 (Memory leaks when openssl_decrypt). (Pierre)\n  . Fixed bug #53592 (stream_socket_enable_crypto() busy-waits in client mode).\n    (Gustavo)\n  . Implemented FR #53447 (Cannot disable SessionTicket extension for servers\n    that do not support it) by adding a no_ticket SSL context option. (Adam,\n    Tony)\n\n- PDO MySQL driver:\n  . Fixed bug #53551 (PDOStatement execute segfaults for pdo_mysql driver).\n    (Johannes)\n  . Implemented FR #47802 (Support for setting character sets in DSN strings).\n    (Kalle)\n\n- PDO Oracle driver:\n  . Fixed bug #39199 (Cannot load Lob data with more than 4000 bytes on\n    ORACLE 10). (spatar at mail dot nnov dot ru)\n\n- PDO PostgreSQL driver:\n  . Fixed bug #53517 (segfault in pgsql_stmt_execute() when postgres is down).\n    (gyp at balabit dot hu)\n\n- Phar extension:\n  . Fixed bug #54247 (format-string vulnerability on Phar). (Felipe)\n    (CVE-2011-1153)\n  . Fixed bug #53541 (format string bug in ext/phar).\n    (crrodriguez at opensuse dot org, Ilia)\n  . Fixed bug #53898 (PHAR reports invalid error message, when the directory\n    does not exist). (Ilia)\n\n- PHP-FPM SAPI:\n  . Enforce security in the fastcgi protocol parsing.\n    (ef-lists at email dotde)\n  . Fixed bug #53777 (php-fpm log format now match php_error log format). (fat)\n  . Fixed bug #53527 (php-fpm --test doesn't set a valuable return value). (fat)\n  . Fixed bug #53434 (php-fpm slowlog now also logs the original request). (fat)\n\n- Readline extension:\n  . Fixed bug #53630 (Fixed parameter handling inside readline() function).\n    (jo at feuersee dot de, Ilia)\n\n- Reflection extension:\n  . Fixed bug #53915 (ReflectionClass::getConstant(s) emits fatal error on\n    constants with self::). (Gustavo)\n\n- Shmop extension:\n  . Fixed bug #54193 (Integer overflow in shmop_read()). (Felipe)\n    Reported by Jose Carlos Norte <jose at eyeos dot org> (CVE-2011-1092)\n\n- SNMP extension:\n  . Fixed bug #51336 (snmprealwalk (snmp v1) does not handle end of OID tree\n    correctly). (Boris Lytochkin)\n\n- SOAP extension:\n  . Fixed possible crash introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n\n- SPL extension:\n  . Fixed memory leak in DirectoryIterator::getExtension() and\n    SplFileInfo::getExtension(). (Felipe)\n  . Fixed bug #53914 (SPL assumes HAVE_GLOB is defined). (Chris Jones)\n  . Fixed bug #53515 (property_exists incorrect on ArrayObject null and 0\n    values). (Felipe)\n  . Fixed bug #49608 (Using CachingIterator on DirectoryIterator instance\n    segfaults). (Felipe)\n\n  . Added SplFileInfo::getExtension(). FR #48767. (Peter Cowburn)\n\n- SQLite3 extension:\n  . Fixed memory leaked introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n  . Fixed memory leak on SQLite3Result and SQLite3Stmt when assigning to a\n    reference. (Felipe)\n  . Add SQlite3_Stmt::readonly() for checking if a statement is read only.\n    (Scott)\n  . Implemented FR #53466 (SQLite3Result::columnType() should return false after\n    all of the rows have been fetched). (Scott)\n\n- Streams:\n  . Fixed bug #54092 (Segmentation fault when using HTTP proxy with the FTP\n    wrapper). (Gustavo)\n  . Fixed bug #53913 (Streams functions assume HAVE_GLOB is defined). (Chris\n    Jones)\n  . Fixed bug #53903 (userspace stream stat callback does not separate the\n    elements of the returned array before converting them). (Gustavo)\n  . Implemented FR #26158 (open arbitrary file descriptor with fopen). (Gustavo)\n\n- Tokenizer Extension\n  . Fixed bug #54089 (token_get_all() does not stop after __halt_compiler).\n    (Nikita Popov, Ilia)\n\n- XSL extension:\n  . Fixed memory leaked introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n\n- Zip extension:\n  . Added the filename into the return value of stream_get_meta_data(). (Hannes)\n  . Fixed bug #53923 (Zip functions assume HAVE_GLOB is defined). (Adam)\n  . Fixed bug #53893 (Wrong return value for ZipArchive::extractTo()). (Pierre)\n  . Fixed bug #53885 (ZipArchive segfault with FL_UNCHANGED on empty archive).\n    (Stas, Maksymilian Arciemowicz). (CVE-2011-0421)\n  . Fixed bug #53854 (Missing constants for compression type). (Richard, Adam)\n  . Fixed bug #53603 (ZipArchive should quiet stat errors). (brad dot froehle at\n    gmail dot com, Gustavo)\n  . Fixed bug #53579 (stream_get_contents() segfaults on ziparchive streams).\n    (Hannes)\n  . Fixed bug #53568 (swapped memset arguments in struct initialization).\n    (crrodriguez at opensuse dot org)\n  . Fixed bug #53166 (Missing parameters in docs and reflection definition).\n    (Richard)\n  . Fixed bug #49072 (feof never returns true for damaged file in zip).\n    (Gustavo, Richard Quadling)\n\n06 Jan 2011, PHP 5.3.5\n- Fixed Bug #53632 (infinite loop with x87 fpu). (CVE-2010-4645) (Scott,\n  Rasmus)\n\n09 Dec 2010, PHP 5.3.4\n- Upgraded bundled Sqlite3 to version 3.7.3. (Ilia)\n- Upgraded bundled PCRE to version 8.10. (Ilia)\n\n- Security enhancements:\n  . Fixed crash in zip extract method (possible CWE-170).\n    (Maksymilian Arciemowicz, Pierre)\n  . Paths with NULL in them (foo\\0bar.txt) are now considered as invalid.\n    (Rasmus)\n  . Fixed a possible double free in imap extension (Identified by Mateusz\n    Kocielski). (CVE-2010-4150). (Ilia)\n  . Fixed NULL pointer dereference in ZipArchive::getArchiveComment.\n    (CVE-2010-3709). (Maksymilian Arciemowicz)\n  . Fixed possible flaw in open_basedir (CVE-2010-3436). (Pierre)\n  . Fixed MOPS-2010-24, fix string validation. (CVE-2010-2950). (Pierre)\n  . Fixed symbolic resolution support when the target is a DFS share. (Pierre)\n  . Fixed bug #52929 (Segfault in filter_var with FILTER_VALIDATE_EMAIL with\n    large amount of data) (CVE-2010-3710). (Adam)\n\n- General improvements:\n  . Added stat support for zip stream. (Pierre)\n  . Added follow_location (enabled by default) option for the http stream\n    support. (Pierre)\n  . Improved support for is_link and related functions on Windows. (Pierre)\n  . Added a 3rd parameter to get_html_translation_table. It now takes a charset\n    hint, like htmlentities et al. (Gustavo)\n\n- Implemented feature requests:\n  . Implemented FR #52348, added new constant ZEND_MULTIBYTE to detect\n    zend multibyte at runtime. (Kalle)\n  . Implemented FR #52173, added functions pcntl_get_last_error() and\n     pcntl_strerror(). (nick dot telford at gmail dot com, Arnaud)\n  . Implemented symbolic links support for open_basedir checks. (Pierre)\n  . Implemented FR #51804, SplFileInfo::getLinkTarget on Windows. (Pierre)\n  . Implemented FR #50692, not uploaded files don't count towards\n    max_file_uploads limit. As a side improvement, temporary files are not\n    opened for empty uploads and, in debug mode, 0-length uploads. (Gustavo)\n\n- Improved MySQLnd:\n  . Added new character sets to mysqlnd, which are available in MySQL 5.5\n    (Andrey)\n\n- Improved PHP-FPM SAPI:\n  . Added '-p/--prefix' to php-fpm to use a custom prefix and run multiple\n    instances. (fat)\n  . Added custom process title for FPM. (fat)\n  . Added '-t/--test' to php-fpm to check and validate FPM conf file. (fat)\n  . Added statistics about listening socket queue length for FPM.\n    (andrei dot nigmatulin at gmail dot com, fat)\n\n- Core:\n  . Fixed extract() to do not overwrite $GLOBALS and $this when using\n    EXTR_OVERWRITE. (jorto at redhat dot com)\n  . Fixed bug in the Windows implementation of dns_get_record, where the two\n    last parameters wouldn't be filled unless the type were DNS_ANY (Gustavo).\n  . Changed the $context parameter on copy() to actually have an effect. (Kalle)\n  . Fixed htmlentities/htmlspecialchars accepting certain ill-formed UTF-8\n    sequences. (Gustavo)\n  . Fixed bug #53409 (sleep() returns NULL on Windows). (Pierre)\n  . Fixed bug #53319 (strip_tags() may strip '<br />' incorrectly). (Felipe)\n  . Fixed bug #53304 (quot_print_decode does not handle lower-case hex digits).\n    (Ilia, daniel dot mueller at inexio dot net)\n  . Fixed bug #53248 (rawurlencode RFC 3986 EBCDIC support misses tilde char).\n    (Justin Martin)\n  . Fixed bug #53226 (file_exists fails on big filenames). (Adam)\n  . Fixed bug #53198 (changing INI setting \"from\" with ini_set did not have any\n    effect). (Gustavo)\n  . Fixed bug #53180 (post_max_size=0 not disabling the limit when the content\n    type is application/x-www-form-urlencoded or is not registered with PHP).\n    (gm at tlink dot de, Gustavo)\n  . Fixed bug #53141 (autoload misbehaves if called from closing session).\n    (ladislav at marek dot su)\n  . Fixed bug #53021 (In html_entity_decode, failure to convert numeric entities\n    with ENT_NOQUOTES and ISO-8859-1). Fixed and extended the fix of\n    ENT_NOQUOTES in html_entity_decode that had introduced the bug (rev\n    #185591) to other encodings. Additionaly, html_entity_decode() now doesn't\n    decode &#34; if ENT_NOQUOTES is given. (Gustavo)\n  . Fixed bug #52931 (strripos not overloaded with function overloading\n    enabled). (Felipe)\n  . Fixed bug #52772 (var_dump() doesn't check for the existence of\n    get_class_name before calling it). (Kalle, Gustavo)\n  . Fixed bug #52534 (var_export array with negative key). (Felipe)\n  . Fixed bug #52327 (base64_decode() improper handling of leading padding in\n    strict mode). (Ilia)\n  . Fixed bug #52260 (dns_get_record fails with non-existing domain on Windows).\n    (a_jelly_doughnut at phpbb dot com, Pierre)\n  . Fixed bug #50953 (socket will not connect to IPv4 address when the host has\n    both IPv4 and IPv6 addresses, on Windows). (Gustavo, Pierre)\n  . Fixed bug #50524 (proc_open on Windows does not respect cwd as it does on\n    other platforms). (Pierre)\n  . Fixed bug #49687 (utf8_decode vulnerabilities and deficiencies in the number\n    of reported malformed sequences). (CVE-2010-3870) (Gustavo)\n  . Fixed bug #49407 (get_html_translation_table doesn't handle UTF-8).\n    (Gustavo)\n  . Fixed bug #48831 (php -i has different output to php --ini). (Richard,\n    Pierre)\n  . Fixed bug #47643 (array_diff() takes over 3000 times longer than php 5.2.4).\n    (Felipe)\n  . Fixed bug #47168 (printf of floating point variable prints maximum of 40\n    decimal places). (Ilia)\n  . Fixed bug #46587 (mt_rand() does not check that max is greater than min).\n    (Ilia)\n  . Fixed bug #29085 (bad default include_path on Windows). (Pierre)\n  . Fixed bug #25927 (get_html_translation_table calls the ' &#39; instead of\n    &#039;). (Gustavo)\n\n- Zend engine:\n  . Reverted fix for bug #51176 (Static calling in non-static method behaves\n    like $this->). (Felipe)\n  . Changed deprecated ini options on startup from E_WARNING to E_DEPRECATED.\n    (Kalle)\n  . Fixed NULL dereference in lex_scan on zend multibyte builds where the script\n    had a flex incompatible encoding and there was no converter. (Gustavo)\n  . Fixed covariance of return-by-ref constraints. (Etienne)\n  . Fixed bug #53305 (E_NOTICE when defining a constant starts with\n    __COMPILER_HALT_OFFSET__). (Felipe)\n  . Fixed bug #52939 (zend_call_function does not respect ZEND_SEND_PREFER_REF).\n    (Dmitry)\n  . Fixed bug #52879 (Objects unreferenced in __get, __set, __isset or __unset\n    can be freed too early). (mail_ben_schmidt at yahoo dot com dot au, Dmitry)\n  . Fixed bug #52786 (PHP should reset section to [PHP] after ini sections).\n    (Fedora at famillecollet dot com)\n  . Fixed bug #52508 (newline problem with parse_ini_file+INI_SCANNER_RAW).\n    (Felipe)\n  . Fixed bug #52484 (__set() ignores setting properties with empty names).\n    (Felipe)\n  . Fixed bug #52361 (Throwing an exception in a destructor causes invalid\n    catching). (Dmitry)\n  . Fixed bug #51008 (Zend/tests/bug45877.phpt fails). (Dmitry)\n\n- Build issues:\n  . Fixed bug #52436 (Compile error if systems do not have stdint.h)\n    (Sriram Natarajan)\n  . Fixed bug #50345 (nanosleep not detected properly on some solaris versions).\n    (Ulf, Tony)\n  . Fixed bug #49215 (make fails on glob_wrapper). (Felipe)\n\n- Calendar extension:\n  . Fixed bug #52744 (cal_days_in_month incorrect for December 1 BCE).\n   (gpap at internet dot gr, Adam)\n\n- cURL extension:\n  . Fixed bug #52828 (curl_setopt does not accept persistent streams).\n    (Gustavo, Ilia)\n  . Fixed bug #52827 (cURL leaks handle and causes assertion error\n    (CURLOPT_STDERR)). (Gustavo)\n  . Fixed bug #52202 (CURLOPT_PRIVATE gets corrupted). (Ilia)\n  . Fixed bug #50410 (curl extension slows down PHP on Windows). (Pierre)\n\n- DateTime extension:\n  . Fixed bug #53297 (gettimeofday implementation in php/win32/time.c can return\n    1 million microsecs). (ped at 7gods dot org)\n  . Fixed bug #52668 (Iterating over a dateperiod twice is broken). (Derick)\n  . Fixed bug #52454 (Relative dates and getTimestamp increments by one day).\n    (Derick)\n  . Fixed bug #52430 (date_parse parse 24:xx:xx as valid time). (Derick)\n  . Added support for the ( and ) delimiters/separators to\n    DateTime::createFromFormat(). (Derick)\n\n- DBA extension:\n  . Added Berkeley DB 5.1 support to the DBA extension. (Oracle Corp.)\n\n- DOM extension:\n  . Fixed bug #52656 (DOMCdataSection does not work with splitText). (Ilia)\n\n- Filter extension:\n  . Fixed the filter extension accepting IPv4 octets with a leading 0 as that\n    belongs to the unsupported \"dotted octal\" representation. (Gustavo)\n  . Fixed bug #53236 (problems in the validation of IPv6 addresses with leading\n    and trailing :: in the filter extension). (Gustavo)\n  . Fixed bug #50117 (problems in the validation of IPv6 addresses with IPv4\n    addresses and ::). (Gustavo)\n\n- GD extension:\n  . Fixed bug #53492 (fix crash if anti-aliasing steps are invalid). (Pierre)\n\n- GMP extension:\n  . Fixed bug #52906 (gmp_mod returns negative result when non-negative is\n    expected). (Stas)\n  . Fixed bug #52849 (GNU MP invalid version match). (Adam)\n\n- Hash extension:\n  . Fixed bug #51003 (unaligned memory access in ext/hash/hash_tiger.c).\n    (Mike, Ilia)\n\n- Iconv extension:\n  . Fixed bug #52941 (The 'iconv_mime_decode_headers' function is skipping\n    headers). (Adam)\n  . Fixed bug #52599 (iconv output handler outputs incorrect content type\n    when flags are used). (Ilia)\n  . Fixed bug #51250 (iconv_mime_decode() does not ignore malformed Q-encoded\n    words). (Ilia)\n\n- Intl extension:\n  . Fixed crashes on invalid parameters in intl extension. (CVE-2010-4409).\n    (Stas, Maksymilian Arciemowicz)\n  . Added support for formatting the timestamp stored in a DateTime object.\n    (Stas)\n  . Fixed bug #50590 (IntlDateFormatter::parse result is limited to the integer\n    range). (Stas)\n\n- Mbstring extension:\n  . Fixed bug #53273 (mb_strcut() returns garbage with the excessive length\n    parameter). (CVE-2010-4156) (Mateusz Kocielski, Pierre, Moriyoshi)\n  . Fixed bug #52981 (Unicode casing table was out-of-date. Updated with\n    UnicodeData-6.0.0d7.txt and included the source of the generator program\n    with the distribution) (Gustavo).\n  . Fixed bug #52681 (mb_send_mail() appends an extra MIME-Version header).\n    (Adam)\n\n- MSSQL extension:\n  . Fixed possible crash in mssql_fetch_batch(). (Kalle)\n  . Fixed bug #52843 (Segfault when optional parameters are not passed in to\n    mssql_connect). (Felipe)\n\n- MySQL extension:\n  . Fixed bug #52636 (php_mysql_fetch_hash writes long value into int).\n    (Kalle, rein at basefarm dot no)\n\n- MySQLi extension:\n  . Fixed bug #52891 (Wrong data inserted with mysqli/mysqlnd when using\n    mysqli_stmt_bind_param and value> PHP_INT_MAX). (Andrey)\n  . Fixed bug #52686 (mysql_stmt_attr_[gs]et argument points to incorrect type).\n    (rein at basefarm dot no)\n  . Fixed bug #52654 (mysqli doesn't install headers with structures it uses).\n    (Andrey)\n  . Fixed bug #52433 (Call to undefined method mysqli::poll() - must be static).\n    (Andrey)\n  . Fixed bug #52417 (MySQLi build failure with mysqlnd on MacOS X). (Andrey)\n  . Fixed bug #52413 (MySQLi/libmysql build failure on OS X, FreeBSD). (Andrey)\n  . Fixed bug #52390 (mysqli_report() should be per-request setting). (Kalle)\n  . Fixed bug #52302 (mysqli_fetch_all does not work with MYSQLI_USE_RESULT).\n    (Andrey)\n  . Fixed bug #52221 (Misbehaviour of magic_quotes_runtime (get/set)). (Andrey)\n  . Fixed bug #45921 (Can't initialize character set hebrew). (Andrey)\n\n- MySQLnd:\n  . Fixed bug #52613 (crash in mysqlnd after hitting memory limit). (Andrey)\n\n- ODBC extension:\n  - Fixed bug #52512 (Broken error handling in odbc_execute).\n    (mkoegler at auto dot tuwien dot ac dot at)\n\n- Openssl extension:\n  . Fixed possible blocking behavior in openssl_random_pseudo_bytes on Windows.\n    (Pierre)\n  . Fixed bug #53136 (Invalid read on openssl_csr_new()). (Felipe)\n  . Fixed bug #52947 (segfault when ssl stream option capture_peer_cert_chain\n    used). (Felipe)\n\n- Oracle Database extension (OCI8):\n  . Fixed bug #53284 (Valgrind warnings in oci_set_* functions) (Oracle Corp.)\n  . Fixed bug #51610 (Using oci_connect causes PHP to take a long time to\n    exit).  Requires Oracle 11.2.0.2 client libraries (or Oracle bug fix\n    9891199) for this patch to have an effect. (Oracle Corp.)\n\n- PCNTL extension:\n  . Fixed bug #52784 (Race condition when handling many concurrent signals).\n    (nick dot telford at gmail dot com, Arnaud)\n\n- PCRE extension:\n  . Fixed bug #52971 (PCRE-Meta-Characters not working with utf-8). (Felipe)\n  . Fixed bug #52732 (Docs say preg_match() returns FALSE on error, but it\n    returns int(0)). (slugonamission at gmail dot com)\n\n- PHAR extension:\n  . Fixed bug #50987 (unaligned memory access in phar.c).\n    (geissert at debian dot org, Ilia)\n\n- PHP-FPM SAPI:\n  . Fixed bug #53412 (segfault when using -y). (fat)\n  . Fixed inconsistent backlog default value (-1) in FPM on many systems. (fat)\n  . Fixed bug #52501 (libevent made FPM crashed when forking -- libevent has\n    been removed). (fat)\n  . Fixed bug #52725 (gcc builtin atomic functions were sometimes used when they\n    were not available). (fat)\n  . Fixed bug #52693 (configuration file errors are not logged to stderr). (fat)\n  . Fixed bug #52674 (FPM Status page returns inconsistent Content-Type\n    headers). (fat)\n  . Fixed bug #52498 (libevent was not only linked to php-fpm). (fat)\n\n- PDO:\n  . Fixed bug #52699 (PDO bindValue writes long int 32bit enum).\n    (rein at basefarm dot no)\n  . Fixed bug #52487 (PDO::FETCH_INTO leaks memory). (Felipe)\n\n- PDO DBLib driver:\n  . Fixed bug #52546 (pdo_dblib segmentation fault when iterating MONEY values).\n    (Felipe)\n\n- PDO Firebird driver:\n  . Restored firebird support (VC9 builds only). (Pierre)\n  . Fixed bug #53335 (pdo_firebird did not implement rowCount()).\n    (preeves at ibphoenix dot com)\n  . Fixed bug #53323 (pdo_firebird getAttribute() crash).\n    (preeves at ibphoenix dot com)\n\n- PDO MySQL driver:\n  . Fixed bug #52745 (Binding params doesn't work when selecting a date inside a\n    CASE-WHEN). (Andrey)\n\n- PostgreSQL extension:\n  . Fixed bug #47199 (pg_delete() fails on NULL). (ewgraf at gmail dot com)\n\n- Reflection extension:\n  . Fixed ReflectionProperty::isDefault() giving a wrong result for properties\n    obtained with ReflectionClass::getProperties(). (Gustavo)\n- Reflection extension:\n  . Fixed bug #53366 (Reflection doesnt get dynamic property value from\n    getProperty()). (Felipe)\n  . Fixed bug #52854 (ReflectionClass::newInstanceArgs does not work for classes\n    without constructors). (Johannes)\n\n- SOAP extension:\n  . Fixed bug #44248 (RFC2616 transgression while HTTPS request through proxy\n    with SoapClient object). (Dmitry)\n\n- SPL extension:\n  . Fixed bug #53362 (Segmentation fault when extending SplFixedArray). (Felipe)\n  . Fixed bug #53279 (SplFileObject doesn't initialise default CSV escape\n    character). (Adam)\n  . Fixed bug #53144 (Segfault in SplObjectStorage::removeAll()). (Felipe)\n  . Fixed bug #53071 (SPLObjectStorage defeats gc_collect_cycles). (Gustavo)\n  . Fixed bug #52573 (SplFileObject::fscanf Segmentation fault). (Felipe)\n  . Fixed bug #51763 (SplFileInfo::getType() does not work symbolic link\n    and directory). (Pierre)\n  . Fixed bug #50481 (Storing many SPLFixedArray in an array crashes). (Felipe)\n  . Fixed bug #50579 (RegexIterator::REPLACE doesn't work). (Felipe)\n\n- SQLite3 extension:\n  . Fixed bug #53463 (sqlite3 columnName() segfaults on bad column_number).\n    (Felipe)\n\n- Streams:\n  . Fixed forward stream seeking emulation in streams that don't support seeking\n    in situations where the read operation gives back less data than requested\n    and when there was data in the buffer before the emulation started. Also\n    made more consistent its behavior -- should return failure every time less\n    data than was requested was skipped. (Gustavo)\n  . Fixed bug #53241 (stream casting that relies on fdopen/fopencookie fails\n    with streams opened with, inter alia, the 'xb' mode). (Gustavo)\n  . Fixed bug #53006 (stream_get_contents has an unpredictable behavior when the\n    underlying stream does not support seeking). (Gustavo)\n  . Fixed bug #52944 (Invalid write on second and subsequent reads with an\n    inflate filter fed invalid data). (Gustavo)\n  . Fixed bug #52820 (writes to fopencookie FILE* not commited when seeking the\n    stream). (Gustavo)\n\n- WDDX extension:\n  . Fixed bug #52468 (wddx_deserialize corrupts integer field value when left\n    empty). (Felipe)\n\n- Zlib extension:\n  . Fixed bug #52926 (zlib fopen wrapper does not use context). (Gustavo)\n\n22 Jul 2010, PHP 5.3.3\n- Upgraded bundled sqlite to version 3.6.23.1. (Ilia)\n- Upgraded bundled PCRE to version 8.02. (Ilia)\n\n- Added support for JSON_NUMERIC_CHECK option in json_encode() that converts\n  numeric strings to integers. (Ilia)\n- Added stream_set_read_buffer, allows to set the buffer for read operation.\n  (Pierre)\n- Added stream filter support to mcrypt extension (ported from\n  mcrypt_filter). (Stas)\n- Added full_special_chars filter to ext/filter. (Rasmus)\n- Added backlog socket context option for stream_socket_server(). (Mike)\n- Added fifth parameter to openssl_encrypt()/openssl_decrypt()\n  (string $iv) to use non-NULL IV.\n  Made implicit use of NULL IV a warning. (Sara)\n- Added openssl_cipher_iv_length(). (Sara)\n- Added FastCGI Process Manager (FPM) SAPI. (Tony)\n- Added recent Windows versions to php_uname and fix undefined windows\n  version support. (Pierre)\n- Added Berkeley DB 5 support to the DBA extension. (Johannes, Chris Jones)\n- Added support for copy to/from array/file for pdo_pgsql extension.\n  (Denis Gasparin, Ilia)\n- Added inTransaction() method to PDO, with specialized support for Postgres.\n  (Ilia, Denis Gasparin)\n\n- Changed namespaced classes so that the ctor can only be named\n  __construct now. (Stas)\n- Reset error state in PDO::beginTransaction() reset error state. (Ilia)\n\n- Implemented FR#51295 (SQLite3::busyTimeout not existing). (Mark)\n- Implemented FR#35638 (Adding udate to imap_fetch_overview results).\n  (Charles_Duffy at dell dot com )\n- Rewrote var_export() to use smart_str rather than output buffering, prevents\n  data disclosure if a fatal error occurs (CVE-2010-2531). (Scott)\n- Fixed possible buffer overflows in mysqlnd_list_fields,  mysqlnd_change_user.\n  (Andrey)\n- Fixed possible buffer overflows when handling error packets in mysqlnd.\n  Reported by Stefan Esser. (Andrey)\n- Fixed very rare memory leak in mysqlnd, when binding thousands of columns.\n  (Andrey)\n- Fixed a crash when calling an inexistent method of a class that inherits\n  PDOStatement if instantiated directly instead of doing by the PDO methods.\n  (Felipe)\n\n- Fixed memory leak on error in mcrypt_create_iv on Windows. (Pierre)\n- Fixed a possible crash because of recursive GC invocation. (Dmitry)\n- Fixed a possible resource destruction issues in shm_put_var().\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible information leak because of interruption of XOR operator.\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption because of unexpected call-time pass by\n  refernce and following memory clobbering through callbacks.\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption in ArrayObject::uasort(). Reported by\n  Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption in parse_str(). Reported by Stefan Esser.\n  (Dmitry)\n- Fixed a possible memory corruption in pack(). Reported by Stefan Esser.\n  (Dmitry)\n- Fixed a possible memory corruption in substr_replace(). Reported by Stefan\n  Esser. (Dmitry)\n- Fixed a possible memory corruption in addcslashes(). Reported by Stefan\n  Esser. (Dmitry)\n- Fixed a possible stack exhaustion inside fnmatch(). Reported by Stefan\n  Esser. (Ilia)\n- Fixed a possible dechunking filter buffer overflow. Reported by Stefan Esser.\n  (Pierre)\n- Fixed a possible arbitrary memory access inside sqlite extension. Reported\n  by Mateusz Kocielski. (Ilia)\n- Fixed string format validation inside phar extension. Reported by Stefan\n  Esser. (Ilia)\n- Fixed handling of session variable serialization on certain prefix\n  characters. Reported by Stefan Esser. (Ilia)\n- Fixed a NULL pointer dereference when processing invalid XML-RPC\n  requests (Fixes CVE-2010-0397, bug #51288). (Raphael Geissert)\n- Fixed 64-bit integer overflow in mhash_keygen_s2k(). (Cl\u00e9ment LECIGNE, Stas)\n- Fixed SplObjectStorage unserialization problems (CVE-2010-2225). (Stas)\n- Fixed the mail.log ini setting when no filename was given. (Johannes)\n\n- Fixed bug #52317 (Segmentation fault when using mail() on a rhel 4.x (only 64\n  bit)). (Adam)\n- Fixed bug #52262 (json_decode() shows no errors on invalid UTF-8).\n  (Scott)\n- Fixed bug #52240 (hash_copy() does not copy the HMAC key, causes wrong\n  results and PHP crashes). (Felipe)\n- Fixed bug #52238 (Crash when an Exception occured in iterator_to_array).\n  (Johannes)\n- Fixed bug #52193 (converting closure to array yields empty array). (Felipe)\n- Fixed bug #52183 (Reflectionfunction reports invalid number of arguments for\n  function aliases). (Felipe)\n- Fixed bug #52162 (custom request header variables with numbers are removed).\n  (Sriram Natarajan)\n- Fixed bug #52160 (Invalid E_STRICT redefined constructor error). (Felipe)\n- Fixed bug #52138 (Constants are parsed into the ini file for section names).\n  (Felipe)\n- Fixed bug #52115 (mysqli_result::fetch_all returns null, not an empty array).\n  (Andrey)\n- Fixed bug #52101 (dns_get_record() garbage in 'ipv6' field on Windows).\n  (Pierre)\n- Fixed bug #52082 (character_set_client & character_set_connection reset after\n  mysqli_change_user()). (Andrey)\n- Fixed bug #52043 (GD doesn't recognize latest libJPEG versions).\n  (php at group dot apple dot com, Pierre)\n- Fixed bug #52041 (Memory leak when writing on uninitialized variable returned\n  from function). (Dmitry)\n- Fixed bug #52060 (Memory leak when passing a closure to method_exists()).\n  (Felipe)\n- Fixed bug #52057 (ReflectionClass fails on Closure class). (Felipe)\n- Fixed bug #52051 (handling of case sensitivity of old-style constructors\n  changed in 5.3+). (Felipe)\n- Fixed bug #52037 (Concurrent builds fail in install-programs). (seanius at\n  debian dot org, Kalle)\n- Fixed bug #52019 (make lcov doesn't support TESTS variable anymore). (Patrick)\n- Fixed bug #52010 (open_basedir restrictions mismatch on vacuum command).\n  (Ilia)\n- Fixed bug #52001 (Memory allocation problems after using variable variables).\n  (Dmitry)\n- Fixed bug #51991 (spl_autoload and *nix support with namespace). (Felipe)\n- Fixed bug #51943 (AIX: Several files are out of ANSI spec). (Kalle,\n  coreystup at gmail dot com)\n- Fixed bug #51911 (ReflectionParameter::getDefaultValue() memory leaks with\n  constant array). (Felipe)\n- Fixed bug #51905 (ReflectionParameter fails if default value is an array\n  with an access to self::). (Felipe)\n- Fixed bug #51899 (Parse error in parse_ini_file() function when empy value\n  followed by no newline). (Felipe)\n- Fixed bug #51844 (checkdnsrr does not support types other than MX). (Pierre)\n- Fixed bug #51827 (Bad warning when register_shutdown_function called with\n  wrong num of parameters). (Felipe)\n- Fixed bug #51822 (Segfault with strange __destruct() for static class\n  variables). (Dmitry)\n- Fixed bug #51791 (constant() aborts execution when fail to check undefined\n  constant). (Felipe)\n- Fixed bug #51732 (Fileinfo __construct or open does not work with NULL).\n  (Pierre)\n- Fixed bug #51725 (xmlrpc_get_type() returns true on invalid dates). (Mike)\n- Fixed bug #51723 (Content-length header is limited to 32bit integer with\n  Apache2 on Windows). (Pierre)\n- Fixed bug #51721 (mark DOMNodeList and DOMNamedNodeMap as Traversable).\n  (David Zuelke)\n- Fixed bug #51712 (Test mysql_mysqlnd_read_timeout_long must fail on MySQL4).\n  (Andrey)\n- Fixed bug #51697 (Unsafe operations in free_storage of SPL iterators,\n  causes crash during shutdown). (Etienne)\n- Fixed bug #51690 (Phar::setStub looks for case-sensitive\n  __HALT_COMPILER()). (Ilia)\n- Fixed bug #51688 (ini per dir crashes when invalid document root  are given).\n  (Pierre)\n- Fixed bug #51671 (imagefill does not work correctly for small images).\n  (Pierre)\n- Fixed bug #51670 (getColumnMeta causes segfault when re-executing query\n  after calling nextRowset). (Pierrick)\n- Fixed bug #51647 Certificate file without private key (pk in another file)\n  doesn't work. (Andrey)\n- Fixed bug #51629 (CURLOPT_FOLLOWLOCATION error message is misleading).\n  (Pierre)\n- Fixed bug #51627 (script path not correctly evaluated).\n  (russell dot tempero at rightnow dot com)\n- Fixed bug #51624 (Crash when calling mysqli_options()). (Felipe)\n- Fixed bug #51615 (PHP crash with wrong HTML in SimpleXML). (Felipe)\n- Fixed bug #51609 (pg_copy_to: Invalid results when using fourth parameter).\n  (Felipe)\n- Fixed bug #51608 (pg_copy_to: WARNING: nonstandard use of \\\\ in a string\n  literal). (cbandy at jbandy dot com)\n- Fixed bug #51607 (pg_copy_from does not allow schema in the tablename\n  argument). (cbandy at jbandy dot com)\n- Fixed bug #51605 (Mysqli - zombie links). (Andrey)\n- Fixed bug #51604 (newline in end of header is shown in start of message).\n  (Daniel Egeberg)\n- Fixed bug #51590 (JSON_ERROR_UTF8 is undefined). (Felipe)\n- Fixed bug #51583 (Bus error due to wrong alignment in mysqlnd). (Rainer Jung)\n- Fixed bug #51582 (Don't assume UINT64_C it's ever available).\n  (reidrac at usebox dot net, Pierre)\n- Fixed bug #51577 (Uninitialized memory reference with oci_bind_array_by_name)\n  (Oracle Corp.)\n- Fixed bug #51562 (query timeout in mssql can not be changed per query).\n  (ejsmont dot artur at gmail dot com)\n- Fixed bug #51552 (debug_backtrace() causes segmentation fault and/or memory\n  issues). (Dmitry)\n- Fixed bug #51445 (var_dump() invalid/slow *RECURSION* detection). (Felipe)\n- Fixed bug #51435 (Missing ifdefs / logic bug in crypt code cause compile\n  errors). (Felipe)\n- Fixed bug #51424 (crypt() function hangs after 3rd call). (Pierre, Sriram)\n- Fixed bug #51394 (Error line reported incorrectly if error handler throws an\n  exception). (Stas)\n- Fixed bug #51393 (DateTime::createFromFormat() fails if format string contains\n  timezone). (Adam)\n- Fixed bug #51347 (mysqli_close / connection memory leak). (Andrey, Johannes)\n- Fixed bug #51338 (URL-Rewriter is still enabled if use_only_cookies is\n  on). (Ilia, j dot jeising at gmail dot com)\n- Fixed bug #51291 (oci_error doesn't report last error when called two times)\n  (Oracle Corp.)\n- Fixed bug #51276 (php_load_extension() is missing when HAVE_LIBDL is\n  undefined). (Tony)\n- Fixed bug #51273 (Faultstring property does not exist when the faultstring is\n  empty) (Ilia, dennis at transip dot nl)\n- Fixed bug #51269 (zlib.output_compression Overwrites Vary Header). (Adam)\n- Fixed bug #51257 (CURL_VERSION_LARGEFILE incorrectly used after libcurl\n  version 7.10.1). (aron dot ujvari at microsec dot hu)\n- Fixed bug #51242 (Empty mysql.default_port does not default to 3306 anymore,\n  but 0). (Adam)\n- Fixed bug #51237 (milter SAPI crash on startup). (igmar at palsenberg dot com)\n- Fixed bug #51213 (pdo_mssql is trimming value of the money column). (Ilia,\n  alexr at oplot dot com)\n- Fixed bug #51190 (ftp_put() returns false when transfer was successful).\n  (Ilia)\n- Fixed bug #51183 (ext/date/php_date.c fails to compile with Sun Studio).\n  (Sriram Natarajan)\n- Fixed bug #51176 (Static calling in non-static method behaves like $this->).\n  (Felipe)\n- Fixed bug #51171 (curl_setopt() doesn't output any errors or warnings when\n  an invalid option is provided). (Ilia)\n- Fixed bug #51128 (imagefill() doesn't work with large images). (Pierre)\n- Fixed bug #51096 ('last day' and 'first day' are handled incorrectly when\n  parsing date strings). (Derick)\n- Fixed bug #51086 (DBA DB4 doesn't work with Berkeley DB 4.8). (Chris Jones)\n- Fixed bug #51062 (DBA DB4 uses mismatched headers and libraries). (Chris\n  Jones)\n- Fixed bug #51026 (mysqli_ssl_set not working). (Andrey)\n- Fixed bug #51023 (filter doesn't detect int overflows with GCC 4.4).\n  (Raphael Geissert)\n- Fixed bug #50999 (unaligned memory access in dba_fetch()). (Felipe)\n- Fixed bug #50976 (Soap headers Authorization not allowed).\n  (Brain France, Dmitry)\n- Fixed bug #50828 (DOMNotation is not subclass of DOMNode). (Rob)\n- Fixed bug #50810 (property_exists does not work for private). (Felipe)\n- Fixed bug #50762 (in WSDL mode Soap Header handler function only being called\n  if defined in WSDL). (mephius at gmail dot com)\n- Fixed bug #50731 (Inconsistent namespaces sent to functions registered with\n  spl_autoload_register). (Felipe)\n- Fixed bug #50563 (removing E_WARNING from parse_url). (ralph at smashlabs dot\n  com, Pierre)\n- Fixed bug #50578 (incorrect shebang in phar.phar). (Fedora at FamilleCollet\n  dot com)\n- Fixed bug #50392 (date_create_from_format enforces 6 digits for 'u' format\n  character). (Derick)\n- Fixed bug #50383 (Exceptions thrown in __call / __callStatic do not include\n  file and line in trace). (Felipe)\n- Fixed bug #50358 (Compile failure compiling ext/phar/util.lo). (Felipe)\n- Fixed bug #50101 (name clash between global and local variable).\n  (patch by yoarvi at gmail dot com)\n- Fixed bug #50055 (DateTime::sub() allows 'relative' time modifications).\n  (Derick)\n- Fixed bug #51002 (fix possible memory corruption with very long names).\n  (Pierre)\n- Fixed bug #49893 (Crash while creating an instance of Zend_Mail_Storage_Pop3).\n  (Dmitry)\n- Fixed bug #49819 (STDOUT losing data with posix_isatty()). (Mike)\n- Fixed bug #49778 (DateInterval::format(\"%a\") is always zero when an interval\n  is created from an ISO string). (Derick)\n- Fixed bug #49700 (memory leaks in php_date.c if garbage collector is\n  enabled). (Dmitry)\n- Fixed bug #49576 (FILTER_VALIDATE_EMAIL filter needs updating) (Rasmus)\n- Fixed bug #49490 (XPath namespace prefix conflict). (Rob)\n- Fixed bug #49429 (odbc_autocommit doesn't work). (Felipe)\n- Fixed bug #49320 (PDO returns null when SQLite connection fails). (Felipe)\n- Fixed bug #49234 (mysqli_ssl_set not found). (Andrey)\n- Fixed bug #49216 (Reflection doesn't seem to work properly on MySqli).\n  (Andrey)\n- Fixed bug #49192 (PHP crashes when GC invoked on COM object). (Stas)\n- Fixed bug #49081 (DateTime::diff() mistake if start in January and interval >\n  28 days). (Derick)\n- Fixed bug #49059 (DateTime::diff() repeats previous sub() operation).\n  (yoarvi@gmail.com, Derick)\n- Fixed bug #48983 (DomDocument : saveHTMLFile wrong charset). (Rob)\n- Fixed bug #48930 (__COMPILER_HALT_OFFSET__ incorrect in PHP >= 5.3). (Felipe)\n- Fixed bug #48902 (Timezone database fallback map is outdated). (Derick)\n- Fixed bug #48781 (Cyclical garbage collector memory leak). (Dmitry)\n- Fixed bug #48601 (xpath() returns FALSE for legitimate query). (Rob)\n- Fixed bug #48361 (SplFileInfo::getPathInfo should return the\n  parent dir). (Etienne)\n- Fixed bug #48289 (iconv_mime_encode() quoted-printable scheme is broken).\n  (Adam, patch from hiroaki dot kawai at gmail dot com).\n- Fixed bug #47842 (sscanf() does not support 64-bit values). (Mike)\n- Fixed bug #46111 (Some timezone identifiers can not be parsed). (Derick)\n- Fixed bug #45808 (stream_socket_enable_crypto() blocks and eats CPU).\n  (vincent at optilian dot com)\n- Fixed bug #43233 (sasl support for ldap on Windows). (Pierre)\n- Fixed bug #35673 (formatOutput does not work with saveHTML). (Rob)\n- Fixed bug #33210 (getimagesize() fails to detect width/height on certain\n  JPEGs). (Ilia)\n\n04 Mar 2010, PHP 5.3.2\n\n- Upgraded bundled sqlite to version 3.6.22. (Ilia)\n- Upgraded bundled libmagic to version 5.03. (Mikko)\n- Upgraded bundled PCRE to version 8.00. (Scott)\n- Updated timezone database to version 2010.3. (Derick)\n\n- Improved LCG entropy. (Rasmus, Samy Kamkar)\n- Improved crypt support for edge cases (UFC compatibility). (Solar Designer,\n  Joey, Pierre)\n\n- Reverted fix for bug #49521 (PDO fetchObject sets values before calling\n  constructor). (Pierrick, Johannes)\n\n- Changed gmp_strval() to use full range from 2 to 62, and -2 to -36. FR #50283\n  (David Soria Parra)\n- Changed \"post_max_size\" php.ini directive to allow unlimited post size by\n  setting it to 0. (Rasmus)\n- Changed tidyNode class to disallow manual node creation. (Pierrick)\n\n- Removed automatic file descriptor unlocking happening on shutdown and/or\n  stream close (on all OSes). (Tony, Ilia)\n\n- Added libpng 1.4.0 support. (Pierre)\n- Added support for DISABLE_AUTHENTICATOR for imap_open. (Pierre)\n- Added missing host validation for HTTP urls inside FILTER_VALIDATE_URL.\n  (Ilia)\n- Added stream_resolve_include_path(). (Mikko)\n- Added INTERNALDATE support to imap_append. (nick at mailtrust dot com)\n- Added support for SHA-256 and SHA-512 to php's crypt. (Pierre)\n- Added realpath_cache_size() and realpath_cache_get() functions. (Stas)\n- Added FILTER_FLAG_STRIP_BACKTICK option to the filter extension. (Ilia)\n- Added protection for $_SESSION from interrupt corruption and improved\n  \"session.save_path\" check. (Stas)\n- Added LIBXML_PARSEHUGE constant to override the maximum text size of a\n  single text node when using libxml2.7.3+. (Kalle)\n- Added ReflectionMethod::setAccessible() for invoking non-public methods\n  through the Reflection API. (Sebastian)\n- Added Collator::getSortKey for intl extension. (Stas)\n- Added support for CURLOPT_POSTREDIR. FR #49571. (Sriram Natarajan)\n- Added support for CURLOPT_CERTINFO. FR #49253.\n  (Linus Nielsen Feltzing <linus@haxx.se>)\n- Added client-side server name indication support in openssl. (Arnaud)\n\n- Improved fix for bug #50006 (Segfault caused by uksort()). (Stas)\n\n- Fixed mysqlnd hang when queries exactly 16777214 bytes long are sent. (Andrey)\n- Fixed incorrect decoding of 5-byte BIT sequences in mysqlnd. (Andrey)\n- Fixed error_log() to be binary safe when using message_type 3. (Jani)\n- Fixed unnecessary invocation of setitimer when timeouts have been disabled.\n  (Arvind Srinivasan)\n- Fixed memory leak in extension loading when an error occurs on Windows.\n  (Pierre)\n- Fixed safe_mode validation inside tempnam() when the directory path does\n  not end with a /). (Martin Jansen)\n- Fixed a possible open_basedir/safe_mode bypass in session extension\n  identified by Grzegorz Stachowiak. (Ilia)\n- Fixed possible crash when a error/warning is raised during php startup.\n  (Pierre)\n- Fixed possible bad behavior of rename on windows when used with symbolic\n  links or invalid paths. (Pierre)\n- Fixed error output to stderr on Windows. (Pierre)\n- Fixed memory leaks in is_writable/readable/etc on Windows. (Pierre)\n- Fixed memory leaks in the ACL function on Windows. (Pierre)\n- Fixed memory leak in the realpath cache on Windows. (Pierre)\n- Fixed memory leak in zip_close. (Pierre)\n- Fixed crypt's blowfish sanity check of the \"setting\" string, to reject\n  iteration counts encoded as 36 through 39. (Solar Designer, Joey, Pierre)\n\n- Fixed bug #51059 (crypt crashes when invalid salt are given). (Pierre)\n- Fixed bug #50952 (allow underscore _ in constants parsed in php.ini files).\n  (Jani)\n- Fixed bug #50940 (Custom content-length set incorrectly in Apache SAPIs).\n  (Brian France, Rasmus)\n- Fixed bug #50930 (Wrong date by php_date.c patch with ancient gcc/glibc\n  versions). (Derick)\n- Fixed bug #50907 (X-PHP-Originating-Script adding two new lines in *NIX).\n  (Ilia)\n- Fixed bug #50859 (build fails with openssl 1.0 due to md2 deprecation).\n  (Ilia, hanno at hboeck dot de)\n- Fixed bug #50847 (strip_tags() removes all tags greater then 1023 bytes\n  long). (Ilia)\n- Fixed bug #50829 (php.ini directive pdo_mysql.default_socket is ignored).\n  (Ilia)\n- Fixed bug #50832 (HTTP fopen wrapper does not support passwordless HTTP\n  authentication). (Jani)\n- Fixed bug #50787 (stream_set_write_buffer() has no effect on socket streams).\n  (vnegrier at optilian dot com, Ilia)\n- Fixed bug #50761 (system.multiCall crashes in xmlrpc extension).\n  (hiroaki dot kawai at gmail dot com, Ilia)\n- Fixed bug #50756 (CURLOPT_FTP_SKIP_PASV_IP does not exist). (Sriram)\n- Fixed bug #50732 (exec() adds single byte twice to $output array). (Ilia)\n- Fixed bug #50728 (All PDOExceptions hardcode 'code' property to 0).\n  (Joey, Ilia)\n- Fixed bug #50723 (Bug in garbage collector causes crash). (Dmitry)\n- Fixed bug #50690 (putenv does not set ENV when the value is only one char).\n  (Pierre)\n- Fixed bug #50680 (strtotime() does not support eighth ordinal number). (Ilia)\n- Fixed bug #50661 (DOMDocument::loadXML does not allow UTF-16). (Rob)\n- Fixed bug #50657 (copy() with an empty (zero-byte) HTTP source succeeds but\n  returns false). (Ilia)\n- Fixed bug #50636 (MySQLi_Result sets values before calling constructor).\n  (Pierrick)\n- Fixed bug #50632 (filter_input() does not return default value if the\n  variable does not exist). (Ilia)\n- Fixed bug #50576 (XML_OPTION_SKIP_TAGSTART option has no effect). (Pierrick)\n- Fixed bug #50558 (Broken object model when extending tidy). (Pierrick)\n- Fixed bug #50540 (Crash while running ldap_next_reference test cases).\n  (Sriram)\n- Fixed bug #50519 (segfault in garbage collection when using set_error_handler\n  and DomDocument). (Dmitry)\n- Fixed bug #50508 (compile failure: Conflicting HEADER type declarations).\n  (Jani)\n- Fixed bug #50496 (Use of <stdbool.h> is valid only in a c99 compilation\n  environment. (Sriram)\n- Fixed bug #50464 (declare encoding doesn't work within an included file).\n  (Felipe)\n- Fixed bug #50458 (PDO::FETCH_FUNC fails with Closures). (Felipe, Pierrick)\n- Fixed bug #50445 (PDO-ODBC stored procedure call from Solaris 64-bit causes\n  seg fault). (davbrown4 at yahoo dot com, Felipe)\n- Fixed bug #50416 (PROCEDURE db.myproc can't return a result set in the given\n  context). (Andrey)\n- Fixed bug #50394 (Reference argument converted to value in __call). (Stas)\n- Fixed bug #50351 (performance regression handling objects, ten times slower\n  in 5.3 than in 5.2). (Dmitry)\n- Fixed bug #50392 (date_create_from_format() enforces 6 digits for 'u'\n  format character). (Ilia)\n- Fixed bug #50345 (nanosleep not detected properly on some solaris versions).\n  (Jani)\n- Fixed bug #50340 (php.ini parser does not allow spaces in ini keys). (Jani)\n- Fixed bug #50334 (crypt ignores sha512 prefix). (Pierre)\n- Fixed bug #50323 (Allow use of ; in values via ;; in PDO DSN).\n  (Ilia, Pierrick)\n- Fixed bug #50285 (xmlrpc does not preserve keys in encoded indexed arrays).\n  (Felipe)\n- Fixed bug #50282 (xmlrpc_encode_request() changes object into array in\n  calling function). (Felipe)\n- Fixed bug #50267 (get_browser(null) does not use HTTP_USER_AGENT). (Jani)\n- Fixed bug #50266 (conflicting types for llabs). (Jani)\n- Fixed bug #50261 (Crash When Calling Parent Constructor with\n  call_user_func()). (Dmitry)\n- Fixed bug #50255 (isset() and empty() silently casts array to object).\n  (Felipe)\n- Fixed bug #50240 (pdo_mysql.default_socket in php.ini shouldn't used\n  if it is empty). (foutrelis at gmail dot com, Ilia)\n- Fixed bug #50231 (Socket path passed using --with-mysql-sock is ignored when\n  mysqlnd is enabled). (Jani)\n- Fixed bug #50219 (soap call Segmentation fault on a redirected url).\n  (Pierrick)\n- Fixed bug #50212 (crash by ldap_get_option() with LDAP_OPT_NETWORK_TIMEOUT).\n  (Ilia, shigeru_kitazaki at cybozu dot co dot jp)\n- Fixed bug #50209 (Compiling with libedit cannot find readline.h).\n  (tcallawa at redhat dot com)\n- Fixed bug #50207 (segmentation fault when concatenating very large strings on\n  64bit linux). (Ilia)\n- Fixed bug #50196 (stream_copy_to_stream() produces warning when source is\n  not file). (Stas)\n- Fixed bug #50195 (pg_copy_to() fails when table name contains schema. (Ilia)\n- Fixed bug #50185 (ldap_get_entries() return false instead of an empty array\n  when there is no error). (Jani)\n- Fixed bug #50174 (Incorrectly matched docComment). (Felipe)\n- Fixed bug #50168 (FastCGI fails with wrong error on HEAD request to\n  non-existant file). (Dmitry)\n- Fixed bug #50162 (Memory leak when fetching timestamp column from Oracle\n  database). (Felipe)\n- Fixed bug #50159 (wrong working directory in symlinked files). (Dmitry)\n- Fixed bug #50158 (FILTER_VALIDATE_EMAIL fails with valid addresses\n  containing = or ?). (Pierrick)\n- Fixed bug #50152 (ReflectionClass::hasProperty behaves like isset() not\n  property_exists). (Felipe)\n- Fixed bug #50146 (property_exists: Closure object cannot have properties).\n  (Felipe)\n- Fixed bug #50145 (crash while running bug35634.phpt). (Felipe)\n- Fixed bug #50140 (With default compilation option, php symbols are unresolved\n  for nsapi). (Uwe Schindler)\n- Fixed bug #50087 (NSAPI performance improvements). (Uwe Schindler)\n- Fixed bug #50073 (parse_url() incorrect when ? in fragment). (Ilia)\n- Fixed bug #50023 (pdo_mysql doesn't use PHP_MYSQL_UNIX_SOCK_ADDR). (Ilia)\n- Fixed bug #50005 (Throwing through Reflection modified Exception object\n  makes segmentation fault). (Felipe)\n- Fixed bug #49990 (SNMP3 warning message about security level printed twice).\n  (Jani)\n- Fixed bug #49985 (pdo_pgsql prepare() re-use previous aborted\n  transaction). (ben dot pineau at gmail dot com, Ilia, Matteo)\n- Fixed bug #49938 (Phar::isBuffering() returns inverted value). (Greg)\n- Fixed bug #49936 (crash with ftp stream in php_stream_context_get_option()).\n  (Pierrick)\n- Fixed bug #49921 (Curl post upload functions changed). (Ilia)\n- Fixed bug #49866 (Making reference on string offsets crashes PHP). (Dmitry)\n- Fixed bug #49855 (import_request_variables() always returns NULL). (Ilia,\n  sjoerd at php dot net)\n- Fixed bug #49851, #50451 (http wrapper breaks on 1024 char long headers).\n  (Ilia)\n- Fixed bug #49800 (SimpleXML allow (un)serialize() calls without warning).\n  (Ilia, wmeler at wp-sa dot pl)\n- Fixed bug #49719 (ReflectionClass::hasProperty returns true for a private\n  property in base class). (Felipe)\n- Fixed bug #49677 (ini parser crashes with apache2 and using ${something}\n  ini variables). (Jani)\n- Fixed bug #49660 (libxml 2.7.3+ limits text nodes to 10MB). (Felipe)\n- Fixed bug #49647 (DOMUserData does not exist). (Rob)\n- Fixed bug #49600 (imageTTFText text shifted right). (Takeshi Abe)\n- Fixed bug #49585 (date_format buffer not long enough for >4 digit years).\n  (Derick, Adam)\n- Fixed bug #49560 (oci8: using LOBs causes slow PHP shutdown). (Oracle Corp.)\n- Fixed bug #49521 (PDO fetchObject sets values before calling constructor).\n  (Pierrick)\n- Fixed bug #49472 (Constants defined in Interfaces can be overridden).\n  (Felipe)\n- Fixed bug #49463 (setAttributeNS fails setting default namespace). (Rob)\n- Fixed bug #49244 (Floating point NaN cause garbage characters). (Sjoerd)\n- Fixed bug #49224 (Compile error due to old DNS functions on AIX systems).\n  (Scott)\n- Fixed bug #49174 (crash when extending PDOStatement and trying to set\n  queryString property). (Felipe)\n- Fixed bug #48811 (Directives in PATH section do not get applied to\n  subdirectories). (Patch by: ct at swin dot edu dot au)\n- Fixed bug #48590 (SoapClient does not honor max_redirects). (Sriram)\n- Fixed bug #48190 (Content-type parameter \"boundary\" is not case-insensitive\n  in HTTP uploads). (Ilia)\n- Fixed bug #47848 (importNode doesn't preserve attribute namespaces). (Rob)\n- Fixed bug #47409 (extract() problem with array containing word \"this\").\n  (Ilia, chrisstocktonaz at gmail dot com)\n- Fixed bug #47281 ($php_errormsg is limited in size of characters)\n  (Oracle Corp.)\n- Fixed bug #46478 (htmlentities() uses obsolete mapping table for character\n  entity references). (Moriyoshi)\n- Fixed bug #45599 (strip_tags() truncates rest of string with invalid\n  attribute). (Ilia, hradtke)\n- Fixed bug #45120 (PDOStatement->execute() returns true then false for same\n  statement). (Pierrick)\n- Fixed bug #44827 (define() allows :: in constant names). (Ilia)\n- Fixed bug #44098 (imap_utf8() returns only capital letters).\n  (steffen at dislabs dot de, Pierre)\n- Fixed bug #34852 (Failure in odbc_exec() using oracle-supplied odbc\n  driver). (tim dot tassonis at trivadis dot com)\n\n19 Nov 2009, PHP 5.3.1\n- Upgraded bundled sqlite to version 3.6.19. (Scott)\n- Updated timezone database to version 2009.17 (2009q). (Derick)\n\n- Changed ini file directives [PATH=](on Win32) and [HOST=](on all) to be case\n  insensitive. (garretts)\n\n- Restored shebang line check to CGI sapi (not checked by scanner anymore).\n  (Jani)\n\n- Added \"max_file_uploads\" INI directive, which can be set to limit the\n  number of file uploads per-request to 20 by default, to prevent possible\n  DOS via temporary file exhaustion. (Ilia)\n- Added missing sanity checks around exif processing. (Ilia)\n- Added error constant when json_encode() detects an invalid UTF-8 sequence.\n  (Scott)\n- Added support for ACL on Windows for thread safe SAPI (Apache2 for example)\n  and fix its support on NTS. (Pierre)\n\n- Improved symbolic, mounted volume and junctions support for realpath on\n  Windows. (Pierre)\n- Improved readlink on Windows, suppress \\??\\ and use the drive syntax only.\n  (Pierre)\n- Improved dns_get_record() AAAA support on windows. Always available when\n  IPv6 is support is installed, format is now the same than on unix. (Pierre)\n- Improved the DNS functions on OSX to use newer APIs, also use Bind 9 API\n  where available on other platforms. (Scott)\n- Improved shared extension loading on OSX to use the standard Unix dlopen()\n  API. (Scott)\n\n- Fixed crash in com_print_typeinfo when an invalid typelib is given. (Pierre)\n- Fixed a safe_mode bypass in tempnam() identified by Grzegorz Stachowiak.\n  (Rasmus)\n- Fixed a open_basedir bypass in posix_mkfifo() identified by Grzegorz\n  Stachowiak.  (Rasmus)\n- Fixed certificate validation inside php_openssl_apply_verification_policy\n  (Ryan Sleevi, Ilia)\n- Fixed crash in SQLiteDatabase::ArrayQuery() and SQLiteDatabase::SingleQuery()\n  when calling using Reflection. (Felipe)\n- Fixed crash when instantiating PDORow and PDOStatement through Reflection.\n  (Felipe)\n- Fixed sanity check for the color index in imagecolortransparent. (Pierre)\n- Fixed scandir/readdir when used mounted points on Windows. (Pierre)\n- Fixed zlib.deflate compress filter to actually accept level parameter. (Jani)\n- Fixed leak on error in popen/exec (and related functions) on Windows.\n  (Pierre)\n- Fixed possible bad caching of symlinked directories in the realpath cache\n  on Windows. (Pierre)\n- Fixed atime and mtime in stat related functions on Windows. (Pierre)\n- Fixed spl_autoload_unregister/spl_autoload_functions wrt. Closures and\n  Functors. (Christian Seiler)\n- Fixed open_basedir circumvention for \"mail.log\" ini directive.\n  (Maksymilian Arciemowicz, Stas)\n- Fixed signature generation/validation for zip archives in ext/phar. (Greg)\n- Fixed memory leak in stream_is_local(). (Felipe, Tony)\n- Fixed BC break in mime_content_type(), removes the content encoding. (Scott)\n\n- Fixed PECL bug #16842 (oci_error return false when NO_DATA_FOUND is raised).\n  (Chris Jones)\n\n- Fixed bug #50063 (safe_mode_include_dir fails). (Johannes, christian at\n  elmerot dot se)\n- Fixed bug #50052 (Different Hashes on Windows and Linux on wrong Salt size).\n  (Pierre)\n- Fixed bug #49986 (Missing ICU DLLs on windows package). (Pierre)\n- Fixed bug #49910 (no support for ././@LongLink for long filenames in phar\n  tar support). (Greg)\n- Fixed bug #49908 (throwing exception in __autoload crashes when interface\n  is not defined). (Felipe)\n- Fixed bug #49847 (exec() fails to return data inside 2nd parameter, given\n  output lines >4095 bytes). (Ilia)\n- Fixed bug #49809 (time_sleep_until() is not available on OpenSolaris). (Jani)\n- Fixed bug #49757 (long2ip() can return wrong value in a multi-threaded\n  applications). (Ilia, Florian Anderiasch)\n- Fixed bug #49738 (calling mcrypt after mcrypt_generic_deinit crashes).\n  (Sriram Natarajan)\n- Fixed bug #49732 (crashes when using fileinfo when timestamp conversion\n  fails). (Pierre)\n- Fixed bug #49698 (Unexpected change in strnatcasecmp()). (Rasmus)\n- Fixed bug #49630 (imap_listscan function missing). (Felipe)\n- Fixed bug #49572 (use of C++ style comments causes build failure).\n  (Sriram Natarajan)\n- Fixed bug #49531 (CURLOPT_INFILESIZE sometimes causes warning \"CURLPROTO_FILE\n  cannot be set\"). (Felipe)\n- Fixed bug #49517 (cURL's CURLOPT_FILE prevents file from being deleted after\n  fclose). (Ilia)\n- Fixed bug #49470 (FILTER_SANITIZE_EMAIL allows disallowed characters).\n  (Ilia)\n- Fixed bug #49447 (php engine need to correctly check for socket API\n  return status on windows). (Sriram Natarajan)\n- Fixed bug #49391 (ldap.c utilizing deprecated ldap_modify_s). (Ilia)\n- Fixed bug #49372 (segfault in php_curl_option_curl). (Pierre)\n- Fixed bug #49361 (wordwrap() wraps incorrectly on end of line boundaries).\n  (Ilia, code-it at mail dot ru)\n- Fixed bug #49306 (inside pdo_mysql default socket settings are ignored).\n  (Ilia)\n- Fixed bug #49289 (bcmath module doesn't compile with phpize configure).\n  (Jani)\n- Fixed bug #49286 (php://input (php_stream_input_read) is broken). (Jani)\n- Fixed bug #49269 (Ternary operator fails on Iterator object when used inside\n  foreach declaration). (Etienne, Dmitry)\n- Fixed bug #49236 (Missing PHP_SUBST(PDO_MYSQL_SHARED_LIBADD)). (Jani)\n- Fixed bug #49223 (Inconsistency using get_defined_constants). (Garrett)\n- Fixed bug #49193 (gdJpegGetVersionString() inside gd_compact identifies\n  wrong type in declaration). (Ilia)\n- Fixed bug #49183 (dns_get_record does not return NAPTR records). (Pierre)\n- Fixed bug #49144 (Import of schema from different host transmits original\n  authentication details). (Dmitry)\n- Fixed bug #49142 (crash when exception thrown from __tostring()).\n  (David Soria Parra)\n- Fixed bug #49132 (posix_times returns false without error).\n  (phpbugs at gunnu dot us)\n- Fixed bug #49125 (Error in dba_exists C code). (jdornan at stanford dot edu)\n- Fixed bug #49122 (undefined reference to mysqlnd_stmt_next_result on compile\n  with --with-mysqli and MySQL 6.0). (Jani)\n- Fixed bug #49108 (2nd scan_dir produces segfault). (Felipe)\n- Fixed bug #49098 (mysqli segfault on error). (Rasmus)\n- Fixed bug #49095 (proc_get_status['exitcode'] fails on win32). (Felipe)\n- Fixed bug #49092 (ReflectionFunction fails to work with functions in fully\n  qualified namespaces). (Kalle, Jani)\n- Fixed bug #49074 (private class static fields can be modified by using\n  reflection). (Jani)\n- Fixed bug #49072 (feof never returns true for damaged file in zip). (Pierre)\n- Fixed bug #49065 (\"disable_functions\" php.ini option does not work on\n  Zend extensions). (Stas)\n- Fixed bug #49064 (--enable-session=shared does not work: undefined symbol:\n  php_url_scanner_reset_vars). (Jani)\n- Fixed bug #49056 (parse_ini_file() regression in 5.3.0 when using non-ASCII\n  strings as option keys). (Jani)\n- Fixed bug #49052 (context option headers freed too early when using\n  --with-curlwrappers). (Jani)\n- Fixed bug #49047 (The function touch() fails on directories on Windows).\n  (Pierre)\n- Fixed bug #49032 (SplFileObject::fscanf() variables passed by reference).\n  (Jani)\n- Fixed bug #49027 (mysqli_options() doesn't work when using mysqlnd). (Andrey)\n- Fixed bug #49026 (proc_open() can bypass safe_mode_protected_env_vars\n  restrictions). (Ilia)\n- Fixed bug #49020 (phar misinterprets ustar long filename standard).\n  (Greg)\n- Fixed bug #49018 (phar tar stores long filenames wit prefix/name reversed).\n  (Greg)\n- Fixed bug #49014 (dechunked filter broken when serving more than 8192 bytes\n  in a chunk). (andreas dot streichardt at globalpark dot com, Ilia)\n- Fixed bug #49012 (phar tar signature algorithm reports as Unknown (0) in\n  getSignature() call). (Greg)\n- Fixed bug #49000 (PHP CLI in Interactive mode (php -a) crashes\n  when including files from function). (Stas)\n- Fixed bug #48994 (zlib.output_compression does not output HTTP headers when\n  set to a string value). (Jani)\n- Fixed bug #48980 (Crash when compiling with pdo_firebird). (Felipe)\n- Fixed bug #48962 (cURL does not upload files with specified filename).\n  (Ilia)\n- Fixed bug #48929 (Double \\r\\n after HTTP headers when \"header\" context\n  option is an array). (David Z\u00fclke)\n- Fixed bug #48913 (Too long error code strings in pdo_odbc driver).\n  (naf at altlinux dot ru, Felipe)\n- Fixed bug #48912 (Namespace causes unexpected strict behaviour with\n  extract()). (Dmitry)\n- Fixed bug #48909 (Segmentation fault in mysqli_stmt_execute()). (Andrey)\n- Fixed bug #48899 (is_callable returns true even if method does not exist in\n  parent class). (Felipe)\n- Fixed bug #48893 (Problems compiling with Curl). (Felipe)\n- Fixed bug #48880 (Random Appearing open_basedir problem). (Rasmus, Gwynne)\n- Fixed bug #48872 (string.c: errors: duplicate case values). (Kalle)\n- Fixed bug #48854 (array_merge_recursive modifies arrays after first one).\n  (Felipe)\n- Fixed bug #48805 (IPv6 socket transport is not working). (Ilia)\n- Fixed bug #48802 (printf() returns incorrect outputted length). (Jani)\n- Fixed bug #48791 (open office files always reported as corrupted). (Greg)\n- Fixed bug #48788 (RecursiveDirectoryIterator doesn't descend into symlinked\n  directories). (Ilia)\n- Fixed bug #48783 (make install will fail saying phar file exists). (Greg)\n- Fixed bug #48774 (SIGSEGVs when using curl_copy_handle()).\n  (Sriram Natarajan)\n- Fixed bug #48771 (rename() between volumes fails and reports no error on\n  Windows). (Pierre)\n- Fixed bug #48768 (parse_ini_*() crash with INI_SCANNER_RAW). (Jani)\n- Fixed bug #48763 (ZipArchive produces corrupt archive). (dani dot church at\n  gmail dot com, Pierre)\n- Fixed bug #48762 (IPv6 address filter still rejects valid address). (Felipe)\n- Fixed bug #48757 (ReflectionFunction::invoke() parameter issues). (Kalle)\n- Fixed bug #48754 (mysql_close() crash php when no handle specified).\n  (Johannes, Andrey)\n- Fixed bug #48752 (Crash during date parsing with invalid date). (Pierre)\n- Fixed bug #48746 (Unable to browse directories within Junction Points).\n  (Pierre, Kanwaljeet Singla)\n- Fixed bug #48745 (mysqlnd: mysql_num_fields returns wrong column count for\n  mysql_list_fields). (Andrey)\n- Fixed bug #48740 (PHAR install fails when INSTALL_ROOT is not the final\n  install location). (james dot cohen at digitalwindow dot com, Greg)\n- Fixed bug #48733 (CURLOPT_WRITEHEADER|CURLOPT_FILE|CURLOPT_STDERR warns on\n  files that have been opened with r+). (Ilia)\n- Fixed bug #48719 (parse_ini_*(): scanner_mode parameter is not checked for\n  sanity). (Jani)\n- Fixed bug #48718 (FILTER_VALIDATE_EMAIL does not allow numbers in domain\n  components). (Ilia)\n- Fixed bug #48681 (openssl signature verification for tar archives broken).\n  (Greg)\n- Fixed bug #48660 (parse_ini_*(): dollar sign as last character of value\n  fails). (Jani)\n- Fixed bug #48645 (mb_convert_encoding() doesn't understand hexadecimal\n  html-entities). (Moriyoshi)\n- Fixed bug #48637 (\"file\" fopen wrapper is overwritten when using\n  --with-curlwrappers). (Jani)\n- Fixed bug #48608 (Invalid libreadline version not detected during configure).\n  (Jani)\n- Fixed bug #48400 (imap crashes when closing stream opened with\n  OP_PROTOTYPE flag). (Jani)\n- Fixed bug #48377 (error message unclear on converting phar with existing\n  file). (Greg)\n- Fixed bug #48247 (Infinite loop and possible crash during startup with\n  errors when errors are logged). (Jani)\n- Fixed bug #48198 error: 'MYSQLND_LLU_SPEC' undeclared. Cause for #48780 and\n  #46952 - both fixed too. (Andrey)\n- Fixed bug #48189 (ibase_execute error in return param). (Kalle)\n- Fixed bug #48182 (ssl handshake fails during asynchronous socket connection).\n  (Sriram Natarajan)\n- Fixed bug #48116 (Fixed build with Openssl 1.0). (Pierre,\n  Al dot Smith at aeschi dot ch dot eu dot org)\n- Fixed bug #48057 (Only the date fields of the first row are fetched, others\n  are empty). (info at programmiernutte dot net)\n- Fixed bug #47481 (natcasesort() does not sort extended ASCII characters\n  correctly). (Herman Radtke)\n- Fixed bug #47351 (Memory leak in DateTime). (Derick, Tobias John)\n- Fixed bug #47273 (Encoding bug in SoapServer->fault). (Dmitry)\n- Fixed bug #46682 (touch() afield returns different values on windows).\n  (Pierre)\n- Fixed bug #46614 (Extended MySQLi class gives incorrect empty() result).\n  (Andrey)\n- Fixed bug #46020 (with Sun Java System Web Server 7.0 on HPUX, #define HPUX).\n  (Uwe Schindler)\n- Fixed bug #45905 (imagefilledrectangle() clipping error).\n  (markril at hotmail dot com, Pierre)\n- Fixed bug #45554 (Inconsistent behavior of the u format char). (Derick)\n- Fixed bug #45141 (setcookie will output expires years of >4 digits). (Ilia)\n- Fixed bug #44683 (popen crashes when an invalid mode is passed). (Pierre)\n- Fixed bug #43510 (stream_get_meta_data() does not return same mode as used\n  in fopen). (Jani)\n- Fixed bug #42434 (ImageLine w/ antialias = 1px shorter). (wojjie at gmail dot\n  com, Kalle)\n- Fixed bug #40013 (php_uname() does not return nodename on Netware (Guenter\n  Knauf)\n- Fixed bug #38091 (Mail() does not use FQDN when sending SMTP helo).\n  (Kalle, Rick Yorgason)\n- Fixed bug #28038 (Sent incorrect RCPT TO commands to SMTP server) (Garrett)\n- Fixed bug #27051 (Impersonation with FastCGI does not exec process as\n  impersonated user). (Pierre)\n\n\n30 Jun 2009, PHP 5.3.0\n- Upgraded bundled PCRE to version 7.9. (Nuno)\n- Upgraded bundled sqlite to version 3.6.15. (Scott)\n\n- Moved extensions to PECL (Derick, Lukas, Pierre, Scott):\n  . ext/dbase\n  . ext/fbsql\n  . ext/fdf\n  . ext/ncurses\n  . ext/mhash (BC layer is now entirely within ext/hash)\n  . ext/ming\n  . ext/msql\n  . ext/sybase (not maintained anymore, sybase_ct has to be used instead)\n\n- Removed the experimental RPL (master/slave) functions from mysqli. (Andrey)\n- Removed zend.ze1_compatibility_mode. (Dmitry)\n- Removed all zend_extension_* php.ini directives. Zend extensions are now\n  always loaded using zend_extension directive. (Derick)\n- Removed special treatment of \"/tmp\" in sessions for open_basedir.\n  Note: This undocumented behaviour was introduced in 5.2.2. (Alexey)\n- Removed shebang line check from CGI sapi (checked by scanner). (Dmitry)\n\n- Changed PCRE, Reflection and SPL extensions to be always enabled. (Marcus)\n- Changed md5() to use improved implementation. (Solar Designer, Dmitry)\n- Changed HTTP stream wrapper to accept any code between and including\n  200 to 399 as successful. (Mike, Noah Fontes)\n- Changed __call() to be invoked on private/protected method access, similar to\n  properties and __get(). (Andrei)\n- Changed dl() to be disabled by default. Enabled only when explicitly\n  registered by the SAPI. Currently enabled with cli, cgi and embed SAPIs.\n  (Dmitry)\n- Changed opendir(), dir() and scandir() to use default context when no context\n  argument is passed. (Sara)\n- Changed open_basedir to allow tightening in runtime contexts. (Sara)\n- Changed PHP/Zend extensions to use flexible build IDs. (Stas)\n- Changed error level E_ERROR into E_WARNING in Soap extension methods\n  parameter validation. (Felipe)\n- Changed openssl info to show the shared library version number. (Scott)\n- Changed floating point behaviour to consistently use double precision on all\n  platforms and with all compilers. (Christian Seiler)\n- Changed round() to act more intuitively when rounding to a certain precision\n  and round very large and very small exponents correctly. (Christian Seiler)\n- Changed session_start() to return false when session startup fails. (Jani)\n- Changed property_exists() to check the existence of a property independent of\n  accessibility (like method_exists()). (Felipe)\n- Changed array_reduce() to allow mixed $initial (Christian Seiler)\n\n- Improved PHP syntax and semantics:\n  . Added lambda functions and closures. (Christian Seiler, Dmitry)\n  . Added \"jump label\" operator (limited \"goto\"). (Dmitry, Sara)\n  . Added NOWDOC syntax. (Gwynne Raskind, Stas, Dmitry)\n  . Added HEREDOC syntax with double quotes. (Lars Strojny, Felipe)\n  . Added support for using static HEREDOCs to initialize static variables and\n    class members or constants. (Matt)\n  . Improved syntax highlighting and consistency for variables in double-quoted\n    strings and literal text in HEREDOCs and backticks. (Matt)\n  . Added \"?:\" operator. (Marcus)\n  . Added support for namespaces. (Dmitry, Stas, Gregory, Marcus)\n  . Added support for Late Static Binding. (Dmitry, Etienne Kneuss)\n  . Added support for __callStatic() magic method. (Sara)\n  . Added forward_static_call(_array) to complete LSB. (Mike Lively)\n  . Added support for dynamic access of static members using $foo::myFunc().\n    (Etienne Kneuss)\n  . Improved checks for callbacks. (Marcus)\n  . Added __DIR__ constant. (Lars Strojny)\n  . Added new error modes E_USER_DEPRECATED and E_DEPRECATED.\n    E_DEPRECATED is used to inform about stuff being scheduled for removal\n    in future PHP versions. (Lars Strojny, Felipe, Marcus)\n  . Added \"request_order\" INI variable to control specifically $_REQUEST\n    behavior. (Stas)\n  . Added support for exception linking. (Marcus)\n  . Added ability to handle exceptions in destructors. (Marcus)\n\n- Improved PHP runtime speed and memory usage:\n  . Substitute global-scope, persistent constants with their values at compile\n    time. (Matt)\n  . Optimized ZEND_SIGNED_MULTIPLY_LONG(). (Matt)\n  . Removed direct executor recursion. (Dmitry)\n  . Use fastcall calling convention in executor on x86. (Dmitry)\n  . Use IS_CV for direct access to $this variable. (Dmitry)\n  . Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR). (Dmitry)\n  . Lazy EG(active_symbol_table) initialization. (Dmitry)\n  . Optimized ZEND_RETURN opcode to not allocate and copy return value if it is\n    not used. (Dmitry)\n  . Replaced all flex based scanners with re2c based scanners.\n    (Marcus, Nuno, Scott)\n  . Added garbage collector. (David Wang, Dmitry).\n  . Improved PHP binary size and startup speed with GCC4 visibility control.\n    (Nuno)\n  . Improved engine stack implementation for better performance and stability.\n    (Dmitry)\n  . Improved memory usage by moving constants to read only memory.\n    (Dmitry, Pierre)\n  . Changed exception handling. Now each op_array doesn't contain\n    ZEND_HANDLE_EXCEPTION opcode in the end. (Dmitry)\n  . Optimized require_once() and include_once() by eliminating fopen(3) on\n    second usage. (Dmitry)\n  . Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single\n    ZEND_ADD_INTERFACE opcode. (Dmitry)\n  . Optimized string searching for a single character.\n    (Michal Dziemianko, Scott)\n  . Optimized interpolated strings to use one less opcode. (Matt)\n\n- Improved php.ini handling: (Jani)\n  . Added \".htaccess\" style user-defined php.ini files support for CGI/FastCGI.\n  . Added support for special [PATH=/opt/httpd/www.example.com/] and\n    [HOST=www.example.com] sections. Directives set in these sections can\n    not be overridden by user-defined ini-files or during runtime.\n  . Added better error reporting for php.ini syntax errors.\n  . Allowed using full path to load modules using \"extension\" directive.\n  . Allowed \"ini-variables\" to be used almost everywhere ini php.ini files.\n  . Allowed using alphanumeric/variable indexes in \"array\" ini options.\n  . Added 3rd optional parameter to parse_ini_file() to specify the scanning\n    mode of INI_SCANNER_NORMAL or INI_SCANNER_RAW. In raw mode option values\n    and section values are treated as-is.\n  . Fixed get_cfg_var() to be able to return \"array\" ini options.\n  . Added optional parameter to ini_get_all() to only retrieve the current\n    value. (Hannes)\n\n- Improved Windows support:\n  . Update all libraries to their latest stable version. (Pierre, Rob, Liz,\n    Garrett).\n  . Added Windows support for stat(), touch(), filemtime(), filesize() and\n    related functions. (Pierre)\n  . Re-added socket_create_pair() for Windows in sockets extension. (Kalle)\n  . Added inet_pton() and inet_ntop() also for Windows platforms.\n    (Kalle, Pierre)\n  . Added mcrypt_create_iv() for Windows platforms. (Pierre)\n  . Added ACL Cache support on Windows.\n    (Kanwaljeet Singla, Pierre, Venkat Raman Don)\n  . Added constants based on Windows' GetVersionEx information.\n    PHP_WINDOWS_VERSION_* and PHP_WINDOWS_NT_*. (Pierre)\n  . Added support for ACL (is_writable, is_readable, reports now correct\n    results) on Windows. (Pierre, Venkat Raman Don, Kanwaljeet Singla)\n  . Added support for fnmatch() on Windows. (Pierre)\n  . Added support for time_nanosleep() and time_sleep_until() on Windows.\n    (Pierre)\n  . Added support for symlink(), readlink(), linkinfo() and link() on Windows.\n    They are available only when the running platform supports them. (Pierre)\n  . the GMP extension now relies on MPIR instead of the GMP library. (Pierre)\n  . Added Windows support for stream_socket_pair(). (Kalle)\n  . Drop all external dependencies for the core features. (Pierre)\n  . Drastically improve the build procedure (Pierre, Kalle, Rob):\n    . VC9 (Visual C++ 2008) or later support\n    . Initial experimental x64 support\n  . MSI installer now supports all recent Windows versions, including\n    Windows 7. (John, Kanwaljeet Singla)\n\n- Improved and cleaned CGI code:\n  . FastCGI is now always enabled and cannot be disabled.\n    See sapi/cgi/CHANGES for more details. (Dmitry)\n  . Added CGI SAPI -T option which can be used to measure execution\n    time of script repeated several times. (Dmitry)\n\n- Improved streams:\n  . Fixed confusing error message on failure when no errors are logged. (Greg)\n  . Added stream_supports_lock() function. (Benjamin Schulz)\n  . Added context parameter for copy() function. (Sara)\n  . Added \"glob://\" stream wrapper. (Marcus)\n  . Added \"params\" as optional parameter for stream_context_create(). (Sara)\n  . Added ability to use stream wrappers in include_path. (Gregory, Dmitry)\n\n- Improved DNS API\n  . Added Windows support for dns_check_record(), dns_get_mx(), checkdnsrr() and\n    getmxrr(). (Pierre)\n  . Added support for old style DNS functions (supports OSX and FBSD). (Scott)\n  . Added a new \"entries\" array in dns_check_record() containing the TXT\n    elements. (Felipe, Pierre)\n\n- Improved hash extension:\n  . Changed mhash to be a wrapper layer around the hash extension. (Scott)\n  . Added hash_copy() function. (Tony)\n  . Added sha224 hash algorithm to the hash extension. (Scott)\n\n- Improved IMAP support (Pierre):\n  . Added imap_gc() to clear the imap cache\n  . Added imap_utf8_to_mutf7() and imap_mutf7_to_utf8()\n\n- Improved mbstring extension:\n  . Added \"mbstring.http_output_conv_mimetypes\" INI directive that allows\n    common non-text types such as \"application/xhtml+xml\" to be converted\n    by mb_output_handler(). (Moriyoshi)\n\n- Improved OCI8 extension (Chris Jones/Oracle Corp.):\n  . Added Database Resident Connection Pooling (DRCP) and Fast\n    Application Notification (FAN) support.\n  . Added support for Oracle External Authentication (not supported\n    on Windows).\n  . Improve persistent connection handling of restarted DBs.\n  . Added SQLT_AFC (aka CHAR datatype) support to oci_bind_by_name.\n  . Fixed bug #45458 (Numeric keys for associative arrays are not\n    handled properly)\n  . Fixed bug #41069 (Segmentation fault with query over DB link).\n  . Fixed define of SQLT_BDOUBLE and SQLT_BFLOAT constants with Oracle\n    10g ORACLE_HOME builds.\n  . Changed default value of oci8.default_prefetch from 10 to 100.\n  . Fixed PECL Bug #16035 (OCI8: oci_connect without ORACLE_HOME defined causes\n    segfault) (Chris Jones/Oracle Corp.)\n  . Fixed PECL Bug #15988 (OCI8: sqlnet.ora isn't read with older Oracle\n    libraries) (Chris Jones/Oracle Corp.)\n  . Fixed PECL Bug #14268 (Allow \"pecl install oci8\" command to \"autodetect\" an\n    Instant Client RPM install) (Chris Jones/Oracle Corp.)\n  . Fixed PECL bug #12431 (OCI8 ping functionality is broken).\n  . Allow building (e.g from PECL) the PHP 5.3-based OCI8 code with\n    PHP 4.3.9 onwards.\n  . Provide separate extensions for Oracle 11g and 10g on Windows.\n    (Pierre, Chris)\n\n- Improved OpenSSL extension:\n  . Added support for OpenSSL digest and cipher functions. (Dmitry)\n  . Added access to internal values of DSA, RSA and DH keys. (Dmitry)\n  . Fixed a memory leak on openssl_decrypt(). (Henrique)\n  . Fixed segfault caused by openssl_pkey_new(). (Henrique)\n  . Fixed bug caused by uninitilized variables in openssl_pkcs7_encrypt() and\n    openssl_pkcs7_sign(). (Henrique)\n  . Fixed error message in openssl_seal(). (Henrique)\n\n- Improved pcntl extension: (Arnaud)\n  . Added pcntl_signal_dispatch().\n  . Added pcntl_sigprocmask().\n  . Added pcntl_sigwaitinfo().\n  . Added pcntl_sigtimedwait().\n\n- Improved SOAP extension:\n  . Added support for element names in context of XMLSchema's <any>. (Dmitry)\n  . Added ability to use Traversable objects instead of plain arrays.\n    (Joshua Reese, Dmitry)\n  . Fixed possible crash bug caused by an uninitialized value. (Zdash Urf)\n\n- Improved SPL extension:\n  . Added SPL to list of standard extensions that cannot be disabled. (Marcus)\n  . Added ability to store associative information with objects in\n    SplObjectStorage. (Marcus)\n  . Added ArrayAccess support to SplObjectStorage. (Marcus)\n  . Added SplDoublyLinkedList, SplStack, SplQueue classes. (Etienne)\n  . Added FilesystemIterator. (Marcus)\n  . Added GlobIterator. (Marcus)\n  . Added SplHeap, SplMinHeap, SplMaxHeap, SplPriorityQueue classes. (Etienne)\n  . Added new parameter $prepend to spl_autoload_register(). (Etienne)\n  . Added SplFixedArray. (Etienne, Tony)\n  . Added delaying exceptions in SPL's autoload mechanism. (Marcus)\n  . Added RecursiveTreeIterator. (Arnaud, Marcus)\n  . Added MultipleIterator. (Arnaud, Marcus, Johannes)\n\n- Improved Zend Engine:\n  . Added \"compact\" handler for Zend MM storage. (Dmitry)\n  . Added \"+\" and \"*\" specifiers to zend_parse_parameters(). (Andrei)\n  . Added concept of \"delayed early binding\" that allows opcode caches to\n    perform class declaration (early and/or run-time binding) in exactly\n    the same order as vanilla PHP. (Dmitry)\n\n- Improved crypt() function: (Pierre)\n  . Added Blowfish and extended DES support. (Using Blowfish implementation\n    from Solar Designer).\n  . Made crypt features portable by providing our own implementations\n    for crypt_r and the algorithms which are used when OS does not provide\n    them. PHP implementations are always used for Windows builds.\n\n- Deprecated session_register(), session_unregister() and\n  session_is_registered(). (Hannes)\n- Deprecated define_syslog_variables(). (Kalle)\n- Deprecated ereg extension. (Felipe)\n\n- Added new extensions:\n  . Added Enchant extension as a way to access spell checkers. (Pierre)\n  . Added fileinfo extension as replacement for mime_magic extension. (Derick)\n  . Added intl extension for Internationalization. (Ed B., Vladimir I.,\n    Dmitry L., Stanislav M., Vadim S., Kirti V.)\n  . Added mysqlnd extension as replacement for libmysql for ext/mysql, mysqli\n    and PDO_mysql. (Andrey, Johannes, Ulf)\n  . Added phar extension for handling PHP Archives. (Greg, Marcus, Steph)\n  . Added SQLite3 extension. (Scott)\n\n- Added new date/time functionality: (Derick)\n  . date_parse_from_format(): Parse date/time strings according to a format.\n  . date_create_from_format()/DateTime::createFromFormat(): Create a date/time\n    object by parsing a date/time string according to a given format.\n  . date_get_last_errors()/DateTime::getLastErrors(): Return a list of warnings\n    and errors that were found while parsing a date/time string through:\n    . strtotime() / new DateTime\n    . date_create_from_format() / DateTime::createFromFormat()\n    . date_parse_from_format().\n  . support for abbreviation and offset based timezone specifiers for\n    the 'e' format specifier, DateTime::__construct(), DateTime::getTimeZone()\n    and DateTimeZone::getName().\n  . support for selectively listing timezone identifiers by continent or\n    country code through timezone_identifiers_list() /\n    DateTimezone::listIdentifiers().\n  . timezone_location_get() / DateTimezone::getLocation() for retrieving\n    location information from timezones.\n  . date_timestamp_set() / DateTime::setTimestamp() to set a Unix timestamp\n    without invoking the date parser. (Scott, Derick)\n  . date_timestamp_get() / DateTime::getTimestamp() to retrieve the Unix\n    timestamp belonging to a date object.\n  . two optional parameters to timezone_transitions_get() /\n    DateTimeZone::getTranstions() to limit the range of transitions being\n    returned.\n  . support for \"first/last day of <month>\" style texts.\n  . support for date/time strings returned by MS SQL.\n  . support for serialization and unserialization of DateTime objects.\n  . support for diffing date/times through date_diff() / DateTime::diff().\n  . support for adding/subtracting weekdays with strtotime() and\n    DateTime::modify().\n  . DateInterval class to represent the difference between two date/times.\n  . support for parsing ISO intervals for use with DateInterval.\n  . date_add() / DateTime::add(), date_sub() / DateTime::sub() for applying an\n    interval to an existing date/time.\n  . proper support for \"this week\", \"previous week\"/\"last week\" and \"next week\"\n    phrases so that they actually mean the week and not a seven day period\n    around the current day.\n  . support for \"<xth> <weekday> of\" and \"last <weekday> of\" phrases to be used\n    with months - like in \"last saturday of februari 2008\".\n  . support for \"back of <hour>\" and \"front of <hour>\" phrases that are used in\n    Scotland.\n  . DatePeriod class which supports iterating over a DateTime object applying\n    DateInterval on each iteration, up to an end date or limited by maximum\n    number of occurences.\n\n- Added compatibility mode in GD, imagerotate, image(filled)ellipse\n  imagefilter, imageconvolution and imagecolormatch are now always enabled.\n  (Pierre)\n- Added array_replace() and array_replace_recursive() functions. (Matt)\n- Added ReflectionProperty::setAccessible() method that allows non-public\n  property's values to be read through ::getValue() and set through\n  ::setValue(). (Derick, Sebastian)\n- Added msg_queue_exists() function to sysvmsg extension. (Benjamin Schulz)\n- Added Firebird specific attributes that can be set via PDO::setAttribute()\n  to control formatting of date/timestamp columns: PDO::FB_ATTR_DATE_FORMAT,\n  PDO::FB_ATTR_TIME_FORMAT and PDO::FB_ATTR_TIMESTAMP_FORMAT. (Lars W)\n- Added gmp_testbit() function. (Stas)\n- Added icon format support to getimagesize(). (Scott)\n- Added LDAP_OPT_NETWORK_TIMEOUT option for ldap_set_option() to allow\n  setting network timeout (FR #42837). (Jani)\n- Added optional escape character parameter to fgetcsv(). (David Soria Parra)\n- Added an optional parameter to strstr() and stristr() for retrieval of either\n  the part of haystack before or after first occurrence of needle.\n  (Johannes, Felipe)\n- Added xsl->setProfiling() for profiling stylesheets. (Christian)\n- Added long-option feature to getopt() and made getopt() available also on\n  win32 systems by adding a common getopt implementation into core.\n  (David Soria Parra, Jani)\n- Added support for optional values, and = as separator, in getopt(). (Hannes)\n- Added lcfirst() function. (David C)\n- Added PREG_BAD_UTF8_OFFSET_ERROR constant. (Nuno)\n- Added native support for asinh(), acosh(), atanh(), log1p() and expm1().\n  (Kalle)\n- Added LIBXML_LOADED_VERSION constant (libxml2 version currently used). (Rob)\n- Added JSON_FORCE_OBJECT flag to json_encode(). (Scott, Richard Quadling)\n- Added timezone_version_get() to retrieve the version of the used timezone\n  database. (Derick)\n- Added 'n' flag to fopen to allow passing O_NONBLOCK to the underlying\n  open(2) system call. (Mikko)\n- Added \"dechunk\" filter which can decode HTTP responses with chunked\n  transfer-encoding. HTTP streams use this filter automatically in case\n  \"Transfer-Encoding: chunked\" header is present in response. It's possible to\n  disable this behaviour using \"http\"=>array(\"auto_decode\"=>0) in stream\n  context. (Dmitry)\n- Added support for CP850 encoding in mbstring extension.\n  (Denis Giffeler, Moriyoshi)\n- Added stream_cast() and stream_set_options() to user-space stream wrappers,\n  allowing stream_select(), stream_set_blocking(), stream_set_timeout() and\n  stream_set_write_buffer() to work with user-space stream wrappers. (Arnaud)\n- Added header_remove() function. (chsc at peytz dot dk, Arnaud)\n- Added stream_context_get_params() function. (Arnaud)\n- Added optional parameter \"new\" to sybase_connect(). (Timm)\n- Added parse_ini_string() function. (grange at lemonde dot fr, Arnaud)\n- Added str_getcsv() function. (Sara)\n- Added openssl_random_pseudo_bytes() function. (Scott)\n- Added ability to send user defined HTTP headers with SOAP request.\n  (Brian J.France, Dmitry)\n- Added concatenation option to bz2.decompress stream filter.\n  (Keisial at gmail dot com, Greg)\n- Added support for using compressed connections with PDO_mysql. (Johannes)\n- Added the ability for json_decode() to take a user specified depth. (Scott)\n- Added support for the mysql_stmt_next_result() function from libmysql.\n  (Andrey)\n- Added function preg_filter() that does grep and replace in one go. (Marcus)\n- Added system independent realpath() implementation which caches intermediate\n  directories in realpath-cache. (Dmitry)\n- Added optional clear_realpath_cache and filename parameters to\n  clearstatcache(). (Jani, Arnaud)\n- Added litespeed SAPI module. (George Wang)\n- Added ext/hash support to ext/session's ID generator. (Sara)\n- Added quoted_printable_encode() function. (Tony)\n- Added stream_context_set_default() function. (Davey Shafik)\n- Added optional \"is_xhtml\" parameter to nl2br() which makes the function\n  output <br> when false and <br /> when true (FR #34381). (Kalle)\n- Added PHP_MAXPATHLEN constant (maximum length of a path). (Pierre)\n- Added support for SSH via libssh2 in cURL. (Pierre)\n- Added support for gray levels PNG image with alpha in GD extension. (Pierre)\n- Added support for salsa hashing functions in HASH extension. (Scott)\n- Added DOMNode::getLineNo to get line number of parsed node. (Rob)\n- Added table info to PDO::getColumnMeta() with SQLite. (Martin Jansen, Scott)\n- Added mail logging functionality that allows logging of mail sent via\n  mail() function. (Ilia)\n- Added json_last_error() to return any error information from json_decode().\n  (Scott)\n- Added gethostname() to return the current system host name. (Ilia)\n- Added shm_has_var() function. (Mike)\n- Added depth parameter to json_decode() to lower the nesting depth from the\n  maximum if required. (Scott)\n- Added pixelation support in imagefilter(). (Takeshi Abe, Kalle)\n- Added SplObjectStorage::addAll/removeAll. (Etienne)\n\n- Implemented FR #41712 (curl progress callback: CURLOPT_PROGRESSFUNCTION).\n  (sdteffen[at]gmail[dot].com, Pierre)\n- Implemented FR #47739 (Missing cURL option do disable IPv6). (Pierre)\n- Implemented FR #39637 (Missing cURL option CURLOPT_FTP_FILEMETHOD). (Pierre)\n\n- Fixed an issue with ReflectionProperty::setAccessible().\n  (Sebastian, Roman Borschel)\n- Fixed html_entity_decode() incorrectly converting numeric html entities\n  to different characters with cp1251 and cp866. (Scott)\n- Fixed an issue in date() where a : was printed for the O modifier after a P\n  modifier was used. (Derick)\n- Fixed exec() on Windows to not eat the first and last double quotes. (Scott)\n- Fixed readlink on Windows in thread safe SAPI (apache2.x etc.). (Pierre)\n- Fixed a bug causing miscalculations with the \"last <weekday> of <n> month\"\n  relative time string. (Derick)\n- Fixed bug causing the algorithm parameter of mhash() to be modified. (Scott)\n- Fixed invalid calls to free when internal fileinfo magic file is used. (Scott)\n- Fixed memory leak inside wddx_add_vars() function. (Felipe)\n- Fixed check in recode extension to allow builing of recode and mysql\n  extensions when using a recent libmysql. (Johannes)\n\n- Fixed PECL bug #12794 (PDOStatement->nextRowset() doesn't work). (Johannes)\n- Fixed PECL bug #12401 (Add support for ATTR_FETCH_TABLE_NAMES). (Johannes)\n\n- Fixed bug #48696 (ldap_read() segfaults with invalid parameters). (Felipe)\n- Fixed bug #48643 (String functions memory issue). (Dmitry)\n- Fixed bug #48641 (tmpfile() uses old parameter parsing).\n  (crrodriguez at opensuse dot org)\n- Fixed bug #48624 (.user.ini never gets parsed). (Pierre)\n- Fixed bug #48620 (X-PHP-Originating-Script assumes no trailing CRLF in\n  existing headers). (Ilia)\n- Fixed bug #48578 (Can't build 5.3 on FBSD 4.11). (Rasmus)\n- Fixed bug #48535 (file_exists returns false when impersonate is used).\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #48493 (spl_autoload_register() doesn't work correctly when\n  prepending functions). (Scott)\n- Fixed bug #48215 (Calling a method with the same name as the parent class\n  calls the constructor). (Scott)\n- Fixed bug #48200 (compile failure with mbstring.c when\n  --enable-zend-multibyte is used). (Jani)\n- Fixed bug #48188 (Cannot execute a scrollable cursors twice with PDO_PGSQL).\n  (Matteo)\n- Fixed bug #48185 (warning: value computed is not used in\n  pdo_sqlite_stmt_get_col line 271). (Matteo)\n- Fixed bug #48087 (call_user_method() invalid free of arguments). (Felipe)\n- Fixed bug #48060 (pdo_pgsql - large objects are returned as empty). (Matteo)\n- Fixed bug #48034 (PHP crashes when script is 8192 (8KB) bytes long). (Dmitry)\n- Fixed bug #48004 (Error handler prevents creation of default object). (Dmitry)\n- Fixed bug #47880 (crashes in call_user_func_array()). (Dmitry)\n- Fixed bug #47856 (stristr() converts needle to lower-case). (Ilia)\n- Fixed bug #47851 (is_callable throws fatal error). (Dmitry)\n- Fixed bug #47816 (pcntl tests failing on NetBSD). (Matteo)\n- Fixed bug #47779 (Wrong value for SIG_UNBLOCK and SIG_SETMASK constants).\n  (Matteo)\n- Fixed bug #47771 (Exception during object construction from arg call calls\n  object's destructor). (Dmitry)\n- Fixed bug #47767 (include_once does not resolve windows symlinks or junctions)\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #47757 (rename JPG to JPEG in phpinfo). (Pierre)\n- Fixed bug #47745 (FILTER_VALIDATE_INT doesn't allow minimum integer). (Dmitry)\n- Fixed bug #47714 (autoloading classes inside exception_handler leads to\n  crashes). (Dmitry)\n- Fixed bug #47671 (Cloning SplObjectStorage instances). (Etienne)\n- Fixed bug #47664 (get_class returns NULL instead of FALSE). (Dmitry)\n- Fixed bug #47662 (Support more than 127 subpatterns in preg_match). (Nuno)\n- Fixed bug #47596 (Bus error on parsing file). (Dmitry)\n- Fixed bug #47572 (Undefined constant causes segmentation fault). (Felipe)\n- Fixed bug #47560 (explode()'s limit parameter odd behaviour). (Matt)\n- Fixed bug #47549 (get_defined_constants() return array with broken array\n  categories). (Ilia)\n- Fixed bug #47535 (Compilation failure in ps_fetch_from_1_to_8_bytes()).\n  (Johannes)\n- Fixed bug #47534 (RecursiveDiteratoryIterator::getChildren ignoring\n  CURRENT_AS_PATHNAME). (Etienne)\n- Fixed bug #47443 (metaphone('scratch') returns wrong result). (Felipe)\n- Fixed bug #47438 (mysql_fetch_field ignores zero offset). (Johannes)\n- Fixed bug #47398 (PDO_Firebird doesn't implements quoter correctly). (Felipe)\n- Fixed bug #47390 (odbc_fetch_into - BC in php 5.3.0). (Felipe)\n- Fixed bug #47359 (Use the expected unofficial mimetype for bmp files). (Scott)\n- Fixed bug #47343 (gc_collect_cycles causes a segfault when called within a\n  destructor in one case). (Dmitry)\n- Fixed bug #47320 ($php_errormsg out of scope in functions). (Dmitry)\n- Fixed bug #47318 (UMR when trying to activate user config). (Pierre)\n- Fixed bug #47243 (OCI8: Crash at shutdown on Windows) (Chris Jones/Oracle\n  Corp.)\n- Fixed bug #47231 (offsetGet error using incorrect offset). (Etienne)\n- Fixed bug #47229 (preg_quote() should escape the '-' char). (Nuno)\n- Fixed bug #47165 (Possible memory corruption when passing return value by\n  reference). (Dmitry)\n- Fixed bug #47087 (Second parameter of mssql_fetch_array()). (Felipe)\n- Fixed bug #47085 (rename() returns true even if the file in PHAR does not\n  exist). (Greg)\n- Fixed bug #47050 (mysqli_poll() modifies improper variables). (Johannes)\n- Fixed bug #47045 (SplObjectStorage instances compared with ==). (Etienne)\n- Fixed bug #47038 (Memory leak in include). (Dmitry)\n- Fixed bug #47031 (Fix constants in DualIterator example). (Etienne)\n- Fixed bug #47021 (SoapClient stumbles over WSDL delivered with\n  \"Transfer-Encoding: chunked\"). (Dmitry)\n- Fixed bug #46994 (OCI8: CLOB size does not update when using CLOB IN OUT param\n  in stored procedure) (Chris Jones/Oracle Corp.)\n- Fixed bug #46979 (use with non-compound name *has* effect). (Dmitry)\n- Fixed bug #46957 (The tokenizer returns deprecated values). (Felipe)\n- Fixed bug #46944 (UTF-8 characters outside the BMP aren't encoded correctly).\n  (Scott)\n- Fixed bug #46897 (ob_flush() should fail to flush unerasable buffers).\n  (David C.)\n- Fixed bug #46849 (Cloning DOMDocument doesn't clone the properties). (Rob)\n- Fixed bug #46847 (phpinfo() is missing some settings). (Hannes)\n- Fixed bug #46844 (php scripts or included files with first line starting\n  with # have the 1st line missed from the output). (Ilia)\n- Fixed bug #46817 (tokenizer misses last single-line comment (PHP 5.3+, with\n  re2c lexer)). (Matt, Shire)\n- Fixed bug #46811 (ini_set() doesn't return false on failure). (Hannes)\n- Fixed bug #46763 (mb_stristr() wrong output when needle does not exist).\n  (Henrique M. Decaria)\n- Fixed bug #46755 (warning: use statement with non-compound name). (Dmitry)\n- Fixed bug #46746 (xmlrpc_decode_request outputs non-suppressable error when\n  given bad data). (Ilia)\n- Fixed bug #46738 (Segfault when mb_detect_encoding() fails). (Scott)\n- Fixed bug #46731 (Missing validation for the options parameter of the\n  imap_fetch_overview() function). (Ilia)\n- Fixed bug #46711 (cURL curl_setopt leaks memory in foreach loops). (magicaltux\n  [at] php [dot] net)\n- Fixed bug #46701 (Creating associative array with long values in the key fails\n  on 32bit linux). (Shire)\n- Fixed bug #46681 (mkdir() fails silently on PHP 5.3). (Hannes)\n- Fixed bug #46653 (can't extend mysqli). (Johannes)\n- Fixed bug #46646 (Restrict serialization on some internal classes like Closure\n  and SplFileInfo using exceptions). (Etienne)\n- Fixed bug #46623 (OCI8: phpinfo doesn't show compile time ORACLE_HOME with\n  phpize) (Chris Jones/Oracle Corp.)\n- Fixed bug #46578 (strip_tags() does not honor end-of-comment when it\n  encounters a single quote). (Felipe)\n- Fixed bug #46546 (Segmentation fault when using declare statement with\n  non-string value). (Felipe)\n- Fixed bug #46542 (Extending PDO class with a __call() function doesn't work as\n  expected). (Johannes)\n- Fixed bug #46421 (SplFileInfo not correctly handling /). (Etienne)\n- Fixed bug #46347 (parse_ini_file() doesn't support * in keys). (Nuno)\n- Fixed bug #46268 (DateTime::modify() does not reset relative time values).\n  (Derick)\n- Fixed bug #46241 (stacked error handlers, internal error handling in general).\n  (Etienne)\n- Fixed bug #46238 (Segmentation fault on static call with empty string method).\n  (Felipe)\n- Fixed bug #46192 (ArrayObject with objects as storage serialization).\n  (Etienne)\n- Fixed bug #46185 (importNode changes the namespace of an XML element). (Rob)\n- Fixed bug #46178 (memory leak in ext/phar). (Greg)\n- Fixed bug #46160 (SPL - Memory leak when exception is thrown in offsetSet).\n  (Felipe)\n- Fixed Bug #46147 (after stream seek, appending stream filter reads incorrect\n  data). (Greg)\n- Fixed bug #46127 (php_openssl_tcp_sockop_accept forgets to set context on\n  accepted stream) (Mark Karpeles, Pierre)\n- Fixed bug #46115 (Memory leak when calling a method using Reflection).\n  (Dmitry)\n- Fixed bug #46110 (XMLWriter - openmemory() and openuri() leak memory on\n  multiple calls). (Ilia)\n- Fixed bug #46108 (DateTime - Memory leak when unserializing). (Felipe)\n- Fixed bug #46106 (Memory leaks when using global statement). (Dmitry)\n- Fixed bug #46099 (Xsltprocessor::setProfiling - memory leak). (Felipe, Rob).\n- Fixed bug #46087 (DOMXPath - segfault on destruction of a cloned object).\n  (Ilia)\n- Fixed bug #46048 (SimpleXML top-level @attributes not part of iterator).\n  (David C.)\n- Fixed bug #46044 (Mysqli - wrong error message). (Johannes)\n- Fixed bug #46042 (memory leaks with reflection of mb_convert_encoding()).\n  (Ilia)\n- Fixed bug #46039 (ArrayObject iteration is slow). (Arnaud)\n- Fixed bug #46033 (Direct instantiation of SQLite3stmt and SQLite3result cause\n  a segfault.) (Scott)\n- Fixed bug #45991 (Ini files with the UTF-8 BOM are treated as invalid).\n  (Scott)\n- Fixed bug #45989 (json_decode() doesn't return NULL on certain invalid\n  strings). (magicaltux, Scott)\n- Fixed bug #45976 (Moved SXE from SPL to SimpleXML). (Etienne)\n- Fixed bug #45928 (large scripts from stdin are stripped at 16K border).\n  (Christian Schneider, Arnaud)\n- Fixed bug #45911 (Cannot disable ext/hash). (Arnaud)\n- Fixed bug #45907 (undefined reference to 'PHP_SHA512Init'). (Greg)\n- Fixed bug #45826 (custom ArrayObject serialization). (Etienne)\n- Fixed bug #45820 (Allow empty keys in ArrayObject). (Etienne)\n- Fixed bug #45791 (json_decode() doesn't convert 0e0 to a double). (Scott)\n- Fixed bug #45786 (FastCGI process exited unexpectedly). (Dmitry)\n- Fixed bug #45757 (FreeBSD4.11 build failure: failed include; stdint.h).\n  (Hannes)\n- Fixed bug #45743 (property_exists fails to find static protected member in\n  child class). (Felipe)\n- Fixed bug #45717 (Fileinfo/libmagic build fails, missing err.h and getopt.h).\n  (Derick)\n- Fixed bug #45706 (Unserialization of classes derived from ArrayIterator\n  fails). (Etienne, Dmitry)\n- Fixed bug #45696 (Not all DateTime methods allow method chaining). (Derick)\n- Fixed bug #45682 (Unable to var_dump(DateInterval)). (Derick)\n- Fixed bug #45447 (Filesystem time functions on Vista and server 2008).\n  (Pierre)\n- Fixed bug #45432 (PDO: persistent connection leak). (Felipe)\n- Fixed bug #45392 (ob_start()/ob_end_clean() and memory_limit). (Ilia)\n- Fixed bug #45384 (parse_ini_file will result in parse error with no trailing\n  newline). (Arnaud)\n- Fixed bug #45382 (timeout bug in stream_socket_enable_crypto). (vnegrier at\n  optilian dot com, Ilia)\n- Fixed bug #45044 (relative paths not resolved correctly). (Dmitry)\n- Fixed bug #44861 (scrollable cursor don't work with pgsql). (Matteo)\n- Fixed bug #44842 (parse_ini_file keys that start/end with underscore).\n  (Arnaud)\n- Fixed bug #44575 (parse_ini_file comment # line problems). (Arnaud)\n- Fixed bug #44409 (PDO::FETCH_SERIALIZE calls __construct()). (Matteo)\n- Fixed bug #44173 (PDO->query() parameter parsing/checking needs an update).\n  (Matteo)\n- Fixed bug #44154 (pdo->errorInfo() always have three elements in the returned\n  array). (David C.)\n- Fixed bug #44153 (pdo->errorCode() returns NULL when there are no errors).\n  (David C.)\n- Fixed bug #44135 (PDO MySQL does not support CLIENT_FOUND_ROWS). (Johannes,\n  chx1975 at gmail dot com)\n- Fixed bug #44100 (Inconsistent handling of static array declarations with\n  duplicate keys). (Dmitry)\n- Fixed bug #43831 ($this gets mangled when extending PDO with persistent\n  connection). (Felipe)\n- Fixed bug #43817 (opendir() fails on Windows directories with parent directory\n  unaccessible). (Dmitry)\n- Fixed bug #43069 (SoapClient causes 505 HTTP Version not supported error\n  message). (Dmitry)\n- Fixed bug #43008 (php://filter uris ignore url encoded filternames and can't\n  handle slashes). (Arnaud)\n- Fixed bug #42362 (HTTP status codes 204 and 304 should not be gzipped).\n  (Scott, Edward Z. Yang)\n- Fixed bug #41874 (separate STDOUT and STDERR in exec functions). (Kanwaljeet\n  Singla, Venkat Raman Don, Pierre)\n- Fixed bug #41534 (SoapClient over HTTPS fails to reestablish connection).\n  (Dmitry)\n- Fixed bug #38802 (max_redirects and ignore_errors). (patch by\n  datibbaw@php.net)\n- Fixed bug #35980 (touch() works on files but not on directories). (Pierre)\n\n17 Jun 2009, PHP 5.2.10\n- Updated timezone database to version 2009.9 (2009i) (Derick)\n\n- Added \"ignore_errors\" option to http fopen wrapper. (David Zulke, Sara)\n- Added new CURL options CURLOPT_REDIR_PROTOCOLS, CURLOPT_PROTOCOLS,\n  and CURLPROTO_* for redirect fixes in CURL 7.19.4. (Yoram Bar Haim, Stas)\n- Added support for Sun CC (FR #46595 and FR #46513). (David Soria Parra)\n\n- Changed default value of array_unique()'s optional sorting type parameter\n  back to SORT_STRING to fix backwards compatibility breakage introduced in\n  PHP 5.2.9. (Moriyoshi)\n\n- Fixed memory corruptions while reading properties of zip files. (Ilia)\n- Fixed memory leak in ob_get_clean/ob_get_flush. (Christian)\n- Fixed segfault on invalid session.save_path. (Hannes)\n- Fixed leaks in imap when a mail_criteria is used. (Pierre)\n- Fixed missing erealloc() in fix for Bug #40091 in spl_autoload_register. (Greg)\n\n- Fixed bug #48562 (Reference recursion causes segfault when used in\n  wddx_serialize_vars()). (Felipe)\n- Fixed bug #48557 (Numeric string keys in Apache Hashmaps are not cast to\n  integers). (David Zuelke)\n- Fixed bug #48518 (curl crashes when writing into invalid file handle). (Tony)\n- Fixed bug #48514 (cURL extension uses same resource name for simple and\n  multi APIs). (Felipe)\n- Fixed bug #48469 (ldap_get_entries() leaks memory on empty search\n  results). (Patrick)\n- Fixed bug #48456 (CPPFLAGS not restored properly in phpize.m4). (Jani,\n  spisek at kerio dot com)\n- Fixed bug #48448 (Compile failure under IRIX 6.5.30 building cast.c).\n  (Kalle)\n- Fixed bug #48441 (ldap_search() sizelimit, timelimit and deref options\n  persist). (Patrick)\n- Fixed bug #48434 (Improve memory_get_usage() accuracy). (Arnaud)\n- Fixed bug #48416 (Force a cache limit in ereg() to stop excessive memory\n  usage). (Scott)\n- Fixed bug #48409 (Crash when exception is thrown while passing function\n  arguments). (Arnaud)\n- Fixed bug #48378 (exif_read_data() segfaults on certain corrupted .jpeg\n  files). (Pierre)\n- Fixed bug #48359 (Script hangs on snmprealwalk if OID is not increasing).\n  (Ilia, simonov at gmail dot com)\n- Fixed bug #48336 (ReflectionProperty::getDeclaringClass() does not work\n  with redeclared property).\n  (patch by Markus dot Lidel at shadowconnect dot com)\n- Fixed bug #48326 (constant MSG_DONTWAIT not defined). (Arnaud)\n- Fixed bug #48313 (fgetcsv() does not return null for empty rows). (Ilia)\n- Fixed bug #48309 (stream_copy_to_stream() and fpasstru() do not update\n  stream position of plain files). (Arnaud)\n- Fixed bug #48307 (stream_copy_to_stream() copies 0 bytes when $source is a\n  socket). (Arnaud)\n- Fixed bug #48273 (snmp*_real_walk() returns SNMP errors as values).\n  (Ilia, lytboris at gmail dot com)\n- Fixed bug #48256 (Crash due to double-linking of history.o).\n  (tstarling at wikimedia dot org)\n- Fixed bug #48248 (SIGSEGV when access to private property via &__get).\n  (Felipe)\n- Fixed bug #48247 (Crash on errors during startup). (Stas)\n- Fixed bug #48240 (DBA Segmentation fault dba_nextkey). (Felipe)\n- Fixed bug #48224 (Incorrect shuffle in array_rand). (Etienne)\n- Fixed bug #48221 (memory leak when passing invalid xslt parameter).\n  (Felipe)\n- Fixed bug #48207 (CURLOPT_(FILE|WRITEHEADER options do not error out when\n  working with a non-writable stream). (Ilia)\n- Fixed bug #48206 (Iterating over an invalid data structure with\n  RecursiveIteratorIterator leads to a segfault). (Scott)\n- Fixed bug #48204 (xmlwriter_open_uri() does not emit warnings on invalid\n  paths). (Ilia)\n- Fixed bug #48203 (Crash when CURLOPT_STDERR is set to regular file). (Jani)\n- Fixed bug #48202 (Out of Memory error message when passing invalid file\n  path) (Pierre)\n- Fixed bug #48156 (Added support for lcov v1.7). (Ilia)\n- Fixed bug #48132 (configure check for curl ssl support fails with\n  --disable-rpath). (Jani)\n- Fixed bug #48131 (Don't try to bind ipv4 addresses to ipv6 ips via bindto).\n  (Ilia)\n- Fixed bug #48070 (PDO_OCI: Segfault when using persistent connection).\n  (Pierre, Matteo, jarismar dot php at gmail dot com)\n- Fixed bug #48058 (Year formatter goes wrong with out-of-int range). (Derick)\n- Fixed bug #48038 (odbc_execute changes variables used to form params array).\n  (Felipe)\n- Fixed bug #47997 (stream_copy_to_stream returns 1 on empty streams). (Arnaud)\n- Fixed bug #47991 (SSL streams fail if error stack contains items). (Mikko)\n- Fixed bug #47981 (error handler not called regardless). (Hannes)\n- Fixed bug #47969 (ezmlm_hash() returns different values depend on OS). (Ilia)\n- Fixed bug #47946 (ImageConvolution overwrites background). (Ilia)\n- Fixed bug #47940 (memory leaks in imap_body). (Pierre, Jake Levitt)\n- Fixed bug #47937 (system() calls sapi_flush() regardless of output\n  buffering). (Ilia)\n- Fixed bug #47903 (\"@\" operator does not work with string offsets). (Felipe)\n- Fixed bug #47893 (CLI aborts on non blocking stdout). (Arnaud)\n- Fixed bug #47849 (Non-deep import loses the namespace). (Rob)\n- Fixed bug #47845 (PDO_Firebird omits first row from query). (Lars W)\n- Fixed bug #47836 (array operator [] inconsistency when the array has\n  PHP_INT_MAX index value). (Matt)\n- Fixed bug #47831 (Compile warning for strnlen() in main/spprintf.c).\n  (Ilia, rainer dot jung at kippdata dot de)\n- Fixed bug #47828 (openssl_x509_parse() segfaults when a UTF-8 conversion\n  fails). (Scott, Kees Cook, Pierre)\n- Fixed bug #47818 (Segfault due to bound callback param). (Felipe)\n- Fixed bug #47801 (__call() accessed via parent:: operator is provided\n  incorrect method name). (Felipe)\n- Fixed bug #47769 (Strange extends PDO). (Felipe)\n- Fixed bug #47745 (FILTER_VALIDATE_INT doesn't allow minimum integer).\n  (Dmitry)\n- Fixed bug #47721 (Alignment issues in mbstring and sysvshm extension).\n  (crrodriguez at opensuse dot org, Ilia)\n- Fixed bug #47704 (PHP crashes on some \"bad\" operations with string\n  offsets). (Dmitry)\n- Fixed bug #47695 (build error when xmlrpc and iconv are compiled against\n  different iconv versions). (Scott)\n- Fixed bug #47667 (ZipArchive::OVERWRITE seems to have no effect).\n  (Mikko, Pierre)\n- Fixed bug #47644 (Valid integers are truncated with json_decode()). (Scott)\n- Fixed bug #47639 (pg_copy_from() WARNING: nonstandard use of \\\\ in a\n  string literal). (Ilia)\n- Fixed bug #47616 (curl keeps crashing). (Felipe)\n- Fixed bug #47598 (FILTER_VALIDATE_EMAIL is locale aware). (Ilia)\n- Fixed bug #47566 (pcntl_wexitstatus() returns signed status).\n  (patch by james at jamesreno dot com)\n- Fixed bug #47564 (unpacking unsigned long 32bit bit endian returns wrong\n  result). (Ilia)\n- Fixed bug #47487 (performance degraded when reading large chunks after\n  fix of bug #44607). (Arnaud)\n- Fixed bug #47468 (enable cli|cgi-only extensions for embed sapi). (Jani)\n- Fixed bug #47435 (FILTER_FLAG_NO_PRIV_RANGE does not work with ipv6\n  addresses in the filter extension). (Ilia)\n- Fixed bug #47430 (Errors after writing to nodeValue parameter of an absent\n  previousSibling). (Rob)\n- Fixed bug #47365 (ip2long() may allow some invalid values on certain 64bit\n   systems). (Ilia)\n- Fixed bug #47254 (Wrong Reflection for extends class). (Felipe)\n- Fixed bug #47042 (cgi sapi is incorrectly removing SCRIPT_FILENAME).\n  (Sriram Natarajan, David Soria Parra)\n- Fixed bug #46882 (Serialize / Unserialize misbehaviour under OS with\n  different bit numbers). (Matt)\n- Fixed bug #46812 (get_class_vars() does not include visible private variable\n  looking at subclass). (Arnaud)\n- Fixed bug #46386 (Digest authentication with SOAP module fails against MSSQL\n  SOAP services). (Ilia, lordelph at gmail dot com)\n- Fixed bug #46109 (Memory leak when mysqli::init() is called multiple times).\n  (Andrey)\n- Fixed bug #45997 (safe_mode bypass with exec/system/passthru (windows only)).\n  (Pierre)\n- Fixed bug #45877 (Array key '2147483647' left as string). (Matt)\n- Fixed bug #45822 (Near infinite-loops while parsing huge relative offsets).\n  (Derick, Mike Sullivan)\n- Fixed bug #45799 (imagepng() crashes on empty image).\n  (Martin McNickle, Takeshi Abe)\n- Fixed bug #45622 (isset($arrayObject->p) misbehaves with\n  ArrayObject::ARRAY_AS_PROPS set). (robin_fernandes at uk dot ibm dot com, Arnaud)\n- Fixed bug #45614 (ArrayIterator::current(), ::key() can show 1st private prop\n  of wrapped object). (robin_fernandes at uk dot ibm dot com, Arnaud)\n- Fixed bug #45540 (stream_context_create creates bad http request). (Arnaud)\n- Fixed bug #45202 (zlib.output_compression can not be set with ini_set()).\n  (Jani)\n- Fixed bug #45191 (error_log ignores date.timezone php.ini val when setting\n  logging timestamps). (Derick)\n- Fixed bug #45092 (header HTTP context option not being used when compiled\n  using --with-curlwrappers). (Jani)\n- Fixed bug #44996 (xmlrpc_decode() ignores time zone on iso8601.datetime).\n  (Ilia, kawai at apache dot org)\n- Fixed bug #44827 (define() is missing error checks for class constants).\n  (Ilia)\n- Fixed bug #44214 (Crash using preg_replace_callback() and global variables).\n  (Nuno, Scott)\n- Fixed bug #43073 (TrueType bounding box is wrong for angle<>0).\n  (Martin McNickle)\n- Fixed bug #42663 (gzinflate() try to allocate all memory with truncated\n  data). (Arnaud)\n- Fixed bug #42414 (some odbc_*() functions incompatible with Oracle ODBC\n  driver). (jhml at gmx dot net)\n- Fixed bug #42362 (HTTP status codes 204 and 304 should not be gzipped).\n  (Scott, Edward Z. Yang)\n- Fixed bug #42143 (The constant NAN is reported as 0 on Windows)\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #38805 (PDO truncates text from SQL Server text data type field).\n  (Steph)\n\n26 Feb 2009, PHP 5.2.9\n- Changed __call() to be invoked on private/protected method access, similar to\n  properties and __get(). (Andrei)\n\n- Added optional sorting type flag parameter to array_unique(). Default is\n  SORT_REGULAR. (Andrei)\n\n- Fixed a crash on extract in zip when files or directories entry names contain\n  a relative path. (Pierre)\n- Fixed error conditions handling in stream_filter_append(). (Arnaud)\n- Fixed zip filename property read. (Pierre)\n- Fixed explode() behavior with empty string to respect negative limit. (Shire)\n- Fixed security issue in imagerotate(), background colour isn't validated\n  correctly with a non truecolour image. Reported by Hamid Ebadi,\n  APA Laboratory (Fixes CVE-2008-5498). (Scott)\n- Fixed a segfault when malformed string is passed to json_decode(). (Scott)\n- Fixed bug in xml_error_string() which resulted in messages being\n  off by one. (Scott)\n\n- Fixed bug #47422 (modulus operator returns incorrect results on 64 bit\n  linux). (Matt)\n- Fixed bug #47399 (mb_check_encoding() returns true for some illegal SJIS\n  characters). (for-bugs at hnw dot jp, Moriyoshi)\n- Fixed bug #47353 (crash when creating a lot of objects in object\n  destructor). (Tony)\n- Fixed bug #47322 (sscanf %d doesn't work). (Felipe)\n- Fixed bug #47282 (FILTER_VALIDATE_EMAIL is marking valid email addresses\n  as invalid). (Ilia)\n- Fixed bug #47220 (segfault in dom_document_parser in recovery mode). (Rob)\n- Fixed bug #47217 (content-type is not set properly for file uploads). (Ilia)\n- Fixed bug #47174 (base64_decode() interprets pad char in mid string as\n  terminator). (Ilia)\n- Fixed bug #47165 (Possible memory corruption when passing return value by\n  reference). (Dmitry)\n- Fixed bug #47152 (gzseek/fseek using SEEK_END produces strange results).\n  (Felipe)\n- Fixed bug #47131 (SOAP Extension ignores \"user_agent\" ini setting). (Ilia)\n- Fixed bug #47109 (Memory leak on $a->{\"a\".\"b\"} when $a is not an object).\n  (Etienne, Dmitry)\n- Fixed bug #47104 (Linking shared extensions fails with icc). (Jani)\n- Fixed bug #47049 (SoapClient::__soapCall causes a segmentation fault).\n  (Dmitry)\n- Fixed bug #47048 (Segfault with new pg_meta_data). (Felipe)\n- Fixed bug #47042 (PHP cgi sapi is removing SCRIPT_FILENAME for non\n  apache). (Sriram Natarajan)\n- Fixed bug #47037 (No error when using fopen with empty string). (Cristian\n  Rodriguez R., Felipe)\n- Fixed bug #47035 (dns_get_record returns a garbage byte at the end of a\n  TXT record). (Felipe)\n- Fixed bug #47027 (var_export doesn't show numeric indices on ArrayObject).\n  (Derick)\n- Fixed bug #46985 (OVERWRITE and binary mode does not work, regression\n  introduced in 5.2.8). (Pierre)\n- Fixed bug #46973 (IPv6 address filter rejects valid address). (Felipe)\n- Fixed bug #46964 (Fixed pdo_mysql build with older version of MySQL). (Ilia)\n- Fixed bug #46959 (Unable to disable PCRE). (Scott)\n- Fixed bug #46918 (imap_rfc822_parse_adrlist host part not filled in\n  correctly). (Felipe)\n- Fixed bug #46889 (Memory leak in strtotime()). (Derick)\n- Fixed bug #46887 (Invalid calls to php_error_docref()). (oeriksson at\n  mandriva dot com, Ilia)\n- Fixed bug #46873 (extract($foo) crashes if $foo['foo'] exists). (Arnaud)\n- Fixed bug #46843 (CP936 euro symbol is not converted properly). (ty_c at\n  cybozuy dot co dot jp, Moriyoshi)\n- Fixed bug #46798 (Crash in mssql extension when retrieving a NULL value\n  inside a binary or image column type). (Ilia)\n- Fixed bug #46782 (fastcgi.c parse error). (Matt)\n- Fixed bug #46760 (SoapClient doRequest fails when proxy is used). (Felipe)\n- Fixed bug #46748 (Segfault when an SSL error has more than one error).\n  (Scott)\n- Fixed bug #46739 (array returned by curl_getinfo should contain\n  content_type key). (Mikko)\n- Fixed bug #46699 (xml_parse crash when parser is namespace aware). (Rob)\n- Fixed bug #46419 (Elements of associative arrays with NULL value are\n  lost). (Dmitry)\n- Fixed bug #46282 (Corrupt DBF When Using DATE). (arne at bukkie dot nl)\n- Fixed bug #46026 (bz2.decompress/zlib.inflate filter tries to decompress\n  after end of stream). (Greg)\n- Fixed bug #46005 (User not consistently logged under Apache2). (admorten\n  at umich dot edu, Stas)\n- Fixed bug #45996 (libxml2 2.7 causes breakage with character data in\n  xml_parse()). (Rob)\n- Fixed bug #45940 (MySQLI OO does not populate connect_error property on\n  failed connect). (Johannes)\n- Fixed bug #45923 (mb_st[r]ripos() offset not handled correctly). (Moriyoshi)\n- Fixed bug #45327 (memory leak if offsetGet throws exception). (Greg)\n- Fixed bug #45239 (Encoding detector hangs with mbstring.strict_detection\n  enabled). (Moriyoshi)\n- Fixed bug #45161 (Reusing a curl handle leaks memory). (Mark Karpeles, Jani)\n- Fixed bug #44336 (Improve pcre UTF-8 string matching performance). (frode\n  at coretrek dot com, Nuno)\n- Fixed bug #43841 (mb_strrpos() offset is byte count for negative values).\n  (Moriyoshi)\n- Fixed bug #37209 (mssql_execute with non fatal errors). (Kalle)\n- Fixed bug #35975 (Session cookie expires date format isn't the most\n  compatible. Now matches that of setcookie()). (Scott)\n\n\n08 Dec 2008, PHP 5.2.8\n- Reverted bug fix #42718 that broke magic_quotes_gpc (Scott)\n\n04 Dec 2008, PHP 5.2.7\n- Upgraded PCRE to version 7.8 (Fixes CVE-2008-2371). (Ilia)\n- Updated timezone database to version 2008.9. (Derick)\n- Upgraded bundled libzip to 0.9.0. (Pierre)\n\n- Added logging option for error_log to send directly to SAPI. (Stas)\n- Added PHP_MAJOR_VERSION, PHP_MINOR_VERSION, PHP_RELEASE_VERSION,\n  PHP_EXTRA_VERSION, PHP_VERSION_ID, PHP_ZTS and PHP_DEBUG constants. (Pierre)\n- Added \"PHP_INI_SCAN_DIR\" environment variable which can be used to\n  either disable or change the compile time ini scan directory (FR #45114).\n  (Jani)\n\n- Fixed missing initialization of BG(page_uid) and BG(page_gid),\n  reported by Maksymilian Arciemowicz. (Stas)\n- Fixed memory leak inside sqlite_create_aggregate(). (Felipe)\n- Fixed memory leak inside PDO sqlite's sqliteCreateAggregate() method.\n  (Felipe)\n- Fixed a crash inside gd with invalid fonts (Fixes CVE-2008-3658). (Pierre)\n- Fixed a possible overflow inside memnstr (Fixes CVE-2008-3659).\n  (LaurentGaffie)\n- Fixed incorrect php_value order for Apache configuration, reported by\n  Maksymilian Arciemowicz. (Stas)\n- Fixed memory leak inside readline_callback_handler_remove() function.\n  (Felipe)\n- Fixed sybase_fetch_*() to continue reading after CS_ROW_FAIL status (Timm)\n- Fixed a bug inside dba_replace() that could cause file truncation\n  withinvalid keys. (Ilia)\n- Fixed memory leak inside readline_callback_handler_install() function.(Ilia)\n- Fixed memory leak inside readline_completion_function() function. (Felipe)\n- Fixed stream_get_contents() when using $maxlength and socket is notclosed.\n  indeyets [at] php [dot] net on #46049. (Arnaud)\n- Fixed stream_get_line() to behave as documented on non-blocking streams.\n  (Arnaud)\n- Fixed endless loop in PDOStatement::debugDumpParams().\n  (jonah.harris at gmail dot com)\n- Fixed ability to use \"internal\" heaps in extensions. (Arnaud, Dmitry)\n- Fixed weekdays adding/subtracting algorithm. (Derick)\n- Fixed some ambiguities in the date parser. (Derick)\n- Fixed a bug with the YYYY-MM format not resetting the day correctly.\n  (Derick)\n- Fixed a bug in the DateTime->modify() methods, it would not use the advanced\n  relative time strings. (Derick)\n- Fixed extraction of zip files or directories when the entry name is a\n  relative path. (Pierre)\n- Fixed read or write errors for large zip archives. (Pierre)\n- Fixed security issues detailed in CVE-2008-2665 and CVE-2008-2666.\n  (Christian Hoffmann)\n- Fixed simplexml asXML() not to lose encoding when dumping entire\n  document to file. (Ilia)\n- Fixed a crash inside PDO when trying instantiate PDORow manually.\n  (Felipe)\n- Fixed build failure of ext/mysqli with libmysql 6.0 - missing\n  rplfunctions. (Andrey)\n- Fixed a regression when using strip_tags() and < is within an\n  attribute.(Scott)\n- Fixed a crash on invalid method in ReflectionParameter constructor.\n  (Christian Seiler)\n- Reverted fix for bug #44197 due to behaviour change in minor version.\n  (Felipe)\n\n- Fixed bug #46732 (mktime.year description is wrong). (Derick)\n- Fixed bug #46696 (cURL fails in upload files with specified content-type).\n  (Ilia)\n- Fixed bug #46673 (stream_lock call with wrong parameter). (Arnaud)\n- Fixed bug #46649 (Setting array element with that same array produces\n  inconsistent results). (Arnaud)\n- Fixed bug #46626 (mb_convert_case does not handle apostrophe correctly).\n  (Ilia)\n- Fixed bug #46543 (ibase_trans() memory leaks when using wrong parameters).\n  (Felipe)\n- Fixed bug #46521 (Curl ZTS OpenSSL, error in config.m4 fragment).\n  (jd at cpanel dot net)\n- Fixed bug #46496 (wddx_serialize treats input as ISO-8859-1). (Mark Karpeles)\n- Fixed bug #46427 (SoapClient() stumbles over its \"stream_context\" parameter).\n  (Dmitry, Herman Radtke)\n- Fixed bug #46426 (offset parameter of stream_get_contents() does not\n  workfor \"0\"). (Felipe)\n- Fixed bug #46406 (Unregistering nodeclass throws E_FATAL). (Rob)\n- Fixed bug #46389 (NetWare needs small patch for _timezone).\n  (patch by guenter@php.net)\n- Fixed bug #46388 (stream_notification_callback inside of object destroys\n  object variables). (Felipe)\n- Fixed bug #46381 (wrong $this passed to internal methods causes segfault).\n  (Tony)\n- Fixed bug #46379 (Infinite loop when parsing '#' in one line file). (Arnaud)\n- Fixed bug #46366 (bad cwd with / as pathinfo). (Dmitry)\n- Fixed bug #46360 (TCP_NODELAY constant for socket_{get,set}_option).\n  (bugs at trick dot vanstaveren dot us)\n- Fixed bug #46343 (IPv6 address filter accepts invalid address). (Ilia)\n- Fixed bug #46335 (DOMText::splitText doesn't handle multibyte characters).\n  (Rob)\n- Fixed bug #46323 (compilation of simplexml for NetWare breaks).\n  (Patch by guenter [at] php [dot] net)\n- Fixed bug #46319 (PHP sets default Content-Type header for HTTP 304\n  response code, in cgi sapi). (Ilia)\n- Fixed bug #46313 (Magic quotes broke $_FILES). (Arnaud)\n- Fixed bug #46308 (Invalid write when changing property from inside getter).\n  (Dmitry)\n- Fixed bug #46292 (PDO::setFetchMode() shouldn't requires the 2nd arg when\n  using FETCH_CLASSTYPE). (Felipe)\n- Fixed bug #46274, #46249 (pdo_pgsql always fill in NULL for empty BLOB and\n  segfaults when returned by SELECT). (Felipe)\n- Fixed bug #46271 (local_cert option is not resolved to full path). (Ilia)\n- Fixed bug #46247 (ibase_set_event_handler() is allowing to pass callback\n  without event). (Felipe)\n- Fixed bug #46246 (difference between call_user_func(array($this, $method))\n  and $this->$method()). (Dmitry)\n- Fixed bug #46222 (ArrayObject EG(uninitialized_var_ptr) overwrite).\n  (Etienne)\n- Fixed bug #46215 (json_encode mutates its parameter and has some\n  class-specific state). (Felipe)\n- Fixed bug #46206 (pg_query_params/pg_execute convert passed values to\n  strings). (Ilia)\n- Fixed bug #46191 (BC break: DOMDocument saveXML() doesn't accept null).\n  (Rob)\n- Fixed bug #46164 (stream_filter_remove() closes the stream). (Arnaud)\n- Fixed bug #46157 (PDOStatement::fetchObject prototype error). (Felipe)\n- Fixed bug #46147 (after stream seek, appending stream filter reads\n  incorrect data). (Greg)\n- Fixed bug #46139 (PDOStatement->setFetchMode() forgets FETCH_PROPS_LATE).\n  (chsc at peytz dot dk, Felipe)\n- Fixed bug #46127 (php_openssl_tcp_sockop_accept forgets to set context\n  on accepted stream) (Mark Karpeles, Pierre)\n- Fixed bug #46110 (XMLWriter - openmemory() and openuri() leak memory on\n  multiple calls). (Ilia)\n- Fixed bug #46088 (RegexIterator::accept - segfault). (Felipe)\n- Fixed bug #46082 (stream_set_blocking() can cause a crash in some\n  circumstances). (Felipe)\n- Fixed bug #46064 (Exception when creating ReflectionProperty object\n  on dynamicly created property). (Felipe)\n- Fixed bug #46059 (Compile failure under IRIX 6.5.30 building posix.c).\n  (Arnaud)\n- Fixed bug #46053 (SplFileObject::seek - Endless loop). (Arnaud)\n- Fixed bug #46051 (SplFileInfo::openFile - memory overlap). (Arnaud)\n- Fixed bug #46047 (SimpleXML converts empty nodes into object with\n  nested array). (Rob)\n- Fixed bug #46031 (Segfault in AppendIterator::next). (Arnaud)\n- Fixed bug #46029 (Segfault in DOMText when using with Reflection). (Rob)\n- Fixed bug #46026 (bzip2.decompress/zlib.inflate filter tries to decompress\n  after end of stream). (Keisial at gmail dot com, Greg)\n- Fixed bug #46024 (stream_select() doesn't return the correct number).\n  (Arnaud)\n- Fixed bug #46010 (warnings incorrectly generated for iv in ecb mode).\n  (Felipe)\n- Fixed bug #46003 (isset on nonexisting node return unexpected results). (Rob)\n- Fixed bug #45956 (parse_ini_file() does not return false with syntax errors\n  in parsed file). (Jani)\n- Fixed bug #45901 (wddx_serialize_value crash with SimpleXMLElement object).\n  (Rob)\n- Fixed bug #45862 (get_class_vars is inconsistent with 'protected' and\n  'private' variables). (ilewis at uk dot ibm dot com, Felipe)\n- Fixed bug #45860 (header() function fails to correctly replace all Status\n  lines). (Dmitry)\n- Fixed bug #45805 (Crash on throwing exception from error handler). (Dmitry)\n- Fixed bug #45765 (ReflectionObject with default parameters of self::xxx cause\n  an error). (Felipe)\n- Fixed bug #45751 (Using auto_prepend_file crashes (out of scope stack address\n  use)). (basant dot kukreja at sun dot com)\n- Fixed bug #45722 (mb_check_encoding() crashes). (Moriyoshi)\n- Fixed bug #45705 (rfc822_parse_adrlist() modifies passed address parameter).\n  (Jani)\n- Fixed bug #45691 (Some per-dir or runtime settings may leak into other\n  requests). (Moriyoshi)\n- Fixed bug #45581 (htmlspecialchars() double encoding &#x hex items). (Arnaud)\n- Fixed bug #45580 (levenshtein() crashes with invalid argument). (Ilia)\n- Fixed bug #45575 (Segfault with invalid non-string as event handler callback).\n  (Christian Seiler)\n- Fixed bug #45568 (ISAPI doesn't properly clear auth_digest in header).\n  (Patch by: navara at emclient dot com)\n- Fixed bug #45556 (Return value from callback isn't freed). (Felipe)\n- Fixed bug #45555 (Segfault with invalid non-string as\n  register_introspection_callback). (Christian Seiler)\n- Fixed bug #45553 (Using XPath to return values for attributes with a\n  namespace does not work). (Rob)\n- Fixed bug #45529 (new DateTimeZone() and date_create()->getTimezone() behave\n  different). (Derick)\n- Fixed bug #45522 (FCGI_GET_VALUES request does not return supplied values).\n  (Arnaud)\n- Fixed bug #45486 (mb_send_mail(); header 'Content-Type: text/plain; charset='\n   parsing incorrect). (Felipe)\n- Fixed bug #45485 (strip_tags and <?XML tag). (Felipe)\n- Fixed bug #45460 (imap patch for fromlength fix in imap_headerinfo doesn't\n  accept lengths of 1024). (Felipe, andrew at lifescale dot com)\n- Fixed bug #45449 (filesize() regression using ftp wrapper).\n  (crrodriguez at suse dot de)\n- Fixed bug #45423 (fastcgi parent process doesn't invoke php_module_shutdown\n  before shutdown) (basant dot kukreja at sun dot com)\n- Fixed bug #45406 (session.serialize_handler declared by shared extension fails).\n  (Kalle, oleg dot grenrus at dynamoid dot com)\n- Fixed bug #45405 (snmp extension memory leak).\n  (Federico Cuello, Rodrigo Campos)\n- Fixed bug #45382 (timeout bug in stream_socket_enable_crypto). (Ilia)\n- Fixed bug #45373 (php crash on query with errors in params). (Felipe)\n- Fixed bug #45352 (Segmentation fault because of tick function on second\n  request). (Dmitry)\n- Fixed bug #45312 (Segmentation fault on second request for array functions).\n  (Dmitry)\n- Fixed bug #45303 (Opening php:// wrapper in append mode results in a warning).\n  (Arnaud)\n- Fixed bug #45251 (double free or corruption with setAttributeNode()). (Rob)\n- Fixed bug #45226 and #18916 (xmlrpc_set_type() segfaults and wrong behavior\n  with valid ISO8601 date string). (Jeff Lawsons)\n- Fixed bug #45220 (curl_read callback returns -1 when needs to return\n  size_t (unsigned)). (Felipe)\n- Fixed bug #45181 (chdir() should clear relative entries in stat cache).\n  (Arnaud)\n- Fixed bug #45178 (memory corruption on assignment result of \"new\" by\n  reference). (Dmitry)\n- Fixed bug #45166 (substr() overflow changes). (Felipe)\n- Fixed bug #45151 (Crash with URI/file..php (filename contains 2 dots)).\n  (Fixes CVE-2008-3660) (Dmitry)\n- Fixed bug #45139 (ReflectionProperty returns incorrect declaring class).\n  (Felipe)\n- Fixed bug #45124 ($_FILES['upload']['size'] sometimes return zero and some\n  times the filesize). (Arnaud)\n- Fixed bug #45028 (CRC32 output endianness is different between crc32() and\n  hash()). (Tony)\n- Fixed bug #45004 (pg_insert() does not accept 4 digit timezone format).\n  (Ilia)\n- Fixed bug #44991 (Compile Failure With freetds0.82).\n  (jklowden at freetds dot org, matthias at dsx dot at)\n- Fixed bug #44938 (gettext functions crash with overly long domain).\n  (Christian Schneider, Ilia)\n- Fixed bug #44925 (preg_grep() modifies input array). (Nuno)\n- Fixed bug #44900 (OpenSSL extension fails to link with OpenSSL 0.9.6).\n  (jd at cpanel dot net, Pierre)\n- Fixed bug #44891 Memory leak using registerPHPFunctions and XSLT Variable\n  as function parameter. (Rob)\n- Fixed bug #44882 (SOAP extension object decoding bug). (Dmitry)\n- Fixed bug #44830 (Very minor issue with backslash in heredoc). (Matt)\n- Fixed bug #44818 (php://memory writeable when opened read only). (Arnaud)\n- Fixed bug #44811 (Improve error message when creating a new SoapClient\n  that contains invalid data). (Markus Fischer, David C)\n- Fixed bug #44798 (Memory leak assigning value to attribute). (Ilia)\n- Fixed bug #44716 (Progress notifications incorrect). (Hannes)\n- Fixed bug #44712 (stream_context_set_params segfaults on invalid arguments).\n  (Hannes)\n- Fixed bug #44617 (wrong HTML entity output when substitute_character=entity).\n  (Moriyoshi)\n- Fixed bug #44607 (stream_get_line unable to correctly identify the \"ending\"\n  in the stream content). (Arnaud)\n- Fixed bug #44425 (Extending PDO/MySQL class with a __call() function doesn't\n  work). (Johannes)\n- Fixed bug #44327 (PDORow::queryString property & numeric offsets / Crash).\n  (Felipe)\n- Fixed bug #44251, #41125 (PDO + quote() + prepare() can result in segfault).\n  (tsteiner at nerdclub dot net)\n- Fixed bug #44246 (closedir() accepts a file resource opened by fopen()).\n  (Dmitry, Tony)\n- Fixed bug #44182 (extract($a, EXTR_REFS) can fail to split copy-on-write\n  references). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #44181 (extract($a, EXTR_OVERWRITE|EXTR_REFS) can fail to create\n  references to $a). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #44127 (UNIX abstract namespace socket connect does not work).\n  (Jani)\n- Fixed bug #43993 (mb_substr_count() behaves differently to substr_count()\n  with overlapping needles). (Moriyoshi)\n- Fixed Bug #43958 (class name added into the error message). (Dmitry)\n- Fixed bug #43941 (json_encode silently cuts non-UTF8 strings). (Stas)\n- Fixed bug #43925 (Incorrect argument counter in prepared statements with\n  pgsql). (Felipe)\n- Fixed bug #43731 (socket_getpeername: cannot use on stdin with inetd).\n  (Arnaud)\n- Fixed bug #43723 (SOAP not sent properly from client for <choice>). (Dmitry)\n- Fixed bug #43668 (Added odbc.default_cursortype to control the ODBCcursor\n  model). (Patrick)\n- Fixed bug #43666 (Fixed code to use ODBC 3.52 datatypes for 64bit\n  systems). (Patrick)\n- Fixed bug #43540 (rfc1867 handler newlength problem). (Arnaud)\n- Fixed bug #43452 (strings containing a weekday, or a number plus weekday\n  behaved incorrect of the current day-of-week was the same as the one in the\n  phrase). (Derick)\n- Fixed bug #43353 (wrong detection of 'data' wrapper causes notice).\n  (gk at gknw dot de, Arnaud)\n- Fixed bug #43053 (Regression: some numbers shown in scientific notation).\n  (int-e at gmx dot de)\n- Fixed bug #43045 (SOAP encoding violation on \"INF\" for type double/float).\n  (Dmitry)\n- Fixed bug #42862 (IMAP toolkit crash: rfc822.c legacy routine buffer\n  overflow). (Fixes CVE-2008-2829) (Dmitry)\n- Fixed bug #42855 (dns_get_record() doesn't return all text from TXT record).\n  (a dot u dot savchuk at gmail dot com)\n- Fixed bug #42737 (preg_split('//u') triggers a E_NOTICE with newlines).\n  (Nuno)\n- Fixed bug #42718 (FILTER_UNSAFE_RAW not applied when configured as default\n  filter). (Arnaud)\n- Fixed bug #42604 (\"make test\" fails with --with-config-file-scan-dir=path).\n  (Jani)\n- Fixed bug #42473 (ob_start php://output and headers). (Arnaud)\n- Fixed bug #42318 (problem with nm on AIX, not finding object files).\n  (Dmitry)\n- Fixed bug #42294 (Unified solution for round() based on C99 round). (Ilia)\n- Fixed bug #42078 (pg_meta_data mix tables metadata from different schemas).\n  (Felipe)\n- Fixed bug #41348 (OCI8: allow compilation with Oracle 8.1). (Chris Jones)\n- Fixed bug #41033 (enable signing with DSA keys.\n  (gordyf at google dot com, Pierre)\n- Fixed bug #37100 (data is returned truncated with BINARY CURSOR). (Tony)\n- Fixed bug #30312 (crash in sybase_unbuffered_query() function). (Timm)\n- Fixed bug #24679 (pg_* functions doesn't work using schema). (Felipe)\n- Fixed bug #14962 (PECL) (::extractTo 2nd argument is not really optional)\n  (Mark van Der Velden)\n- Fixed bug #14032 (Mail() always returns false but mail is sent). (Mikko)\n\n\n01 May 2008, PHP 5.2.6\n- Fixed two possible crashes inside posix extension (Tony)\n- Fixed incorrect heredoc handling when label is used within the block.\n  (Matt)\n- Fixed possible stack buffer overflow in FastCGI SAPI. (Andrei Nigmatulin)\n- Fixed sending of uninitialized paddings which may contain some information. (Andrei Nigmatulin)\n- Fixed a bug in formatting timestamps when DST is active in the default timezone (Derick)\n- Properly address incomplete multibyte chars inside escapeshellcmd() (Ilia, Stefan Esser)\n- Fix integer overflow in printf(). (Stas, Maksymilian Aciemowicz)\n- Fixed security issue detailed in CVE-2008-0599. (Rasmus)\n- Fixed potential memleak in stream filter parameter for zlib filter. (Greg)\n- Added Reflection API metadata for the methods of the DOM classes. (Sebastian)\n- Fixed weird behavior in CGI parameter parsing. (Dmitry, Hannes Magnusson)\n- Fixed a safe_mode bypass in cURL identified by Maksymilian Arciemowicz.\n  (Ilia)\n- Fixed a bug with PDO::FETCH_COLUMN|PDO::FETCH_GROUP mode when a column # by\n  which to group by data is specified. (Ilia)\n- Fixed segfault in filter extension when using callbacks. (Arnar Mar Sig,\n  Felipe)\n- Fixed faulty fix for bug #40189 (endless loop in zlib.inflate stream filter). (Greg)\n- Upgraded PCRE to version 7.6 (Nuno)\n\n- Fixed bug #44742 (timezone_offset_get() causes segmentation faults). (Derick)\n- Fixed bug #44720 (Prevent crash within session_register()). (Scott)\n- Fixed bug #44703 (htmlspecialchars() does not detect bad character set argument). (Andy Wharmby)\n- Fixed bug #44673 (With CGI argv/argc starts from arguments, not from script) (Dmitry)\n- Fixed bug #44667 (proc_open() does not handle pipes with the mode 'wb' correctly). (Jani)\n- Fixed bug #44663 (Crash in imap_mail_compose if \"body\" parameter invalid). (Ilia)\n- Fixed bug #44650 (escaepshellscmd() does not check arg count). (Ilia)\n- Fixed bug #44613 (Crash inside imap_headerinfo()). (Ilia, jmessa)\n- Fixed bug #44603 (Order issues with Content-Type/Length headers on POST). (Ilia)\n- Fixed bug #44594 (imap_open() does not validate # of retries parameter). (Ilia)\n- Fixed bug #44591 (imagegif's filename parameter). (Felipe)\n- Fixed bug #44557 (Crash in imap_setacl when supplied integer as username) (Thomas Jarosch)\n- Fixed bug #44487 (call_user_method_array issues a warning when throwing an exception). (David Soria Parra)\n- Fixed bug #44478 (Inconsistent behaviour when assigning new nodes). (Rob, Felipe)\n- Fixed bug #44445 (email validator does not handle domains starting/ending with a -). (Ilia)\n- Fixed bug #44440 (st_blocks undefined under BeOS). (Felipe)\n- Fixed bug #44394 (Last two bytes missing from output). (Felipe)\n- Fixed bug #44388 (Crash inside exif_read_data() on invalid images) (Ilia)\n- Fixed bug #44373 (PDO_OCI extension compile failed). (Felipe)\n- Fixed bug #44333 (SEGFAULT when using mysql_pconnect() with client_flags). (Felipe)\n- Fixed bug #44306 (Better detection of MIPS processors on Windows). (Ilia)\n- Fixed bug #44242 (metaphone('CMXFXM') crashes PHP). (Felipe)\n- Fixed bug #44233 (MSG_PEEK undefined under BeOS R5). (jonathonfreeman at gmail dot com, Ilia)\n- Fixed bug #44216 (strftime segfaults on large negative value). (Derick)\n- Fixed bug #44209 (strtotime() doesn't support 64 bit timestamps on 64 bit platforms). (Derick)\n- Fixed bug #44206 (OCI8 selecting ref cursors leads to ORA-1000 maximum open cursors reached). (Oracle Corp.)\n- Fixed bug #44200 (A crash in PDO when no bound targets exists and yet bound parameters are present). (Ilia)\n- Fixed bug #44197 (socket array keys lost on socket_select). (Felipe)\n- Fixed bug #44191 (preg_grep messes up array index). (Felipe)\n- Fixed bug #44189 (PDO setAttribute() does not properly validate values for native numeric options). (Ilia)\n- Fixed bug #44184 (Double free of loop-variable on exception). (Dmitry)\n- Fixed bug #44171 (Invalid FETCH_COLUMN index does not raise an error). (Ilia)\n- Fixed bug #44166 (Parameter handling flaw in PDO::getAvailableDrivers()). (Ilia)\n- Fixed bug #44159 (Crash: $pdo->setAttribute(PDO::STATEMENT_ATTR_CLASS, NULL)). (Felipe)\n- Fixed bug #44152 (Possible crash with syslog logging on ZTS builds). (Ilia)\n- Fixed bug #44141 (private parent constructor callable through static function). (Dmitry)\n- Fixed bug #44113 (OCI8 new collection creation can fail with OCI-22303). (Oracle Corp.)\n- Fixed bug #44069 (Huge memory usage with concatenation using . instead of .=). (Dmitry)\n- Fixed bug #44046 (crash inside array_slice() function with an invalid by-ref offset). (Ilia)\n- Fixed bug #44028 (crash inside stream_socket_enable_crypto() when enabling encryption without crypto type). (Ilia)\n- Fixed bug #44018 (RecursiveDirectoryIterator options inconsistancy). (Marcus)\n- Fixed bug #44008 (OCI8 incorrect usage of OCI-Lob->close crashes PHP). (Oracle Corp.)\n- Fixed bug #43998 (Two error messages returned for incorrect encoding for mb_strto[upper|lower]). (Rui)\n- Fixed bug #43994 (mb_ereg 'successfully' matching incorrect). (Rui)\n- Fixed bug #43954 (Memory leak when sending the same HTTP status code multiple times). (Scott)\n- Fixed bug #43927 (koi8r is missing from html_entity_decode()). (andy at demos dot su, Tony)\n- Fixed bug #43912 (Interbase column names are truncated to 31 characters). (Ilia)\n- Fixed bug #43875 (Two error messages returned for $new and $flag argument in mysql_connect()). (Hannes)\n- Fixed bug #43863 (str_word_count() breaks on cyrillic \"ya\" in locale cp1251). (phprus at gmail dot com, Tony)\n- Fixed bug #43841 (mb_strrpos offset is byte count for negative values). (Rui)\n- Fixed bug #43840 (mb_strpos bounds check is byte count rather than a character count). (Rui)\n- Fixed bug #43808 (date_create never fails (even when it should)). (Derick)\n- Fixed bug #43793 (zlib filter is unable to auto-detect gzip/zlib file headers). (Greg)\n- Fixed bug #43703 (Signature compatibility check broken). (Dmitry)\n- Fixed bug #43677 (Inconsistent behaviour of include_path set with php_value). (manuel at mausz dot at)\n- Fixed bug #43663 (Extending PDO class with a __call() function doesn't work). (David Soria Parra)\n- Fixed bug #43647 (Make FindFile use PATH_SEPARATOR instead of \";\"). (Ilia)\n- Fixed bug #43635 (mysql extension ingores INI settings on NULL values passed to mysql_connect()). (Ilia)\n- Fixed bug #43620 (Workaround for a bug inside libcurl 7.16.2 that can result in a crash). (Ilia)\n- Fixed bug #43614 (incorrect processing of numerical string keys of array in arbitrary serialized data). (Dmitriy Buldakov, Felipe)\n- Fixed bug #43606 (define missing depencies of the exif extension). (crrodriguez at suse dot de)\n- Fixed bug #43589 (a possible infinite loop in bz2_filter.c). (Greg)\n- Fixed bug #43580 (removed bogus declaration of a non-existent php_is_url() function). (Ilia)\n- Fixed bug #43559 (array_merge_recursive() doesn't behave as expected with duplicate NULL values). (Felipe, Tony)\n- Fixed bug #43533 (escapeshellarg('') returns null). (Ilia)\n- Fixed bug #43527 (DateTime created from a timestamp reports environment timezone). (Derick)\n- Fixed bug #43522 (stream_get_line() eats additional characters). (Felipe, Ilia, Tony)\n- Fixed bug #43507 (SOAPFault HTTP Status 500 - would like to be able to set the HTTP Status). (Dmitry)\n- Fixed bug #43505 (Assign by reference bug). (Dmitry)\n- Fixed bug #43498 (file_exists() on a proftpd server got SIZE not allowed in ASCII mode). (Ilia, crrodriguez at suse dot de)\n- Fixed bug #43497 (OCI8 XML/getClobVal aka temporary LOBs leak UGA memory). (Chris)\n- Fixed bug #43495 (array_merge_recursive() crashes with recursive arrays). (Ilia)\n- Fixed bug #43493 (pdo_pgsql does not send username on connect when password is not available). (Ilia)\n- Fixed bug #43491 (Under certain conditions, file_exists() never returns). (Dmitry)\n- Fixed bug #43483 (get_class_methods() does not list all visible methods). (Dmitry)\n- Fixed bug #43482 (array_pad() does not warn on very small pad numbers). (Ilia)\n- Fixed bug #43457 (Prepared statement with incorrect parms doesn't throw exception with pdo_pgsql driver). (Ilia)\n- Fixed bug #43450 (Memory leak on some functions with implicit object __toString() call). (David C.)\n- Fixed bug #43386 (array_globals not reset to 0 properly on init). (Ilia)\n- Fixed bug #43377 (PHP crashes with invalid argument for DateTimeZone). (Ilia)\n- Fixed bug #43373 (pcntl_fork() should not raise E_ERROR on error). (Ilia)\n- Fixed bug #43364 (recursive xincludes don't remove internal xml nodes properly). (Rob, patch from ddb@bitxtender.de)\n- Fixed bug #43301 (mb_ereg*_replace() crashes when replacement string is invalid PHP expression and 'e' option is used). (Jani)\n- Fixed bug #43295 (crash because of uninitialized SG(sapi_headers).mimetype). (Dmitry)\n- Fixed bug #43293 (Multiple segfaults in getopt()). (Hannes)\n- Fixed bug #43279 (pg_send_query_params() converts all elements in 'params' to strings). (Ilia)\n- Fixed bug #43276 (Incomplete fix for bug #42739, mkdir() under safe_mode). (Ilia)\n- Fixed bug #43248 (backward compatibility break in realpath()). (Dmitry)\n- Fixed bug #43221 (SimpleXML adding default namespace in addAttribute). (Rob)\n- Fixed bug #43216 (stream_is_local() returns false on \"file://\"). (Dmitry)\n- Fixed bug #43201 (Crash on using uninitialized vals and __get/__set). (Dmitry)\n- Fixed bug #43182 (file_put_contents() LOCK_EX does not work properly on file truncation). (Ilia)\n- Fixed bug #43175 (__destruct() throwing an exception with __call() causes segfault). (Dmitry)\n- Fixed bug #43128 (Very long class name causes segfault). (Dmitry)\n- Fixed bug #43105 (PHP seems to fail to close open files). (Hannes)\n- Fixed bug #43092 (curl_copy_handle() crashes with > 32 chars long URL). (Jani)\n- Fixed bug #43003 (Invalid timezone reported for DateTime objects constructed using a timestamp). (Derick)\n- Fixed bug #42978 (mismatch between number of bound params and values causes a crash in pdo_pgsql). (Ilia)\n- Fixed bug #42945 (preg_split() swallows part of the string). (Nuno)\n- Fixed bug #42937 (__call() method not invoked when methods are called on parent from child class). (Dmitry)\n- Fixed bug #42841 (REF CURSOR and oci_new_cursor() crash PHP). (Chris)\n- Fixed bug #42838 (Wrong results in array_diff_uassoc) (Felipe)\n- Fixed bug #42779 (Incorrect forcing from HTTP/1.0 request to HTTP/1.1 response). (Ilia)\n- Fixed bug #42736 (xmlrpc_server_call_method() crashes). (Tony)\n- Fixed bug #42692 (Procedure 'int1' not present with doc/lit SoapServer). (Dmitry)\n- Fixed bug #42548 (mysqli PROCEDURE calls can't return result sets). (Hartmut)\n- Fixed bug #42505 (new sendmail default breaks on Netware platform) (Guenter Knauf)\n- Fixed bug #42369 (Implicit conversion to string leaks memory). (David C., Rob).\n- Fixed bug #42272 (var_export() incorrectly escapes char(0)). (Derick)\n- Fixed bug #42261 (Incorrect lengths for date and boolean data types). (Ilia)\n- Fixed bug #42190 (Constructing DateTime with TimeZone Indicator invalidates DateTimeZone). (Derick)\n- Fixed bug #42177 (Warning \"array_merge_recursive(): recursion detected\" comes again...). (Felipe)\n- Fixed bug #41941 (oci8 extension not lib64 savvy). (Chris)\n- Fixed bug #41828 (Failing to call RecursiveIteratorIterator::__construct() causes a sefault). (Etienne)\n- Fixed bug #41599 (setTime() fails after modify() is used). (Derick)\n- Fixed bug #41562 (SimpleXML memory issue). (Rob)\n- Fixed bug #40013 (php_uname() does not return nodename on Netware (Guenter Knauf)\n- Fixed bug #38468 (Unexpected creation of cycle). (Dmitry)\n- Fixed bug #32979 (OpenSSL stream->fd casts broken in 64-bit build) (stotty at tvnet dot hu)\n\n08 Nov 2007, PHP 5.2.5\n- Upgraded PCRE to version 7.3 (Nuno)\n- Added optional parameter $provide_object to debug_backtrace(). (Sebastian)\n- Added alpha support for imagefilter() IMG_FILTER_COLORIZE. (Pierre)\n- Added ability to control memory consumption between request using\n  ZEND_MM_COMPACT environment variable. (Dmitry)\n\n- Improved speed of array_intersect_key(), array_intersect_assoc(),\n  array_uintersect_assoc(), array_diff_key(), array_diff_assoc() and\n  array_udiff_assoc(). (Dmitry)\n\n- Fixed move_uploaded_file() to always set file permissions of resulting file\n  according to UMASK. (Andrew Sitnikov)\n- Fixed possible crash in ext/soap because of uninitialized value. (Zdash Urf)\n- Fixed regression in glob() when enforcing safe_mode/open_basedir checks on\n  paths containing '*'. (Ilia)\n- Fixed \"mail.force_extra_parameters\" php.ini directive not to be modifiable\n  in .htaccess due to the security implications - reported by SecurityReason.\n  (Stas)\n- Fixed PDO crash when driver returns empty LOB stream. (Stas)\n- Fixed dl() to only accept filenames - reported by Laurent Gaffie. (Stas)\n- Fixed dl() to limit argument size to MAXPATHLEN (CVE-2007-4887).\n  (Christian Hoffmann)\n- Fixed iconv_*() functions to limit argument sizes as workaround to libc\n  bug (CVE-2007-4783, CVE-2007-4840 by Laurent Gaffie).\n  (Christian Hoffmann, Stas)\n- Fixed missing brackets leading to build warning and error in the log.\n  Win32 code. (Andrey)\n- Fixed leaks with multiple connects on one mysqli object. (Andrey)\n- Fixed endianness detection on MacOS when building universal binary.\n  (Uwe Schindler, Christian Speich, Tony)\n- Fixed possible triggering of buffer overflows inside glibc\n  implementations of the fnmatch(), setlocale() and glob() functions.\n  Reported by Laurent Gaffie. (Ilia)\n- Fixed imagerectangle regression with 1x1 rectangle (libgd #106). (Pierre)\n- Fixed htmlentities/htmlspecialchars not to accept partial multibyte\n  sequences. (Stas)\n\n- Fixed bug #43196 (array_intersect_assoc() crashes with non-array input).\n  (Jani)\n- Fixed bug #43139 (PDO ignores ATTR_DEFAULT_FETCH_MODE in some cases with\n  fetchAll()). (Ilia)\n- Fixed bug #43137 (rmdir() and rename() do not clear statcache). (Jani)\n- Fixed bug #43130 (Bound parameters cannot have - in their name). (Ilia)\n- Fixed bug #43099 (XMLWriter::endElement() does not check # of params).\n  (Ilia)\n- Fixed bug #43020 (Warning message is missing with shuffle() and more\n  than one argument). (Scott)\n- Fixed bug #42976 (Crash when constructor for newInstance() or\n  newInstanceArgs() fails) (Ilia)\n- Fixed bug #42943 (ext/mssql: Move *timeout initialization from RINIT\n  to connect time). (Ilia)\n- Fixed bug #42917 (PDO::FETCH_KEY_PAIR doesn't work with setFetchMode).\n  (Ilia)\n- Fixed bug #42890 (Constant \"LIST\" defined by mysqlclient and c-client).\n  (Andrey)\n- Fixed bug #42869 (automatic session id insertion adds sessions id to\n  non-local forms). (Ilia)\n- Fixed bug #42818 ($foo = clone(array()); leaks memory). (Dmitry)\n- Fixed bug #42817 (clone() on a non-object does not result in a fatal\n  error). (Ilia)\n- Fixed bug #42785 (json_encode() formats doubles according to locale rather\n  then following standard syntax). (Ilia)\n- Fixed bug #42783 (pg_insert() does not accept an empty list for\n  insertion). (Ilia)\n- Fixed bug #42773 (WSDL error causes HTTP 500 Response). (Dmitry)\n- Fixed bug #42772 (Storing $this in a static var fails while handling a cast\n  to string). (Dmitry)\n- Fixed bug #42767 (highlight_string() truncates trailing comment). (Ilia)\n- Fixed bug #42739 (mkdir() doesn't like a trailing slash when safe_mode is\n  enabled). (Ilia)\n- Fixed bug #42703 (Exception raised in an iterator::current() causes segfault\n  in FilterIterator) (Marcus)\n- Fixed bug #42699 (PHP_SELF duplicates path). (Dmitry)\n- Fixed bug #42654 (RecursiveIteratorIterator modifies only part of leaves)\n  (Marcus)\n- Fixed bug #42643 (CLI segfaults if using ATTR_PERSISTENT). (Ilia)\n- Fixed bug #42637 (SoapFault : Only http and https are allowed). (Bill Moran)\n- Fixed bug #42629 (Dynamically loaded PHP extensions need symbols exported\n  on MacOSX). (jdolecek at NetBSD dot org)\n- Fixed bug #42627 (bz2 extension fails to build with -fno-common).\n  (dolecek at netbsd dot org)\n- Fixed Bug #42596 (session.save_path MODE option does not work). (Ilia)\n- Fixed bug #42590 (Make the engine recognize \\v and \\f escape sequences).\n  (Ilia)\n- Fixed bug #42587 (behavior change regarding symlinked .php files). (Dmitry)\n- Fixed bug #42579 (apache_reset_timeout() does not exist). (Jani)\n- Fixed bug #42549 (ext/mysql failed to compile with libmysql 3.23). (Scott)\n- Fixed bug #42523 (PHP_SELF duplicates path). (Dmitry)\n- Fixed bug #42512 (ip2long('255.255.255.255') should return 4294967295 on\n  64-bit PHP). (Derick)\n- Fixed bug #42506 (php_pgsql_convert() timezone parse bug) (nonunnet at\n  gmail dot com, Ilia)\n- Fixed bug #42496 (OCI8 cursor is not closed when using 2 clobs in a select\n  query). (Oracle Corp.)\n- Fixed bug #42462 (Segmentation when trying to set an attribute in a\n  DOMElement). (Rob)\n- Fixed bug #42453 (CGI SAPI does not shut down cleanly with -i/-m/-v cmdline\n  options). (Dmitry)\n- Fixed bug #42452 (PDO classes do not expose Reflection API information).\n  (Hannes)\n- Fixed bug #42468 (Write lock on file_get_contents fails when using a\n  compression stream). (Ilia)\n- Fixed bug #42488 (SoapServer reports an encoding error and the error itself\n  breaks). (Dmitry)\n- Fixed bug #42378 (mysqli_stmt_bind_result memory exhaustion). (Andrey)\n- Fixed bug #42359 (xsd:list type not parsed). (Dmitry)\n- Fixed bug #42326 (SoapServer crash). (Dmitry)\n- Fixed bug #42214 (SoapServer sends clients internal PHP errors). (Dmitry)\n- Fixed bug #42189 (xmlrpc_set_type() crashes php on invalid datetime\n  values). (Ilia)\n- Fixed bug #42139 (XMLReader option constants are broken using XML()). (Rob)\n- Fixed bug #42086 (SoapServer return Procedure '' not present for WSIBasic\n  compliant wsdl). (Dmitry)\n- Fixed bug #41822 (Relative includes broken when getcwd() fails). (Ab5602,\n  Jani)\n- Fixed bug #41561 (Values set with php_admin_* in httpd.conf can be overwritten\n  with ini_set()). (Stas, Jani)\n- Fixed bug #39651 (proc_open() append mode doesn't work on windows). (Nuno)\n\n30 Aug 2007, PHP 5.2.4\n- Removed --enable-versioning configure option. (Jani)\n\n- Upgraded PCRE to version 7.2 (Nuno)\n- Updated timezone database to version 2007.6. (Derick)\n\n- Improved openssl_x509_parse() to return extensions in readable form. (Dmitry)\n\n- Enabled changing the size of statement cache for non-persistent OCI8\n  connections. (Chris Jones, Tony)\n\n- Changed \"display_errors\" php.ini option to accept \"stderr\" as value which\n  makes the error messages to be outputted to STDERR instead of STDOUT with\n  CGI and CLI SAPIs (FR #22839). (Jani)\n- Changed error handler to send HTTP 500 instead of blank page on PHP errors.\n  (Dmitry, Andrei Nigmatulin)\n- Changed mail() function to be always available. (Johannes)\n\n- Added check for unknown options passed to configure. (Jani)\n- Added persistent connection status checker to pdo_pgsql.\n  (Elvis Pranskevichus, Ilia)\n- Added support for ATTR_TIMEOUT inside pdo_pgsql driver. (Ilia)\n- Added php_ini_loaded_file() function which returns the path to the actual\n  php.ini in use. (Jani)\n- Added GD version constants GD_MAJOR_VERSION, GD_MINOR_VERSION,\n  GD_RELEASE_VERSION, GD_EXTRA_VERSION and GD_VERSION_STRING. (Pierre)\n- Added missing open_basedir checks to CGI.\n  (anight at eyelinkmedia dot com, Tony)\n- Added missing format validator to unpack() function. (Ilia)\n- Added missing error check inside bcpowmod(). (Ilia)\n- Added CURLOPT_PRIVATE & CURLINFO_PRIVATE constants.\n  (Andrey A. Belashkov, Tony)\n- Added missing MSG_EOR and MSG_EOF constants to sockets extension. (Jani)\n- Added PCRE_VERSION constant. (Tony)\n- Added ReflectionExtension::info() function to print the phpinfo()\n  block for an extension. (Johannes)\n\n- Implemented FR #41884 (ReflectionClass::getDefaultProperties() does not\n  handle static attributes). (Tony)\n\n- Fixed \"Floating point exception\" inside wordwrap().\n  (Mattias Bengtsson, Ilia)\n- Fixed several integer overflows in ImageCreate(), ImageCreateTrueColor(),\n  ImageCopyResampled() and ImageFilledPolygon() reported by Mattias Bengtsson.\n  (Tony)\n- Fixed size calculation in chunk_split(). (Stas)\n- Fixed integer overflow in str[c]spn(). (Stas)\n- Fixed money_format() not to accept multiple %i or %n tokens.\n  (Stas, Ilia)\n- Fixed zend_alter_ini_entry() memory_limit interruption\n  vulnerability. (Ilia)\n- Fixed INFILE LOCAL option handling with MySQL extensions not to be\n  allowed when open_basedir or safe_mode is active. (Stas)\n- Fixed session.save_path and error_log values to be checked against\n  open_basedir and safe_mode (CVE-2007-3378) (Stas, Maksymilian Arciemowicz)\n- Fixed possible invalid read in glob() win32 implementation (CVE-2007-3806).\n  (Tony)\n- Improved fix for MOPB-03-2007. (Ilia)\n- Corrected fix for CVE-2007-2872. (Ilia)\n\n- Fixed possible crash in imagepsloadfont(), work around a bug in the pslib on\n  Windows. (Pierre)\n- Fixed oci8 and PDO_OCI extensions to allow configuring with Oracle 11g\n  client libraries. (Chris Jones)\n- Fixed EOF handling in case of reading from file opened in write only mode.\n  (Dmitry)\n- Fixed var_export() to use the new H modifier so that it can generate\n  parseable PHP code for floats, independent of the locale. (Derick)\n- Fixed regression introduced by the fix for the libgd bug #74. (Pierre)\n- Fixed SimpleXML's behavior when used with empty(). (Sara)\n- Fixed crash in OpenSSL extension because of non-string passphrase. (Dmitry)\n\n- Fixed PECL Bug #11345 (PDO_OCI crash after National language Support \"NLS\"\n  environment initialization error). (Chris Jones)\n- Fixed PECL bug #11216 (crash in ZipArchive::addEmptyDir when a directory\n  already exists). (Pierre)\n\n- Fixed bug #43926 (isInstance() isn't equivalent to instanceof operator). (Marcus)\n- Fixed bug #42368 (Incorrect error message displayed by pg_escape_string).\n  (Ilia)\n- Fixed bug #42365 (glob() crashes and/or accepts way too many flags).\n  (Jani)\n- Fixed Bug #42364 (Crash when using getRealPath with DirectoryIterator).\n  (Johannes)\n- Fixed bug #42292 ($PHP_CONFIG not set for phpized builds). (Jani)\n- Fixed bug #42261 (header wrong for date field).\n  (roberto at spadim dot com dot br, Ilia)\n- Fixed bug #42259 (SimpleXMLIterator loses ancestry). (Rob)\n- Fixed bug #42247 (ldap_parse_result() not defined under win32). (Jani)\n- Fixed bug #42243 (copy() does not output an error when the first arg is a\n  dir). (Ilia)\n- Fixed bug #42242 (sybase_connect() crashes). (Ilia)\n- Fixed bug #42237 (stream_copy_to_stream returns invalid values for mmaped\n  streams). (andrew dot minerd at sellingsource dot com, Ilia)\n- Fixed bug #42233 (Problems with \u00e6\u00f8\u00e5 in extract()). (Jani)\n- Fixed bug #42222 (possible buffer overflow in php_openssl_make_REQ). (Pierre)\n- Fixed bug #42211 (property_exists() fails to find protected properties\n  from a parent class). (Dmitry)\n- Fixed bug #42208 (substr_replace() crashes when the same array is passed\n  more than once). (crrodriguez at suse dot de, Ilia)\n- Fixed bug #42198 (SCRIPT_NAME and PHP_SELF truncated when inside a userdir\n  and using PATH_INFO). (Dmitry)\n- Fixed bug #42195 (C++ compiler required always). (Jani)\n- Fixed bug #42183 (classmap causes crash in non-wsdl mode). (Dmitry)\n- Fixed bug #42173 (oci8 INTERVAL and TIMESTAMP type fixes). (Chris)\n- Fixed bug #42151 (__destruct functions not called after catching a SoapFault\n  exception). (Dmitry)\n- Fixed bug #42142 (substr_replace() returns FALSE when length > string length).\n  (Ilia)\n- Fixed bug #42135 (Second call of session_start() causes creation of SID).\n  (Ilia)\n- Fixed bug #42134 (oci_error() returns false after oci_new_collection() fails).\n  (Tony)\n- Fixed bug #42119 (array_push($arr,&$obj) doesn't work with\n  zend.ze1_compatibility_mode On). (Dmitry)\n- Fixed bug #42117 (bzip2.compress loses data in internal buffer).\n  (Philip, Ilia)\n- Fixed bug #42112 (deleting a node produces memory corruption). (Rob)\n- Fixed bug #42107 (sscanf broken when using %2$s format parameters). (Jani)\n- Fixed bug #42090 (json_decode causes segmentation fault). (Hannes)\n- Fixed bug #42082 (NodeList length zero should be empty). (Hannes)\n- Fixed bug #42072 (No warning message for clearstatcache() with arguments).\n  (Ilia)\n- Fixed bug #42071 (ini scanner allows using NULL as option name). (Jani)\n- Fixed bug #42027 (is_file() / is_dir() matches file/dirnames with wildcard char\n  or trailing slash in Windows). (Dmitry)\n- Fixed bug #42019 (configure option --with-adabas=DIR does not work). (Jani)\n- Fixed bug #42015 (ldap_rename(): server error \"DSA is unwilling to perform\").\n  (bob at mroczka dot com, Jani)\n- Fixed bug #42009 (is_a() and is_subclass_of() should NOT call autoload, in the\n  same way as \"instanceof\" operator). (Dmitry)\n- Fixed bug #41989 (move_uploaded_file() & relative path in ZTS mode). (Tony)\n- Fixed bug #41984 (Hangs on large SoapClient requests). (Dmitry)\n- Fixed bug #41983 (Error Fetching http headers terminated by '\\n'). (Dmitry)\n- Fixed bug #41973 (--with-ldap=shared fails with LDFLAGS=\"-Wl,--as-needed\"). (Nuno)\n- Fixed bug #41971 (PDOStatement::fetch and PDOStatement::setFetchMode causes\n  unexpected behavior). (Ilia)\n- Fixed bug #41964 (strtotime returns a timestamp for non-time string of\n  pattern '(A|a) .+'). (Derick)\n- Fixed bug #41961 (Ensure search for hidden private methods does not stray from\n  class hierarchy). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #41947 (SimpleXML incorrectly registers empty strings asnamespaces).\n  (Rob)\n- Fixed bug #41929 (Foreach on object does not iterate over all visible properties).\n  (Dmitry)\n- Fixed bug #41919 (crash in string to array conversion).\n  (judas dot iscariote at gmail dot com, Ilia)\n- Fixed bug #41909 (var_export() is locale sensitive when exporting float\n  values). (Derick)\n- Fixed bug #41908 (CFLAGS=\"-Os\" ./configure --enable-debug fails).\n  (christian at hoffie dot info, Tony)\n- Fixed bug #41904 (proc_open(): empty env array should cause empty environment\n  to be passed to process). (Jani)\n- Fixed bug #41867 (SimpleXML: getName is broken). (Rob)\n- Fixed bug #41865 (fputcsv(): 2nd parameter is not optional). (Jani)\n- Fixed bug #41861 (SimpleXML: getNamespaces() returns the namespaces of a node's\n  siblings). (Rob)\n- Fixed bug #41845 (pgsql extension does not compile with PostgreSQL <7.4). (Ilia)\n- Fixed bug #41844 (Format returns incorrect number of digits for negative years\n  -0001 to -0999). (Derick)\n- Fixed bug #41842 (Cannot create years < 0100 & negative years with date_create\n  or new DateTime). (Derick)\n- Fixed bug #41833 (addChild() on a non-existent node, no node created,\n  getName() segfaults). (Rob)\n- Fixed bug #41831 (pdo_sqlite prepared statements convert resources to\n  strings). (Ilia)\n- Fixed bug #41815 (Concurrent read/write fails when EOF is reached). (Sascha)\n- Fixed bug #41813 (segmentation fault when using string offset as an object).\n  (judas dot iscariote at gmail dot com, Tony)\n- Fixed bug #41795 (checkdnsrr does not support DNS_TXT type).\n  (lucas at facebook dot com, Tony)\n- Fixed bug #41773 (php_strip_whitespace() sends headers with errors\n  suppressed). (Tony)\n- Fixed bug #41770 (SSL: fatal protocol error due to buffer issues). (Ilia)\n- Fixed bug #41765 (Recode crashes/does not work on amd64).\n  (nexus at smoula dot net, Stas)\n- Fixed bug #41724 (libxml_get_last_error() - errors service request scope).\n  (thekid at php dot net, Ilia)\n- Fixed bug #41717 (imagepolygon does not respect thickness). (Pierre)\n- Fixed bug #41713 (Persistent memory consumption on win32 since 5.2). (Dmitry)\n- Fixed bug #41711 (NULL temporary lobs not supported in OCI8).\n  (Chris Jones, Tony)\n- Fixed bug #41709 (strtotime() does not handle 00.00.0000). (Derick)\n- Fixed bug #41698 (float parameters truncated to integer in prepared\n  statements). (Ilia)\n- Fixed bug #41692 (ArrayObject shows weird behavior in respect to\n  inheritance). (Tony)\n- Fixed bug #41691 (ArrayObject::exchangeArray hangs Apache). (Tony)\n- Fixed bug #41686 (Omitting length param in array_slice not possible). (Ilia)\n- Fixed bug #41685 (array_push() fails to warn when next index is\n  already occupied). (Ilia)\n- Fixed bug #41655 (open_basedir bypass via glob()). (Ilia)\n- Fixed bug #41640 (get_class_vars produces error on class constants).\n  (Johannes)\n- Fixed bug #41635 (SoapServer and zlib.output_compression with FastCGI\n  result in major slowdown). (Dmitry)\n- Fixed bug #41633 (Crash instantiating classes with self-referencing\n  constants). (Dmitry)\n- Fixed bug #41630 (segfault when an invalid color index is present in the\n  image data). (Reported by Elliot <wccoder@gmail dot com>) (Pierre)\n- Fixed bug #41628 (PHP settings leak between Virtual Hosts in Apache 1.3).\n  (Scott, manuel at mausz dot at)\n- Fixed bug #41608 (segfault on a weird code with objects and switch()).\n  (Tony)\n- Fixed bug #41600 (url rewriter tags doesn't work with namespaced tags).\n  (Ilia)\n- Fixed bug #41596 (Fixed a crash inside pdo_pgsql on some non-well-formed\n  SQL queries). (Ilia)\n- Fixed bug #41594 (OCI8 statement cache is flushed too frequently). (Tony)\n- Fixed bug #41582 (SimpleXML crashes when accessing newly created element).\n  (Tony)\n- Fixed bug #41576 (configure failure when using --without-apxs or some other\n  SAPIs disabling options). (Jani)\n- Fixed bug #41567 (json_encode() double conversion is inconsistent with PHP).\n  (Lucas, Ilia)\n- Fixed bug #41566 (SOAP Server not properly generating href attributes).\n  (Dmitry)\n- Fixed bug #41555 (configure failure: regression caused by fix for #41265).\n  (Jani)\n- Fixed bug #41527 (WDDX deserialize numeric string array key).\n  (Matt, Ilia)\n- Fixed bug #41523 (strtotime('0000-00-00 00:00:00') is parsed as 1999-11-30).\n  (Derick)\n- Fixed bug #41518 (file_exists() warns of open_basedir restriction on\n  non-existent file). (Tony)\n- Fixed bug #41445 (parse_ini_file() has a problem with certain types of\n  integer as sections). (Tony)\n- Fixed bug #41433 (DBA: configure fails to include correct db.h for db4).\n  (Jani)\n- Fixed bug #41372 (Internal pointer of source array resets during array\n  copying). (Dmitry)\n- Fixed bug #41350 (my_thread_global_end() error during request shutdown on\n  Windows). (Scott, Andrey)\n- Fixed bug #41278 (get_loaded_extensions() should list Zend extensions).\n  (Johannes)\n- Fixed bug #41127 (Memory leak in ldap_{first|next}_attribute functions).\n  (Jani)\n- Fixed bug #40757 (get_object_vars get nothing in child class). (Dmitry)\n- Fixed bug #40705 (Iterating within function moves original array pointer).\n  (Dmitry)\n- Fixed bug #40509 (key() function changed behaviour if global array is used\n  within function). (Dmitry)\n- Fixed bug #40419 (Trailing slash in CGI request does not work). (Dmitry)\n- Fixed bug #39330 (apache2handler does not call shutdown actions before\n  apache child die). (isk at ecommerce dot com, Gopal, Tony)\n- Fixed bug #39291 (ldap_sasl_bind() misses the sasl_authc_id parameter).\n  (diafour at gmail dot com, Jani)\n- Fixed bug #37715 (array pointers resetting on copy). (Dmitry)\n- Fixed bug #37273 (Symlinks and mod_files session handler allow open_basedir\n  bypass). (Ilia)\n- Fixed bug #36492 (Userfilters can leak buckets). (Sara)\n- Fixed bugs #36796, #36918, #41371 (stream_set_blocking() does not work).\n  (Jani)\n- Fixed bug #35981 (pdo-pgsql should not use pkg-config when not present).\n  (Jani)\n- Fixed bug #31892 (PHP_SELF incorrect without cgi.fix_pathinfo, but turning on\n  screws up PATH_INFO). (Dmitry)\n- Fixed bug #21197 (socket_read() outputs error with PHP_NORMAL_READ).\n  (Nuno, Jani)\n\n31 May 2007, PHP 5.2.3\n- Changed CGI install target to php-cgi and 'make install' to install CLI\n  when CGI is selected. (Jani)\n- Changed JSON maximum nesting depth from 20 to 128. (Rasmus)\n\n- Improved compilation of heredocs and interpolated strings. (Matt, Dmitry)\n- Optimized out a couple of per-request syscalls. (Rasmus)\n- Optimized digest generation in md5() and sha1() functions. (Ilia)\n- Upgraded bundled SQLite 3 to version 3.3.17. (Ilia)\n\n- Added \"max_input_nesting_level\" php.ini option to limit nesting level of\n  input variables. Fix for MOPB-03-2007. (Stas)\n- Added a 4th parameter flag to htmlspecialchars() and htmlentities() that\n  makes the function not encode existing html entities. (Ilia)\n- Added PDO::FETCH_KEY_PAIR mode that will fetch a 2 column result set into\n  an associated array. (Ilia)\n- Added CURLOPT_TIMEOUT_MS and CURLOPT_CONNECTTIMEOUT_MS cURL constants. (Sara)\n- Added --ini switch to CLI that prints out configuration file names. (Marcus)\n- Added mysql_set_charset() to allow runtime altering of connection encoding.\n  (Scott)\n\n- Implemented FR #41416 (getColumnMeta() should also return table name). (Tony)\n\n- Fixed an integer overflow inside chunk_split(). Identified by Gerhard Wagner.\n  (Ilia)\n- Fixed SOAP extension's handler() to work even when\n  \"always_populate_raw_post_data\" is off. (Ilia)\n- Fixed possible infinite loop in imagecreatefrompng. (libgd #86)\n  (by Xavier Roche, CVE-2007-2756). (Pierre)\n- Fixed ext/filter Email Validation Vulnerability (MOPB-45 by Stefan Esser).\n  (Ilia)\n- Fixed altering $this via argument named \"this\". (Dmitry)\n- Fixed PHP CLI usage of php.ini from the binary location. (Hannes)\n- Fixed segfault in strripos(). (Tony, Joxean Koret)\n- Fixed bug #41693 (scandir() allows empty directory names). (Ilia)\n- Fixed bug #41673 (json_encode breaks large numbers in arrays). (Ilia)\n- Fixed bug #41525 (ReflectionParameter::getPosition() not available). (Marcus)\n- Fixed bug #41511 (Compile failure under IRIX 6.5.30 building md5.c). (Jani)\n- Fixed bug #41504 (json_decode() incorrectly decodes JSON arrays with empty\n  string keys). (Ilia)\n- Fixed bug #41492 (open_basedir/safe_mode bypass inside realpath()). (Ilia)\n- Fixed bug #41477 (no arginfo about SoapClient::__soapCall()). (Ilia)\n- Fixed bug #41455 (ext/dba/config.m4 pollutes global $LIBS and $LDFLAGS).\n  (mmarek at suse dot cz, Tony)\n- Fixed bug #41442 (imagegd2() under output control). (Tony)\n- Fixed bug #41430 (Fatal error with negative values of maxlen parameter of\n  file_get_contents()). (Tony)\n- Fixed bug #41423 (PHP assumes wrongly that certain ciphers are enabled in\n  OpenSSL). (Pierre)\n- Fixed bug #41421 (Uncaught exception from a stream wrapper segfaults).\n  (Tony, Dmitry)\n- Fixed bug #41403 (json_decode cannot decode floats if localeconv\n  decimal_point is not '.'). (Tony)\n- Fixed bug #41401 (wrong unary operator precedence). (Stas)\n- Fixed bug #41394 (dbase_create creates file with corrupted header). (Tony)\n- Fixed bug #41390 (Clarify error message with invalid protocol scheme).\n  (Scott)\n- Fixed bug #41378 (fastcgi protocol lacks support for Reason-Phrase in\n  \"Status:\" header). (anight at eyelinkmedia dot com, Dmitry)\n- Fixed bug #41374 (whole text concats values of wrong nodes). (Rob)\n- Fixed bug #41358 (configure cannot determine SSL lib with libcurl >= 7.16.2).\n  (Mike)\n- Fixed bug #41353 (crash in openssl_pkcs12_read() on invalid input). (Ilia)\n- Fixed bug #41351 (Invalid opcode with foreach ($a[] as $b)). (Dmitry, Tony)\n- Fixed bug #41347 (checkdnsrr() segfaults on empty hostname). (Scott)\n- Fixed bug #41337 (WSDL parsing doesn't ignore non soap bindings). (Dmitry)\n- Fixed bug #41326 (Writing empty tags with Xmlwriter::WriteElement[ns])\n  (Pierre)\n- Fixed bug #41321 (downgrade read errors in getimagesize() to E_NOTICE).\n  (Ilia)\n- Fixed bug #41304 (compress.zlib temp files left). (Dmitry)\n- Fixed bug #41293 (Fixed creation of HTTP_RAW_POST_DATA when there is no\n  default post handler). (Ilia)\n- Fixed bug #41291 (FastCGI does not set SO_REUSEADDR).\n  (fmajid at kefta dot com, Dmitry)\n- Fixed gd build when used with freetype 1.x (Pierre, Tony)\n- Fixed bug #41287 (Namespace functions don't allow xmlns definition to be\n  optional). (Rob)\n- Fixed bug #41285 (Improved fix for CVE-2007-1887 to work with non-bundled\n  sqlite2 lib). (Ilia)\n- Fixed bug #41283 (Bug with deserializing array key that are doubles or\n  floats in wddx). (Ilia)\n- Fixed bug #41257 (lookupNamespaceURI does not work as expected). (Rob)\n- Fixed bug #41236 (Regression in timeout handling of non-blocking SSL\n  connections during reads and writes). (Ilia)\n- Fixed bug #41134 (zend_ts_hash_clean not thread-safe).\n  (marco dot cova at gmail dot com, Tony)\n- Fixed bug #41097 (ext/soap returning associative array as indexed without\n  using WSDL). (Dmitry)\n- Fixed bug #41004 (minOccurs=\"0\" and null class member variable). (Dmitry)\n- Fixed bug #39542 (Behavior of require/include different to < 5.2.0).\n  (Dmitry)\n\n03 May 2007, PHP 5.2.2\n- Improved bundled GD\n  . Sync to 2.0.35\n  . Added imagegrabwindow and imagegrabscreen, capture a screen or a\n    window using its handle (Pierre)\n  . colors allocated henceforth from the resulting image overwrite the palette\n    colors (Rob Leslie)\n  . Improved thread safety of the gif support (Roman Nemecek, Nuno, Pierre)\n  . Use the dimension of the GIF frame to create the destination image (Pierre)\n  . Load only once the local color map from a GIF data (Pierre)\n  . Improved thread safety of the freetype cache (Scott MacVicar, Nuno, Pierre)\n  . imagearc huge CPU usage with large angles, libgd bug #74 (Pierre)\n- Improved FastCGI SAPI to support external pipe and socket servers on win32.\n  (Dmitry)\n- Improved Zend Memory Manager\n  . guarantee of reasonable time for worst cases of best-fit free block\n    searching algorithm. (Dmitry)\n  . better cache usage and less fragmentation on erealloc() (Tony, Dmitry)\n- Improved SPL (Marcus)\n  . Added SplFileInfo::getBasename(), DirectoryIterator::getBasename().\n  . Added SplFileInfo::getLinkTarget(), SplFileInfo::getRealPath().\n  . Made RecursiveFilterIterator::accept() abstract as stated in documentation.\n- Improved SOAP\n  . Added ability to encode arrays with \"SOAP-ENC:Array\" type instead of WSDL\n    type. To activate the ability use \"feature\"=>SOAP_USE_XSI_ARRAY_TYPE\n    option in SoapClient/SoapServer constructors. (Rob, Dmitry)\n\n- Added GMP_VERSION constant. (Tony)\n- Added --ri switch to CLI which allows to check extension information. (Marcus)\n- Added tidyNode::getParent() method (John, Nuno)\n- Added openbasedir and safemode checks in zip:// stream wrapper and\n  ZipArchive::open (Pierre)\n- Added php_pdo_sqlite_external.dll, a version of the PDO SQLite driver that\n  links against an external sqlite3.dll.  This provides Windows users to upgrade\n  their sqlite3 version outside of the PHP release cycle.  (Wez, Edin)\n- Added linenumbers to array returned by token_get_all(). (Johannes)\n\n- Upgraded SQLite 3 to version 3.3.16 (Ilia)\n- Upgraded libraries bundled in the Windows distribution. (Edin)\n  . c-client (imap) to version 2006e\n  . libpq (PostgreSQL) to version 8.2.3\n  . libmysql (MySQL) to version 5.0.37\n  . openssl to version 0.9.8e\n- Upgraded PCRE to version 7.0 (Nuno)\n\n- Updated timezone database to version 2007.5. (Derick)\n\n- Fixed commandline handling for CLI and CGI. (Marcus, Johannes)\n- Fixed iterator_apply() with a callback using __call(). (Johannes)\n- Fixed possible multi bytes issues in openssl csr parser (Pierre)\n- Fixed shmop_open() with IPC_CREAT|IPC_EXCL flags on Windows.\n  (Vladimir Kamaev, Tony).\n- Fixed possible leak in ZipArchive::extractTo when safemode checks fails (Ilia)\n- Fixed possible relative path issues in zip_open and TS mode (old API) (Pierre)\n- Fixed zend_llist_remove_tail (Michael Wallner, Dmitry)\n- Fixed a thread safety issue in gd gif read code (Nuno, Roman Nemecek)\n- Fixed CVE-2007-1001, GD wbmp used with invalid image size (Pierre)\n- Fixed unallocated memory access/double free in in array_user_key_compare()\n  (MOPB-24 by Stefan Esser) (Stas)\n- Fixed wrong length calculation in unserialize S type\n  (MOPB-29 by Stefan Esser) (Stas)\n\n- Fixed bug #41215 (setAttribute return code reversed). (Ilia)\n- Fixed bug #41192 (Per Directory Values only work for one key). (Dmitry)\n- Fixed bug #41175 (addAttribute() fails to add an attribute with an empty\n  value). (Ilia)\n- Fixed bug #41159 (mysql_pconnect() hash does not account for connect\n  flags). (Ilia)\n- Fixed bug #41121 (range() overflow handling for large numbers on 32bit\n  machines). (Ilia)\n- Fixed bug #41118 (PHP does not handle overflow of octal integers). (Tony)\n- Fixed bug #41109 (recursiveiterator.inc says \"implements\" Iterator instead of\n  \"extends\"). (Marcus)\n- Fixed bug #40130 (TTF usage doesn't work properly under Netware). (Scott,\n  gk at gknw dot de)\n- Fixed bug #41093 (magic_quotes_gpc ignores first arrays keys). (Arpad, Ilia)\n- Fixed bug #41075 (memleak when creating default object caused exception).\n  (Dmitry)\n- Fixed bug #41067 (json_encode() problem with UTF-16 input). (jp at df5ea\n  dot net. Ilia)\n- Fixed bug #41063 (chdir doesn't like root paths). (Dmitry)\n- Fixed bug #41061 (\"visibility error\" in ReflectionFunction::export()).\n  (Johannes)\n- Fixed bug #41043 (pdo_oci crash when freeing error text with persistent\n  connection). (Tony)\n- Fixed bug #41037 (unregister_tick_function() inside the tick function crash PHP).\n  (Tony)\n- Fixed bug #41034 (json_encode() ignores null byte started keys in arrays).\n  (Ilia)\n- Fixed bug #41026 (segfault when calling \"self::method()\" in shutdown functions).\n  (Tony)\n- Fixed bug #40999 (mcrypt_create_iv() not using random seed). (Ilia)\n- Fixed bug #40998 (long session array keys are truncated). (Tony)\n- Implement feature request #40947, allow a single filter as argument\n  for filter_var_array (Pierre)\n- Fixed bug #40935 (pdo_mysql does not raise an exception on empty\n  fetchAll()). (Ilia)\n- Fixed bug #40931 (open_basedir bypass via symlink and move_uploaded_file()).\n  (Tony)\n- Fixed bug #40921 (php_default_post_reader crashes when post_max_size is\n  exceeded). (trickie at gmail dot com, Ilia)\n- Fixed bug #40915 (addcslashes unexpected behavior with binary input). (Tony)\n- Fixed bug #40899 (memory leak when nesting list()). (Dmitry)\n- Fixed bug #40897 (error_log file not locked). (Ilia)\n- Fixed bug #40883 (mysql_query() is allocating memory incorrectly). (Tony)\n- Fixed bug #40872 (inconsistency in offsetSet, offsetExists treatment of\n  string enclosed integers). (Marcus)\n- Fixed bug #40861 (strtotime() doesn't handle double negative relative time\n  units correctly). (Derick, Ilia)\n- Fixed bug #40854 (imap_mail_compose() creates an invalid terminator for\n  multipart e-mails). (Ilia)\n- Fixed bug #40848 (sorting issue on 64-bit Solaris). (Wez)\n- Fixed bug #40836 (Segfault in ext/dom). (Rob)\n- Fixed bug #40833 (Crash when using unset() on an ArrayAccess object retrieved\n  via __get()). (Dmitry)\n- Fixed bug #40822 (pdo_mysql does not return rowCount() on select). (Ilia)\n- Fixed bug #40815 (using strings like \"class::func\" and static methods in\n  set_exception_handler() might result in crash). (Tony)\n- Fixed bug #40809 (Poor performance of \".=\"). (Dmitry)\n- Fixed bug #40805 (Failure executing function ibase_execute()). (Tony)\n- Fixed bug #40800 (cannot disable memory_limit with -1). (Dmitry, Tony)\n- Fixed bug #40794 (ReflectionObject::getValues() may crash when used with\n  dynamic properties). (Tony)\n- Fixed bug #40784 (Case sensitivity in constructor's fallback). (Tony)\n- Fixed bug #40770 (Apache child exits when PHP memory limit reached). (Dmitry)\n- Fixed bug #40764 (line thickness not respected for horizontal and vertical\n  lines). (Pierre)\n- Fixed bug #40758 (Test fcgi_is_fastcgi() is wrong on windows). (Dmitry)\n- Fixed bug #40754 (added substr() & substr_replace() overflow checks). (Ilia)\n- Fixed bug #40752 (parse_ini_file() segfaults when a scalar setting is\n  redeclared as an array). (Tony)\n- Fixed bug #40750 (openssl stream wrapper ignores default_stream_timeout).\n  (Tony)\n- Fixed bug #40727 (segfault in PDO when failed to bind parameters). (Tony)\n- Fixed bug #40709 (array_reduce() behaves strange with one item stored arrays).\n  (Ilia)\n- Fixed bug #40703 (Resolved a possible namespace conflict between libxmlrpc\n  and MySQL's NDB table handler). (Ilia)\n- Fixed bug #40961 (Incorrect results of DateTime equality check). (Mike)\n- Fixed bug #40678 (Cross compilation fails). (Tony)\n- Fixed bug #40621 (Crash when constructor called inappropriately). (Tony)\n- Fixed bug #40609 (Segfaults when using more than one SoapVar in a request).\n  (Rob, Dmitry)\n- Fixed bug #40606 (umask is not being restored when request is finished).\n  (Tony)\n- Fixed bug #40598 (libxml segfault). (Rob)\n- Fixed bug #40591 (list()=\"string\"; gives invalid opcode). (Dmitry)\n- Fixed bug #40578 (imagettftext() multithreading issue). (Tony, Pierre)\n- Fixed bug #40576 (double values are truncated to 6 decimal digits when\n  encoding). (Tony)\n- Fixed bug #40560 (DIR functions do not work on root UNC path). (Dmitry)\n- Fixed bug #40548 (SplFileInfo::getOwner/getGroup give a warning on broken\n  symlink). (Marcus)\n- Fixed bug #40546 (SplFileInfo::getPathInfo() throws an exception if directory\n  is in root dir). (Marcus)\n- Fixed bug #40545 (multithreading issue in zend_strtod()). (Tony)\n- Fixed bug #40503 (json_encode() value corruption on 32bit systems with\n  overflown values). (Ilia)\n- Fixed bug #40467 (Partial SOAP request sent when XSD sequence or choice\n  include minOccurs=0). (Dmitry)\n- Fixed bug #40465 (Ensure that all PHP elements are printed by var_dump).\n  (wharmby at uk dot ibm dot com, Ilia)\n- Fixed bug #40464 (session.save_path wont use default-value when safe_mode\n  or open_basedir is enabled). (Ilia)\n- Fixed bug #40455 (proc_open() uses wrong command line when safe_mode_exec_dir\n  is set). (Tony)\n- Fixed bug #40432 (strip_tags() fails with greater than in attribute). (Ilia)\n- Fixed bug #40431 (dynamic properties may cause crash in ReflectionProperty\n  methods). (Tony)\n- Fixed bug #40451 (addAttribute() may crash when used with non-existent child\n  node). (Tony)\n- Fixed bug #40442 (ArrayObject::offsetExists broke in 5.2.1, works in 5.2.0).\n  (olivier at elma dot fr, Marcus)\n- Fixed bug #40428 (imagepstext() doesn't accept optional parameter). (Pierre)\n- Fixed bug #40417 (Allow multiple instances of the same named PDO token in\n  prepared statement emulation code). (Ilia)\n- Fixed bug #40414 (possible endless fork() loop when running fastcgi).\n  (Dmitry)\n- Fixed bug #40410 (ext/posix does not compile on MacOS 10.3.9). (Tony)\n- Fixed bug #40392 (memory leaks in PHP milter SAPI).\n  (tuxracer69 at gmail dot com, Tony)\n- Fixed bug #40371 (pg_client_encoding() not working on Windows). (Edin)\n- Fixed bug #40352 (FCGI_WEB_SERVER_ADDRS function get lost). (Dmitry)\n- Fixed bug #40290 (strtotime() returns unexpected result with particular\n  timezone offset). (Derick)\n- Fixed bug #40286 (PHP fastcgi with PHP_FCGI_CHILDREN don't kill children when\n  parent is killed). (Dmitry)\n- Fixed bug #40261 (Extremely slow data handling due to memory fragmentation).\n  (Dmitry)\n- Fixed bug #40236 (php -a function allocation eats memory). (Dmitry)\n- Fixed bug #40109 (iptcembed fails on non-jfif jpegs). (Tony)\n- Fixed bug #39965 (Latitude and longitude are backwards in date_sun_info()).\n  (Derick)\n- Implement #39867 (openssl PKCS#12 support) (Marc Delling, Pierre)\n- Fixed bug #39836 (SplObjectStorage empty after unserialize). (Marcus)\n- Fixed bug #39416 (Milliseconds in date()). (Derick)\n- Fixed bug #39396 (stream_set_blocking crashes on Win32). (Ilia, maurice at\n  iceblog dot de)\n- Fixed bug #39351 (relative include fails on Solaris). (Dmitry, Tony)\n- Fixed bug #39322 (proc_terminate() destroys process resource). (Nuno)\n- Fixed bug #38406 (crash when assigning objects to SimpleXML attributes). (Tony)\n- Fixed bug #37799 (ftp_ssl_connect() falls back to non-ssl connection). (Nuno)\n- Fixed bug #36496 (SSL support in imap_open() not working on Windows). (Edin)\n- Fixed bug #36226 (Inconsistent handling when passing nillable arrays).\n  (Dmitry)\n- Fixed bug #35872 (Avoid crash caused by object store being referenced during\n  RSHUTDOWN). (Andy)\n- Fixed bug #34794 (proc_close() hangs when used with two processes).\n  (jdolecek at netbsd dot org, Nuno)\n- Fixed PECL bug #10194 (crash in Oracle client when memory limit reached in\n  the callback). (Tony)\n- Fixed substr_compare and substr_count information leak (MOPB-14) (Stas, Ilia)\n- Fixed crash on op-assign where argument is string offset (Brian, Stas)\n- Fixed bug #38710 (data leakage because of nonexisting boundary checking in\n  statements in mysqli) (Stas)\n- Fixed bug #37386 (autocreating element doesn't assign value to first node).\n  (Rob)\n- Fixed bug #37013 (server hangs when returning circular object references).\n  (Dmitry)\n- Fixed bug #33664 Console window appears when using exec()\n  (Richard Quadling, Stas)\n\n\n08 Feb 2007, PHP 5.2.1\n- Added read-timeout context option \"timeout\" for HTTP streams. (Hannes, Ilia).\n- Added CURLOPT_TCP_NODELAY constant to Curl extension. (Sara)\n- Added support for hex numbers of any size. (Matt)\n- Added function stream_socket_shutdown(). It is a wrapper for system\n  shutdown() function, that shut downs part of a full-duplex connection.\n  (Dmitry)\n- Added internal heap protection (Dmitry)\n  . memory-limit is always enabled (--enable-memory-limit removed)\n  . default value if memory-limit is set to 128M\n  . safe unlinking\n  . cookies\n  . canary protection (debug build only)\n  . random generation of cookies and canaries\n- Added forward support for 'b' prefix in front of string literals. (Andrei)\n- Added three new functions to ext/xmlwriter (Rob, Ilia)\n  . xmlwriter_start_dtd_entity()\n  . xmlwriter_end_dtd_entity()\n  . xmlwriter_write_dtd_entity()\n- Added a meta tag to phpinfo() output to prevent search engines from indexing\n  the page. (Ilia)\n- Added new function, sys_get_temp_dir(). (Hartmut)\n- Added missing object support to file_put_contents(). (Ilia)\n- Added support for md2, ripemd256 and ripemd320 algos to hash(). (Sara)\n- Added forward support for (binary) cast. (Derick)\n- Added optimization for imageline with horizontal and vertical lines (Pierre)\n\n- Removed dependency from SHELL32.DLL. (Dmitry)\n- Removed double \"wrong parameter count\" warnings in various functions.\n  (Hannes)\n- Moved extensions to PECL:\n  . ext/informix (Derick, Tony)\n\n- Changed double-to-string utilities to use BSD implementation. (Dmitry, Tony)\n- Updated bundled libcURL to version 7.16.0 in the Windows distro. (Edin)\n- Updated timezone database to version 2006.16. (Derick)\n- cgi.* and fastcgi.* directives are moved to INI subsystem. The new directive\n  cgi.check_shebang_line can be used to omitting check for \"#! /usr/bin/php\"\n  line. (Dmitry).\n- Improved proc_open(). Now on Windows it can run external commands not\n  through CMD.EXE. (Dmitry)\n- VCWD_REALPATH() is improved to use realpath cache without VIRTUAL_DIR.\n  (Dmitry)\n- ext/bcmath initialization code is moved from request startup to module\n  startup. (Dmitry)\n- Zend Memory Manager Improvements (Dmitry)\n  . use HeapAlloc() instead of VirtualAlloc()\n  . use \"win32\" storage manager (instead of \"malloc\") on Windows by default\n- Zip Extension Improvements (Pierre)\n  . Fixed leak in statName and stateIndex\n  . Fixed return setComment (Hannes)\n  . Added addEmptyDir method\n- Filter Extension Improvements (Ilia, Pierre)\n  . Fixed a bug when callback function returns a non-modified value.\n  . Added filter support for $_SERVER in cgi/apache2 sapis.\n  . Make sure PHP_SELF is filtered in Apache 1 sapi.\n  . Fixed bug #39358 (INSTALL_HEADERS contains incorrect reference to\n    php_filter.h).\n  . Added \"default\" option that allows a default value to be set for an\n    invalid or missing value.\n  . Invalid filters fails instead of returning unsafe value\n  . Fixed possible double encoding problem with sanitizing filters\n  . Make use of space-strict strip_tags() function\n  . Fixed whitespace trimming\n  . Added support for FastCGI environment variables. (Dmitry)\n- PDO_MySQL Extension Improvements (Ilia)\n  . Enabled buffered queries by default.\n  . Enabled prepared statement emulation by default.\n\n- Small optimization of the date() function. (Matt,Ilia)\n- Optimized the internal is_numeric_string() function. (Matt,Ilia)\n- Optimized array functions utilizing php_splice(). (Ilia)\n- Windows related optimizations (Dmitry, Stas)\n  . COM initialization/deinitialization are done only if necessary\n  . removed unnecessary checks for ISREG file and corresponding stat() calls\n  . opendir() is reimplementation using GetFistFile/GetNextFile those are\n    faster then _findfirst/_findnext\n  . implemented registry cache that prevent registry lookup on each request.\n    In case of modification of corresponding registry-tree PHP will reload it\n    automatic\n  . start timeout thread only if necessary\n  . stat() is reimplementation using GetFileAttributesEx(). The new\n    implementation is faster then implementation in MS VC CRT, but it doesn't\n    support Windows 95.\n- Streams optimization (Dmitry)\n  . removed unnecessary ftell() calls (one call for each included PHP file)\n  . disabled calls to read() after EOF\n\n- Fixed incorrect function names on FreeBSD where inet_pton() was named\n  __inet_pton() and inet_ntop() was named __inet_ntop(). (Hannes)\n- Fixed FastCGI impersonation for persistent connections on Windows. (Dmitry)\n- Fixed wrong signature initialization in imagepng (Takeshi Abe)\n- Fixed ftruncate() with negative size on FreeBSD. (Hannes)\n- Fixed segfault in RegexIterator when given invalid regex. (Hannes)\n- Fixed segfault in SplFileObject->openFile()->getPathname(). (Hannes)\n- Fixed segfault in ZTS mode when OCI8 statements containing sub-statements\n  are destroyed in wrong order. (Tony)\n- Fixed the validate email filter so that the letter \"v\" can also be used in\n  the user part of the email address. (Derick)\n- Fixed bug #40297 (compile failure in ZTS mode when collections support is\n  missing). (Tony)\n- Fixed bug #40285 (The PDO prepare parser goes into an infinite loop in\n  some instances). (Ilia)\n- Fixed bug #40274 (Sessions fail with numeric root keys). (Ilia)\n- Fixed bug #40259 (ob_start call many times - memory error). (Dmitry)\n- Fixed bug #40231 (file_exists incorrectly reports false). (Dmitry)\n- Fixed bug #40228 (ZipArchive::extractTo does create empty directories\n  recursively). (Pierre)\n- Fixed bug #40200 (The FastCgi version has different realpath results than\n  thread safe version). (Dmitry)\n- Fixed bug #40191 (use of array_unique() with objects triggers segfault).\n  (Tony)\n- Fixed bug #40189 (possible endless loop in zlib.inflate stream filter).\n  (Greg, Tony)\n- Fixed bug #40169 (CURLOPT_TCP_NODELAY only available in curl >= 7.11.2).\n  (Tony)\n- Fixed bug #40129 (iconv extension doesn't compile with CodeWarrior on\n  Netware). (gk at gknw dot de, Tony)\n- Fixed bug #40127 (apache2handler doesn't compile on Netware).\n  (gk at gknw dot de)\n- Fixed bug #40121 (PDO_DBLIB driver wont free statements). (Ilia)\n- Fixed bug #40098 (php_fopen_primary_script() not thread safe). (Ilia)\n- Fixed bug #40092 (chroot() doesn't clear realpath cache). (Dmitry)\n- Fixed bug #40091 (spl_autoload_register with 2 instances of the same class).\n  (Ilia)\n- Fixed bug #40083 (milter SAPI functions always return false/null). (Tony)\n- Fixed bug #40079 (php_get_current_user() not thread safe).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #40078 (ORA-01405 when fetching NULL values using\n  oci_bind_array_by_name()). (Tony)\n- Fixed bug #40076 (zend_alloc.c: Value of enumeration constant must be in\n  range of signed integer). (Dmitry)\n- Fixed bug #40073 (exif_read_data dies on certain images). (Tony, Marcus)\n- Fixed bug #40036 (empty() does not work correctly with ArrayObject when\n  using ARRAY_AS_PROPS). (Ilia)\n- Fixed bug #40012 (php_date.c doesn't compile on Netware).\n  (gk at gknw dot de, Derick)\n- Fixed bug #40009 (http_build_query(array()) returns NULL). (Ilia)\n- Fixed bug #40002 (Try/Catch performs poorly). (Dmitry)\n- Fixed bug #39993 (tr_TR.UTF-8 locale has problems with PHP). (Ilia)\n- Fixed bug #39990 (Cannot \"foreach\" over overloaded properties). (Dmitry)\n- Fixed bug #39988 (type argument of oci_define_by_name() is ignored).\n  (Chris Jones, Tony)\n- Fixed bug #39984 (redirect response code in header() could be ignored\n  in CGI sapi). (Ilia)\n- Fixed bug #39979 (PGSQL_CONNECT_FORCE_NEW will causes next connect to\n  establish a new connection). (Ilia)\n- Fixed bug #39971 (pg_insert/pg_update do not allow now() to be used\n  for timestamp fields). (Ilia)\n- Fixed bug #39969 (ini setting short_open_tag has no effect when using\n  --enable-maintainer-zts). (Dmitry)\n- Fixed bug #39952 (zip ignoring --with-libdir on zlib checks)\n  (judas dot iscariote at gmail dot com)\n- Fixed bug #39944 (References broken). (Dmitry)\n- Fixed bug #39935 (Extensions tidy,mcrypt,mhash,pdo_sqlite ignores\n  --with-libdir). (judas dot iscariote at gmail dot com, Derick)\n- Fixed bug #39903 (Notice message when executing __halt_compiler() more than\n  once). (Tony)\n- Fixed bug #39898 (FILTER_VALIDATE_URL validates \\r\\n\\t etc). (Ilia)\n- Fixed bug #39890 (using autoconf 2.6x and --with-layout=GNU breaks PEAR\n  install path). (Tony)\n- Fixed bug #39884 (ReflectionParameter::getClass() throws exception for\n  type hint self). (thekid at php dot net)\n- Fixed bug #39878 (CURL doesn't compile on Sun Studio Pro). (Ilia)\n- Fixed bug #39873 (number_format() breaks with locale & decimal points).\n  (Ilia)\n- Fixed bug #39869 (safe_read does not initialize errno).\n  (michiel at boland dot org, Dmitry)\n- Fixed bug #39850 (SplFileObject throws contradictory/wrong error messages\n  when trying to open \"php://wrong\"). (Tony)\n- Fixed bug #39846 (Invalid IPv4 treated as valid). (Ilia)\n- Fixed bug #39845 (Persistent connections generate a warning in pdo_pgsql).\n  (Ilia)\n- Fixed bug #39832 (SOAP Server: parameter not matching the WSDL specified\n  type are set to 0). (Dmitry)\n- Fixed bug #39825 (foreach produces memory error). (Dmitry)\n- Fixed bug #39816 (apxs2filter ignores httpd.conf & .htaccess php config\n  settings). (Ilia)\n- Fixed bug #39815 (SOAP double encoding is not locale-independent). (Dmitry)\n- Fixed bug #39797 (virtual() does not reset changed INI settings). (Ilia)\n- Fixed bug #39795 (build fails on AIX because crypt_r() uses different\n  data struct). (Tony)\n- Fixed bug #39791 (Crash in strtotime() on overly long relative date\n  multipliers). (Ilia)\n- Fixed bug #39787 (PHP doesn't work with Apache 2.3).\n  (mv at binarysec dot com).\n- Fixed bug #39782 (setTime() on a DateTime constructed with a Weekday\n  yields incorrect results). (Ilia)\n- Fixed bug #39780 (PNG image with CRC/data error raises fatal error) (Pierre)\n- Fixed bug #39779 (Enable AUTH PLAIN mechanism in underlying libc-client).\n  (michael dot heimpold at s2000 dot tu-chemnitz dot de, Ilia)\n- Fixed bug #39775 (\"Indirect modification ...\" message is not shown).\n  (Dmitry)\n- Fixed bug #39763 (magic quotes are applied twice by ext/filter in\n  parse_str()). (Ilia)\n- Fixed bug #39760 (cloning fails on nested SimpleXML-Object). (Rob)\n- Fixed bug #39759 (Can't use stored procedures fetching multiple result\n  sets in pdo_mysql). (Ilia)\n- Fixed bug #39754 (Some POSIX extension functions not thread safe).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39751 (putenv crash on Windows). (KevinJohnHoffman at gmail.com)\n- Fixed bug #39732 (oci_bind_array_by_name doesn't work on Solaris 64bit).\n  (Tony)\n- Fixed bug #39724 (Broken build due to spl/filter usage of pcre extension).\n  (Tony, Ilia)\n- Fixed bug #39718 (possible crash if assert.callback is set in ini). (Ilia)\n- Fixed bug #39702 (php crashes in the allocator on linux-m68k). (Dmitry)\n- Fixed bug #39685 (iconv() - undefined function). (Hannes)\n- Fixed bug #39673 (file_get_contents causes bus error on certain offsets).\n  (Tony)\n- Fixed bug #39663 (Memory leak in pg_get_notify() and a possible memory\n  corruption on Windows in pgsql and pdo_pgsql extensions).\n  (Ilia, matteo at beccati dot com)\n- Fixed bug #39662 (Segfault when calling asXML() of a cloned\n  SimpleXMLElement). (Rob, Tony)\n- Fixed bug #39656 (crash when calling fetch() on a PDO statment object after\n  closeCursor()). (Ilia, Tony)\n- Fixed bug #39653 (ext/dba doesn't check for db-4.5 and db-4.4 when db4\n  support is enabled). (Tony)\n- Fixed bug #39652 (Wrong negative results from memory_get_usage()). (Dmitry)\n- Fixed bug #39648 (Implementation of PHP functions chown() and chgrp() are\n  not thread safe). (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39640 (Segfault with \"Allowed memory size exhausted\"). (Dmitry)\n- Fixed bug #39625 (Apache crashes on importStylesheet call). (Rob)\n- Fixed bug #39623 (thread safety fixes on *nix for putenv() & mime_magic).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39621 (str_replace() is not binary safe on strings with equal\n  length). (Tony)\n- Fixed bug #39613 (Possible segfault in imap initialization due to missing\n  module dependency). (wharmby at uk dot ibm dot com, Tony)\n- Fixed bug #39606 (Use of com.typelib_file in PHP.ini STILL causes A/V). (Rob)\n- Fixed bug #39602 (Invalid session.save_handler crashes PHP). (Dmitry)\n- Fixed bug #39596 (Creating Variant of type VT_ARRAY). (Rob)\n- Fixed bug #39583 (ftp_put() does not change transfer mode to ASCII). (Tony)\n- Fixed bug #39576 (array_walk() doesn't separate user data zval). (Tony)\n- Fixed bug #39575 (move_uploaded_file() no longer working (safe mode\n  related)). (Tony)\n- Fixed bug #39571 (timeout ssl:// connections). (Ilia)\n- Fixed bug #39564 (PDO::errorInfo() returns inconsistent information when\n  sqlite3_step() fails). (Tony)\n- Fixed bug #39548 (ZMSG_LOG_SCRIPT_NAME not routed to OutputDebugString()\n  on Windows). (Dmitry)\n- Fixed bug #39538 (fgetcsv can't handle starting newlines and trailing odd\n  number of backslashes). (David Soria Parra, Pierre)\n- Fixed bug #39534 (Error in maths to calculate of\n  ZEND_MM_ALIGNED_MIN_HEADER_SIZE). (wharmby at uk dot ibm dot com, Dmitry)\n- Fixed bug #39527 (Failure to retrieve results when multiple unbuffered,\n  prepared statements are used in pdo_mysql). (Ilia)\n- Fixed bug #39508 (imagefill crashes with small images 3 pixels or less).\n  (Pierre)\n- Fixed bug #39506 (Archive corrupt with ZipArchive::addFile method). (Pierre)\n- Fixed bug #39504 (xmlwriter_write_dtd_entity() creates Attlist tag, not\n  entity). (Hannes)\n- Fixed bug #39483 (Problem with handling of \\ char in prepared statements).\n  (Ilia, suhachov at gmail dot com)\n- Fixed bug #39458 (ftp_nlist() returns false on empty dirs). (Nuno)\n- Fixed bug #39454 (Returning a SOAP array segfaults PHP). (Dmitry)\n- Fixed bug #39450 (getenv() fills other super-globals). (Ilia, Tony)\n- Fixed bug #39449 (Overloaded array properties do not work correctly).\n  (Dmitry)\n- Fixed bug #39445 (Calling debug_backtrace() in the __toString()\n  function produces a crash). (Dmitry)\n- Fixed bug #39438 (Fatal error: Out of memory). (Dmitry)\n- Fixed bug #39435 ('foo' instanceof bar gives invalid opcode error). (Sara)\n- Fixed bug #39414 (Syntax error while compiling with Sun Workshop Complier).\n  (Johannes)\n- Fixed bug #39398 (Booleans are not automatically translated to integers).\n  (Ilia)\n- Fixed bug #39394 (Missing check for older variants of openssl). (Ilia)\n- Fixed bug #39367 (clearstatcache() doesn't clear realpath cache).\n  (j at pureftpd dot org, Dmitry)\n- Fixed bug #39366 (imagerotate does not use alpha with angle > 45 degrees)\n  (Pierre)\n- Fixed bug #39364 (Removed warning on empty haystack inside mb_strstr()).\n  (Ilia)\n- Fixed bug #39362 (Added an option to imap_open/imap_reopen to control the\n  number of connection retries). (Ilia)\n- Fixed bugs #39361 & #39400 (mbstring function overloading problem). (Seiji)\n- Fixed bug #39354 (Allow building of curl extension against libcurl\n  7.16.0). (Ilia)\n- Fixed bug #39350 (crash with implode(\"\\n\", array(false))). (Ilia)\n- Fixed bug #39344 (Unnecessary calls to OnModify callback routine for\n  an extension INI directive). (wharmby at uk dot ibm dot com, Dmitry)\n- Fixed bug #39320 (ZEND_HASH_APPLY_STOP causes deletion). (Marcus)\n- Fixed bug #39313 (spl_autoload triggers Fatal error). (Marcus)\n- Fixed bug #39300 (make install fails if wget is not available). (Tony)\n- Fixed bug #39297 (Memory corruption because of indirect modification of\n  overloaded array). (Dmitry)\n- Fixed bug #39286 (misleading error message when invalid dimensions are\n  given) (Pierre)\n- Fixed bug #39273 (imagecopyresized may ignore alpha channel) (Pierre)\n- Fixed bug #39265 (Fixed path handling inside mod_files.sh).\n  (michal dot taborsky at gmail dot com, Ilia)\n- Fixed bug #39217 (serialNumber might be -1 when the value is too large).\n  (Pierre, Tony)\n- Fixed bug #39215 (Inappropriate close of stdin/stdout/stderr). (Wez, Ilia)\n- Fixed bug #39201 (Possible crash in Apache 2 with 413 ErrorHandler). (Ilia)\n- Fixed bug #39151 (Parse error in recursiveiteratoriterator.php). (Marcus)\n- Fixed bug #39121 (Incorrect return array handling in non-wsdl soap client).\n  (Dmitry)\n- Fixed bug #39090 (DirectoryFilterDots doxygen docs and example is wrong).\n  (Marcus)\n- Fixed bug #38852 (XML-RPC Breaks iconv). (Hannes)\n- Fixed bug #38770 (unpack() broken with longs on 64 bit machines).\n  (Ilia, David Soria Parra).\n- Fixed bug #38698 (for some keys cdbmake creates corrupted db and cdb can't\n  read valid db). (Marcus)\n- Fixed bug #38680 (Added missing handling of basic types in json_decode).\n  (Ilia)\n- Fixed bug #38604 (Fixed request time leak inside foreach() when iterating\n  through virtual properties). (Dmitry)\n- Fixed bug #38602 (header( \"HTTP/1.0 ...\" ) does not change proto version).\n  (Ilia)\n- Fixed bug #38542 (proc_get_status() returns wrong PID on windows). (Nuno)\n- Fixed bug #38536 (SOAP returns an array of values instead of an object).\n  (Dmitry)\n- Fixed bug #38456 (Apache2 segfaults when virtual() is called in .php\n  ErrorDocument). (Ilia)\n- Fixed bug #38325 (spl_autoload_register() gives wrong line for \"class not\n  found\"). (Ilia)\n- Fixed bug #38319 (Remove bogus warnings from persistent PDO connections).\n  (Ilia)\n- Fixed bug #38274 (Memlimit fatal error sent to \"wrong\" stderr when using\n  fastcgi). (Dmitry)\n- Fixed bug #38252 (Incorrect PDO error message on invalid default fetch\n  mode). (Ilia)\n- Fixed bug #37927 (Prevent trap when COM extension processes argument of\n  type VT_DISPATCH|VT_REF) (Andy)\n- Fixed bug #37773 (iconv_substr() gives \"Unknown error\" when string\n  length = 1\"). (Ilia)\n- Fixed bug #37627 (session save_path check checks the parent directory).\n  (Ilia)\n- Fixed bug #37619 (proc_open() closes stdin on fork() failure).\n  (jdolecek at NetBSD dot org, Nuno)\n- Fixed bug #37588 (COM Property propputref converts to PHP function\n  and can't be accesed). (Rob)\n- Fixed bug #36975 (natcasesort() causes array_pop() to misbehave).\n  (Hannes)\n- Fixed bug #36812 (pg_execute() modifies input array). (Ilia)\n- Fixed bug #36798 (Error parsing named parameters with queries containing\n  high-ascii chars). (Ilia)\n- Fixed bug #36644 (possible crash in variant_date_from_timestamp()). (Ilia)\n- Fixed bug #36427 (proc_open() / proc_close() leak handles on windows).\n  (jdolecek at NetBSD dot org, Nuno)\n- Fixed bug #36392 (wrong number of decimal digits with %e specifier in\n  sprintf). (Matt,Ilia)\n- Fixed bug #36214 (__get method works properly only when conditional\n  operator is used). (Dmitry)\n- Fixed bug #35634 (Erroneous \"Class declarations may not be nested\"\n  error raised). (Carl P. Corliss, Dmitry)\n- Fixed bug #35106 (nested foreach fails when array variable has a\n  reference). (Dmitry)\n- Fixed bug #34564 (COM extension not returning modified \"out\" argument) (Andy)\n- Fixed bug #33734 (Something strange with COM Object). (Rob)\n- Fixed bug #33386 (ScriptControl only sees last function of class). (Rob)\n- Fixed bug #33282 (Re-assignment by reference does not clear the is_ref\n  flag) (Ilia, Dmitry, Matt Wilmas)\n- Fixed bug #30074 (apparent symbol table error with\n  extract($blah, EXTR_REFS)) (Brian)\n- Fixed bug #29840 (is_executable() does not honor safe_mode_exec_dir\n  setting). (Ilia)\n- Fixed PECL bug #7295 (ORA-01405: fetched column value is NULL on LOB\n  fields). (Tony)\n\n02 Nov 2006, PHP 5.2.0\n- Updated bundled OpenSSL to version 0.9.8d in the Windows distro. (Edin)\n- Updated Postgresql client libraries to 8.1.4 in the Windows distro. (Edin)\n- Updated PCRE to version 6.7. (Ilia)\n- Updated libsqlite in ext/pdo_sqlite to 3.3.7. (Ilia)\n- Updated bundled MySQL client library to version 5.0.22 in the Windows\n  distribution. (Edin)\n- Updated timezonedb to version 2006.7. (Derick)\n\n- Added ability to make SOAP call userspace PHP<->XML converters. (Dmitry)\n- Added support for character sets in pg_escape_string() for PostgreSQL 8.1.4\n  and higher. (Ilia)\n- Added support for character sets in PDO quote() method for PostgreSQL 8.1.4\n  and higher. (Ilia)\n- Added DSA key generation support to openssl_pkey_new(), FR #38731 (marci\n  at balabit dot hu, Tony)\n- Added SoapServer::setObject() method (it is a simplified version of\n  SoapServer::setClass() method). (Dmitry)\n- Added support for hexadecimal entity in imagettftext() for the bundled GD.\n  (Pierre)\n- Added support for httpOnly flag for session extension and cookie setting\n  functions. (Scott MacVicar, Ilia)\n- Added version specific registry keys to allow different configurations for\n  different php version. (Richard, Dmitry)\n- Added \"PHPINIDir\" Apache directive to apache and apache_hooks SAPIs.\n  (Dmitry)\n- Added an optional boolean parameter to memory_get_usage() and\n  memory_get_peak_usage() to get memory size allocated by emalloc() or real\n  size of memory allocated from system. (Dmitry)\n- Added Zip Archive extension. (Pierre)\n- Added RFC1867 fileupload processing hook. (Stefan E.)\n- Added JSON and Filter extensions. (Derick, Rasmus)\n- Added error messages to disk_free_space() and disk_total_space() functions.\n  FR #37971 (Tony)\n- Added PATHINFO_FILENAME option to pathinfo() to get the filename.\n  (Toby S. and Christian S.)\n- Added array_fill_keys() function. (Marcus, Matt Wilmas)\n- Added posix_initgroups() function. (Ilia)\n- Added an optional parameter to parse_url() to allow retrieval of distinct\n  URL components. (Ilia)\n- Added optional parameter to http_build_query() to allow specification of\n  string separator. (Ilia)\n- Added image_type_to_extension() function. (Hannes, Ilia)\n- Added allow_url_include ini directive to complement allow_url_fopen. (Rasmus)\n- Added automatic module globals management. (Dmitry)\n- Added RFC2397 (data: stream) support. (Marcus)\n- Added new error mode E_RECOVERABLE_ERROR. (Derick, Marcus, Tony)\n- Added support for getenv() input filtering. (Rasmus)\n- Added support for constructors in interfaces to force constructor signature\n  checks in implementations. (Marcus)\n- Added memory_get_peak_usage() function for retrieving peak memory usage of\n  a PHP script. (Ilia)\n- Added pg_field_table() function. (Edin)\n- Added SimpleXMLElement::saveXML() as an alias for SimpleXMLElement::asXML().\n  (Hannes)\n- Added DOMNode::getNodePath() for getting an XPath for a node. (Christian)\n- Added gmp_nextprime() function. (ants dot aasma at gmail dot com, Tony)\n- Added error_get_last() function. (Mike)\n\n- Removed current working directory from the php.ini search path for CLI and\n  re-added it for other SAPIs (restore to pre 5.1.x behavior). (Edin)\n- Moved extensions to PECL:\n  . ext/filepro (Derick, Tony)\n  . ext/hwapi (Derick, Tony)\n- Disabled CURLOPT_FOLLOWLOCATION in curl when open_basedir or\n  safe_mode are enabled. (Stefan E., Ilia)\n\n- Increased default memory limit to 16 megabytes to accommodate for a more\n  accurate memory utilization measurement.\n- In addition to path to php.ini, PHPRC now may specify full file name.\n  (Dmitry)\n\n- Optimized array/HashTable copying. (Matt Wilmas, Dmitry)\n- Optimized zend_try/zend_catch macros by eliminating memcpy(3). (Dmitry)\n- Optimized require_once() and include_once() by eliminating fopen(3) on\n  second usage. (Dmitry)\n- Optimized request shutdown sequence. Restoring ini directives now iterates\n  only over modified directives instead of all. (Dmitry)\n\n- Changed priority of PHPRC environment variable on win32 to be higher then\n  value from registry. (Dmitry)\n- Changed __toString() to be called wherever applicable. (Marcus)\n- Changed E_ALL error reporting mode to include E_RECOVERABLE_ERROR. (Marcus)\n- Changed realpath cache to be disabled when \"open_basedir\" or \"safe_mode\"\n  are enabled on per-request basis. (Ilia)\n\n- Improved SNMP extension: (Jani)\n  . Renamed snmp_set_oid_numeric_print() to snmp_set_oid_output_format().\n  . Added 2 new constants: SNMP_OID_OUTPUT_FULL and SNMP_OID_OUTPUT_NUMERIC\n  . Fixed bug #37564 (AES privacy encryption not possible due to net-snmp 5.2\n    compatibility issue). (Patch: scott dot moynes+php at gmail dot com)\n- Improved OpenSSL extension: (Pierre)\n  . Added support for all supported algorithms in openssl_verify\n  . Added openssl_pkey_get_details, returns the details of a key\n  . Added x509 v3 extensions support\n  . Added openssl_csr_get_subject() and openssl_csr_get_public_key()\n  . Added 3 new constants OPENSSL_VERSION_TEXT and OPENSSL_VERSION_NUMBER and\n    OPENSSL_KEYTYPE_EC\n- Improved the Zend memory manager: (Dmitry)\n  . Removed unnecessary \"--disable-zend-memory-manager\" configure option.\n  . Added \"--enable-malloc-mm\" configure option which is enabled by default in\n    debug builds to allow using internal and external memory debuggers.\n  . Allow tweaking the memory manager with ZEND_MM_MEM_TYPE and ZEND_MM_SEG_SIZE\n    environment variables.\n  . For more information: Zend/README.ZEND_MM\n- Improved safe_mode check for the error_log() function. (Ilia)\n- Improved the error reporting in SOAP extension on request failure. (Ilia)\n- Improved crypt() on win32 to be about 10 times faster and to have friendlier\n  license. (Frank, Dmitry)\n- Improved performance of the implode() function on associated arrays. (Ilia)\n- Improved performance of str_replace() when doing 1 char to 1 char or 1 char\n  to many chars replacement. (Ilia)\n- Improved apache2filter SAPI:\n  . Allowed PHP to be an arbitrary filter in the chain and read the script from\n    the Apache stream. (John)\n  . Added support for apache2filter in the Windows build including binary\n    support for both Apache 2.0.x (php5apache2_filter.dll) and Apache 2.2.x\n    (php5apache2_2_filter.dll). (Edin)\n- Improved apache2handler SAPI:\n  . Changed ap_set_content_type() to be called only once. (Mike)\n  . Added support for Apache 2.2 handler in the Windows distribution. (Edin)\n- Improved FastCGI SAPI: (Dmitry)\n  . Removed source compatibility with libfcgi.\n  . Optimized access to FastCGI environment variables by using HashTable\n    instead of linear search.\n  . Allowed PHP_FCGI_MAX_REQUESTS=0 that assumes no limit.\n  . Allowed PHP_FCGI_CHILDREN=0 that assumes no worker children. (FastCGI\n    requests are handled by main process itself)\n- Improved CURL:\n  . Added control character checks for \"open_basedir\" and \"safe_mode\" checks.\n    (Ilia)\n  . Added implementation of curl_multi_info_read(). (Brian)\n- Improved PCRE: (Andrei)\n  . Added run-time configurable backtracking/recursion limits.\n  . Added preg_last_error(). (Andrei)\n- Improved PDO:\n  . Added new attribute ATTR_DEFAULT_FETCH_MODE. (Pierre)\n  . Added FETCH_PROPS_LATE. (Marcus)\n- Improved SPL: (Marcus)\n  . Made most iterator code exception safe.\n  . Added RegExIterator and RecursiveRegExIterator.\n  . Added full caching support and ArrayAccess to CachingIterator.\n  . Added array functions to ArrayObject/ArrayIterator and made them faster.\n  . Added support for reading csv and skipping empty lines in SplFileObject.\n  . Added CachingIterator::TOSTRING_USE_INNER, calls inner iterator __toString.\n  . Added ability to set the CSV separator per SplFileObject.\n- Improved xmlReader: (Rob)\n  . Added readInnerXml(), xmlReader::setSchema().\n  . Added readInnerXML(), readOuterXML(), readString(), setSchema(). (2.6.20+)\n  . Changed to passing libxml options when loading reader.\n\n- Fixed invalid read in imagecreatefrompng when an empty file is given\n  (Pierre, Tony)\n- Fixed infinite loop when a wrong color index is given to imagefill (Pierre)\n- Fixed mess with CGI/CLI -d option (now it works with cgi; constants are\n  working exactly like in php.ini; with FastCGI -d affects all requests).\n  (Dmitry)\n- Fixed missing open_basedir check inside chdir() function. (Ilia)\n- Fixed overflow on 64bit systems in str_repeat() and wordwrap(). (Stefan E.)\n- Fixed XSLTProcessor::importStylesheet() to return TRUE on success\n  (Christian)\n- Fixed leaks in openssl_csr_sign and openssl_csr_new (Pierre)\n- Fixed phpinfo() cutoff of variables at \\0. (Ilia)\n- Fixed a bug in the filter extension that prevented magic_quotes_gpc from\n  being applied when RAW filter is used. (Ilia)\n- Fixed memory leaks in openssl streams context options. (Pierre)\n- Fixed handling of extremely long paths inside tempnam() function. (Ilia)\n- Fixed bug #39721 (Runtime inheritance causes data corruption). (Dmitry)\n- Fixed bug #39304 (Segmentation fault with list unpacking of string offset).\n  (Dmitry)\n- Fixed bug #39192 (Not including nsapi.h properly with SJSWS 7). This will\n  make PHP 5.2 compatible to new Sun Webserver. (Uwe)\n- Fixed bug #39140 (Uncaught exception may cause crash). (Dmitry)\n- Fixed bug #39125 (Memleak when reflecting non-existing class/method). (Tony)\n- Fixed bug #39067 (getDeclaringClass() and private properties). (Tony)\n- Fixed bug #39039 (SSL: fatal protocol error when fetching HTTPS from servers\n  running Google web server). (Ilia)\n- Fixed bug #39035 (Compatibility issue between DOM and\n  zend.ze1_compatibility_mode). (Rob)\n- Fixed bug #39034 (curl_exec() with return transfer returns TRUE on empty\n  files). (Ilia)\n- Fixed bug #39032 (strcspn() stops on null character). (Tony)\n- Fixed bug #39020 (PHP in FastCGI server mode crashes). (Dmitry)\n- Fixed bug #39017 (foreach(($obj = new myClass) as $v); echo $obj;\n  segfaults). (Dmitry)\n- Fixed bug #39004 (Fixed generation of config.nice with autoconf 2.60). (Ilia)\n- Fixed bug #39003 (__autoload() is called for type hinting). (Dmitry, Tony)\n- Fixed bug #39001 (ReflectionProperty returns incorrect declaring class for\n  protected properties). (Tony)\n- Fixed bug #38996 (PDO_MYSQL doesn't check connections for liveness). (Tony)\n- Fixed bug #38993 (Fixed safe_mode/open_basedir checks for session.save_path,\n  allowing them to account for extra parameters). (Ilia)\n- Fixed bug #38989 (Absolute path with slash at beginning doesn't work on win).\n  (Dmitry)\n- Fixed bug #38985 (Can't cast COM objects). (Wez)\n- Fixed bug #38981 (using FTP URLs in get_headers() causes crash). (Tony)\n- Fixed bug #38963 (Fixed a possible open_basedir bypass in tempnam()). (Ilia)\n- Fixed bug #38961 (metaphone() results in segmentation fault on NetBSD).\n  (Tony)\n- Fixed bug #38949 (Cannot get xmlns value attribute). (Rob)\n- Fixed bug #38942 (Double old-style-ctor inheritance). (Dmitry)\n- Fixed bug #38941 (imap extension does not compile against new version of the\n  imap library). (Ilia)\n- Fixed bug #38934 (move_uploaded_file() cannot read uploaded file outside of\n  open_basedir). (Ilia)\n- Fixed bug #38904 (apache2filter changes cwd to /). (Ilia, Hannes)\n- Fixed bug #38891 (get_headers() do not work with curl-wrappers). (Ilia)\n- Fixed bug #38882 (ldap_connect causes segfault with newer versions of\n  OpenLDAP). (Tony)\n- Fixed bug #38859 (parse_url() fails if passing '@' in passwd). (Tony)\n- Fixed bug #38850 (lookupNamespaceURI doesn't return default namespace). (Rob)\n- Fixed bug #38844 (curl_easy_strerror() is defined only since cURL 7.12.0).\n  (Tony)\n- Fixed bug #38813 (DOMEntityReference->__construct crashes when called\n  explicitly). (Rob)\n- Fixed bug #38808 (\"maybe ref\" issue for current() and others). (Dmitry)\n- Fixed bug #38779 (engine crashes when require()'ing file with syntax error\n  through userspace stream wrapper). (Tony, Dmitry)\n- Fixed bug #38772 (inconsistent overriding of methods in different visibility\n  contexts). (Dmitry)\n- Fixed bug #38759 (PDO sqlite2 empty query causes segfault). (Tony)\n- Fixed bug #38721 (Invalid memory read in date_parse()). (Tony, Derick)\n- Fixed bug #38700 (SoapClient::__getTypes never returns). (Dmitry)\n- Fixed bug #38693 (curl_multi_add_handle() set curl handle to null). (Ilia)\n- Fixed bug #38687 (sockaddr local storage insufficient for all sock families).\n  (Sara)\n- Fixed bug #38661 (mixed-case URL breaks url-wrappers). (Ilia)\n- Fixed bug #38653 (memory leak in ReflectionClass::getConstant()). (Tony)\n- Fixed bug #38649 (uninit'd optional arg in stream_socket_sendto()). (Sara)\n- Fixed bug #38637 (curl_copy_handle() fails to fully copy the cURL handle).\n  (Tony, Ilia)\n- Fixed bug #38624 (Strange warning when incrementing an object property and\n  exception is thrown from __get method). (Tony)\n- Fixed bug #38623 (leaks in a tricky code with switch() and exceptions).\n  (Dmitry)\n- Fixed bug #38579 (include_once() may include the same file twice). (Dmitry)\n- Fixed bug #38574 (missing curl constants and improper constant detection).\n  (Ilia)\n- Fixed bug #38543 (shutdown_executor() may segfault when memory_limit is too\n  low). (Dmitry)\n- Fixed bug #38535 (memory corruption in pdo_pgsql driver on error retrieval\n  inside a failed query executed via query() method). (Ilia)\n- Fixed bug #38534 (segfault when calling setlocale() in userspace session\n  handler). (Tony)\n- Fixed bug #38524 (strptime() does not initialize the internal date storage\n  structure). (Ilia)\n- Fixed bug #38511, #38473, #38263 (Fixed session extension request shutdown\n  order to ensure it is shutdown before the extensions it may depend on).\n  (Ilia)\n- Fixed bug #38488 (Access to \"php://stdin\" and family crashes PHP on win32).\n  (Dmitry)\n- Fixed bug #38474 (getAttribute select attribute by order, even when\n  prefixed). (Rob)\n- Fixed bug #38467 (--enable-versioning causes make fail on OS X). (Tony)\n- Fixed bug #38465 (ReflectionParameter fails if default value is an access\n  to self::). (Johannes)\n- Fixed bug #38464 (array_count_values() mishandles numeric strings).\n  (Matt Wilmas, Ilia)\n- Fixed bug #38461 (setting private attribute with __set() produces\n  segfault). (Tony)\n- Fixed bug #38458, PECL bug #8944, PECL bug #7775 (error retrieving columns\n  after long/text columns with PDO_ODBC). (Wez)\n- Fixed bug #38454 (warning upon disabling handler via\n  xml_set_element_handler). (dtorop933 at gmail dot com, Rob)\n- Fixed bug #38451 (PDO_MYSQL doesn't compile on Solaris). (Tony)\n- Fixed bug #38450 (constructor is not called for classes used in userspace\n  stream wrappers). (Tony)\n- Fixed bug #38438 (DOMNodeList->item(0) segfault on empty NodeList). (Ilia)\n- Fixed bug #38431 (xmlrpc_get_type() crashes PHP on objects). (Tony)\n- Fixed bug #38427 (unicode causes xml_parser to misbehave). (Rob)\n- Fixed bug #38424 (Different attribute assignment if new or existing). (Rob)\n- Fixed bug #38400 (Use of com.typelib_file may cause a crash). (Ilia)\n- Fixed bug #38394 (PDO fails to recover from failed prepared statement\n  execution). (Ilia)\n- Fixed bug #38377 (session_destroy() gives warning after\n  session_regenerate_id()). (Ilia)\n- Implemented #38357 (dbase_open can't open DBase 3 dbf file).\n  (rodrigo at fabricadeideias dot com, Mike)\n- Fixed bug #38354 (Unwanted reformatting of XML when using AsXML). (Christian)\n- Fixed bug #38347 (Segmentation fault when using foreach with an unknown/empty\n  SimpleXMLElement). (Tony)\n- Fixed bug #38322 (reading past array in sscanf() leads to arbitrary code\n  execution). (Tony)\n- Fixed bug #38315 (Constructing in the destructor causes weird behavior).\n  (Dmitry)\n- Fixed bug #38303 (spl_autoload_register() suppress all errors silently).\n  (Ilia)\n- Fixed bug #38290 (configure script ignores --without-cdb,inifile,flatfile).\n  (Marcus)\n- Fixed bug #38289 (segfault in session_decode() when _SESSION is NULL).\n  (Tony)\n- Fixed bug #38287 (static variables mess up global vars). (Dmitry)\n- Fixed bug #38278 (session_cache_expire()'s value does not match phpinfo's\n  session.cache_expire). (Tony)\n- Fixed bug #38276 (file_exists() works incorrectly with long filenames\n  on Windows). (Ilia, Tony)\n- Fixed bug #38269 (fopen wrapper doesn't fail on invalid hostname with\n  curlwrappers enabled). (Tony)\n- Fixed bug #38265 (heap corruption). (Dmitry)\n- Fixed bug #38261 (openssl_x509_parse() leaks with invalid cert) (Pierre)\n- Fixed bug #38255 (openssl possible leaks while passing keys) (Pierre)\n- Fixed bug #38253 (PDO produces segfault with default fetch mode). (Tony)\n- Fixed bug #38251 (socket_select() and invalid arguments). (Tony)\n- Fixed bug #38236 (Binary data gets corrupted on multipart/formdata POST).\n  (Ilia)\n- Fixed bug #38234 (Exception in __clone makes memory leak). (Dmitry, Nuno)\n- Fixed bug #38229 (strtotime() does not parse YYYY-MM format). (Ilia)\n- Fixed bug #38224 (session extension can't handle broken cookies). (Ilia)\n- Fixed bug #38220 (Crash on some object operations). (Dmitry)\n- Fixed bug #38217 (ReflectionClass::newInstanceArgs() tries to allocate too\n  much memory). (Tony)\n- Fixed bug #38214 (gif interlace output cannot work). (Pierre)\n- Fixed bug #38213, #37611, #37571 (wddx encoding fails to handle certain\n  characters). (Ilia)\n- Fixed bug #38212 (Segfault on invalid imagecreatefromgd2part() parameters).\n  (Pierre)\n- Fixed bug #38211 (variable name and cookie name match breaks script\n  execution). (Dmitry)\n- Fixed bug #38199 (fclose() unable to close STDOUT and STDERR). (Tony)\n- Fixed bug #38198 (possible crash when COM reports an exception). (Ilia)\n- Fixed bug #38194 (ReflectionClass::isSubclassOf() returns TRUE for the\n  class itself). (Ilia)\n- Fixed bug #38183 (disable_classes=Foobar causes disabled class to be\n  called Foo). (Jani)\n- Fixed bug #38179 (imagecopy from a palette to a truecolor image loose alpha\n  channel) (Pierre)\n- Fixed bug #38173 (Freeing nested cursors causes OCI8 to segfault). (Tony)\n- Fixed bug #38168 (Crash in pdo_pgsql on missing bound parameters). (Ilia)\n- Fixed bug #38161 (oci_bind_by_name() returns garbage when Oracle didn't set\n  the variable). (Tony)\n- Fixed bug #38146 (Cannot use array returned from foo::__get('bar') in write\n  context). (Dmitry)\n- Fixed bug #38132 (ReflectionClass::getStaticProperties() retains \\0 in key\n  names). (Ilia)\n- Fixed bug #38125 (undefined reference to spl_dual_it_free_storage). (Marcus)\n- Fixed bug #38112 (corrupted gif segfaults) (Pierre)\n- Fixed bug #38096 (large timeout values ignored on 32bit machines in\n  stream_socket_accept() and stream_socket_client()). (Ilia)\n- Fixed bug #38086 (stream_copy_to_stream() returns 0 when maxlen is bigger\n  than the actual length). (Tony)\n- Fixed bug #38072 (boolean arg for mysqli_autocommit() is always true on\n  Solaris). (Tony)\n- Fixed bug #38067 (Parameters are not decoded from utf-8 when using encoding\n  option). (Dmitry)\n- Fixed bug #38064 (ignored constructor visibility). (Marcus)\n- Fixed bug #38055 (Wrong interpretation of boolean parameters). (Dmitry)\n- Fixed bug #38047 (\"file\" and \"line\" sometimes not set in backtrace from\n  inside error handler). (Dmitry)\n- Fixed bug #38019 (segfault extending mysqli class). (Dmitry)\n- Fixed bug #38005 (SoapFault faultstring doesn't follow encoding rules).\n  (Dmitry)\n- Fixed bug #38004 (Parameters in SoapServer are decoded twice). (Dmitry)\n- Fixed bug #38003 (in classes inherited from MySQLi it's possible to call\n  private constructors from invalid context). (Tony)\n- Fixed bug #37987 (invalid return of file_exists() in safe mode). (Ilia)\n- Fixed bug #37947 (zend_ptr_stack reallocation problem). (Dmitry)\n- Fixed bug #37945 (pathinfo() cannot handle argument with special characters\n  like German \"Umlaut\"). (Mike)\n- Fixed bug #37931 (possible crash in OCI8 after database restart\n  when using persistent connections). (Tony)\n- Fixed bug #37923 (Display constant value in reflection::export). (Johannes)\n- Fixed bug #37920 (compilation problems on z/OS). (Tony)\n- Fixed bug #37870 (pgo_pgsql tries to de-allocate unused statements).\n  (Ilia, ce at netage dot bg)\n- Fixed bug #37864 (file_get_contents() leaks on empty file). (Hannes)\n- Fixed bug #37862 (Integer pointer comparison to numeric value).\n  (bugs-php at thewrittenword dot com)\n- Fixed bug #37846 (wordwrap() wraps incorrectly). (ddk at krasn dot ru, Tony)\n- Fixed bug #37816 (ReflectionProperty does not throw exception when accessing\n  protected attribute). (Marcus)\n- Fixed bug #37811 (define not using toString on objects). (Marcus)\n- Fixed bug #37807 (segmentation fault during SOAP schema import). (Tony)\n- Fixed bug #37806 (weird behavior of object type and comparison). (Marcus)\n- Fixed bug #37780 (memory leak trying to execute a non existing file (CLI)).\n  (Mike)\n- Fixed bug #37779 (empty include_path leads to search for files inside /).\n  (jr at terragate dot net, Ilia)\n- Fixed bug #37747 (strtotime segfaults when given \"nextyear\"). (Derick)\n- Fixed bug #37720 (merge_php_config scrambles values).\n  (Mike, pumuckel at metropolis dot de)\n- Fixed bug #37709 (Possible crash in PDO::errorCode()). (Ilia)\n- Fixed bug #37707 (clone without assigning leaks memory). (Ilia, Nuno, Dmitri)\n- Fixed bug #37705 (Semaphore constants not available). (Ilia)\n- Fixed bug #37671 (MySQLi extension fails to recognize BIT column). (Ilia)\n- Fixed bug #37667 (Object is not added into array returned by __get). (Marcus)\n- Fixed bug #37635 (parameter of pcntl signal handler is trashed). (Mike)\n- Fixed bug #37632 (Protected method access problem). (Marcus)\n- Fixed bug #37630 (MySQL extensions should link against thread safe client\n  libs if built with ZTS). (Mike)\n- Fixed bug #37620 (mysqli_ssl_set validation is inappropriate). (Georg)\n- Fixed bug #37616 (DATE_RFC822 does not product RFC 822 dates).\n  (Hannes Magnusson, Derick)\n- Fixed bug #37614 (Class name lowercased in error message). (Johannes)\n- Fixed bug #37587 (var without attribute causes segfault). (Marcus)\n- Fixed bug #37586 (Bumped minimum PCRE version to 6.6, needed for recursion\n  limit support). (Ilia)\n- Fixed bug #37581 (oci_bind_array_by_name clobbers input array when using\n  SQLT_AFC, AVC). (Tony)\n- Fixed bug #37569 (WDDX incorrectly encodes high-ascii characters). (Ilia)\n- Fixed bug #37565 (Using reflection::export with simplexml causing a crash).\n  (Marcus)\n- Fixed bug #37564 (AES privacy encryption not possible due to net-snmp 5.2\n  compatibility issue). (Jani, patch by scott dot moynes+php at gmail dot com)\n- Fixed bug #37563 (array_key_exists performance is poor for &$array). (Ilia)\n- Fixed bug #37558 (timeout functionality doesn't work after a second PHP\n  start-up on the same thread). (p dot desarnaud at wanadoo dot fr)\n- Fixed bug #37531 (oci8 persistent connection corruption). (Tony)\n- Fixed bug #37523 (namespaces added too late, leads to missing xsi:type\n  attributes. Incompatibility with libxml2-2.6.24). (Dmitry)\n- Fixed bug #37514 (strtotime doesn't assume year correctly). (Derick)\n- Fixed bug #37510 (session_regenerate_id changes session_id() even on\n  failure). (Hannes)\n- Fixed bug #37505 (touch() truncates large files). (Ilia)\n- Fixed bug #37499 (CLI segmentation faults during cleanup with sybase-ct\n  extension enabled). (Tony)\n- Fixed bug #37496 (FastCGI output buffer overrun). (Piotr, Dmitry)\n- Fixed bug #37487 (oci_fetch_array() array-type should always default to\n  OCI_BOTH). (Tony)\n- Fixed bug #37457 (Crash when an exception is thrown in accept() method of\n  FilterIterator). (Marcus)\n- Fixed bug #37456 (DOMElement->setAttribute() loops forever). (Rob)\n- Fixed bug #37445 (Fixed crash in pdo_mysql resulting from premature object\n  destruction). (Ilia)\n- Fixed bug #37428 (PHP crashes on windows if there are start-up errors and\n  event log is used for logging them). (Edin)\n- Fixed bug #37418 (tidy module crashes on shutdown). (Tony)\n- Fixed bug #37416 (iterator_to_array() hides exceptions thrown in rewind()\n  method). (Tony)\n- Fixed bug #37413 (Rejected versions of flex that don't work). (Ilia)\n- Fixed bug #37395 (recursive mkdir() fails to create nonexistent directories\n  in root dir). (Tony)\n- Fixed bug #37394 (substr_compare() returns an error when offset equals\n  string length). (Ilia)\n- Fixed bug #37392 (Unnecessary call to OCITransRollback() at the end of\n  request). (Tony)\n- Fixed bug #37376 (fastcgi.c compile fail with gcc 2.95.4). (Ilia)\n- Fixed bug #37368 (Incorrect timestamp returned for strtotime()). (Derick)\n- Fixed bug #37363 (PDO_MYSQL does not build if no other mysql extension is\n  enabled). (Mike)\n- Fixed bug #37348 (make PEAR install ignore open_basedir). (Ilia)\n- Fixed bug #37341 ($_SERVER in included file is shortened to two entries,\n  if $_ENV gets used). (Dmitry)\n- Fixed bug #37313 (sigemptyset() used without including <signal.h>).\n  (jdolecek)\n- Fixed bug #37306 (max_execution_time = max_input_time). (Dmitry)\n- Fixed bug #37278 (SOAP not respecting uri in __soapCall). (Dmitry)\n- Fixed bug #37265 (Added missing safe_mode & open_basedir checks to\n  imap_body()). (Ilia)\n- Fixed bug #37262 (var_export() does not escape \\0 character). (Ilia)\n- Fixed bug #37256 (php-fastcgi doesn't handle connection abort). (Dmitry)\n- Fixed bug #37244 (Added strict flag to base64_decode() that enforces\n  RFC3548 compliance). (Ilia)\n- Fixed bug #37144 (PHP crashes trying to assign into property of dead object).\n  (Dmitry)\n- Fixed bug #36949 (invalid internal mysqli objects dtor). (Mike)\n- Implement #36732 (req/x509 extensions support for openssl_csr_new and\n  openssl_csr_sign) (ben at psc dot edu, Pierre)\n- Fixed bug #36759 (Objects destructors are invoked in wrong order when script\n  is finished). (Dmitry)\n- Fixed bug #36681 (pdo_pgsql driver incorrectly ignored some errors).\n  (Wez, Ilia)\n- Fixed bug #36630 (umask not reset at the end of the request). (Ilia)\n- Fixed bug #36515 (Unlinking buckets from non-existent brigades). (Sara)\n- Fixed bug #35973 (Error ORA-24806 occurs when trying to fetch a NCLOB\n  field). (Tony)\n- Fixed bug #35886 (file_get_contents() fails with some combinations of\n  offset & maxlen). (Nuno)\n- Fixed bug #35512 (Lack of read permission on main script results in\n  E_WARNING rather then E_ERROR). (Ilia)\n- Fixed bug #34180 (--with-curlwrappers causes PHP to disregard some HTTP\n  stream context options). (Mike)\n- Fixed bug #34066 (recursive array_walk causes segfault). (Tony)\n- Fixed bug #34065 (throw in foreach causes memory leaks). (Dmitry)\n- Fixed bug #34005 (oci_password_change() fails).\n  (pholdaway at technocom-wireless dot com, Tony)\n- Fixed bug #33895 (Missing math constants). (Hannes)\n- Fixed bug #33770 (https:// or ftps:// do not work when --with-curlwrappers\n  is used and ssl certificate is not verifiable). (Ilia)\n- Fixed bug #29538 (number_format and problem with 0). (Matt Wilmas)\n- Implement #28382 (openssl_x509_parse() extensions support) (Pierre)\n- Fixed PECL bug #9061 (oci8 might reuse wrong persistent connection). (Tony)\n- Fixed PECL bug #8816 (issue in php_oci_statement_fetch with more than one\n  piecewise column) (jeff at badtz-maru dot com, Tony)\n- Fixed PECL bug #8112 (OCI8 persistent connections misbehave when Apache\n  process times out). (Tony)\n- Fixed PECL bug #7755 (error selecting DOUBLE fields with PDO_ODBC).\n  (\"slaws\", Wez)\n\n\n04 May 2006, PHP 5.1.4\n- Added \"capture_peer_cert\" and \"capture_peer_cert_chain\" context options\n  for SSL streams. (Wez).\n- Added PDO::PARAM_EVT_* family of constants. (Sara)\n- Fixed possible crash in highlight_string(). (Dmitry)\n- Fixed bug #37291 (FastCGI no longer works with isapi_fcgi.dll). (Dmitry)\n- Fixed bug #37277 (cloning Dom Documents or Nodes does not work). (Rob)\n- Fixed bug #37276 (problems with $_POST array). (Dmitry)\n- Fixed bug #36632 (bad error reporting for pdo_odbc exec UPDATE). (Wez).\n- Fixed bug #35552 (crash when pdo_odbc prepare fails). (Wez).\n\n28 Apr 2006, PHP 5.1.3\n- Updated bundled PCRE library to version 6.6. (Andrei)\n- Moved extensions to PECL:\n  . ext/msession (Derick)\n- Reimplemented FastCGI interface. (Dmitry)\n- Improved SPL: (Marcus)\n  - Fixed issues with not/double calling of constructors of SPL iterators.\n  - Fixed issues with info-class/file-class in SPL directory handling classes.\n  - Fixed ArrayIterator::seek().\n  - Added SimpleXMLIterator::count().\n  - Dropped erroneous RecursiveDirectoryIterator::getSubPathInfo().\n- Improved SimpleXML: (Marcus, Rob)\n  . Added SimpleXMLElement::getName() to retrieve name of element.\n  . Added ability to create elements on the fly.\n  . Added addChild() method for element creation supporting namespaces.\n  . Added addAttribute() method for attribute creation supporting namespaces.\n  . Added ability to delete specific elements and attributes by offset.\n- Improved Reflection API: (Marcus)\n  . Added ReflectionClass::newInstanceArgs($args).\n  . Added ability to analyze extension dependency.\n  . Added ReflectionFunction::isDeprecated() and constant IS_DEPRECATED.\n  . Added ReflectionParameter::getDeclaringClass().\n  . Changed reflection constants to be prefixed with IS_. (Johannes)\n- Improved cURL extension: (Ilia)\n  . Added curl_setopt_array() function that allows setting of multiple\n    options via an associated array.\n  . Added the ability to retrieve the request message sent to the server.\n- Improved GD extension: (Pierre)\n  . Added a weak/tolerant mode to the JPEG loader.\n  . Added filtering mode option to imagepng() to allow reducing file size.\n  . Fixed imagecolorallocate() and imagecolorallocatelapha() to return FALSE\n    on error.\n- Changed get_headers() to retrieve headers also from non-200 responses.\n  (Ilia)\n- Changed get_headers() to use the default context. (Ilia)\n- Added lchown() and lchgrp() to change user/group ownership of symlinks.\n  (Derick)\n- Added support for exif date format in strtotime(). (Derick)\n- Added a check for special characters in the session name. (Ilia)\n- Added \"consumed\" stream filter. (Marcus)\n- Added new mysqli constants for BIT and NEW_DECIMAL field types:\n  MYSQLI_TYPE_NEWDECIMAL and MYSQLI_TYPE_BIT. FR #36007. (Georg)\n- Added imap_savebody() that allows message body to be written to a\n  file. (Mike)\n- Added overflow checks to wordwrap() function. (Ilia)\n- Added support for BINARY_DOUBLE and BINARY_FLOAT to PDO_OCI and OCI8\n  (also fixes bug #36764). (Tony)\n- Eliminated run-time constant fetching for TRUE, FALSE and NULL. (Dmitry)\n- Removed the E_STRICT deprecation notice from \"var\". (Ilia)\n- Fixed reading stream filters never notified about EOF. (Mike)\n- Fixed tempnam() 2nd parameter to be checked against path components. (Ilia)\n- Fixed a bug that would not fill in the fifth argument to preg_replace()\n  properly, if the variable was not declared previously. (Andrei)\n- Fixed safe_mode check for source argument of the copy() function. (Ilia)\n- Fixed mysqli bigint conversion under Windows (Georg)\n- Fixed XSS inside phpinfo() with long inputs. (Ilia)\n- Fixed Apache2 SAPIs header handler modifying header strings. (Mike)\n- Fixed 'auto_globals_jit' to work together with 'register_argc_argv'. (Dmitry)\n- Fixed offset/length parameter validation in substr_compare() function. (Ilia)\n- Fixed debug_zval_dump() to support private and protected members. (Dmitry)\n- Fixed SoapFault::getMessage(). (Dmitry)\n- Fixed issue with iconv_mime_decode where the \"encoding\" would only allow\n  upper case specifiers. (Derick)\n- Fixed tiger hash algorithm generating wrong results on big endian platforms.\n  (Mike)\n- Fixed crash with DOMImplementation::createDocumentType(\"name:\"). (Mike)\n- Fixed bug #37205 (Serving binary content/images fails with \"comm with server\n  aborted\" FastCGI err). (Dmitry)\n- Fixed bug #37192 (cc may complain about non-constant initializers in\n  hash_adler.c). (Mike)\n- Fixed bug #37191 (chmod takes off sticky bit when safe_mode is On). (Tony)\n- Fixed bug #37167 (PDO segfaults when throwing exception from the\n  fetch handler). (Tony)\n- Fixed bug #37162 (wddx does not build as a shared extension).\n  (jdolecek at NetBSD dot org, Ilia)\n- Fixed bug #37158 (fread behavior changes after calling\n  stream_wrapper_register). (Wez)\n- Fixed bug #37138 (__autoload tries to load callback'ed self and parent).\n  (Dmitry)\n- Fixed bug #37103 (libmbfl headers not installed). (Jani)\n- Fixed bug #37062 (compile failure on ARM architecture). (Tony)\n- Fixed bug #37061 (curl_exec() doesn't zero-terminate binary strings). (Tony)\n- Fixed bug #37060 (Type of retval of Countable::count() is not checked).\n  (Johannes)\n- Fixed bug #37059 (oci_bind_by_name() doesn't support RAW and LONG RAW\n  fields). (Tony)\n- Fixed bug #37057 (xmlrpc_decode() may produce arrays with numeric strings,\n  which are unaccessible). (Tony)\n- Fixed bug #37055 (incorrect reference counting for persistent OCI8\n  connections). (Tony)\n- Fixed bug #37054 (SoapClient Error Fetching http headers). (Dmitry)\n- Fixed bug #37053 (html_errors with internal classes produces wrong links).\n  (Tony)\n- Fixed bug #37046 (foreach breaks static scope). (Dmitry)\n- Fixed bug #37045 (Fixed check for special chars for http redirects). (Ilia)\n- Fixed bug #37017 (strtotime fails before 13:00:00 with some time zones\n  identifiers). (Derick)\n- Fixed bug #37002 (Have to quote literals in INI when concatenating with\n  vars). (Dmitry)z\n- Fixed bug #36988 (mktime freezes on long numbers). (Derick)\n- Fixed bug #36981 (SplFileObject->fgets() ignores max_length). (Tony)\n- Fixed bug #36957 (serialize() does not handle recursion). (Ilia)\n- Fixed bug #36944 (strncmp & strncasecmp do not return false on negative\n  string length). (Tony)\n- Fixed bug #36941 (ArrayIterator does not clone itself). (Marcus)\n- Fixed bug #36934 (OCILob->read() doesn't move internal pointer when\n  reading 0's). (Tony)\n- Fixed bug #36908 (wsdl default value overrides value in soap request).\n  (Dmitry)\n- Fixed bug #36898 (__set() leaks in classes extending internal ones).\n  (Tony, Dmitry)\n- Fixed bug #36886 (User filters can leak buckets in some situations). (Ilia)\n- Fixed bug #36878 (error messages are printed even though an exception has\n  been thrown). (Tony)\n- Fixed bug #36875 (is_*() functions do not account for open_basedir). (Ilia)\n- Fixed bug #36872 (session_destroy() fails after call to\n  session_regenerate_id(true)). (Ilia)\n- Fixed bug #36869 (memory leak in output buffering when using chunked\n  output). (Tony)\n- Fixed bug #36859 (DOMElement crashes when calling __construct when\n  cloning). (Tony)\n- Fixed bug #36857 (Added support for partial content fetching to the\n  HTTP streams wrapper). (Ilia)\n- Fixed bug #36851 (Documentation and code discrepancies for NULL\n  data in oci_fetch_*() functions). (Tony)\n- Fixed bug #36825 (Exceptions thrown in ArrayObject::offsetGet cause\n  segfault). (Tony)\n- Fixed bug #36820 (Privileged connection with an Oracle password file\n  fails). (Tony)\n- Fixed bug #36809 (__FILE__ behavior changed). (Dmitry)\n- Fixed bug #36808 (syslog ident becomes garbage between requests). (Tony)\n- Fixed bug #36802 (mysqli_set_charset() crash with a non-open connection).\n  (Ilia)\n- Fixed bug #36756 (DOMDocument::removeChild corrupts node). (Rob)\n- Fixed bug #36749 (SOAP: 'Error Fetching http body' when using HTTP Proxy).\n  (Dmitry)\n- Fixed bug #36745 (No error message when load data local file isn't found).\n  (Georg)\n- Fixed bug #36743 (In a class extending XMLReader array properties are not\n  writable). (Tony)\n- Fixed bug #36727 (segfault in pdo_pgsql bindValue() when no parameters are\n  defined). (Tony)\n- Fixed bug #36721 (The SoapServer is not able to send a header that it didn't\n  receive). (Dmitry)\n- Fixed bug #36697 (Transparency is lost when using imagecreatetruecolor).\n  (Pierre)\n- Fixed bug #36689 (Removed arbitrary limit on the length of syslog messages).\n  (Ilia)\n- Fixed bug #36656 (http_build_query generates invalid URIs due to use of\n  square brackets). (Mike)\n- Fixed bug #36638 (strtotime() returns false when 2nd argument < 1). (Derick)\n- Fixed bug #36629 (SoapServer::handle() exits on SOAP faults). (Dmitry)\n- Fixed bug #36625 (pg_trace() does not work). (iakio at mono-space dot net)\n- Fixed bug #36614 (Segfault when using Soap). (Dmitry)\n- Fixed bug #36611 (assignment to SimpleXML object attribute changes argument\n  type to string). (Tony)\n- Fixed bug #36606 (pg_query_params() changes arguments type to string). (Tony)\n- Fixed bug #36599 (DATE_W3C format constant incorrect). (Derick)\n- Fixed bug #36575 (SOAP: Incorrect complex type instantiation with\n  hierarchies). (Dmitry)\n- Fixed bug #36572 (Added PDO::MYSQL_ATTR_DIRECT_QUERY constant that should\n  be set when executing internal queries like \"show master status\" via MySQL).\n  (Ilia)\n- Fixed bug #36568 (memory_limit setting on win32 has no effect). (Dmitry)\n- Fixed bug #36513 (comment will be outputted in last line). (Dmitry)\n- Fixed bug #36510 (strtotime() fails to parse date strings with tabs).\n  (Ilia, Derick)\n- Fixed bug #36459 (Incorrect adding PHPSESSID to links, which contains \\r\\n).\n  (Ilia)\n- Fixed bug #36458 (sleep() accepts negative values). (Ilia)\n- Fixed bug #36436 (DBA problem with Berkeley DB4). (Marcus)\n- Fixed bug #36434 (Improper resolution of declaring class name of an\n  inherited property). (Ilia)\n- Fixed bug #36420 (segfault when access result->num_rows after calling\n  result->close()). (Ilia,Tony)\n- Fixed bug #36403 (oci_execute() no longer supports OCI_DESCRIBE_ONLY). (Tony)\n- Fixed bug #36400 (Custom 5xx error does not return correct HTTP response error\n  code). (Tony)\n- Fixed bug #36396 (strtotime() fails to parse dates in dd-mm-yyyy format).\n  (Derick)\n- Fixed bug #36388 (ext/soap crashes when throwing exception and session\n  persistence). (David)\n- Fixed bug #36382 (PDO/PgSQL's getColumnMeta() crashes). (Derick)\n- Fixed bug #36359 (splFileObject::fwrite() doesn't write when no data\n  length specified). (Tony)\n- Fixed bug #36351 (parse_url() does not parse numeric paths properly). (Ilia)\n- Fixed bug #36345 (PDO/MySQL problem loading BLOB over 1MB). (Ilia)\n- Fixed bug #36337 (ReflectionProperty fails to return correct visibility).\n  (Ilia)\n- Fixed bug #36334 (Added missing documentation about realpath cache INI\n  settings). (Ilia)\n- Fixed bug #36308 (ReflectionProperty::getDocComment() does not reflect\n  extended class commentary). (Ilia)\n- Fixed bug #36306 (crc32() differ on 32-bit and 64-bit platforms)\n  (anight@eyelinkmedia dot com, Pierre)\n- Fixed bug #36303 (foreach on error_zval produces segfault). (Dmitry)\n- Fixed bug #36295 (typo in SplFileObject::flock() parameter name). (Tony)\n- Fixed bug #36287 (Segfault with SplFileInfo conversion). (Marcus)\n- Fixed bug #36283 (SOAPClient Compression Broken). (Dmitry)\n- Fixed bug #36268 (Object destructors called even after fatal errors). (Dmitry)\n- Fixed bug #36258 (SplFileObject::getPath() may lead to segfault). (Tony)\n- Fixed bug #36250 (PHP causes ORA-07445 core dump in Oracle server 9.2.x).\n  (Tony)\n- Fixed bug #36242 (Possible memory corruption in stream_select()). (Tony)\n- Fixed bug #36235 (ocicolumnname returns false before a successful fetch).\n  (Tony)\n- Fixed bug #36226 (Inconsistent handling when passing potential arrays).\n  (Dmitry)\n- Fixed bug #36224 (date(DATE_ATOM) gives wrong results).\n  (Derick, Hannes Magnusson)\n- Fixed bug #36222 (errorInfo in PDOException is always NULL). (Ilia)\n- Fixed bug #36208 (symbol namespace conflicts using bundled gd). (Jakub Moc)\n- Fixed bug #36205 (Memory leaks on duplicate cookies). (Dmitry)\n- Fixed bug #36185 (str_rot13() crash on non-string parameter). (Pierre)\n- Fixed bug #36176 (PDO_PGSQL - PDO::exec() does not return number of rows\n  affected by the operation). (Ilia)\n- Fixed bug #36158 (SIGTERM is not handled correctly when running as a\n  FastCGI server). (Dmitry)\n- Fixed bug #36152 (problems with curl+ssl and pgsql+ssl in same PHP). (Mike)\n- Fixed bug #36148 (unpack(\"H*hex\", $data) is adding an extra character to\n  the end of the string). (Ilia)\n- Fixed bug #36134 (DirectoryIterator constructor failed to detect empty\n  directory names). (Ilia)\n- Fixed bug #36113 (Reading records of unsupported type causes segfault).\n  (Tony)\n- Fixed bug #36096 (oci_result() returns garbage after oci_fetch() failed).\n  (Tony)\n- Fixed bug #36083 (SoapClient waits for responses on one-way operations).\n  (Dmitry)\n- Fixed bug #36071 (Engine Crash related with 'clone'). (Dmitry)\n- Fixed bug #36055 (possible OCI8 crash in multi-threaded environment). (Tony)\n- Fixed bug #36046 (parse_ini_file() miscounts lines in multi-line values).\n  (Ilia)\n- Fixed bug #36038 (ext/hash compile failure on Mac OSX). (Tony)\n- Fixed bug #36037 (heredoc adds extra line number). (Dmitry)\n- Fixed bug #36016 (realpath cache memleaks). (Dmitry, Nuno)\n- Fixed bug #36011 (Strict errormsg wrong for call_user_func() and the likes).\n  (Marcus)\n- Fixed bug #36010 (Segfault when re-creating and re-executing statements with\n  bound parameters). (Tony)\n- Fixed bug #36006 (Problem with $this in __destruct()). (Dmitry)\n- Fixed bug #35999 (recursive mkdir() does not work with relative path\n  like \"foo/bar\"). (Tony)\n- Fixed bug #35998 (SplFileInfo::getPathname() returns unix style filenames\n  in win32). (Marcus)\n- Fixed bug #35988 (Unknown persistent list entry type in module shutdown).\n  (Dmitry)\n- Fixed bug #35954 (Fatal com_exception casting object). (Rob)\n- Fixed bug #35900 (stream_select() should warning when tv_sec is negative).\n  (Ilia)\n- Fixed bug #35785 (SimpleXML causes memory read error zend engine). (Marcus)\n- Fixed bug #34272 (empty array onto COM object blows up). (Rob)\n- Fixed bug #33292 (apache_get_modules() crashes on Windows). (Edin)\n- Fixed bug #29476 (sqlite_fetch_column_types() locks the database forever).\n  (Ilia)\n\n12 Jan 2006, PHP 5.1.2\n- Updated libsqlite in ext/sqlite to 2.8.17. (Ilia)\n- Updated libsqlite in ext/pdo_sqlite to 3.2.8. (Ilia)\n- Updated to libxml2-2.6.22 and libxslt-1.1.15 in the win32 bundle. (Rob)\n- Added new extensions: (Ilia, Wez)\n  . XMLWriter\n  . Hash\n- Added PNG compression support to GD extension. (Pierre)\n- Added reflection constants as class constants. (Johannes)\n- Added --enable-gcov configure option to enable C-level code coverage.\n  (John, Jani, Ilia, Marcus)\n- Added missing support for 'B' format identifier to date() function. (Ilia)\n- Changed reflection to be an extension. (Marcus)\n- Improved SPL extension: (Marcus)\n  . Added class SplFileInfo as root class for DirectoryIterator and\n    SplFileObject\n  . Added SplTempFileObject\n- Improved SimpleXML extension: (Marcus)\n  . Fixed memleaks\n  . Fixed var_dump()\n  . Fixed isset/empty/(bool) behavior\n  . Fixed iterator edge cases\n  . Added methods getNamespaces(), getDocNamespaces()\n- Upgraded pear to version 1.4.6. (Greg)\n- Added constants for libxslt and libexslt versions: LIBXSLT_VERSION,\n  LIBXSLT_DOTTED_VERSION, LIBEXSLT_VERSION and LIBEXSLT_DOTTED_VERSION. (Pierre)\n- Fixed possible crash in apache_getenv()/apache_setenv() on invalid parameters.\n  (Ilia)\n- Changed errors to warnings in imagecolormatch(). (Pierre)\n- Fixed segfault/leak in imagecolormatch(). (Pierre)\n- Fixed small leak in mysqli_stmt_fetch() when bound variable was empty string.\n  (Andrey)\n- Fixed prepared statement name conflict handling in PDO_PGSQL. (Thies, Ilia)\n- Fixed memory corruption when PDO::FETCH_LAZY mode is being used. (Ilia)\n- Fixed possible leaks in imagecreatefromstring() with invalid data. (Pierre)\n- Fixed possible memory corruption inside mb_strcut(). (Ilia)\n- Fixed possible header injection by limiting each header to a single line.\n  (Ilia)\n- Fixed possible XSS inside error reporting functionality. (Ilia)\n- Fixed many bugs in OCI8. (Tony)\n- Fixed crash and leak in mysqli when using 4.1.x client libraries and\n  connecting to 5.x server. (Andrey)\n- Fixed bug #35916 (Duplicate calls to stream_bucket_append() lead to a crash).\n  (Ilia)\n- Fixed bug #35908 (curl extension uses undefined GCRY_THREAD_OPTIONS_USER).\n  (Ilia)\n- Fixed bug #35907 (PDO_OCI uses hardcoded lib path $ORACLE_HOME/lib). (Tony)\n- Fixed bug #35887 (wddx_deserialize not parsing dateTime fields properly).\n  (Derick)\n- Fixed bug #35885 (strtotime(\"NOW\") no longer works). (Derick)\n- Fixed bug #35821 (array_map() segfaults when exception is throwed from\n  the callback). (Tony)\n- Fixed bug #35817 (unpack() does not decode odd number of hexadecimal values).\n  (Ilia)\n- Fixed bug #35797 (segfault on PDOStatement::execute() with\n  zend.ze1_compatibility_mode = On). (Tony, Ilia)\n- Fixed bug #35781 (stream_filter_append() can cause segfault). (Tony)\n- Fixed bug #35760 (sybase_ct doesn't compile on Solaris using old gcc). (Tony)\n- Fixed bug #35759 (mysqli_stmt_bind_result() makes huge allocation when\n  column empty). (Andrey)\n- Fixed bug #35751 (using date with a timestamp makes httpd segfault). (Derick)\n- Fixed bug #35740 (memory leak when including a directory). (Tony)\n- Fixed bug #35730 (ext/mssql + freetds: Use correct character encoding\n  and allow setting it). (Frank)\n- Fixed bug #35723 (xmlrpc_introspection.c fails compile per C99 std). (Jani)\n- Fixed bug #35720 (A final constructor can be overwritten). (Marcus)\n- Fixed bug #35713 (getopt() returns array with numeric strings when passed\n  options like '-1'). (Tony)\n- Fixed bug #35705 (strtotime() fails to parse soap date format without TZ).\n  (Ilia)\n- Fixed bug #35699 (date() can't handle leap years before 1970). (Derick)\n- Fixed bug #35694 (Improved error message for invalid fetch mode). (Ilia)\n- Fixed bug #35692 (iconv_mime_decode() segmentation fault; with libiconv\n  only). (Tony)\n- Fixed bug #35690 (pack() tries to allocate huge memory block when packing\n  float values to strings). (Tony)\n- Fixed bug #35669 (imap_mail_compose() crashes with\n  multipart-multiboundary-email). (Ilia)\n- Fixed bug #35660 (AIX TZ variable format not understood, yields UTC\n  timezone). (Derick)\n- Fixed bug #35655 (whitespace following end of heredoc is lost). (Ilia)\n- Fixed bug #35630 (strtotime() crashes on certain relative identifiers).\n  (Ilia)\n- Fixed bug #35629 (crash in http:// wrapper on multiple redirects). (Ilia)\n- Fixed bug #35624 (strtotime() does not handle 3 character weekdays). (Ilia)\n- Fixed bug #35612 (iis6 Access Violation crash). (Dmitry, alacn.uhahaa)\n- Fixed bug #35594 (Multiple calls to getopt() may result in a crash).\n  (rabbitt at gmail dot com, Ilia)\n- Fixed bug #35571 (Fixed crash in Apache 2 SAPI when more then one php\n  script is loaded via SSI include). (Ilia)\n- Fixed bug #35570 (segfault when re-using soap client object). (Dmitry)\n- Fixed bug #35558 (mktime() interpreting 3 digit years incorrectly). (Ilia)\n- Fixed bug #35543 (php crash when calling non existing method of a class\n  that extends PDO). (Tony)\n- Fixed bug #35539 (typo in error message for ErrorException). (Tony)\n- FIxed bug #35536 (mysql_field_type() doesn't handle NEWDECIMAL). (Tony)\n- Fixed bug #35517 (mysql_stmt_fetch returns NULL on data truncation). (Georg)\n- Fixed bug #35509 (string constant as array key has different behavior inside\n  object). (Dmitry)\n- Fixed bug #35508 (PDO fails when unknown fetch mode specified). (Tony)\n- Fixed bug #35499 (strtotime() does not handle whitespace around the date\n  string). (Ilia)\n- Fixed bug #35496 (Crash in mcrypt_generic()/mdecrypt_generic() without\n  proper init). (Ilia)\n- Fixed bug #35490 (socket_sendto() unable to handle IPv6 addresses). (Tony)\n- Fixed bug #35461 (Ming extension fails to compile with ming 0.3beta1). (Jani)\n- Fixed bug #35437 (Segfault or Invalid Opcode 137/1/4). (Dmitry)\n- Fixed bug #35470 (Assigning global using variable name from array doesn't\n  function). (Dmitry)\n- Fixed bug #35456 (+ 1 [time unit] format did not work). (Ilia)\n- Fixed bug #35447 (xml_parse_into_struct() chokes on the UTF-8 BOM). (Rob)\n- Fixed bug #35431 (PDO crashes when using LAZY fetch with fetchAll). (Wez)\n- Fixed bug #35430 (PDO crashes on incorrect FETCH_FUNC use). (Tony)\n- Fixed bug #35427 (str_word_count() handles '-' incorrectly). (Ilia)\n- Fixed bug #35425 (idate() function ignores timezone settings). (Ilia)\n- Fixed bug #35422 (strtotime() does not parse times with UTC as timezone).\n  (Ilia)\n- Fixed bug #35414 (strtotime() no longer works with ordinal suffix). (Ilia)\n- Fixed bug #35410 (wddx_deserialize() doesn't handle large ints as keys\n  properly). (Ilia)\n- Fixed bug #35409 (undefined reference to 'rl_completion_matches'). (Jani)\n- Fixed bug #35399 (Since fix of bug #35273 SOAP decoding of\n  soapenc:base64binary fails). (Dmitry)\n- Fixed bug #35393 (changing static protected members from outside the class,\n  one more reference issue). (Dmitry)\n- Fixed bug #35381 (ssl library is not initialized properly). (Alan)\n- Fixed bug #35377 (PDO_SQLITE: undefined reference to \"fdatasync\").\n  (Nuno, Jani)\n- Fixed bug #35373 (HP-UX \"alias not allowed in this configuration\"). (Dmitry)\n- Fixed bug #35288 (iconv() function defined as libiconv()). (Nuno)\n- Fixed bug #35103 (mysqli handles bad unsigned (big)int incorrectly).(Andrey)\n- Fixed bug #35062 (socket_read() produces warnings on non blocking sockets).\n  (Nuno, Ilia)\n- Fixed bug #35028 (SimpleXML object fails FALSE test). (Marcus)\n- Fixed bug #34729 (Crash in ZTS mode under Apache). (Dmitry, Zeev)\n- Fixed bug #34429 (Output buffering cannot be turned off with FastCGI).\n  (Dmitry, Ilya)\n- Fixed bug #34359 (Possible crash inside fopen http wrapper). (Ilia,Sara,Nuno)\n- Fixed bug #33789 (Many Problems with SunFuncs). (Derick)\n- Fixed bug #33671 (sun_rise and sun_set don't return a GMT timestamp if one\n  passes an offset). (Derick)\n- Fixed bug #32820 (date_sunrise and date_sunset don't handle GMT offset\n  well). (Derick)\n- Fixed bug #31347 (is_dir and is_file (incorrectly) return true for any string\n  greater then 255 characters). (Nuno,Ilia)\n- Fixed bug #30937 (date_sunrise() & date_sunset() don't handle endless\n  day/night at high latitudes). (Derick)\n- Fixed bug #30760 (Remove MessageBox on win32 for E_CORE errors if\n  display_startup_error is off). (Ilia)\n- Fixed bug #29955 (mb_strtoupper() / lower() broken with Turkish encoding).\n  (Rui)\n- Fixed bug #28899 (mb_substr() and substr() behave differently when\n  \"mbstring.func_overload\" is enabled). (Rui)\n- Fixed bug #27678 (number_format() crashes with large numbers). (Marcus)\n\n28 Nov 2005, PHP 5.1.1\n- Disabled native date class to prevent pear::date conflict. (Ilia)\n- Changed reflection constants be both PHP and class constants. (Johannes)\n- Added an additional field $frame['object'] to the result array of\n  debug_backtrace() that contains a reference to the respective object when the\n  frame was called from an object. (Sebastian)\n- Fixed bug #35423 (RecursiveDirectoryIterator doesnt appear to recurse with\n  RecursiveFilterIterator). (Marcus)\n- Fixed bug #35413 (Removed -dev flag from Zend Engine version). (Ilia)\n- Fixed bug #35411 (Regression with \\{$ handling). (Ilia)\n- Fixed bug #35406 (eval hangs when evall'ed code ends with comment w/o\n  newline). (Marcus)\n- Fixed bug #35391 (pdo_mysql::exec does not return number of affected rows).\n  (Tony)\n- Fixed bug #35382 (Comment in end of file produces fatal error). (Ilia)\n- Fixed bug #35360 (exceptions in interactive mode (php -a) may cause crash).\n  (Dmitry)\n- Fixed bug #35358 (Incorrect error messages for PDO class constants). (Ilia)\n- Fixed bug #35338 (pdo_pgsql does not handle binary bound params). (Wez)\n- Fixed bug #35316 (Application exception trying to create COM object). (Rob)\n- Fixed bug #35170 (PHP_AUTH_DIGEST differs under Apache 1.x and 2.x). (Ilia)\n\n24 Nov 2005, PHP 5.1\n- Added support for class constants and static members for internal classes.\n  (Dmitry, Michael Wallner)\n- Added \"new_link\" parameter to mssql_connect() (Bug #34369). (Frank)\n- Added missing safe_mode checks for image* functions and cURL. (Ilia)\n- Added missing safe_mode/open_basedir checks for file uploads. (Ilia)\n- Added PDO_MYSQL_ATTR_USE_BUFFERED_QUERY parameter for pdo_mysql. (Ilia)\n- Added date_timezone_set() function to set the timezone that the date\n  function will use. (Derick)\n- Added pg_fetch_all_columns() function to fetch all values of a column from a\n  result cursor. (Ilia)\n- Added support for LOCK_EX flag for file_put_contents(). (Ilia)\n- Added bindto socket context option. (Ilia)\n- Added offset parameter to the stream_copy_to_stream() function. (Ilia)\n- Added offset & length parameters to substr_count() function. (Ilia)\n- Added man pages for \"phpize\" and \"php-config\" scripts. (Jakub Vrana)\n- Added support for .cc files in extensions. (Brian)\n- Added PHP_INT_MAX and PHP_INT_SIZE as predefined constants. (Andrey)\n- Added user opcode API that allow overloading of opcode handlers. (Dmitry)\n- Added an optional remove old session parameter to session_regenerate_id().\n  (Ilia)\n- Added array type hinting. (Dmitry)\n- Added the tidy_get_opt_doc() function to return documentation for\n  configuration options in tidy. (Patch by: nlopess@php.net)\n- Added support for .cc files in extensions. (Brian)\n- Added imageconvolution() function which can be used to apply a custom 3x3\n  matrix convolution to an image. (Pierre)\n- Added optional first parameter to XsltProcessor::registerPHPFunctions to\n  only allow certain functions to be called from XSLT. (Christian)\n- Added the ability to override the autotools executables used by the\n  buildconf script via the PHP_AUTOCONF and PHP_AUTOHEADER environmental\n  variables. (Jon)\n- Added several new functions to support the PostgreSQL v3 protocol introduced\n  in PostgreSQL 7.4. (Christopher)\n  . pg_transaction_status() - in-transaction status of a database connection.\n  . pg_query_params() - execution of parameterized queries.\n  . pg_prepare() - prepare named queries.\n  . pg_execute() - execution of named prepared queries.\n  . pg_send_query_params() - async equivalent of pg_query_params().\n  . pg_send_prepare() - async equivalent of pg_prepare().\n  . pg_send_execute() - async equivalent of pg_execute().\n  . pg_result_error_field() - highly detailed error information, most\n    importantly\n    the SQLSTATE error code.\n  . pg_set_error_verbosity() - set verbosity of errors.\n- Added optional fifth parameter \"count\" to preg_replace_callback() and\n  preg_replace() to count the number of replacements made. FR #32275. (Andrey)\n- Added optional third parameter \"charlist\" to str_word_count() which contains\n  characters to be considered as word part. FR #31560. (Andrey, Ilia)\n- Added interface Serializable. (Stanislav, Marcus)\n- Added pg_field_type_oid() PostgreSQL function. (mauroi at digbang dot com)\n- Added zend_declare_property_...() and zend_update_property_...() API\n  functions for bool, double and binary safe strings. (Hartmut)\n- Added possibility to access INI variables from within .ini file. (Andrei)\n- Added variable $_SERVER['REQUEST_TIME'] containing request start time.\n  (Ilia)\n- Added optional float parameter to gettimeofday(). (Ilia)\n- Added apache_reset_timeout() Apache1 function. (Rasmus)\n- Added sqlite_fetch_column_types() 3rd argument for arrays. (Ilia)\n- Added optional offset parameter to stream_get_contents() and\n  file_get_contents(). (Ilia)\n- Added optional maxlen parameter to file_get_contents(). (Ilia)\n- Added SAPI hook to get the current request time. (Rasmus)\n- Added new functions:\n  . array_diff_key() (Andrey)\n  . array_diff_ukey() (Andrey)\n  . array_intersect_key() (Christiano Duarte)\n  . array_intersect_ukey() (Christiano Duarte)\n  . array_product() (Andrey)\n  . DomDocumentFragment::appendXML() (Christian)\n  . fputcsv() (David Sklar)\n  . htmlspecialchars_decode() (Ilia)\n  . inet_pton() (Sara)\n  . inet_ntop() (Sara)\n  . mysqli::client_info property (Georg)\n  . posix_access() (Magnus)\n  . posix_mknod() (Magnus)\n  . SimpleXMLElement::registerXPathNamespace() (Christian)\n  . stream_context_get_default() (Wez)\n  . stream_socket_enable_crypto() (Wez)\n  . stream_wrapper_unregister() (Sara)\n  . stream_wrapper_restore() (Sara)\n  . stream_filter_remove() (Sara)\n  . time_sleep_until() (Ilia)\n- Added DomDocument::$recover property for parsing not well-formed XML\n Documents. (Christian)\n- Added Cursor support for MySQL 5.0.x in mysqli (Georg)\n- Added proxy support to ftp wrapper via http. (Sara)\n- Added MDTM support to ftp_url_stat. (Sara)\n- Added zlib stream filter support. (Sara)\n- Added bz2 stream filter support. (Sara)\n- Added max_redirects context option that specifies how many HTTP\n  redirects to follow. (Ilia)\n- Added support of parameter=>value arrays to\n  xsl_xsltprocessor_set_parameter(). (Tony)\n\n- PHP extension loading mechanism with support for module\n  dependencies and conflicts. (Jani, Dmitry)\n- Improved interactive mode of PHP CLI (php -a). (Johannes, Marcus)\n- Improved performance of:\n  . general execution/compilation. (Andi, Thies, Sterling, Dmitry, Marcus)\n  . switch() statement. (Dmitry)\n  . several array functions. (Marcus)\n  . virtual path handling by adding a realpath() cache. (Andi)\n  . variable fetches. (Andi)\n  . magic method invocations. (Marcus)\n- Improved support for embedded server in mysqli. (Georg)\n- Improved mysqli extension. (Georg)\n  . added constructor for mysqli_stmt and mysqli_result classes\n  . added new function mysqli_get_charset()\n  . added new function mysqli_set_charset()\n  . added new class mysqli_driver\n  . added new class mysqli_warning\n  . added new class mysqli_exception\n  . added new class mysqli_sql_exception\n- Improved SPL extension. (Marcus)\n  . Moved RecursiveArrayIterator from examples into extension\n  . Moved RecursiveFilterIterator from examples into extension\n  . Added SplObjectStorage\n  . Made all SPL constants class constants\n  . Renamed CachingRecursiveIterator to RecursiveCachingIterator to follow\n    Recursive<*>Iterator naming scheme.\n  . added standard hierarchy of Exception classes\n  . added interface Countable\n  . added interfaces Subject and SplObserver\n  . added spl_autoload*() functions\n  . converted several 5.0 examples into c code\n  . added class SplFileObject\n  . added possibility to use a string with class_parents() and\n    class_implements(). (Andrey)\n\n- Changed type hints to allow \"null\" as default value for class and array.\n  (Marcus, Derick, Dmitry)\n- Changed SQLite extension to be a shared module in Windows distribution.\n  (Edin)\n- Changed \"instanceof\" and \"catch\" operators, is_a() and is_subclass_of()\n  functions to not call __autoload(). (Dmitry)\n- Changed sha1_file() and md5_file() functions to use streams instead of low\n  level IO. (Uwe)\n- Changed abstract private methods to be not allowed anymore. (Stas)\n- Changed stream_filter_(ap|pre)pend() to return resource. (Sara)\n- Changed mysqli_exception and sqlite_exception to use RuntimeException as\n  base if SPL extension is present. (Georg, Marcus)\n\n- Upgraded bundled libraries:\n  . PCRE library to version 6.2. (Andrei)\n  . SQLite 3 library in ext/pdo_sqlite to 3.2.7. (Ilia)\n  . SQLite 2 library in ext/sqlite to 2.8.16. (Ilia)\n- Upgraded bundled libraries in Windows distribution. (Edin)\n  . zlib 1.2.3\n  . curl 7.14.0\n  . openssl 0.9.8\n  . ming 0.3b\n  . libpq (PostgreSQL) 8.0.1\n\n- Implemented feature request #33452 (Year belonging to ISO week). (Derick)\n- Allowed return by reference from internal functions. (Marcus, Andi, Dmitry)\n- Rewrote strtotime() with support for timezones and many new formats.\n  Implements feature requests #21399, #26694, #28088, #29150, #29585 and\n  #29595. (Derick)\n\n- Moved extensions to PECL:\n  . ext/cpdf        (Tony, Derick)\n  . ext/dio         (Jani, Derick)\n  . ext/fam         (Jani, Derick)\n  . ext/ingres_ii   (Jani, Derick)\n  . ext/mnogosearch (Jani, Derick)\n  . ext/w32api      (Jani, Derick)\n  . ext/yp          (Jani, Derick)\n  . ext/mcve        (Jani, Derick, Pierre)\n  . ext/oracle      (Jani, Derick)\n  . ext/ovrimos     (Jani, Derick, Pierre)\n  . ext/pfpro       (Jani, Derick, Pierre)\n  . ext/dbx         (Jani, Derick)\n  . ext/ircg        (Jani, Derick)\n\n- Removed php_check_syntax() function which never worked properly. (Ilia)\n- Removed garbage manager in Zend Engine which results in more aggressive\n  freeing of data. (Dmitry, Andi)\n\n- Fixed \"make test\" to work for phpized extensions. (Hartmut, Jani)\n- Fixed Apache 2 regression with sub-request handling on non-linux systems.\n  (Ilia, Tony)\n- Fixed PDO shutdown problem (possible infinite loop running rollback on\n  shutdown). (Wez)\n- Fixed PECL bug #3714 (PDO: beginTransaction doesn't work if you're in\n  auto-commit mode). (Wez)\n- Fixed ZTS destruction. (Marcus)\n- Fixed __get/__set to allow recursive calls for different properties. (Dmitry)\n- Fixed a bug where stream_get_meta_data() did not return the \"uri\" element\n  for files opened with tmpname(). (Derick)\n- Fixed a problem with SPL iterators aggregating the inner iterator. (Marcus)\n- Fixed an error in mysqli_fetch_fields (returned NULL instead of an array\n  when row number > field_count). (Georg)\n- Fixed bug in mysql::client_version(). (Georg)\n- Fixed bug in mysqli extension with unsigned int(11) being represented as\n  signed integer in PHP instead of string in 32bit systems. (Andrey)\n- Fixed bug with $HTTP_RAW_POST_DATA not getting set. (Brian)\n- Fixed crash inside stream_get_line() when length parameter equals 0. (Ilia)\n- Fixed ext/mysqli to allocate less memory when fetching bound params of type\n  (MEDIUM|LONG)BLOB/(MEDIUM|LONG)TEXT. (Andrey)\n- Fixed extension initialization to respect dependencies between extensions.\n  (Wez)\n- Fixed failing queries (FALSE returned) with mysqli_query() on 64 bit systems.\n  (Andrey)\n- Fixed fgetcsv() and fputcsv() inconsistency. (Dmitry)\n- Fixed inheritance check to control return by reference and pass by\n  reference correctly (ArrayAccess can no longer support references correctly).\n  (Marcus, Andi, Dmitry)\n- Fixed initializing and argument checking for posix_mknod(). (Derick)\n- Fixed memory corruption in ImageTTFText() with 64bit systems. (Andrey)\n- Fixed memory corruption in pg_copy_from() in case the as_null parameter was\n  passed. (Derick)\n- Fixed memory corruption in stristr(). (Derick)\n- Fixed possible GLOBALS variable override when register_globals are ON.\n  (Ilia, Stefan)\n- Fixed possible INI setting leak via virtual() in Apache 2 sapi. (Ilia)\n- Fixed possible register_globals toggle via parse_str(). (Ilia, Stefan)\n- Fixed potential GLOBALS overwrite via import_request_variables() and\n  possible crash and/or memory corruption. (Ilia)\n- Fixed segfaults when CURL callback functions throw exception. (Tony)\n- Fixed support for shared extensions on AIX. (Dmitry)\n- Fixed bug #35342 (isset(DOMNodeList->length) returns false). (Rob)\n- Fixed bug #35341 (Fix for bug #33760 breaks build with older curl). (Tony)\n- Fixed bug #35336 (crash on PDO::FETCH_CLASS + __set()). (Tony)\n- Fixed bug #35303 (PDO prepare() crashes with invalid parameters). (Ilia)\n- Fixed bug #35293 (PDO segfaults when using persistent connections). (Tony)\n- Fixed bug #35278 (Multiple virtual() calls crash Apache 2 php module). (Ilia)\n- Fixed bug #35273 (Error in mapping soap - java types). (Dmitry)\n- Fixed bug #35249 (compile failure when ext/readline is compiled as shared).\n  (Jani)\n- Fixed bug #35248 (sqlite_query() doesn't set error_msg when return value is\n  being used). (Ilia)\n- Fixed bug #35243 (php_mblen() crashes when compiled with thread-safety on\n  Linux). (Patch: shulmanb at il dot ibm dot com, Jani)\n- Fixed bug #35239 (Objects can lose references). (Dmitry)\n- Fixed bug #35229 (call_user_func() crashes when argument_stack is nearly\n  full). (Dmitry)\n- Fixed bug #35197 (Destructor is not called). (Tony)\n- Fixed bug #35179 (tokenizer extension needs T_HALT_COMPILER). (Greg)\n- Fixed bug #35176 (include()/require()/*_once() produce wrong error messages\n  about main()). (Dmitry)\n- Fixed bug #35147 (__HALT_COMPILER() breaks with --enable-zend-multibyte).\n  (Dmitry, Moriyoshi)\n- Fixed bug #35143 (gettimeofday() ignores current time zone). (Derick)\n- Fixed bug #35142 (SOAP Client/Server Complex Object Support). (Dmitry)\n- Fixed bug #35135 (PDOStatment without related PDO object may crash). (Ilia)\n- Fixed bug #35091 (SoapClient leaks memory). (Dmitry)\n- Fixed bug #35079 (stream_set_blocking(true) toggles, not enables blocking).\n  (askalski at gmail dot com, Tony)\n- Fixed bug #35078 (configure does not find ldap_start_tls_s). (Jani)\n- Fixed bug #35046 (phpinfo() uses improper css enclosure). (Ilia)\n- Fixed bugs #35022, #35019 (Regression in the behavior of key() and\n  current() functions). (Ilia)\n- Fixed bug #35017 (Exception thrown in error handler may cause unexpected\n  behavior). (Dmitry)\n- Fixed bug #35014 (array_product() always returns 0). (Ilia)\n- Fixed bug #35009 (ZTS: Persistent resource destruct crashes when extension\n  is compiled as shared). (Dmitry)\n- Fixed bug #34996 (ImageTrueColorToPalette() crashes when ncolors is zero).\n  (Tony)\n- Fixed bug #34982 (array_walk_recursive() modifies elements outside function\n  scope). (Dmitry)\n- Fixed bug #34977 (Compile failure on MacOSX due to use of varargs.h). (Tony)\n- Fixed bug #34968 (bz2 extension fails on to build on some win32 setups).\n (Ilia)\n- Fixed bug #34965 (tidy is not binary safe). (Mike)\n- Fixed bug #34957 (PHP doesn't respect ACLs for access checks). (Wez)\n- Fixed bug #34950 (Unable to get WSDL through proxy). (Dmitry)\n- Fixed bug #34938 (dns_get_record() doesn't resolve long hostnames and\n  leaks). (Tony)\n- Fixed bug #34905 (Digest authentication does not work with Apache 1). (Ilia)\n- Fixed bug #34902 (mysqli::character_set_name() - undefined method). (Tony)\n- Fixed bug #34899 (Fixed sqlite extension compile failure). (Ilia)\n- Fixed bug #34893 (PHP5.1 overloading, Cannot access private property).\n  (Dmitry)\n- Fixed bug #34884 (Possible crash in ext/sqlite when sqlite.assoc_case is\n  being used). (Tony, Ilia)\n- Fixed bug #34879 (str_replace, array_map corrupt negative array indexes on\n  64-bit platforms). (Dmitry)\n- Fixed bug #34873 (Segmentation Fault on foreach in object). (Dmitry)\n- Fixed bug #34856 (configure fails to detect libiconv's type). (Tony)\n- Fixed bug #34855 (ibase_service_attach() segfault on AMD64).\n  (irie at gmx dot de, Tony)\n- Fixed bug #34851 (SO_RECVTIMEO and SO_SNDTIMEO socket options expect\n  integer parameter on Windows). (Mike)\n- Fixed bug #34850 (--program-suffix and --program-prefix not included in\n  man page names). (Jani)\n- Fixed bug #34821 (zlib encoders fail on widely varying binary data on\n  windows). (Mike, Ilia)\n- Fixed bug #34818 (several functions crash when invalid mysqli_link object\n  is passed). (Tony)\n- Fixed bug #34810 (mysqli::init() and others use wrong $this pointer without\n  checks). (Tony)\n- Fixed bug #34809 (FETCH_INTO in PDO crashes without a destination object).\n  (Ilia)\n- Fixed bug #34802 (Fixed crash on object instantiation failure). (Ilia)\n- Fixed bug #34796 (missing SSL linking in ext/ftp when configured as shared).\n  (Jani)\n- Fixed bug #34790 (preg_match_all(), named capturing groups, variable\n  assignment/return => crash). (Dmitry)\n- Fixed bug #34788 (SOAP Client not applying correct namespace to generated\n  values). (Dmitry)\n- Fixed bug #34787 (SOAP Client not handling boolean types correctly). (Dmitry)\n- Fixed bug #34786 (2 @ results in change to error_reporting() to random\n  value) (Dmitry, Tony)\n- Fixed bug #34785 (subclassing of mysqli_stmt does not work). (Georg)\n- Fixed bug #34782 (token_get_all() gives wrong result). (Dmitry)\n- Fixed bug #34777 (Crash in dblib when fetching non-existent error info).\n  (Ilia)\n- Fixed bug #34771 (strtotime() fails with 1-12am/pm). (Derick)\n- Fixed bug #34767 (Zend Engine 1 Compatibility not copying objects\n  correctly). (Dmitry)\n- Fixed bug #34758 (PDO_DBLIB did not implement rowCount()). (Ilia)\n- Fixed bug #34757 (iconv_substr() gives \"Unknown error\" when offset > string\n  length). (Tony)\n- Fixed bug #34742 (ftp wrapper failures caused from segmented command\n  transfer). (Ilia)\n- Fixed bug #34725 (CLI segmentation faults during cleanup). (Dmitry)\n- Fixed bug #34723 (array_count_values() strips leading zeroes). (Tony)\n- Fixed bug #34712 (zend.ze1_compatibility_mode = on segfault). (Dmitry)\n- Fixed bug #34704 (Infinite recursion due to corrupt JPEG). (Marcus)\n- Fixed bug #34678 (__call(), is_callable() and static methods). (Dmitry)\n- Fixed bug #34676 (missing support for strtotime(\"midnight\") and\n  strtotime(\"noon\")). (Derick)\n- Fixed bug #34645 (ctype corrupts memory when validating large numbers).\n (Ilia)\n- Fixed bug #34643 (wsdl default value has no effect). (Dmitry)\n- Fixed bug #34623 (Crash in pdo_mysql on longtext fields). (Ilia)\n- Fixed bug #34617 (zend_deactivate: objects_store used after\n  zend_objects_store_destroy is called). (Dmitry)\n- Fixed bug #34590 (User defined PDOStatement class can't implement\n  methods). (Marcus)\n- Fixed bug #34584 (Segfault with SPL autoload handler). (Marcus)\n- Fixed bug #34581 (crash with mod_rewrite). (Tony, Ilia)\n- Fixed bug #34565 (mb_send_mail does not fetch\n  mail.force_extra_parameters). (Marco, Ilia)\n- Fixed bug #34557 (php -m exits with \"error\" 1). (Johannes)\n- Fixed bug #34518 (Unset doesn't separate container in CV). (Dmitry)\n- Fixed bug #34505 (Possible memory corruption when unmangling properties\n  with empty names). (Tony)\n- Fixed bug #34478 (Incorrect parsing of url's fragment (#...)). (Dmitry)\n- Fixed bug #34467 (foreach + __get + __set inconsistency). (Dmitry)\n- Fixed bug #34456 (Possible crash inside pspell extension). (Ilia)\n- Fixed bug #34453 (parsing http://www.w3.org/2001/xml.xsd exception). (Dmitry)\n- Fixed bug #34450 (Segfault when calling mysqli_close() in destructor). (Tony)\n- Fixed bug #34449 (ext/soap: XSD_ANYXML functionality not exposed). (Dmitry)\n- Fixed bug #34420 (Possible crash inside curl_multi_remove_handle()). (Ilia)\n- Fixed bug #34358 (Fatal error: Cannot re-assign $this). (Dmitry)\n- Fixed bug #34331 (php crashes when variables_order is empty). (Ilia)\n- Fixed bug #34321 (Possible crash in filter code). (Ilia)\n- Fixed bug #34311 (unserialize() crashes with chars above 191 dec). (Nuno)\n- Fixed bug #34310 (foreach($arr as $c->d => $x) crashes). (Dmitry)\n- Fixed bug #34307 (on_modify handler not called to set the default value if\n  setting from php.ini was invalid). (Andrei)\n- Fixed bug #34306 (wddx_serialize_value() crashes with long array keys).\n  (Jani)\n- Fixed bug #34304 (date() doesn't have a modifier for ISO Week Day). (Derick)\n- Fixed bug #34302 (date('W') do not return leading zeros for week 1 to 9).\n  (Derick)\n- Fixed bug #34299 (ReflectionClass::isInstantiable() returns true for abstract\n  classes). (Marcus)\n- Fixed bug #34284 (CLI phpinfo showing html on _SERVER[\"argv\"]). (Jani)\n- Fixed bug #34277 (array_filter() crashes with references and objects).\n  (Dmitry)\n- Fixed bug #34276 (setAttributeNS doesn't work with default namespace).\n  (Rob)\n- Fixed bug #34260 (Segfault with callbacks (array_map) + overloading).\n  (Dmitry)\n- Fixed bug #34257 (lib64 not handled correctly in ming extension). (Marcus)\n- Fixed bug #34221 (Compiling xmlrpc as shared fails other parts). (Jani)\n- Fixed bug #34216 (Segfault with autoload). (Marcus)\n- Fixed bug #34199 (if($obj)/if(!$obj) inconsistency because of cast handler).\n  (Dmitry, Alex)\n- Fixed bug #34191 (ob_gzhandler does not enforce trailing \\0). (Ilia)\n- Fixed bug #34156 (memory usage remains elevated after memory limit is\n  reached). (Ilia)\n- Fixed bug #34148 (+,- and . not supported as parts of scheme). (Ilia)\n- Fixed bug #34137 (assigning array element by reference causes binary mess).\n  (Dmitry)\n- Fixed bug #34103 (line numbering not maintained in dom document). (Rob)\n- Fixed bug #34078 (Reflection API problems in methods with boolean or\n  null default values). (Tony)\n- Fixed bug #34068 (Numeric string as array key not cast to integer in\n  wddx_deserialize()). (Ilia)\n- Fixed bug #34064 (arr[] as param to function in class gives invalid\n  opcode). (Dmitry)\n- Fixed bug #34062 (Crash in catch block when many arguments are used).\n  (Dmitry)\n- Fixed bug #34052 (date('U') returns %ld not unix timestamp). (Nuno)\n- Fixed bug #34045 (Buffer overflow with serialized object). (Dmitry)\n- Fixed bug #34001 (pdo_mysql truncates numeric fields at 4 chars). (Ilia)\n- Fixed bug #33999 (object remains object when cast to int). (Dmitry)\n- Fixed bug #33996 (No information given for fatal error on passing invalid\n  value to typed argument). (Dmitry)\n- Fixed bug #33989 (extract($GLOBALS,EXTR_REFS) crashes PHP). (Dmitry)\n- Fixed bug #33987 (php script as ErrorDocument causes crash in Apache 2).\n  (Ilia)\n- Fixed bug #33967 (misuse of Exception constructor doesn't display\n  errorfile). (Jani)\n- Fixed bug #33966 (Wrong use of reflectionproperty causes a segfault). (Tony)\n- Fixed bug #33963 (mssql_bind() fails on input parameters). (Frank)\n- Fixed bug #33958 (duplicate cookies and magic_quotes=off may cause a crash).\n  (Ilia)\n- Fixed bug #33957 (gmdate('W')/date('W') sometimes returns wrong week number).\n  (Derick)\n- Fixed bug #33940 (array_map() fails to pass by reference when called\n  recursively). (Dmitry)\n- Fixed bug #33917 (number_format() output with > 1 char separators). (Jani)\n- Fixed bug #33904 (input array keys being escaped when magic quotes is off).\n  (Ilia)\n- Fixed bug #33903 (spl_autoload_register class method). (Marcus)\n- Fixed bug #33899 (CLI: setting extension_dir=some/path extension=foobar.so\n  does not work). (Jani)\n- Fixed bug #33882 (CLI was looking for php.ini in wrong path). (Hartmut)\n- Fixed bug #33869 (strtotime() problem with \"+1days\" format). (Ilia)\n- Fixed bug #33841 (pdo sqlite driver forgets to update affected column\n  count on execution of prepared statments). (Ilia)\n- Fixed bug #33837 (Informix ESQL version numbering schema changed). (Jani)\n- Fixed bug #33829 (mime_content_type() returns text/plain for gzip and bzip\n  files). (Derick)\n- Fixed bug #33802 (throw Exception in error handler causes crash). (Dmitry)\n- Fixed bug #33771 (error_reporting falls to 0 when @ was used inside\n  try/catch block). (Tony)\n- Fixed bug #33760 (cURL needs to implement CRYPTO_callback functions to\n  prevent locking). (Mike, Ilia)\n- Fixed bug #33732 (Wrong behavior of constants in class and interface\n  extending). (Dmitry)\n- Fixed bug #33723 (php_value overrides php_admin_value). (Dmitry)\n- Fixed bug #33720 (mb_encode_mimeheader does not work for multibyte\n  chars). (Rui)\n- Fixed bug #33710 (ArrayAccess objects does not initialize $this). (Dmitry)\n- Fixed bug #33690 (Crash setting some ini directives in httpd.conf). (Rasmus)\n- Fixed bug #33673 (Added detection for partially uploaded files). (Ilia)\n- Fixed bug #33605 (substr_compare() crashes with negative offset and length).\n  (Tony)\n- Fixed bug #33597 (setcookie() \"expires\" date format doesn't comply with RFC).\n  (Tony)\n- Fixed bug #33588 (LDAP: RootDSE query not possible). (Jani)\n- Fixed bug #33578 (strtotime() problem with \"Oct17\" format). (Derick)\n- Fixed bug #33578 (strtotime() doesn't understand \"11 Oct\" format). (Derick)\n- Fixed bug #33562 (date(\"\") crashes). (Derick)\n- Fixed bug #33558 (warning with nested calls to functions returning by\n  reference). (Dmitry)\n- Fixed bug #33536 (strtotime() defaults to now even on non time string).\n  (Derick)\n- Fixed bug #33532 (Different output for strftime() and date()). (Derick)\n- Fixed bug #33523 (Memory leak in xmlrpc_encode_request()). (Ilia)\n- Fixed bug #33520 (crash if safe_mode is on and session.save_path is changed).\n  (Dmitry)\n- Fixed bug #33512 (Add missing support for isset()/unset() overloading to\n  complement the property get/set methods). (Dmitry)\n- Fixed bug #33491 (crash after extending MySQLi internal class). (Tony)\n- Fixed bug #33475 (cURL handle is not closed on curl_close(). (Ilia)\n- Fixed bug #33469 (Compile error undefined reference to ifx_checkAPI). (Jani)\n- Fixed bug #33433 (strtoll not available on Tru64). (Jani, Derick)\n- Fixed bug #33427 (ext/odbc: check if unixODBC header file exists). (Jani)\n- Fixed bug #33415 (strtotime() related bugs). (Derick)\n- Fixed bug #33414 (Comprehensive list of incorrect days returned after\n  strtotime() / date() tests). (Derick)\n- Fixed bug #33389 (double free() when exporting a ReflectionClass). (Marcus)\n- Fixed bug #33383 (crash when retrieving empty LOBs). (Tony)\n- Fixed bug #33382 (array_reverse() fails after *sort()),  introduced by\n  zend_hash_sort() optimizations in HEAD. (Tony)\n- Fixed bug #33340 (CLI Crash when calling php:function from XSLT). (Rob)\n- Fixed bug #33326 (Cannot build extensions with phpize on Macosx). (Jani)\n- Fixed bug #33318 (throw 1; results in Invalid opcode 108/1/8). (Dmitry)\n- Fixed bug #33312 (ReflectionParameter methods do not work correctly).\n  (Dmitry)\n- Fixed bug #33299 (php:function no longer handles returned dom objects).\n  (Rob, Joe Orton)\n- Fixed bug #33286 (nested array_walk() calls and user array compare functions\n  broken; FCI cache). (Andrei, patch from m.bretz@metropolis-ag.de)\n- Fixed bug #33277 (private method accessed by child class). (Dmitry)\n- Fixed bug #33268 (iconv_strlen() works only with a parameter of < 3 in\n  length). (Ilia)\n- Fixed bug #33257 (array_splice() inconsistent when passed function instead of\n  variable). (Dmitry)\n- Fixed bug #33243 (ze1_compatibility_mode does not work as expected). (Dmitry)\n- Fixed bug #33242 (Mangled error message when stream fails). (Derick)\n- Fixed bug #33222 (segfault when CURL handle is closed in a callback). (Tony)\n- Fixed bug #33214 (odbc_next_result does not signal SQL errors with\n  2-statement SQL batches). (rich at kastle dot com, Tony)\n- Fixed bug #33212 ([GCC 4]: 'zend_error_noreturn' aliased to external symbol\n  'zend_error'). (Dmitry)\n- Fixed bug #33210 (relax jpeg recursive loop protection). (Ilia)\n- Fixed bug #33201 (Crash when fetching some data types). (Frank)\n- Fixed bug #33200 (preg_replace(): magic_quotes_sybase=On makes 'e' modifier\n  misbehave). (Jani)\n- Fixed bug #33185 (--enable-session=shared does not build). (Jani)\n- Fixed bug #33171 (foreach enumerates private fields declared in base\n  classes). (Dmitry)\n- Fixed bug #33167 (Possible crash inside pg_fetch_array()). (Ilia)\n- Fixed bug #33164 (Soap extension incorrectly detects HTTP/1.1). (Ilia)\n- Fixed bug #33156 (cygwin version of setitimer doesn't accept ITIMER_PROF).\n  (Nuno)\n- Fixed bug #33153 (crash in mssql_next result). (Frank)\n- Fixed bug #33150 (shtool: insecure temporary file creation). (Jani)\n- Fixed bug #33136 (method offsetSet in class extended from ArrayObject crash\n  PHP). (Marcus)\n- Fixed bug #33125 (imagecopymergegray() produces mosaic rainbow effect).\n  (Pierre)\n- Fixed bug #33116 (crash when assigning class name to global variable in\n  __autoload). (Dmitry)\n- Fixed bug #33090 (mysqli_prepare() doesn't return an error). (Georg)\n- Fixed bug #33076 (str_ireplace() incorrectly counts result string length\n  and may cause segfault). (Tony)\n- Fixed bug #33072 (Add a safemode/open_basedir check for runtime\n  \"session.save_path\" change using session_save_path() function). (Rasmus)\n- Fixed bug #33070 (Improved performance of bzdecompress() by several orders\n  of magnitude). (Ilia)\n- Fixed bug #33059 (crash when moving xml attribute set in dtd). (Ilia)\n- Fixed bug #33057 (Don't send extraneous entity-headers on a 304 as per\n  RFC 2616 section 10.3.5) (Rasmus, Choitel)\n- Fixed bug #33019 (socket errors cause memory leaks in php_strerror()).\n  (jwozniak23 at poczta dot onet dot pl, Tony).\n- Fixed bug #33017 (\"make distclean\" gives an error with VPATH build). (Jani)\n- Fixed bug #33013 (\"next month\" was handled wrong while parsing dates).\n  (Derick)\n- Fixed bug #32993 (implemented Iterator function current() don't throw\n  exception). (Dmitry)\n- Fixed bug #32981 (ReflectionMethod::getStaticVariables() causes apache2.0.54\n  seg fault). (Dmitry)\n- Fixed bug #32956 (mysql_bind_result() doesn't support MYSQL_TYPE_NULL).\n  (Georg)\n- Fixed bug #32947 (Incorrect option for mysqli default password). (Georg)\n- Fixed bug #32944 (Disabling session.use_cookies doesn't prevent reading\n  session cookies). (Jani, Tony)\n- Fixed bug #32941 (Sending structured SOAP fault kills a php). (Dmitry)\n- Fixed bug #32937 (open_basedir looses trailing / in the limiter).\n  (Adam Conrad)\n- Fixed bug #32936 (http redirects URLs are not checked for control chars).\n  (Ilia)\n- Fixed bug #32933 (Cannot extend class \"SQLiteDatabase\"). (Marcus)\n- Fixed bug #32932 (Oracle LDAP: ldap_get_entries(), invalid pointer). (Jani)\n- Fixed bug #32930 (class extending DOMDocument doesn't clone properly). (Rob)\n- Fixed bug #32924 (file included with \"auto_prepend_file\" can be included\n  with require_once() or include_once()). (Stas)\n- Fixed bug #32904 (pg_get_notify() ignores result_type parameter). (Tony)\n- Fixed bug #32852 (Crash with singleton and __destruct when\n  zend.ze1_compatibility_mode = On). (Dmitry)\n- Fixed bug #32833 (Invalid opcode). (Dmitry)\n- Fixed bug #32813 (parse_url() does not handle scheme-only urls properly).\n  (Ilia)\n- Fixed bug #32810 (temporary files not using plain file wrapper). (Ilia)\n- Fixed bug #32809 (Missing T1LIB support on Windows). (Edin)\n- Fixed bug #32802 (General cookie overrides more specific cookie). (Ilia)\n- Fixed bugs #32800, #32830 (ext/odbc: Problems with 64bit systems). (Jani)\n- Fixed bug #32799 (crash: calling the corresponding global var during the\n  destruct). (Dmitry)\n- Fixed bug #32776 (SOAP doesn't support one-way operations). (Dmitry)\n- Fixed bug #32773 (GMP functions break when second parameter is 0). (Stas)\n- Fixed bug #32759 (incorrect determination of default value (COM)). (Wez)\n- Fixed bug #32758 (Cannot access safearray properties in VB6 objects). (Wez)\n- Fixed bug #32755 (Segfault in replaceChild() when DocumentFragment has no\n  children). (Rob)\n- Fixed bug #32753 (Undefined constant SQLITE_NOTADB). (Ilia)\n- Fixed bug #32742 (segmentation fault when the stream with a wrapper\n  is not closed). (Tony, Dmitry)\n- Fixed bug #32699 (pg_affected_rows() was defined when it was not available).\n  (Derick)\n- Fixed bug #32686 (Require/include file in destructor causes segfault).\n  (Marcus)\n- Fixed bug #32682 (ext/mssql: Error on module shutdown when called from\n  activescript). (Frank)\n- Fixed bug #32674 (exception in iterator causes crash). (Dmitry)\n- Fixed bug #32660 (Assignment by reference causes crash when field access is\n  overloaded (__get)). (Dmitry)\n- Fixed bug #32647 (Using register_shutdown_function() with invalid callback\n  can crash PHP). (Jani)\n- Fixed bug #32615 (Segfault in replaceChild() using fragment when\n  previousSibling is NULL). (Rob)\n- Fixed bug #32613 (ext/snmp: use of snmp_shutdown() causes snmpapp.conf\n  access errors). (Jani, ric at arizona dot edu)\n- Fixed bug #32608 (html_entity_decode() converts single quotes even if\n  ENT_NOQUOTES is given). (Ilia)\n- Fixed bug #32596 (Segfault/Memory Leak by getClass (etc) in __destruct).\n  (Dmitry)\n- Fixed bug #32591 (ext/mysql: Unsatisfied symbol: ntohs with HP-UX). (Jani)\n- Fixed bug #32589 (possible crash inside imap_mail_compose() function).\n  (Ilia)\n- Fixed bug #32589 (Possible crash inside imap_mail_compose, with charsets).\n  (Ilia)\n- Fixed bug #32587 (Apache2: errors sent to error_log do not include\n  timestamps). (Jani)\n- Fixed bug #32560 (configure looks for incorrect db2 library). (Tony)\n- Fixed bug #32553 (mmap loads only the 1st 2000000 bytes on Win32). (Ilia)\n- Fixed bug #32533 (proc_get_status() returns the incorrect process status).\n  (Ilia)\n- Fixed bug #32530 (chunk_split() does not append endstr if chunklen is\n  longer then the original string). (Ilia)\n- Fixed bug #32491 (File upload error - unable to create a temporary file).\n  (Uwe Schindler)\n- Fixed bug #32455 (wrong setting property to unset value). (Dmitry)\n- Fixed bug #32429 (method_exists() always return TRUE if __call method\n  exists). (Dmitry)\n- Fixed bug #32428 (The @ warning error suppression operator is broken).\n  (Dmitry)\n- Fixed bug #32427 (Interfaces are not allowed 'static' access modifier).\n  (Dmitry)\n- Fixed bug #32405 (mysqli::fetch() returns bad data - 64bit problem).\n  (Andrey)\n- Fixed bug #32296 (get_class_methods() output has changed between 5.0.2 and\n  5.0.3). (Dmitry)\n- Fixed bug #32282 (Segfault in mysqli_fetch_array on 64-bit). (Georg)\n- Fixed bug #32245 (xml_parser_free() in a function assigned to the xml\n  parser gives a segfault). (Rob)\n- Fixed bug #32179 (xmlrpc_encode() segfaults with recursive references).\n  (Tony)\n- Fixed bug #32171 (Userspace stream wrapper crashes PHP). (Tony, Dmitry)\n- Fixed bug #32160 (copying a file into itself leads to data loss). (Ilia)\n- Fixed bug #32139 (SOAP client does not auto-handle base64 encoding). (Ilia)\n- Fixed bug #32109 ($_POST is not populated in multi-threaded environment).\n  (Moriyoshi)\n- Fixed bug #32080 (segfault when assigning object to itself with\n  zend.ze1_compatibility_mode=On). (Dmitry)\n- Fixed bug #32021 (Crash caused by range('', 'z')). (Derick)\n- Fixed bug #32013 (ext/mysqli bind_result causes fatal error: memory limit).\n  (Andrey)\n- Fixed bug #32010 (Memory leak in mssql_fetch_batch). (fmk)\n- Fixed bug #32009 (crash when mssql_bind() is called more than once). (Frank)\n- Fixed bug #31971 (ftp_login fails on some SSL servers).\n  (frantisek at augusztin dot com)\n- Fixed bug #31887 (ISAPI: Custom 5xx error does not return correct HTTP\n  response message). (Jani)\n- Fixed bug #31828 (Crash with zend.ze1_compatibility_mode=On). (Dmitry)\n- Fixed bug #31668 (multi_query works exactly every other time - multi query\n  d/e flag global and not per connection). (Andrey)\n- Fixed bug #31636 (another crash when echoing a COM object). (Wez)\n- Fixed bug #31583 (php_std_date() uses short day names in non-y2k_compliance\n  mode). (mike at php dot net)\n- Fixed bug #31525 (object reference being dropped. $this getting lost).\n (Stas, Dmitry)\n- Fixed bug #31502 (Wrong deserialization from session when using WDDX\n  serializer). (Dmitry)\n- Fixed bug #31478 (segfault with empty() / isset()). (Moriyoshi)\n- Fixed bug #31465 (False warning in unpack() when working with *). (Ilia)\n- Fixed bug #31363 (broken non-blocking flock()). (ian at snork dot net)\n- Fixed bug #31358 (Older GCC versions do not provide portable va_copy()).\n  (Jani)\n- Fixed bug #31341 (escape on curly inconsistent). (Dmitry)\n- Fixed bug #31256 (PHP_EVAL_LIBLINE configure macro does not handle\n  -pthread). (Jani)\n- Fixed bug #31213 (Side effects caused by fix of bug #29493). (Dmitry)\n- Fixed bug #31177 (memory leaks and corruption because of incorrect\n  refcounting). (Dmitry)\n- Fixed bug #31158 (array_splice on $GLOBALS crashes). (Dmitry)\n- Fixed bug #31054 (safe_mode & open_basedir checks only check first\n  include_path value). (Ilia)\n- Fixed bug #31033 (php:function(string, nodeset) with xsl:key crashes PHP).\n  (Rob)\n- Fixed bug #30961 (Wrong line number in ReflectionClass getStartLine()).\n  (Dmitry)\n- Fixed bug #30889 (Conflict between __get/__set and ++ operator). (Dmitry)\n- Fixed bug #30833 (array_count_values() modifying input array). (Tony)\n- Fixed bug #30828 (debug_backtrace() reports incorrect class in overridden\n  methods). (Dmitry)\n- Fixed bug #30820 (static member conflict with $this->member silently\n  ignored). (Dmitry)\n- Fixed bug #30819 (Better support for LDAP SASL bind). (Jani)\n- Fixed bug #30791 (magic methods (__sleep/__wakeup/__toString) call\n  __call if object is overloaded). (Dmitry)\n- Fixed bug #30707 (Segmentation fault on exception in method).\n  (Stas, Dmitry)\n- Fixed bug #30702 (cannot initialize class variable from class constant).\n  (Dmitry)\n- Fixed bug #30578 (Output buffers flushed before calling __destruct()\n  functions). (Jani)\n- Fixed bug #30519 (Interface not existing says Class not found). (Dmitry)\n- Fixed bug #30407 (Strange behavior of default arguments). (Dmitry)\n- Fixed bug #30394 (Assignment operators yield wrong result with __get/__set).\n  (Dmitry)\n- Fixed bug #30332 (zend.ze1_compatibility_mode isn't fully compatible with\n  array_push()). (Dmitry)\n- Fixed bug #30162 (Catching exception in constructor causes lose of\n  $this). (Dmitry)\n- Fixed bug #30140 (Problem with array in static properties). (Dmitry)\n- Fixed bug #30126 (Enhancement for error message for abstract classes).\n  (Marcus)\n- Fixed bug #30096 (gmmktime does not return the current time). (Derick)\n- Fixed bug #30080 (Passing array or non array of objects). (Dmitry)\n- Fixed bug #30052 (Crash on shutdown after odbc_pconnect()). (Edin)\n- Fixed bug #29983 (PHP does not explicitly set mime type & charset). (Ilia)\n- Fixed bug #29975 (memory leaks when set_error_handler() is used inside error\n  handler). (Tony)\n- Fixed bug #29971 (variables_order behavior). (Dmitry)\n- Fixed bug #29944 (Function defined in switch, crashes). (Dmitry)\n- Fixed bug #29896 (Backtrace argument list out of sync). (Dmitry)\n- Fixed bug #29728 (Reflection API Feature: Default parameter value). (Marcus)\n- Fixed bug #29689 (default value of protected member overrides default value\n  of private and other private variable problems in inherited classes). (Stas)\n- Fixed bug #29683 (headers_list() returns empty array). (Tony)\n- Fixed bug #29583 (crash when echoing a COM object). (M.Sisolak, Wez)\n- Fixed bug #29522 (accessing properties without connection). (Georg)\n- Fixed bug #29361 (var_export() producing invalid code). (Derick)\n- Fixed bug #29338 (unencoded spaces get ignored after certain tags). (Ilia)\n- Fixed bug #29335 (fetch functions now use MYSQLI_BOTH as default). (Georg)\n- Fixed bug #29334 (win32 mail() provides incorrect Date: header). (Jani)\n- Fixed bug #29311 (calling parent constructor in mysqli). (Georg)\n- Fixed bug #29268 (__autoload() not called with Reflection->getClass()).\n  (Dmitry)\n- Fixed bug #29256 (SOAP HTTP Error when envelop size is more than 24345\n  bytes). (Dmitry, Wez)\n- Fixed bug #29253 (array_diff with $GLOBALS argument fails). (Dmitry)\n- Fixed bug #29236 (memory error when wsdl-cache is enabled). (Dmitry)\n- Fixed bug #29210 (Function: is_callable - no support for private and\n  protected classes). (Dmitry)\n- Fixed bug #29109 (SoapFault exception: [WSDL] Out of memory). (Dmitry)\n- Fixed bug #29104 (Function declaration in method doesn't work). (Dmitry)\n- Fixed bug #29061 (soap extension segfaults). (Dmitry)\n- Fixed bug #29015 (Incorrect behavior of member vars(non string ones)-numeric\n  mem vars and others). (Dmitry)\n- Fixed bug #28985 (__getTypes() returning nothing on complex WSDL). (Dmitry)\n- Fixed bug #28969 (Wrong data encoding of special characters). (Dmitry)\n- Fixed bug #28839 (SIGSEGV in interactive mode (php -a)).\n  (kameshj at fastmail dot fm)\n- Fixed bug #28605 (Need to use -[m]ieee option for Alpha CPUs). (Jani)\n- Fixed bug #28568 (SAPI::known_post_content_types is not thread safe).\n  (Moriyoshi)\n- Fixed bug #28377 (debug_backtrace is intermittently passing args). (Dmitry)\n- Fixed bug #28355 (glob wont error if dir is not readable). (Hartmut)\n- Fixed bug #28072 (static array with some constant keys will be incorrectly\n  ordered). (Dmitry)\n- Fixed bug #27908 (xml default_handlers not being called). (Rob)\n- Fixed bug #27598 (list() array key assignment causes HUGE memory leak).\n  (Dmitry)\n- Fixed bug #27268 (Bad references accentuated by clone). (Dmitry)\n- Fixed bug #26456 (Wrong results from Reflection-API getDocComment() when\n  called via STDIN). (Dmitry)\n- Fixed bug #25922 (In error handler, modifying 5th arg (errcontext) may\n  result in seg fault). (Dmitry)\n- Fixed bug #25359 (array_multisort() doesn't work in a function if array is\n  global or reference). (Dmitry)\n- Fixed bug #22836 (returning reference to uninitialized variable). (Dmitry)\n- Fixed bug #21306 (ext/sesssion: catch bailouts of write handler during\n  RSHUTDOWN). (Jani, Xuefer at 21cn dot com)\n- Fixed bug #15854 (boolean ini options may be incorrectly displayed as Off\n  when they are On). (Tony)\n- Fixed bugs #14561, #20382, #26090, #26320, #28024, #30532, #32086, #32270,\n  #32555, #32588, #33056 (strtotime() related bugs). (Derick)\n\n31 Mar 2005, PHP 5.0.4\n- Added SNMPv2 support. (harrie)\n- Added Oracle Instant Client support. (cjbj at hotmail dot com, Tony)\n- Added length and charsetnr for field array and object in mysqli. (Georg)\n- Added checks for negative values to gmp_sqrt(), gmp_powm(), gmp_sqrtrem()\n  and gmp_fact() to prevent SIGFPE. (Tony)\n- Changed foreach() to throw an exception if IteratorAggregate::getIterator()\n  does not return an Iterator. (Marcus)\n- Changed phpize not to require libtool. (Jani)\n- Updated bundled oniguruma library (used for multibyte regular expression)\n  to 3.7.0. (Moriyoshi)\n- Updated bundled libmbfl library (used for multibyte functions). (Moriyoshi)\n  Fixed bugs:\n  . Bug #32311 (mb_encode_mimeheader() does not properly escape characters)\n  . Bug #32063 (mb_convert_encoding ignores named entity 'alpha')\n  . Bug #31911 (mb_decode_mimeheader() is case-sensitive to hex escapes)\n  . bug #30573 (compiler warnings in libmbfl due to invalid type cast)\n  . Bug #30549 (incorrect character translations for some ISO8859 charsets).\n- Fixed bug preventing from building oci8 as shared.\n  (stanislav dot voroniy at portavita dot nl, Tony)\n- Fixed a bug in mysql_affected_rows and mysql_stmt_affected_rows when the\n  api function returns -1 (Georg)\n- Fixed several leaks in ext/browscap and sapi/embed. (Andrei)\n- Fixed several leaks in ext/filepro. (Tony)\n- Fixed build system to always use bundled libtool files. (Jani)\n- Fixed a bug in mysqli_stmt_execute() (type conversion with NULL values).\n  (Georg)\n- Fixed segfault in mysqli_fetch_field_direct() when invalid field offset\n  is passed. (Tony)\n- Fixed posix_getsid() & posix_getpgid() to return sid & pgid instead\n  of true. (Tony)\n- Fixed bug #32394 (offsetUnset() segfaults in a foreach). (Marcus)\n- Fixed bug #32373 (segfault in bzopen() if supplied path to non-existent\n  file). (Tony)\n- Fixed bug #32326 (Check values of Connection/Transfer-Encoding\n  case-incentively in SOAP extension). (Ilia)\n- Fixed bug #32290 (call_user_func_array() calls wrong class method within\n  child class). (Marcus)\n- Fixed bug #32238 (spl_array.c: void function cannot return value). (Johannes)\n- Fixed bug #32210 (proc_get_status() sets \"running\" always to true). (Ilia)\n- Fixed bug #32200 (Prevent using both --with-apxs2 and --with-apxs2filter).\n  (Jani)\n- Fixed bug #32134 (Overloading offsetGet/offsetSet). (Marcus)\n- Fixed bug #32130 (ArrayIterator::seek() does not throw an Exception on\n  invalid index). (Marcus)\n- Fixed bug #32115 (dateTime SOAP encoding of timezone incorrect). (Dmitry)\n- Fixed bug #32081 (in mysqli default socket value is not being used). (Ilia)\n- Fixed bug #32021 (Crash caused by range('', 'z')). (Derick)\n- Fixed bug #32011 (Fragments which replaced Nodes are not globaly useable).\n  (Rob)\n- Fixed bug #32001 (xml_parse_into_struct() function exceeds maximum\n  execution time). (Rob, Moriyoshi)\n- Fixed bug #31980 (Unicode exif data not available on Windows). (Edin)\n- Fixed bug #31960 (msql_fetch_row() and msql_fetch_array() dropping columns\n  with NULL values). (Daniel Convissor)\n- Fixed bug #31878 (Segmentation fault using clone keyword on nodes). (Rob)\n- Fixed bug #31858 (--disable-cli does not force --without-pear). (Jani)\n- Fixed bug #31842 (*date('r') does not return RFC2822 conforming date string).\n  (Jani)\n- Fixed bug #31832 (SOAP encoding problem with complex types in WSDL mode with\n  multiple parts). (Dmitry)\n- Fixed bug #31797 (exif_read_data() uses too low nesting limit). (Ilia)\n- Fixed bug #31796 (readline completion handler does not handle empty return\n  values). (Ilia)\n- Fixed bug #31792 (getrusage() does not provide ru_nswap value). (Ilia)\n- Fixed bug #31755 (Cannot create SOAP header in no namespace). (Dmitry)\n- Fixed bug #31754 (dbase_open() fails for mode = 1). (Mehdi, Derick)\n- Fixed bug #31751 (pg_parameter_status() missing on Windows). (Edin)\n- Fixed bug #31747 (SOAP Digest Authentication doesn't work with\n  \"HTTP/1.1 100 Continue\" response). (Dmitry)\n- Fixed bug #31732 (mb_get_info() causes segfault when no parameters\n  specified). (Tony)\n- Fixed bug #31710 (Wrong return values for mysqli_autocommit/commit/rollback).\n  (Georg)\n- Fixed bug #31705 (parse_url() does not recognize http://foo.com#bar). (Ilia)\n- Fixed bug #31695 (Cannot redefine endpoint when using WSDL). (Dmitry)\n- Fixed bug #31684 (dio_tcsetattr(): misconfigured termios settings).\n  (elod at itfais dot com)\n- Fixed bug #31683 (changes to $name in __get($name) override future\n  parameters) (Dmitry)\n- Fixed bug #31699 (unserialize() float problem on non-English locales). (Ilia)\n- Fixed bug #31562 (__autoload() problem with static variables). (Marcus)\n- Fixed bug #31651 (ReflectionClass::getDefaultProperties segfaults with arrays).\n  (Marcus)\n- Fixed bug #31623 (OCILogin does not support password grace period).\n  (daniel dot beet at accuratesoftware dot com, Tony)\n- Fixed bug #31527 (crash in msg_send() when non-string is stored without\n  being serialized). (Ilia)\n- Fixed bug #31515 (Improve performance of scandir() by factor of 10 or so). (Ilia)\n- Fixed bug #31514 (open_basedir uses path_translated rather then cwd for .\n  translation). (Ilia)\n- Fixed bug #31480 (Possible infinite loop in imap_mail_compose()). (Ilia)\n- Fixed bug #31479 (Fixed crash in chunk_split(), when chunklen > strlen). (Ilia)\n- Fixed bug #31454 (session_set_save_handler crashes PHP when supplied\n  non-existent object ref). (Tony)\n- Fixed bug #31444 (Memory leak in zend_language_scanner.c).\n  (hexer at studentcenter dot org)\n- Fixed bug #31442 (unserialize broken on 64-bit systems). (Marcus)\n- Fixed bug #31440 ($GLOBALS can be overwritten via GPC when register_globals\n  is enabled). (Ilia)\n- Fixed bug #31422 (No Error-Logging on SoapServer-Side). (Dmitry)\n- Fixed bug #31413 (curl POSTFIELDS crashes on 64-bit platforms). (Joe)\n- Fixed bug #31396 (compile fails with gd 2.0.33 without freetype). (Jani)\n- Fixed bug #31371 (highlight_file() trims new line after heredoc). (Ilia)\n- Fixed bug #31361 (simplexml/domxml segfault when adding node twice). (Rob)\n- Fixed bug #31348 (CachingIterator::rewind() leaks). (Marcus)\n- Fixed bug #31346 (ArrayIterator::next segfaults). (Marcus)\n- Fixed bug #31190 (Unexpected warning then exception is thrown from\n  call_user_func_array()). (phpbugs at domain51 dot net, Dmitry)\n- Fixed bug #31142 (imap_mail_compose() fails to generate correct output). (Ilia)\n- Fixed bug #31139 (XML Parser Functions seem to drop &amp; when parsing). (Rob)\n- Fixed bug #31398 (When magic_guotes_gpc are enabled filenames with ' get cutoff).\n  (Ilia)\n- Fixed bug #31288 (Possible crash in mysql_fetch_field(), if mysql_list_fields()\n  was not called previously). (Ilia)\n- Fixed bug #31107, #31110, #31111, #31249 (Compile failure of zend_strtod.c).\n  (Jani)\n- Fixed bug #31110 (PHP 4.3.10 does not compile on Tru64 UNIX 5.1B). (Derick)\n- Fixed bug #31107 (Compile failure on Solaris 9 (Intel) and gcc 3.4.3). (Derick)\n- Fixed bug #31103 (Better error message when c-client cannot be found). (Ilia)\n- Fixed bug #31101 (missing kerberos header file path with --with-openssl). (Jani)\n- Fixed bug #31098 (isset() / empty() incorrectly return true in dereference of\n  a string type). (Moriyoshi)\n- Fixed bug #31087 (broken php_url_encode_hash macro). (Ilia)\n- Fixed bug #31072 (var_export() does not output an array element with an empty\n  string key). (Derick)\n- Fixed bug #31060 (imageftbbox() does not use linespacing parameter). (Jani)\n- Fixed bug #31056 (php_std_date() returns invalid formatted date if\n  y2k_compliance is On). (Ilia)\n- Fixed bug #31055 (apache2filter: per request leak proportional to the full\n  path of the request URI). (kameshj at fastmail dot fm)\n- Fixed bug #30901 (can't send cookies with soap envelop). (Dmitry)\n- Fixed bug #30871 (Misleading warning message for array_combine()). (Andrey)\n- Fixed bug #30868 (evaluated pointer comparison in mbregex causes compile\n  failure). (Moriyoshi)\n- Fixed bug #30862 (Static array with boolean indexes). (Marcus)\n- Fixed bug #30726 (-.1 like numbers are not being handled correctly). (Ilia)\n- Fixed bug #30725 (PHP segfaults when an exception is thrown in getIterator()\n  within foreach). (Marcus)\n- Fixed bug #30609 (cURL functions bypass open_basedir). (Jani)\n- Fixed bug #30446 (apache2handler: virtual() includes files out of sequence)\n- Fixed bug #30430 (odbc_next_result() doesn't bind values and that results\n  in segfault). (pdan-php at esync dot org, Tony)\n- Fixed bug #30266 (Invalid opcode 137/1/8). (Marcus)\n- Fixed bug #30120 imagettftext() and imagettfbbox() accept too many\n  parameters). (Jani)\n- Fixed bug #30106 (SOAP cannot not parse 'ref' element. Causes Uncaught\n  SoapFault exception). (Dmitry)\n- Fixed bug #29989 (type re_registers redefined in oniguruma.h). (Moriyoshi)\n- Fixed bug #28803 (enabled debug causes bailout errors with CLI on AIX\n  because of fflush() called on already closed filedescriptor). (Tony)\n- Fixed bug #29767 (Weird behaviour of __set($name, $value)). (Dmitry)\n- Fixed bug #29733 (printf() handles repeated placeholders wrong).\n  (bugs dot php dot net at bluetwanger dot de, Ilia)\n- Fixed bug #29424 (width and height inverted for JPEG2000 files). (Ilia)\n- Fixed bug #29329 (configure for mysqli with shared doesn't work). (Georg)\n- Fixed bug #29136 (make test - libtool failure on MacOSX). (Jani)\n- Fixed bug #28976 (mail(): use \"From:\" from headers if sendmail_from is empty).\n  (Jani)\n- Fixed bug #28930 (PHP sources pick wrong header files generated by bison).\n  (eggert at gnu dot org, Jani)\n- Fixed bug #28840 (__destruct of a class that extends mysqli not called).\n  (Marcus)\n- Fixed bug #28804 (ini-file section parsing pattern is buggy).\n  (wendland at scan-plus dot de)\n- Fixed bug #28451 (corrupt EXIF headers have unlimited recursive IFD directory\n  entries). (Andrei)\n- Fixed bug #28444 (Cannot access undefined property for object with overloaded\n  property access). (Dmitry)\n- Fixed bug #28442 (Changing a static variables in a class changes it across\n  sub/super classes.) (Marcus)\n- Fixed bug #28324 (HTTP_SESSION_VARS appear when register_long_arrays is\n  Off). (Tony)\n- Fixed bug #28074 (FastCGI: stderr should be written in a FCGI stderr stream).\n  (chris at ex-parrot dot com)\n- Fixed bug #28067 (partially incorrect utf8 to htmlentities mapping). (Derick,\n  Benjamin Greiner)\n- Fixed bug #28041 (SOAP HTTP Digest Access Authentication). (Dmitry)\n- Fixed bug #27633 (Double \\r problem on ftp_get in ASCII mode on Win32). (Ilia)\n- Fixed bug #18613 (Multiple OUs in x509 certificate not handled properly).\n  (Jani)\n\n15 Dec 2004, PHP 5.0.3\n- Added the %F modifier to *printf to render a non-locale-aware representation\n  of a float with the . as decimal seperator. (Derick)\n- Fixed error handling in mysqli_multi_query. (Georg)\n- Extended the functionality of is_subclass_of() to accept either a class name\n  or an object as first parameter. (Andrey)\n- Fixed potential problems with unserializing invalid serialize data. (Marcus)\n- Fixed bug #32076 (ReflectionMethod::isDestructor() always return true).\n  (Derick, Tony)\n- Fixed bug #31034 (Problem with non-existing iconv header file). (Derick)\n- Fixed bug #30995 (snmp extension does not build with net-snmp 5.2). (Ilia)\n- Fixed bug #30994 (SOAP server unable to handle request with references).\n  (Dmitry)\n- Fixed bug #30990 (allow popen() on *NIX to accept 'b' flag). (Ilia)\n- Fixed bug #30967 (properties in extended mysqli classes don't work). (Georg)\n- Fixed bug #30928 (When Using WSDL, SoapServer doesn't handle private or\n  protected properties). (Dmitry)\n- Fixed bug #30922 (reflective functions crash PHP when interfaces extend\n  themselves). (Tony, Dmitry)\n- Fixed bug #30904 (segfault when recording soapclient into session). (Tony,\n  Dmitry)\n- Fixed bug #30890 (MySQLi testsuite)\n- Fixed bug #30856 (ReflectionClass::getStaticProperties segfaults). (Marcus)\n- Fixed bug #30832 (\"!\" stripped off comments in xml parser). (Rob)\n- Fixed bug #30799 (SoapServer doesn't handle private or protected properties).\n  (Dmitry)\n- Fixed bug #30783 (Apache crash when using ReflectionFunction::\n  getStaticVariables()). (Marcus)\n- Fixed bug #30750 (Meaningful error message when upload directory is not\n  accessible). (Ilia)\n- Fixed bug #30685 (Malformed SOAPClient http header reequest). (Dmitry)\n- Fixed bug #30672 (Problem handling exif data in jpeg images at unusual\n  places). (Marcus)\n- Fixed bug #30658 (Ensure that temporary files created by GD are removed).\n  (Ilia)\n- Fixed bug #30645 (def. multi result set support for mysql_connect). (Georg)\n- Fixed bug #30637 (compile with pear error). (Antony)\n- Fixed bug #30587 (array_multisort doesn't separate zvals before\n  changing them). (Tony)\n- Fixed bug #30572 (crash when comparing SimpleXML attribute to a boolean).\n  (Andi)\n- Fixed bug #30566 (attribute namespace URIs are inconsistent when parsing).\n  (Rob)\n- Fixed bug #30490 (PEAR installation fails). (Antony)\n- Fixed bug #30475 (curl_getinfo() may crash in some situations). (Ilia)\n- Fixed bug #30442 (segfault when parsing ?getvariable[][ ). (Tony)\n- Fixed bug #30388 (rename across filesystems loses ownership and\n  permission info). (Tony)\n- Fixed bug #30387 (stream_socket_client async connect was broken).\n  (vnegrier at esds dot com, Wez).\n- Fixed bug #30381 (Strange results with get_class_vars()). (Marcus)\n- Fixed bug #30375 (cal_info() does not work without a parameter). (Ilia)\n- Fixed bug #30362 (stream_get_line() not handling end string correctly).\n  (Ilia)\n- Fixed bug #30359 (SOAP client requests have no port in \"Host\" field).\n  (Dmitry)\n- Fixed bug #30356 (str_ireplace() does not work on all strings). (Ilia)\n- Fixed bug #30344 (Reflection::getModifierNames() returns too long strings).\n  (Marcus)\n- Fixed bug #30329 (Error Fetching http body, No Content-Length, connection\n  closed or chunked data). (Dmitry)\n- Fixed bug #30282 (segfault when using unknown/unsupported\n  session.save_handler and/or session.serialize_handler). (Tony)\n- Fixed bug #30281 (Prevent non-wbmp images from being detected as such).\n  (Ilia)\n- Fixed bug #30276 (Possible crash in ctype_digit on large numbers). (Ilia)\n- Fixed bug #30230 (exception handler not working with objects). (Marcus)\n- Fixed bug #30224 (Sybase date strings are sometimes not null terminated).\n  (Ilia)\n- Fixed bug #30175 (SOAP results aren't parsed correctly). (Dmitry)\n- Fixed bug #30147 (OO sqlite_fetch_object did not reset error handler). (Wez)\n- Fixed bug #30133 (get_current_user() crashes on Windows). (Edin)\n- Fixed bug #30061 (xml_set_start_namespace_decl_handler not called). (Rob)\n- Fixed bug #30057 (did not detect IPV6 on FreeBSD 4.1). (Wez)\n- Fixed bug #30042 (strtotime does not use second param). (Derick)\n- Fixed bug #30027 (Possible crash inside ftp_get()).\n  (cfield at affinitysolutions dot com)\n- Fixed bug #29954 (array_reduce segfaults when initial value is array). (Tony)\n- Fixed bug #29883 (isset gives invalid values on strings). (Tony, Dmitry)\n- Fixed bug #29801 (Set limit on the size of mmapable data). (Ilia)\n- Fixed bug #29557 (strtotime error). (Derick)\n- Fixed bug #29418 (double free when openssl_csr_new fails).\n  (Kamesh Jayachandran).\n- Fixed bug #29385 (Soapserver always uses std class). (David, Dmitry)\n- Fixed bug #29211 (SoapClient doesn't request wsdl through proxy). (Rob)\n- Fixed bug #28817 (Var problem when extending domDocument). (Georg)\n- Fixed bug #28599 (strtotime fails with zero base time). (Derick)\n- Fixed bug #28598 (Lost support for MS Symbol fonts). (Pierre)\n- Fixed bug #28220 (mb_strwidth() returns wrong width values for some hangul\n  characters). (Moriyoshi)\n- Fixed bug #28228 (NULL decimal separator is not being handled correctly).\n  (Ilia)\n- Fixed bug #28209 (strtotime(\"now\")). (Derick)\n- Fixed bug #27798 (private / protected variables not exposed by\n  get_object_vars() inside class). (Marcus)\n- Fixed bug #27728 (Can't return within a zend_try {} block or the previous\n  bailout state isn't restored. (Andi)\n- Fixed bug #27183 (Userland stream wrapper segfaults on stream_write).\n  (Christian)\n\n23 Sep 2004, PHP 5.0.2\n- Added new boolean (fourth) parameter to array_slice() that turns on the\n  preservation of keys in the returned array. (Derick)\n- Added the sorting flag SORT_LOCALE_STRING to the sort() functions which makes\n  them sort based on the current locale. (Derick)\n- Added interface_exists() and make class_exists() only return true for real\n  classes. (Andrey)\n- Added PHP_EOL constant that contains the OS way of representing newlines.\n  (Paul Hudson, Derick)\n- Implemented periodic PCRE compiled regexp cache cleanup, to avoid memory\n  exhaustion. (Andrei)\n- Renamed SoapClient->__call() to SoapClinet->__soapCall(). (Dmitry)\n- Fixed bug with raw_post_data not getting set (Brian)\n- Fixed a file-descriptor leak with phpinfo() and other 'special' URLs (Zeev)\n- Fixed bug #30209 (ReflectionClass::getMethod() lowercases attribute).\n  (Marcus)\n- Fixed bug #30182 (SOAP module processing WSDL file dumps core). (Dmitry)\n- Fixed bug #30045 (Cannot pass big integers (> 2147483647) in SOAP requests).\n  (Dmitry)\n- Fixed bug #29985 (unserialize()/ __PHP_Incomplete_class does not report\n  correctly class name). (Marcus, Tony)\n- Fixed bug #29945 (simplexml_load_file URL limitation 255 char). (Rob)\n- Fixed bug #29873 (No defines around pcntl_*priority definitions). (Derick)\n- Fixed bug #29844 (SOAP doesn't return the result of a valid SOAP request).\n  (Dmitry)\n- Fixed bug #29842 (soapclient return null value). (Dmitry)\n- Fixed bug #29839 (incorrect convert (xml:lang to lang)). (Dmitry)\n- Fixed bug #29830 (SoapServer::setClass() should not export non-public\n  methods). (Dmitry)\n- Fixed bug #29828 (Interfaces no longer work). (Marcus)\n- Fixed bug #29821 (Fixed possible crashes in convert_uudecode() on invalid\n  data). (Ilia)\n- Fixed bug #29808 (array_count_values() breaks with numeric strings). (Ilia)\n- Fixed bug #29805 (HTTP Authentication Issues). (Uwe Schindler)\n- Fixed bug #29795 (SegFault with Soap and Amazon's Web Services). (Dmitry)\n- Fixed bug #29737 (ip2long should return -1 if IP is 255.255.255.255 and FALSE\n  on error). (Tony)\n- Fixed bug #29711 (Changed ext/xml to default to UTF-8 output). (Rob)\n- Fixed bug #29678 (opendir() with ftp:// wrapper segfaults if path does not\n  have trailing slash). (Ilia)\n- Fixed bug #29657 (xml_* functions throw non descriptive error).\n  (Christian, Rob)\n- Fixed bug #29656 (segfault on result and statement properties). (Georg)\n- Fixed bug #29566 (foreach/string handling strangeness (crash)). (Dmitry)\n- Fixed bug #29447 (Reflection API issues). (Marcus)\n- Fixed bug #29296 (Added sslv2 and sslv3 transports). (Wez)\n- Fixed bug #29283 (Invalid statement handle in mysqli on execute). (Georg)\n- Fixed bug #29913 (parse_url() is now binary safe). (Ilia)\n- Fixed bug #27994 (segfault with Soapserver when WSDL-Cache is enabled).\n  (Dmitry)\n- Fixed bug #27791 (Apache 2.0 SAPI build against Apache 2 HEAD). (Joe Orton,\n  Derick)\n- Fixed bug #26737 (private/protected properties not serialized when user\n  declared method __sleep() exists). E_NOTICE thrown when __sleep() returns\n  name of non-existing member. (Andrey, Curt)\n\n12 Aug 2004, PHP 5.0.1\n- Changed destructor mechanism so that destructors are called prior to request\n  shutdown. (Marcus)\n- Rewritten UNIX and Windows install help files. (Documentation Team)\n- Updated several libraries bundled with the windows release which now\n  includes libxml2-2.6.11, libxslt-1.1.7 and iconv-1.9.1. (Rob, Edin)\n- Improved and moved ActiveScript SAPI to PECL.  (Wez)\n- Fixed bug #29606 (php_strip_whitespace() prints to stdout rather then\n  returning the value). (Ilia)\n- Fixed bug #29577 (MYSQLI_CLIENT_FOUND_ROWS undefined) (Georg)\n- Fixed bug #29573 (Segmentation fault, when exception thrown within\n  PHP function called from XSLT). (Christian)\n- Fixed bug #29522 (accessing properties without connection) (Georg)\n- Fixed bug #29505 (get_class_vars() severely broken when used with arrays).\n  (Marcus)\n- Fixed bug #29490 (.Net object instantiation failed). (Michael Sisolak).\n- Fixed bug #29474 (win32: usleep() doesn't work). (Wez)\n- Fixed bug #29449 (win32: feof() hangs on empty tcp stream). (Wez)\n- Fixed bug #29437 (Possible crash inside array_walk_recursive()). (Ilia)\n- Fixed bug #29431 (crash when parsing invalid address; invalid address\n  returned by stream_socket_recvfrom(), stream_socket_getname()). (Wez)\n- Fixed bug #29409 (Segfault in PHP functions called from XSLT). (Rob)\n- Fixed unloading of dynamically loaded extensions.\n  (Marcus, kameshj at fastmail dot fm)\n- Fixed bug #29395 (sqlite_escape_string() returns bogus data on empty\n  strings). (Ilia, Tony)\n- Fixed bug #29392 (com_dotnet crashes when echo'ing an object). (Wez)\n- Fixed bug #29368 (The destructor is called when an exception is thrown from\n  the constructor). (Marcus)\n- Fixed bug #29354 (Exception constructor marked as both public and protected).\n  (Marcus)\n- Fixed bug #29342 (strtotime() does not handle empty date string properly).\n  (Ilia)\n- Fixed bug #29340 (win32 build produces invalid php_ifx.dll). (Edin)\n- Fixed bug #29335 (fetch functions now use MYSQLI_BOTH as default) (Georg)\n- Fixed bug #29291 (get_class_vars() return names with NULLs). (Marcus)\n- Fixed bug #29264 (gettext extension not working). (Edin)\n- Fixed bug #29258 (variant_date_from_timestamp() does not honour\n  timezone).  (Wez)\n- Fixed bug #29256 (error when sending large packets on a socket). (Dmitry)\n- Fixed bug #29236 (memory error when wsdl-cache is enabled). (Dmitry)\n- Fixed bug #29147 (Compile Error in mnoGoSearch functions). (Sergey, Antony)\n- Fixed bug #29132 ($_SERVER[\"PHP_AUTH_USER\"] isn't defined). (Stefan)\n- Fixed bug #29119 (html_entity_decode() misbehaves with UTF-8). (Moriyoshi)\n- Fixed bug #29109 (SoapFault exception: [WSDL] Out of memory). (Dmitry)\n- Fixed bug #29061 (soap extension segfaults). (Dmitry)\n- Fixed bug #28985 (__getTypes() returning nothing on complex WSDL). (Dmitry)\n- Fixed bug #28969 (Wrong data encoding of special characters). (Dmitry)\n- Fixed bug #28895 (ReflectionClass::isAbstract always returns false). (Marcus)\n- Fixed bug #28829 (Thread-unsafety in bcmath elementary values). (Sara)\n- Fixed bug #28464 (catch() does not catch exceptions by interfaces). (Marcus)\n- Fixed bug #27669 (PHP 5 didn't support all possibilities for calling static\n  methods dynamically). (Dmitry)\n- Fixed ReflectionClass::getMethod() and ReflectionClass::getProperty() to\n  raise an ReflectionException instead of returning NULL on failure.\n  (Sebastian)\n- Fixed convert.* filters to consume remaining buckets_in on flush. (Sara)\n- Fixed bug in mysqli->client_version. (Georg)\n\n13 Jul 2004, PHP 5.0.0\n- Updated PCRE to provide better error handling in certain cases. (Andrei)\n- Changed doc comments to require a single white space after '/**'. (Marcus)\n- Fixed bug #29019 (Database not closing). (Marcus)\n- Fixed bug #29008 (array_combine() does not handle non-numeric/string keys).\n  (Ilia)\n- Fixed bug #28999 (fixed behaviour of exec() to work as it did in 4.X). (Ilia)\n- Fixed bug #28868 (Internal filter registry not thread safe). (Sara)\n- Fixed bug #28851 (call_user_func_array has typo in error message). (Marcus)\n- Fixed bug #28831 (ArrayObject::offsetGet() does the work of offsetUnset()).\n  (Marcus)\n- Fixed bug #28822 (ArrayObject::offsetExists() works inverted). (Marcus)\n- Fixed bug #28789 (ReflectionProperty getValue() fails on public static\n  members). (Marcus)\n- Fixed bug #28771 (Segfault when using xslt and clone). (Rob)\n- Fixed bug #28751 (SoapServer does not call _autoload()). (Dmitry)\n- Fixed bug #28739 (array_*diff() and array_*intersect() not clearing the fci\n  cache before work). (Andrey)\n- Fixed bug #28721 (appendChild() and insertBefore() unset DOMText).(Rob)\n- Fixed bug #28702 (SOAP does not parse WSDL service address correctly). (Dmitry)\n- Fixed bug #28699 (Reflection api bugs). (Marcus)\n- Fixed bug #28694 (ReflectionExtension::getFunctions() crashes PHP). (Marcus)\n- Fixed bug #28512 (Allocate enough space to store MSSQL data). (Frank)\n- Fixed strip_tags() to correctly handle '\\0' characters. (Stefan)\n", "Couldn't find the requested file /Zend/tests/bug64660.phpt in php/php-src.", "/* Generated by re2c 0.13.5 on Wed Mar 27 23:52:29 2013 */\n#line 1 \"Zend/zend_language_scanner.l\"\n/*\n   +----------------------------------------------------------------------+\n   | Zend Engine                                                          |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 2.00 of the Zend license,     |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.zend.com/license/2_00.txt.                                |\n   | If you did not receive a copy of the Zend license and are unable to  |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@zend.com so we can mail you a copy immediately.              |\n   +----------------------------------------------------------------------+\n   | Authors: Marcus Boerger <helly@php.net>                              |\n   |          Nuno Lopes <nlopess@php.net>                                |\n   |          Scott MacVicar <scottmac@php.net>                           |\n   | Flex version authors:                                                |\n   |          Andi Gutmans <andi@zend.com>                                |\n   |          Zeev Suraski <zeev@zend.com>                                |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#if 0\n# define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)\n#else\n# define YYDEBUG(s, c)\n#endif\n\n#include \"zend_language_scanner_defs.h\"\n\n#include <errno.h>\n#include \"zend.h\"\n#ifdef PHP_WIN32\n# include <Winuser.h>\n#endif\n#include \"zend_alloc.h\"\n#include <zend_language_parser.h>\n#include \"zend_compile.h\"\n#include \"zend_language_scanner.h\"\n#include \"zend_highlight.h\"\n#include \"zend_constants.h\"\n#include \"zend_variables.h\"\n#include \"zend_operators.h\"\n#include \"zend_API.h\"\n#include \"zend_strtod.h\"\n#include \"zend_exceptions.h\"\n#include \"tsrm_virtual_cwd.h\"\n#include \"tsrm_config_common.h\"\n\n#define YYCTYPE   unsigned char\n#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }\n#define YYCURSOR  SCNG(yy_cursor)\n#define YYLIMIT   SCNG(yy_limit)\n#define YYMARKER  SCNG(yy_marker)\n\n#define YYGETCONDITION()  SCNG(yy_state)\n#define YYSETCONDITION(s) SCNG(yy_state) = s\n\n#define STATE(name)  yyc##name\n\n/* emulate flex constructs */\n#define BEGIN(state) YYSETCONDITION(STATE(state))\n#define YYSTATE      YYGETCONDITION()\n#define yytext       ((char*)SCNG(yy_text))\n#define yyleng       SCNG(yy_leng)\n#define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\\n                          yyleng   = (unsigned int)x; } while(0)\n#define yymore()     goto yymore_restart\n\n/* perform sanity check. If this message is triggered you should\n   increase the ZEND_MMAP_AHEAD value in the zend_streams.h file */\n#define YYMAXFILL 16\n#if ZEND_MMAP_AHEAD < YYMAXFILL\n# error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL\n#endif\n\n#ifdef HAVE_STDARG_H\n# include <stdarg.h>\n#endif\n\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n\n/* Globals Macros */\n#define SCNG\tLANG_SCNG\n#ifdef ZTS\nZEND_API ts_rsrc_id language_scanner_globals_id;\n#else\nZEND_API zend_php_scanner_globals language_scanner_globals;\n#endif\n\n#define HANDLE_NEWLINES(s, l)\t\t\t\t\t\t\t\t\t\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tchar *p = (s), *boundary = p+(l);\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\twhile (p<boundary) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tif (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {\t\t\t\t\t\\\n\t\t\tCG(zend_lineno)++;\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tp++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n} while (0)\n\n#define HANDLE_NEWLINE(c) \\\n{ \\\n\tif (c == '\\n' || c == '\\r') { \\\n\t\tCG(zend_lineno)++; \\\n\t} \\\n}\n\n/* To save initial string length after scanning to first variable, CG(doc_comment_len) can be reused */\n#define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)\n#define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)\n\n#define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)\n\n#define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')\n#define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))\n\nBEGIN_EXTERN_C()\n\nstatic size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\nLANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\ninternal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\n\nstatic void _yy_push_state(int new_state TSRMLS_DC)\n{\n\tzend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));\n\tYYSETCONDITION(new_state);\n}\n\n#define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)\n\nstatic void yy_pop_state(TSRMLS_D)\n{\n\tint *stack_state;\n\tzend_stack_top(&SCNG(state_stack), (void **) &stack_state);\n\tYYSETCONDITION(*stack_state);\n\tzend_stack_del_top(&SCNG(state_stack));\n}\n\nstatic void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)\n{\n\tYYCURSOR       = (YYCTYPE*)str;\n\tYYLIMIT        = YYCURSOR + len;\n\tif (!SCNG(yy_start)) {\n\t\tSCNG(yy_start) = YYCURSOR;\n\t}\n}\n\nvoid startup_scanner(TSRMLS_D)\n{\n\tCG(parse_error) = 0;\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tCG(doc_comment) = NULL;\n\tCG(doc_comment_len) = 0;\n\tzend_stack_init(&SCNG(state_stack));\n}\n\nvoid shutdown_scanner(TSRMLS_D)\n{\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc_len)=0;\n\t}\n\tCG(parse_error) = 0;\n\tzend_stack_destroy(&SCNG(state_stack));\n\tRESET_DOC_COMMENT();\n}\n\nZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tlex_state->yy_leng   = SCNG(yy_leng);\n\tlex_state->yy_start  = SCNG(yy_start);\n\tlex_state->yy_text   = SCNG(yy_text);\n\tlex_state->yy_cursor = SCNG(yy_cursor);\n\tlex_state->yy_marker = SCNG(yy_marker);\n\tlex_state->yy_limit  = SCNG(yy_limit);\n\n\tlex_state->state_stack = SCNG(state_stack);\n\tzend_stack_init(&SCNG(state_stack));\n\n\tlex_state->in = SCNG(yy_in);\n\tlex_state->yy_state = YYSTATE;\n\tlex_state->filename = zend_get_compiled_filename(TSRMLS_C);\n\tlex_state->lineno = CG(zend_lineno);\n\n\tlex_state->script_org = SCNG(script_org);\n\tlex_state->script_org_size = SCNG(script_org_size);\n\tlex_state->script_filtered = SCNG(script_filtered);\n\tlex_state->script_filtered_size = SCNG(script_filtered_size);\n\tlex_state->input_filter = SCNG(input_filter);\n\tlex_state->output_filter = SCNG(output_filter);\n\tlex_state->script_encoding = SCNG(script_encoding);\n}\n\nZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tSCNG(yy_leng)   = lex_state->yy_leng;\n\tSCNG(yy_start)  = lex_state->yy_start;\n\tSCNG(yy_text)   = lex_state->yy_text;\n\tSCNG(yy_cursor) = lex_state->yy_cursor;\n\tSCNG(yy_marker) = lex_state->yy_marker;\n\tSCNG(yy_limit)  = lex_state->yy_limit;\n\n\tzend_stack_destroy(&SCNG(state_stack));\n\tSCNG(state_stack) = lex_state->state_stack;\n\n\tSCNG(yy_in) = lex_state->in;\n\tYYSETCONDITION(lex_state->yy_state);\n\tCG(zend_lineno) = lex_state->lineno;\n\tzend_restore_compiled_filename(lex_state->filename TSRMLS_CC);\n\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tSCNG(script_org) = lex_state->script_org;\n\tSCNG(script_org_size) = lex_state->script_org_size;\n\tSCNG(script_filtered) = lex_state->script_filtered;\n\tSCNG(script_filtered_size) = lex_state->script_filtered_size;\n\tSCNG(input_filter) = lex_state->input_filter;\n\tSCNG(output_filter) = lex_state->output_filter;\n\tSCNG(script_encoding) = lex_state->script_encoding;\n\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc) = NULL;\n\t\tCG(heredoc_len) = 0;\n\t}\n}\n\nZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tzend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);\n\t/* zend_file_handle_dtor() operates on the copy, so we have to NULLify the original here */\n\tfile_handle->opened_path = NULL;\n\tif (file_handle->free_filename) {\n\t\tfile_handle->filename = NULL;\n\t}\n}\n\n#define BOM_UTF32_BE\t\"\\x00\\x00\\xfe\\xff\"\n#define\tBOM_UTF32_LE\t\"\\xff\\xfe\\x00\\x00\"\n#define\tBOM_UTF16_BE\t\"\\xfe\\xff\"\n#define\tBOM_UTF16_LE\t\"\\xff\\xfe\"\n#define\tBOM_UTF8\t\t\"\\xef\\xbb\\xbf\"\n\nstatic const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)\n{\n\tconst unsigned char *p;\n\tint wchar_size = 2;\n\tint le = 0;\n\n\t/* utf-16 or utf-32? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tp = memchr(p, 0, script_size-(p-script)-2);\n\t\tif (!p) {\n\t\t\tbreak;\n\t\t}\n\t\tif (*(p+1) == '\\0' && *(p+2) == '\\0') {\n\t\t\twchar_size = 4;\n\t\t\tbreak;\n\t\t}\n\n\t\t/* searching for UTF-32 specific byte orders, so this will do */\n\t\tp += 4;\n\t}\n\n\t/* BE or LE? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tif (*p == '\\0' && *(p+wchar_size-1) != '\\0') {\n\t\t\t/* BE */\n\t\t\tle = 0;\n\t\t\tbreak;\n\t\t} else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {\n\t\t\t/* LE* */\n\t\t\tle = 1;\n\t\t\tbreak;\n\t\t}\n\t\tp += wchar_size;\n\t}\n\n\tif (wchar_size == 2) {\n\t\treturn le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;\n\t} else {\n\t\treturn le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding = NULL;\n\tint bom_size;\n\tunsigned char *pos1, *pos2;\n\n\tif (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {\n\t\treturn NULL;\n\t}\n\n\t/* check out BOM */\n\tif (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32be;\n\t\tbom_size = sizeof(BOM_UTF32_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32le;\n\t\tbom_size = sizeof(BOM_UTF32_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16be;\n\t\tbom_size = sizeof(BOM_UTF16_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16le;\n\t\tbom_size = sizeof(BOM_UTF16_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf8;\n\t\tbom_size = sizeof(BOM_UTF8)-1;\n\t}\n\n\tif (script_encoding) {\n\t\t/* remove BOM */\n\t\tLANG_SCNG(script_org) += bom_size;\n\t\tLANG_SCNG(script_org_size) -= bom_size;\n\n\t\treturn script_encoding;\n\t}\n\n\t/* script contains NULL bytes -> auto-detection */\n\tif ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {\n\t\t/* check if the NULL byte is after the __HALT_COMPILER(); */\n\t\tpos2 = LANG_SCNG(script_org);\n\n\t\twhile (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {\n\t\t\tpos2 = memchr(pos2, '_', pos1 - pos2);\n\t\t\tif (!pos2) break;\n\t\t\tpos2++;\n\t\t\tif (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {\n\t\t\t\tpos2 += sizeof(\"_HALT_COMPILER\")-1;\n\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\tpos2++;\n\t\t\t\t}\n\t\t\t\tif (*pos2 == '(') {\n\t\t\t\t\tpos2++;\n\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t}\n\t\t\t\t\tif (*pos2 == ')') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (*pos2 == ';') {\n\t\t\t\t\t\t\treturn NULL;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* make best effort if BOM is missing */\n\t\treturn zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding;\n\n\tif (CG(detect_unicode)) {\n\t\t/* check out bom(byte order mark) and see if containing wchars */\n\t\tscript_encoding = zend_multibyte_detect_unicode(TSRMLS_C);\n\t\tif (script_encoding != NULL) {\n\t\t\t/* bom or wchar detection is prior to 'script_encoding' option */\n\t\t\treturn script_encoding;\n\t\t}\n\t}\n\n\t/* if no script_encoding specified, just leave alone */\n\tif (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {\n\t\treturn NULL;\n\t}\n\n\t/* if multiple encodings specified, detect automagically */\n\tif (CG(script_encoding_list_size) > 1) {\n\t\treturn zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);\n\t}\n\n\treturn CG(script_encoding_list)[0];\n}\n\nZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tconst zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);\n\n\tif (!script_encoding) {\n\t\treturn FAILURE;\n\t}\n\n\t/* judge input/output filter */\n\tLANG_SCNG(script_encoding) = script_encoding;\n\tLANG_SCNG(input_filter) = NULL;\n\tLANG_SCNG(output_filter) = NULL;\n\n\tif (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {\n\t\tif (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\t\t/* and if not, work around w/ script_encoding -> utf-8 -> script_encoding conversion */\n\t\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;\n\t\t} else {\n\t\t\tLANG_SCNG(input_filter) = NULL;\n\t\t\tLANG_SCNG(output_filter) = NULL;\n\t\t}\n\t\treturn SUCCESS;\n\t}\n\n\tif (zend_multibyte_check_lexer_compatibility(internal_encoding)) {\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_internal;\n\t\tLANG_SCNG(output_filter) = NULL;\n\t} else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\tLANG_SCNG(input_filter) = NULL;\n\t\tLANG_SCNG(output_filter) = encoding_filter_script_to_internal;\n\t} else {\n\t\t/* both script and internal encodings are incompatible w/ flex */\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;\n\t}\n\n\treturn 0;\n}\n\nZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tconst char *file_path = NULL;\n\tchar *buf;\n\tsize_t size, offset = 0;\n\n\t/* The shebang line was read, get the current position to obtain the buffer start */\n\tif (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {\n\t\tif ((offset = ftell(file_handle->handle.fp)) == -1) {\n\t\t\toffset = 0;\n\t\t}\n\t}\n\n\tif (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {\n\t\treturn FAILURE;\n\t}\n\n\tzend_llist_add_element(&CG(open_files), file_handle);\n\tif (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {\n\t\tzend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));\n\t\tsize_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;\n\t\tfh->handle.stream.handle = (void*)(((char*)fh) + diff);\n\t\tfile_handle->handle.stream.handle = fh->handle.stream.handle;\n\t}\n\n\t/* Reset the scanner for scanning the new file */\n\tSCNG(yy_in) = file_handle;\n\tSCNG(yy_start) = NULL;\n\n\tif (size != -1) {\n\t\tif (CG(multibyte)) {\n\t\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\t\tSCNG(script_org_size) = size;\n\t\t\tSCNG(script_filtered) = NULL;\n\n\t\t\tzend_multibyte_set_filter(NULL TSRMLS_CC);\n\n\t\t\tif (SCNG(input_filter)) {\n\t\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t\t}\n\t\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\t\tsize = SCNG(script_filtered_size);\n\t\t\t}\n\t\t}\n\t\tSCNG(yy_start) = (unsigned char *)buf - offset;\n\t\tyy_scan_buffer(buf, size TSRMLS_CC);\n\t} else {\n\t\tzend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");\n\t}\n\n\tBEGIN(INITIAL);\n\n\tif (file_handle->opened_path) {\n\t\tfile_path = file_handle->opened_path;\n\t} else {\n\t\tfile_path = file_handle->filename;\n\t}\n\n\tzend_set_compiled_filename(file_path TSRMLS_CC);\n\n\tif (CG(start_lineno)) {\n\t\tCG(zend_lineno) = CG(start_lineno);\n\t\tCG(start_lineno) = 0;\n\t} else {\n\t\tCG(zend_lineno) = 1;\n\t}\n\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\nEND_EXTERN_C()\n\n\nZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval=NULL;\n\tint compiler_result;\n\tzend_bool compilation_successful=0;\n\tznode retval_znode;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tretval_znode.op_type = IS_CONST;\n\tretval_znode.u.constant.type = IS_LONG;\n\tretval_znode.u.constant.value.lval = 1;\n\tZ_UNSET_ISREF(retval_znode.u.constant);\n\tZ_SET_REFCOUNT(retval_znode.u.constant, 1);\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\n\tretval = op_array; /* success oriented */\n\n\tif (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {\n\t\tif (type==ZEND_REQUIRE) {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t\tzend_bailout();\n\t\t} else {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t}\n\t\tcompilation_successful=0;\n\t} else {\n\t\tinit_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(in_compilation) = 1;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\t\tzend_do_return(&retval_znode, 0 TSRMLS_CC);\n\t\tCG(in_compilation) = original_in_compilation;\n\t\tif (compiler_result==1) { /* parser error */\n\t\t\tzend_bailout();\n\t\t}\n\t\tcompilation_successful=1;\n\t}\n\n\tif (retval) {\n\t\tCG(active_op_array) = original_active_op_array;\n\t\tif (compilation_successful) {\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t} else {\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn retval;\n}\n\n\nzend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)\n{\n\tzend_file_handle file_handle;\n\tzval tmp;\n\tzend_op_array *retval;\n\tchar *opened_path = NULL;\n\n\tif (filename->type != IS_STRING) {\n\t\ttmp = *filename;\n\t\tzval_copy_ctor(&tmp);\n\t\tconvert_to_string(&tmp);\n\t\tfilename = &tmp;\n\t}\n\tfile_handle.filename = filename->value.str.val;\n\tfile_handle.free_filename = 0;\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.opened_path = NULL;\n\tfile_handle.handle.fp = NULL;\n\n\tretval = zend_compile_file(&file_handle, type TSRMLS_CC);\n\tif (retval && file_handle.handle.stream.handle) {\n\t\tint dummy = 1;\n\n\t\tif (!file_handle.opened_path) {\n\t\t\tfile_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);\n\t\t}\n\n\t\tzend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);\n\n\t\tif (opened_path) {\n\t\t\tefree(opened_path);\n\t\t}\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\n\tif (filename==&tmp) {\n\t\tzval_dtor(&tmp);\n\t}\n\treturn retval;\n}\n\nZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)\n{\n\tchar *buf;\n\tsize_t size;\n\n\t/* enforce two trailing NULLs for flex... */\n\tif (IS_INTERNED(str->value.str.val)) {\n\t\tchar *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t\tmemcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);\n\t\tstr->value.str.val = tmp;\n\t} else {\n\t\tstr->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t}\n\n\tmemset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);\n\n\tSCNG(yy_in) = NULL;\n\tSCNG(yy_start) = NULL;\n\n\tbuf = str->value.str.val;\n\tsize = str->value.str.len;\n\n\tif (CG(multibyte)) {\n\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\tSCNG(script_org_size) = size;\n\t\tSCNG(script_filtered) = NULL;\n\n\t\tzend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);\n\n\t\tif (SCNG(input_filter)) {\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t}\n\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\tsize = SCNG(script_filtered_size);\n\t\t}\n\t}\n\n\tyy_scan_buffer(buf, size TSRMLS_CC);\n\n\tzend_set_compiled_filename(filename TSRMLS_CC);\n\tCG(zend_lineno) = 1;\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\n\n\nZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)\n{\n\tsize_t offset = SCNG(yy_cursor) - SCNG(yy_start);\n\tif (SCNG(input_filter)) {\n\t\tsize_t original_offset = offset, length = 0;\n\t\tdo {\n\t\t\tunsigned char *p = NULL;\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {\n\t\t\t\treturn (size_t)-1;\n\t\t\t}\n\t\t\tefree(p);\n\t\t\tif (length > original_offset) {\n\t\t\t\toffset--;\n\t\t\t} else if (length < original_offset) {\n\t\t\t\toffset++;\n\t\t\t}\n\t\t} while (original_offset != length);\n\t}\n\treturn offset;\n}\n\n\nzend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval;\n\tzval tmp;\n\tint compiler_result;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tif (source_string->value.str.len==0) {\n\t\tefree(op_array);\n\t\treturn NULL;\n\t}\n\n\tCG(in_compilation) = 1;\n\n\ttmp = *source_string;\n\tzval_copy_ctor(&tmp);\n\tconvert_to_string(&tmp);\n\tsource_string = &tmp;\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {\n\t\tefree(op_array);\n\t\tretval = NULL;\n\t} else {\n\t\tzend_bool orig_interactive = CG(interactive);\n\n\t\tCG(interactive) = 0;\n\t\tinit_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(interactive) = orig_interactive;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\n\t\tif (compiler_result==1) {\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tCG(unclean_shutdown)=1;\n\t\t\tdestroy_op_array(op_array TSRMLS_CC);\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t} else {\n\t\t\tzend_do_return(NULL, 0 TSRMLS_CC);\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t\tretval = op_array;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(&tmp);\n\tCG(in_compilation) = original_in_compilation;\n\treturn retval;\n}\n\n\nBEGIN_EXTERN_C()\nint highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_file_handle file_handle;\n\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.filename = filename;\n\tfile_handle.free_filename = 0;\n\tfile_handle.opened_path = NULL;\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {\n\t\tzend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn SUCCESS;\n}\n\nint highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzval tmp = *str;\n\n\tstr = &tmp;\n\tzval_copy_ctor(str);\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tBEGIN(INITIAL);\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(str);\n\treturn SUCCESS;\n}\n\nZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)\n{\n\tsize_t length;\n\tunsigned char *new_yy_start;\n\n\t/* convert and set */\n\tif (!SCNG(input_filter)) {\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\t\tSCNG(script_filtered_size) = 0;\n\t\tlength = SCNG(script_org_size);\n\t\tnew_yy_start = SCNG(script_org);\n\t} else {\n\t\tif ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t}\n\t\tSCNG(script_filtered) = new_yy_start;\n\t\tSCNG(script_filtered_size) = length;\n\t}\n\n\tSCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));\n\tSCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));\n\tSCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));\n\tSCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));\n\n\tSCNG(yy_start) = new_yy_start;\n}\n\n\n# define zend_copy_value(zendlval, yytext, yyleng) \\\n\tif (SCNG(output_filter)) { \\\n\t\tsize_t sz = 0; \\\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\\n\t\tzendlval->value.str.len = sz; \\\n\t} else { \\\n\t\tzendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\\n\t\tzendlval->value.str.len = yyleng; \\\n\t}\n\nstatic void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)\n{\n\tregister char *s, *t;\n\tchar *end;\n\n\tZVAL_STRINGL(zendlval, str, len, 1);\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\t\t\tif (s >= end) {\n\t\t\t\t*t++ = '\\\\';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase 'n':\n\t\t\t\t\t*t++ = '\\n';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'r':\n\t\t\t\t\t*t++ = '\\r';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\t*t++ = '\\t';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'f':\n\t\t\t\t\t*t++ = '\\f';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'v':\n\t\t\t\t\t*t++ = '\\v';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n#ifdef PHP_WIN32\n\t\t\t\t\t*t++ = VK_ESCAPE;\n#else\n\t\t\t\t\t*t++ = '\\e';\n#endif\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\tcase '`':\n\t\t\t\t\tif (*s != quote_type) {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '$':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\tcase 'X':\n\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\tchar hex_buf[3] = { 0, 0, 0 };\n\n\t\t\t\t\t\tzendlval->value.str.len--; /* for the 'x' */\n\n\t\t\t\t\t\thex_buf[0] = *(++s);\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\t\thex_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(hex_buf, NULL, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t/* check for an octal */\n\t\t\t\t\tif (ZEND_IS_OCT(*s)) {\n\t\t\t\t\t\tchar octal_buf[4] = { 0, 0, 0, 0 };\n\n\t\t\t\t\t\toctal_buf[0] = *s;\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\toctal_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\t\toctal_buf[2] = *(++s);\n\t\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(octal_buf, NULL, 8);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n}\n\n\nint lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 1004 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1792 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1163 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1780 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1193 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1757 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1212 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1717 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1415 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1735 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1454 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1748 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1468 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1770 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1504 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1616 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1632 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1649 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1671 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1682 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1704 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1730 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2193 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1847 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2182 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1863 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1880 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1902 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1913 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1935 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1961 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1984 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2285 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2117 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2139 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2161 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2172 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2194 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2220 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1897 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2407 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1440 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2637 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1171 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2654 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1200 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2669 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1445 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2902 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2916 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1507 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2965 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1904 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3027 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1995 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3102 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2064 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3150 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2155 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3161 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2413 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3176 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1572 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3209 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1482 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3326 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1528 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3363 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1972 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3380 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3420 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1428 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3438 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1420 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3451 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1408 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3461 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1412 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3471 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1404 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3481 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1416 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3491 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3501 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1981 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3523 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1388 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3533 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1384 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3568 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1938 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3611 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1380 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3625 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1376 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3652 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3663 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1364 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3673 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3683 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1432 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3698 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1360 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3714 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1356 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3725 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1392 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3780 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2106 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3933 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1348 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3977 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1368 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3987 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1336 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3997 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1324 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4020 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1352 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4031 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1320 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4041 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1344 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4051 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1707 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4191 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1680 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4238 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1662 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4269 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1641 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4325 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1625 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4392 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1668 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4424 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1605 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4474 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1578 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4531 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1288 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4597 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1268 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4621 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1316 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4644 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1216 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4820 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1220 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4868 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1224 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4942 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1228 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4979 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1232 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5021 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1236 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5066 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1240 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5130 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1212 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5148 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1204 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5172 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1264 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5215 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1196 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5225 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1372 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5251 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1340 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5261 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1166 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5272 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1312 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5321 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1308 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5380 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1304 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5414 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1142 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5427 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1134 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5456 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1276 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5484 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1126 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5525 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1110 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5569 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1292 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5597 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1106 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5628 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1328 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5651 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1424 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5664 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1296 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5702 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1066 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5730 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1050 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5743 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1280 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5799 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1248 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5857 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1252 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5890 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1150 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5928 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1272 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5982 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1102 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 6015 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6063 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1038 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6095 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1154 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6118 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1046 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6141 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1256 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6206 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1260 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6239 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1034 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6262 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1130 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6356 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1030 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6369 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1208 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6398 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1146 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6416 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1332 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6466 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1118 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6479 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1042 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6497 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1026 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6552 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1078 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6580 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1086 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6608 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1300 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6631 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1074 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6666 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1022 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6679 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1122 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6718 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1094 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6746 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1158 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6830 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1018 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6843 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1244 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6861 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1070 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6935 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1114 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6968 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1058 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6981 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1082 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 7014 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1090 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7042 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1098 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7080 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1284 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7103 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1062 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7136 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1054 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7154 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1138 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7172 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1171 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7253 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1190 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7267 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1183 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7283 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1179 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7308 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7386 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1475 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7399 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2357 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7476 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1553 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7595 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1885 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7620 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7631 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1890 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7648 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1897 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7663 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2413 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7678 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7720 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1565 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7767 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2422 \"Zend/zend_language_scanner.l\"\n\n}\n", "/*\n   +----------------------------------------------------------------------+\n   | Zend Engine                                                          |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 2.00 of the Zend license,     |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.zend.com/license/2_00.txt.                                |\n   | If you did not receive a copy of the Zend license and are unable to  |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@zend.com so we can mail you a copy immediately.              |\n   +----------------------------------------------------------------------+\n   | Authors: Marcus Boerger <helly@php.net>                              |\n   |          Nuno Lopes <nlopess@php.net>                                |\n   |          Scott MacVicar <scottmac@php.net>                           |\n   | Flex version authors:                                                |\n   |          Andi Gutmans <andi@zend.com>                                |\n   |          Zeev Suraski <zeev@zend.com>                                |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#if 0\n# define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)\n#else\n# define YYDEBUG(s, c)\n#endif\n\n#include \"zend_language_scanner_defs.h\"\n\n#include <errno.h>\n#include \"zend.h\"\n#ifdef PHP_WIN32\n# include <Winuser.h>\n#endif\n#include \"zend_alloc.h\"\n#include <zend_language_parser.h>\n#include \"zend_compile.h\"\n#include \"zend_language_scanner.h\"\n#include \"zend_highlight.h\"\n#include \"zend_constants.h\"\n#include \"zend_variables.h\"\n#include \"zend_operators.h\"\n#include \"zend_API.h\"\n#include \"zend_strtod.h\"\n#include \"zend_exceptions.h\"\n#include \"tsrm_virtual_cwd.h\"\n#include \"tsrm_config_common.h\"\n\n#define YYCTYPE   unsigned char\n#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }\n#define YYCURSOR  SCNG(yy_cursor)\n#define YYLIMIT   SCNG(yy_limit)\n#define YYMARKER  SCNG(yy_marker)\n\n#define YYGETCONDITION()  SCNG(yy_state)\n#define YYSETCONDITION(s) SCNG(yy_state) = s\n\n#define STATE(name)  yyc##name\n\n/* emulate flex constructs */\n#define BEGIN(state) YYSETCONDITION(STATE(state))\n#define YYSTATE      YYGETCONDITION()\n#define yytext       ((char*)SCNG(yy_text))\n#define yyleng       SCNG(yy_leng)\n#define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\\n                          yyleng   = (unsigned int)x; } while(0)\n#define yymore()     goto yymore_restart\n\n/* perform sanity check. If this message is triggered you should\n   increase the ZEND_MMAP_AHEAD value in the zend_streams.h file */\n/*!max:re2c */\n#if ZEND_MMAP_AHEAD < YYMAXFILL\n# error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL\n#endif\n\n#ifdef HAVE_STDARG_H\n# include <stdarg.h>\n#endif\n\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n\n/* Globals Macros */\n#define SCNG\tLANG_SCNG\n#ifdef ZTS\nZEND_API ts_rsrc_id language_scanner_globals_id;\n#else\nZEND_API zend_php_scanner_globals language_scanner_globals;\n#endif\n\n#define HANDLE_NEWLINES(s, l)\t\t\t\t\t\t\t\t\t\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tchar *p = (s), *boundary = p+(l);\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\twhile (p<boundary) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tif (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {\t\t\t\t\t\\\n\t\t\tCG(zend_lineno)++;\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tp++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n} while (0)\n\n#define HANDLE_NEWLINE(c) \\\n{ \\\n\tif (c == '\\n' || c == '\\r') { \\\n\t\tCG(zend_lineno)++; \\\n\t} \\\n}\n\n/* To save initial string length after scanning to first variable, CG(doc_comment_len) can be reused */\n#define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)\n#define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)\n\n#define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)\n\n#define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')\n#define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))\n\nBEGIN_EXTERN_C()\n\nstatic size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\nLANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\ninternal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\n\nstatic void _yy_push_state(int new_state TSRMLS_DC)\n{\n\tzend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));\n\tYYSETCONDITION(new_state);\n}\n\n#define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)\n\nstatic void yy_pop_state(TSRMLS_D)\n{\n\tint *stack_state;\n\tzend_stack_top(&SCNG(state_stack), (void **) &stack_state);\n\tYYSETCONDITION(*stack_state);\n\tzend_stack_del_top(&SCNG(state_stack));\n}\n\nstatic void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)\n{\n\tYYCURSOR       = (YYCTYPE*)str;\n\tYYLIMIT        = YYCURSOR + len;\n\tif (!SCNG(yy_start)) {\n\t\tSCNG(yy_start) = YYCURSOR;\n\t}\n}\n\nvoid startup_scanner(TSRMLS_D)\n{\n\tCG(parse_error) = 0;\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tCG(doc_comment) = NULL;\n\tCG(doc_comment_len) = 0;\n\tzend_stack_init(&SCNG(state_stack));\n}\n\nvoid shutdown_scanner(TSRMLS_D)\n{\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc_len)=0;\n\t}\n\tCG(parse_error) = 0;\n\tzend_stack_destroy(&SCNG(state_stack));\n\tRESET_DOC_COMMENT();\n}\n\nZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tlex_state->yy_leng   = SCNG(yy_leng);\n\tlex_state->yy_start  = SCNG(yy_start);\n\tlex_state->yy_text   = SCNG(yy_text);\n\tlex_state->yy_cursor = SCNG(yy_cursor);\n\tlex_state->yy_marker = SCNG(yy_marker);\n\tlex_state->yy_limit  = SCNG(yy_limit);\n\n\tlex_state->state_stack = SCNG(state_stack);\n\tzend_stack_init(&SCNG(state_stack));\n\n\tlex_state->in = SCNG(yy_in);\n\tlex_state->yy_state = YYSTATE;\n\tlex_state->filename = zend_get_compiled_filename(TSRMLS_C);\n\tlex_state->lineno = CG(zend_lineno);\n\n\tlex_state->script_org = SCNG(script_org);\n\tlex_state->script_org_size = SCNG(script_org_size);\n\tlex_state->script_filtered = SCNG(script_filtered);\n\tlex_state->script_filtered_size = SCNG(script_filtered_size);\n\tlex_state->input_filter = SCNG(input_filter);\n\tlex_state->output_filter = SCNG(output_filter);\n\tlex_state->script_encoding = SCNG(script_encoding);\n}\n\nZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tSCNG(yy_leng)   = lex_state->yy_leng;\n\tSCNG(yy_start)  = lex_state->yy_start;\n\tSCNG(yy_text)   = lex_state->yy_text;\n\tSCNG(yy_cursor) = lex_state->yy_cursor;\n\tSCNG(yy_marker) = lex_state->yy_marker;\n\tSCNG(yy_limit)  = lex_state->yy_limit;\n\n\tzend_stack_destroy(&SCNG(state_stack));\n\tSCNG(state_stack) = lex_state->state_stack;\n\n\tSCNG(yy_in) = lex_state->in;\n\tYYSETCONDITION(lex_state->yy_state);\n\tCG(zend_lineno) = lex_state->lineno;\n\tzend_restore_compiled_filename(lex_state->filename TSRMLS_CC);\n\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tSCNG(script_org) = lex_state->script_org;\n\tSCNG(script_org_size) = lex_state->script_org_size;\n\tSCNG(script_filtered) = lex_state->script_filtered;\n\tSCNG(script_filtered_size) = lex_state->script_filtered_size;\n\tSCNG(input_filter) = lex_state->input_filter;\n\tSCNG(output_filter) = lex_state->output_filter;\n\tSCNG(script_encoding) = lex_state->script_encoding;\n\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc) = NULL;\n\t\tCG(heredoc_len) = 0;\n\t}\n}\n\nZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tzend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);\n\t/* zend_file_handle_dtor() operates on the copy, so we have to NULLify the original here */\n\tfile_handle->opened_path = NULL;\n\tif (file_handle->free_filename) {\n\t\tfile_handle->filename = NULL;\n\t}\n}\n\n#define BOM_UTF32_BE\t\"\\x00\\x00\\xfe\\xff\"\n#define\tBOM_UTF32_LE\t\"\\xff\\xfe\\x00\\x00\"\n#define\tBOM_UTF16_BE\t\"\\xfe\\xff\"\n#define\tBOM_UTF16_LE\t\"\\xff\\xfe\"\n#define\tBOM_UTF8\t\t\"\\xef\\xbb\\xbf\"\n\nstatic const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)\n{\n\tconst unsigned char *p;\n\tint wchar_size = 2;\n\tint le = 0;\n\n\t/* utf-16 or utf-32? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tp = memchr(p, 0, script_size-(p-script)-2);\n\t\tif (!p) {\n\t\t\tbreak;\n\t\t}\n\t\tif (*(p+1) == '\\0' && *(p+2) == '\\0') {\n\t\t\twchar_size = 4;\n\t\t\tbreak;\n\t\t}\n\n\t\t/* searching for UTF-32 specific byte orders, so this will do */\n\t\tp += 4;\n\t}\n\n\t/* BE or LE? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tif (*p == '\\0' && *(p+wchar_size-1) != '\\0') {\n\t\t\t/* BE */\n\t\t\tle = 0;\n\t\t\tbreak;\n\t\t} else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {\n\t\t\t/* LE* */\n\t\t\tle = 1;\n\t\t\tbreak;\n\t\t}\n\t\tp += wchar_size;\n\t}\n\n\tif (wchar_size == 2) {\n\t\treturn le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;\n\t} else {\n\t\treturn le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding = NULL;\n\tint bom_size;\n\tunsigned char *pos1, *pos2;\n\n\tif (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {\n\t\treturn NULL;\n\t}\n\n\t/* check out BOM */\n\tif (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32be;\n\t\tbom_size = sizeof(BOM_UTF32_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32le;\n\t\tbom_size = sizeof(BOM_UTF32_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16be;\n\t\tbom_size = sizeof(BOM_UTF16_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16le;\n\t\tbom_size = sizeof(BOM_UTF16_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf8;\n\t\tbom_size = sizeof(BOM_UTF8)-1;\n\t}\n\n\tif (script_encoding) {\n\t\t/* remove BOM */\n\t\tLANG_SCNG(script_org) += bom_size;\n\t\tLANG_SCNG(script_org_size) -= bom_size;\n\n\t\treturn script_encoding;\n\t}\n\n\t/* script contains NULL bytes -> auto-detection */\n\tif ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {\n\t\t/* check if the NULL byte is after the __HALT_COMPILER(); */\n\t\tpos2 = LANG_SCNG(script_org);\n\n\t\twhile (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {\n\t\t\tpos2 = memchr(pos2, '_', pos1 - pos2);\n\t\t\tif (!pos2) break;\n\t\t\tpos2++;\n\t\t\tif (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {\n\t\t\t\tpos2 += sizeof(\"_HALT_COMPILER\")-1;\n\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\tpos2++;\n\t\t\t\t}\n\t\t\t\tif (*pos2 == '(') {\n\t\t\t\t\tpos2++;\n\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t}\n\t\t\t\t\tif (*pos2 == ')') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (*pos2 == ';') {\n\t\t\t\t\t\t\treturn NULL;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* make best effort if BOM is missing */\n\t\treturn zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding;\n\n\tif (CG(detect_unicode)) {\n\t\t/* check out bom(byte order mark) and see if containing wchars */\n\t\tscript_encoding = zend_multibyte_detect_unicode(TSRMLS_C);\n\t\tif (script_encoding != NULL) {\n\t\t\t/* bom or wchar detection is prior to 'script_encoding' option */\n\t\t\treturn script_encoding;\n\t\t}\n\t}\n\n\t/* if no script_encoding specified, just leave alone */\n\tif (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {\n\t\treturn NULL;\n\t}\n\n\t/* if multiple encodings specified, detect automagically */\n\tif (CG(script_encoding_list_size) > 1) {\n\t\treturn zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);\n\t}\n\n\treturn CG(script_encoding_list)[0];\n}\n\nZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tconst zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);\n\n\tif (!script_encoding) {\n\t\treturn FAILURE;\n\t}\n\n\t/* judge input/output filter */\n\tLANG_SCNG(script_encoding) = script_encoding;\n\tLANG_SCNG(input_filter) = NULL;\n\tLANG_SCNG(output_filter) = NULL;\n\n\tif (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {\n\t\tif (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\t\t/* and if not, work around w/ script_encoding -> utf-8 -> script_encoding conversion */\n\t\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;\n\t\t} else {\n\t\t\tLANG_SCNG(input_filter) = NULL;\n\t\t\tLANG_SCNG(output_filter) = NULL;\n\t\t}\n\t\treturn SUCCESS;\n\t}\n\n\tif (zend_multibyte_check_lexer_compatibility(internal_encoding)) {\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_internal;\n\t\tLANG_SCNG(output_filter) = NULL;\n\t} else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\tLANG_SCNG(input_filter) = NULL;\n\t\tLANG_SCNG(output_filter) = encoding_filter_script_to_internal;\n\t} else {\n\t\t/* both script and internal encodings are incompatible w/ flex */\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;\n\t}\n\n\treturn 0;\n}\n\nZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tconst char *file_path = NULL;\n\tchar *buf;\n\tsize_t size, offset = 0;\n\n\t/* The shebang line was read, get the current position to obtain the buffer start */\n\tif (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {\n\t\tif ((offset = ftell(file_handle->handle.fp)) == -1) {\n\t\t\toffset = 0;\n\t\t}\n\t}\n\n\tif (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {\n\t\treturn FAILURE;\n\t}\n\n\tzend_llist_add_element(&CG(open_files), file_handle);\n\tif (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {\n\t\tzend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));\n\t\tsize_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;\n\t\tfh->handle.stream.handle = (void*)(((char*)fh) + diff);\n\t\tfile_handle->handle.stream.handle = fh->handle.stream.handle;\n\t}\n\n\t/* Reset the scanner for scanning the new file */\n\tSCNG(yy_in) = file_handle;\n\tSCNG(yy_start) = NULL;\n\n\tif (size != -1) {\n\t\tif (CG(multibyte)) {\n\t\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\t\tSCNG(script_org_size) = size;\n\t\t\tSCNG(script_filtered) = NULL;\n\n\t\t\tzend_multibyte_set_filter(NULL TSRMLS_CC);\n\n\t\t\tif (SCNG(input_filter)) {\n\t\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t\t}\n\t\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\t\tsize = SCNG(script_filtered_size);\n\t\t\t}\n\t\t}\n\t\tSCNG(yy_start) = (unsigned char *)buf - offset;\n\t\tyy_scan_buffer(buf, size TSRMLS_CC);\n\t} else {\n\t\tzend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");\n\t}\n\n\tBEGIN(INITIAL);\n\n\tif (file_handle->opened_path) {\n\t\tfile_path = file_handle->opened_path;\n\t} else {\n\t\tfile_path = file_handle->filename;\n\t}\n\n\tzend_set_compiled_filename(file_path TSRMLS_CC);\n\n\tif (CG(start_lineno)) {\n\t\tCG(zend_lineno) = CG(start_lineno);\n\t\tCG(start_lineno) = 0;\n\t} else {\n\t\tCG(zend_lineno) = 1;\n\t}\n\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\nEND_EXTERN_C()\n\n\nZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval=NULL;\n\tint compiler_result;\n\tzend_bool compilation_successful=0;\n\tznode retval_znode;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tretval_znode.op_type = IS_CONST;\n\tretval_znode.u.constant.type = IS_LONG;\n\tretval_znode.u.constant.value.lval = 1;\n\tZ_UNSET_ISREF(retval_znode.u.constant);\n\tZ_SET_REFCOUNT(retval_znode.u.constant, 1);\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\n\tretval = op_array; /* success oriented */\n\n\tif (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {\n\t\tif (type==ZEND_REQUIRE) {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t\tzend_bailout();\n\t\t} else {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t}\n\t\tcompilation_successful=0;\n\t} else {\n\t\tinit_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(in_compilation) = 1;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\t\tzend_do_return(&retval_znode, 0 TSRMLS_CC);\n\t\tCG(in_compilation) = original_in_compilation;\n\t\tif (compiler_result==1) { /* parser error */\n\t\t\tzend_bailout();\n\t\t}\n\t\tcompilation_successful=1;\n\t}\n\n\tif (retval) {\n\t\tCG(active_op_array) = original_active_op_array;\n\t\tif (compilation_successful) {\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t} else {\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn retval;\n}\n\n\nzend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)\n{\n\tzend_file_handle file_handle;\n\tzval tmp;\n\tzend_op_array *retval;\n\tchar *opened_path = NULL;\n\n\tif (filename->type != IS_STRING) {\n\t\ttmp = *filename;\n\t\tzval_copy_ctor(&tmp);\n\t\tconvert_to_string(&tmp);\n\t\tfilename = &tmp;\n\t}\n\tfile_handle.filename = filename->value.str.val;\n\tfile_handle.free_filename = 0;\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.opened_path = NULL;\n\tfile_handle.handle.fp = NULL;\n\n\tretval = zend_compile_file(&file_handle, type TSRMLS_CC);\n\tif (retval && file_handle.handle.stream.handle) {\n\t\tint dummy = 1;\n\n\t\tif (!file_handle.opened_path) {\n\t\t\tfile_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);\n\t\t}\n\n\t\tzend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);\n\n\t\tif (opened_path) {\n\t\t\tefree(opened_path);\n\t\t}\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\n\tif (filename==&tmp) {\n\t\tzval_dtor(&tmp);\n\t}\n\treturn retval;\n}\n\nZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)\n{\n\tchar *buf;\n\tsize_t size;\n\n\t/* enforce two trailing NULLs for flex... */\n\tif (IS_INTERNED(str->value.str.val)) {\n\t\tchar *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t\tmemcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);\n\t\tstr->value.str.val = tmp;\n\t} else {\n\t\tstr->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t}\n\n\tmemset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);\n\n\tSCNG(yy_in) = NULL;\n\tSCNG(yy_start) = NULL;\n\n\tbuf = str->value.str.val;\n\tsize = str->value.str.len;\n\n\tif (CG(multibyte)) {\n\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\tSCNG(script_org_size) = size;\n\t\tSCNG(script_filtered) = NULL;\n\n\t\tzend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);\n\n\t\tif (SCNG(input_filter)) {\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t}\n\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\tsize = SCNG(script_filtered_size);\n\t\t}\n\t}\n\n\tyy_scan_buffer(buf, size TSRMLS_CC);\n\n\tzend_set_compiled_filename(filename TSRMLS_CC);\n\tCG(zend_lineno) = 1;\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\n\n\nZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)\n{\n\tsize_t offset = SCNG(yy_cursor) - SCNG(yy_start);\n\tif (SCNG(input_filter)) {\n\t\tsize_t original_offset = offset, length = 0;\n\t\tdo {\n\t\t\tunsigned char *p = NULL;\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {\n\t\t\t\treturn (size_t)-1;\n\t\t\t}\n\t\t\tefree(p);\n\t\t\tif (length > original_offset) {\n\t\t\t\toffset--;\n\t\t\t} else if (length < original_offset) {\n\t\t\t\toffset++;\n\t\t\t}\n\t\t} while (original_offset != length);\n\t}\n\treturn offset;\n}\n\n\nzend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval;\n\tzval tmp;\n\tint compiler_result;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tif (source_string->value.str.len==0) {\n\t\tefree(op_array);\n\t\treturn NULL;\n\t}\n\n\tCG(in_compilation) = 1;\n\n\ttmp = *source_string;\n\tzval_copy_ctor(&tmp);\n\tconvert_to_string(&tmp);\n\tsource_string = &tmp;\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {\n\t\tefree(op_array);\n\t\tretval = NULL;\n\t} else {\n\t\tzend_bool orig_interactive = CG(interactive);\n\n\t\tCG(interactive) = 0;\n\t\tinit_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(interactive) = orig_interactive;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\n\t\tif (compiler_result==1) {\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tCG(unclean_shutdown)=1;\n\t\t\tdestroy_op_array(op_array TSRMLS_CC);\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t} else {\n\t\t\tzend_do_return(NULL, 0 TSRMLS_CC);\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t\tretval = op_array;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(&tmp);\n\tCG(in_compilation) = original_in_compilation;\n\treturn retval;\n}\n\n\nBEGIN_EXTERN_C()\nint highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_file_handle file_handle;\n\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.filename = filename;\n\tfile_handle.free_filename = 0;\n\tfile_handle.opened_path = NULL;\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {\n\t\tzend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn SUCCESS;\n}\n\nint highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzval tmp = *str;\n\n\tstr = &tmp;\n\tzval_copy_ctor(str);\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tBEGIN(INITIAL);\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(str);\n\treturn SUCCESS;\n}\n\nZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)\n{\n\tsize_t length;\n\tunsigned char *new_yy_start;\n\n\t/* convert and set */\n\tif (!SCNG(input_filter)) {\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\t\tSCNG(script_filtered_size) = 0;\n\t\tlength = SCNG(script_org_size);\n\t\tnew_yy_start = SCNG(script_org);\n\t} else {\n\t\tif ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t}\n\t\tSCNG(script_filtered) = new_yy_start;\n\t\tSCNG(script_filtered_size) = length;\n\t}\n\n\tSCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));\n\tSCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));\n\tSCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));\n\tSCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));\n\n\tSCNG(yy_start) = new_yy_start;\n}\n\n\n# define zend_copy_value(zendlval, yytext, yyleng) \\\n\tif (SCNG(output_filter)) { \\\n\t\tsize_t sz = 0; \\\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\\n\t\tzendlval->value.str.len = sz; \\\n\t} else { \\\n\t\tzendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\\n\t\tzendlval->value.str.len = yyleng; \\\n\t}\n\nstatic void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)\n{\n\tregister char *s, *t;\n\tchar *end;\n\n\tZVAL_STRINGL(zendlval, str, len, 1);\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\t\t\tif (s >= end) {\n\t\t\t\t*t++ = '\\\\';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase 'n':\n\t\t\t\t\t*t++ = '\\n';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'r':\n\t\t\t\t\t*t++ = '\\r';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\t*t++ = '\\t';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'f':\n\t\t\t\t\t*t++ = '\\f';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'v':\n\t\t\t\t\t*t++ = '\\v';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n#ifdef PHP_WIN32\n\t\t\t\t\t*t++ = VK_ESCAPE;\n#else\n\t\t\t\t\t*t++ = '\\e';\n#endif\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\tcase '`':\n\t\t\t\t\tif (*s != quote_type) {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '$':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\tcase 'X':\n\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\tchar hex_buf[3] = { 0, 0, 0 };\n\n\t\t\t\t\t\tzendlval->value.str.len--; /* for the 'x' */\n\n\t\t\t\t\t\thex_buf[0] = *(++s);\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\t\thex_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(hex_buf, NULL, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t/* check for an octal */\n\t\t\t\t\tif (ZEND_IS_OCT(*s)) {\n\t\t\t\t\t\tchar octal_buf[4] = { 0, 0, 0, 0 };\n\n\t\t\t\t\t\toctal_buf[0] = *s;\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\toctal_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\t\toctal_buf[2] = *(++s);\n\t\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(octal_buf, NULL, 8);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n}\n\n\nint lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n/*!re2c\nre2c:yyfill:check = 0;\nLNUM\t[0-9]+\nDNUM\t([0-9]*\".\"[0-9]+)|([0-9]+\".\"[0-9]*)\nEXPONENT_DNUM\t(({LNUM}|{DNUM})[eE][+-]?{LNUM})\nHNUM\t\"0x\"[0-9a-fA-F]+\nBNUM\t\"0b\"[01]+\nLABEL\t[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\nWHITESPACE [ \\n\\r\\t]+\nTABS_AND_SPACES [ \\t]*\nTOKENS [;:,.\\[\\]()|^&+-/*=%!~$<>?@]\nANY_CHAR [^]\nNEWLINE (\"\\r\"|\"\\n\"|\"\\r\\n\")\n\n/* compute yyleng before each rule */\n<!*> := yyleng = YYCURSOR - SCNG(yy_text);\n\n\n<ST_IN_SCRIPTING>\"exit\" {\n\treturn T_EXIT;\n}\n\n<ST_IN_SCRIPTING>\"die\" {\n\treturn T_EXIT;\n}\n\n<ST_IN_SCRIPTING>\"function\" {\n\treturn T_FUNCTION;\n}\n\n<ST_IN_SCRIPTING>\"const\" {\n\treturn T_CONST;\n}\n\n<ST_IN_SCRIPTING>\"return\" {\n\treturn T_RETURN;\n}\n\n<ST_IN_SCRIPTING>\"try\" {\n\treturn T_TRY;\n}\n\n<ST_IN_SCRIPTING>\"catch\" {\n\treturn T_CATCH;\n}\n\n<ST_IN_SCRIPTING>\"throw\" {\n\treturn T_THROW;\n}\n\n<ST_IN_SCRIPTING>\"if\" {\n\treturn T_IF;\n}\n\n<ST_IN_SCRIPTING>\"elseif\" {\n\treturn T_ELSEIF;\n}\n\n<ST_IN_SCRIPTING>\"endif\" {\n\treturn T_ENDIF;\n}\n\n<ST_IN_SCRIPTING>\"else\" {\n\treturn T_ELSE;\n}\n\n<ST_IN_SCRIPTING>\"while\" {\n\treturn T_WHILE;\n}\n\n<ST_IN_SCRIPTING>\"endwhile\" {\n\treturn T_ENDWHILE;\n}\n\n<ST_IN_SCRIPTING>\"do\" {\n\treturn T_DO;\n}\n\n<ST_IN_SCRIPTING>\"for\" {\n\treturn T_FOR;\n}\n\n<ST_IN_SCRIPTING>\"endfor\" {\n\treturn T_ENDFOR;\n}\n\n<ST_IN_SCRIPTING>\"foreach\" {\n\treturn T_FOREACH;\n}\n\n<ST_IN_SCRIPTING>\"endforeach\" {\n\treturn T_ENDFOREACH;\n}\n\n<ST_IN_SCRIPTING>\"declare\" {\n\treturn T_DECLARE;\n}\n\n<ST_IN_SCRIPTING>\"enddeclare\" {\n\treturn T_ENDDECLARE;\n}\n\n<ST_IN_SCRIPTING>\"instanceof\" {\n\treturn T_INSTANCEOF;\n}\n\n<ST_IN_SCRIPTING>\"as\" {\n\treturn T_AS;\n}\n\n<ST_IN_SCRIPTING>\"switch\" {\n\treturn T_SWITCH;\n}\n\n<ST_IN_SCRIPTING>\"endswitch\" {\n\treturn T_ENDSWITCH;\n}\n\n<ST_IN_SCRIPTING>\"case\" {\n\treturn T_CASE;\n}\n\n<ST_IN_SCRIPTING>\"default\" {\n\treturn T_DEFAULT;\n}\n\n<ST_IN_SCRIPTING>\"break\" {\n\treturn T_BREAK;\n}\n\n<ST_IN_SCRIPTING>\"continue\" {\n\treturn T_CONTINUE;\n}\n\n<ST_IN_SCRIPTING>\"goto\" {\n\treturn T_GOTO;\n}\n\n<ST_IN_SCRIPTING>\"echo\" {\n\treturn T_ECHO;\n}\n\n<ST_IN_SCRIPTING>\"print\" {\n\treturn T_PRINT;\n}\n\n<ST_IN_SCRIPTING>\"class\" {\n\treturn T_CLASS;\n}\n\n<ST_IN_SCRIPTING>\"interface\" {\n\treturn T_INTERFACE;\n}\n\n<ST_IN_SCRIPTING>\"trait\" {\n\treturn T_TRAIT;\n}\n\n<ST_IN_SCRIPTING>\"extends\" {\n\treturn T_EXTENDS;\n}\n\n<ST_IN_SCRIPTING>\"implements\" {\n\treturn T_IMPLEMENTS;\n}\n\n<ST_IN_SCRIPTING>\"->\" {\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n\n<ST_IN_SCRIPTING,ST_LOOKING_FOR_PROPERTY>{WHITESPACE}+ {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n\n<ST_LOOKING_FOR_PROPERTY>\"->\" {\n\treturn T_OBJECT_OPERATOR;\n}\n\n<ST_LOOKING_FOR_PROPERTY>{LABEL} {\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n\n<ST_LOOKING_FOR_PROPERTY>{ANY_CHAR} {\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n\n<ST_IN_SCRIPTING>\"::\" {\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n\n<ST_IN_SCRIPTING>\"\\\\\" {\n\treturn T_NS_SEPARATOR;\n}\n\n<ST_IN_SCRIPTING>\"new\" {\n\treturn T_NEW;\n}\n\n<ST_IN_SCRIPTING>\"clone\" {\n\treturn T_CLONE;\n}\n\n<ST_IN_SCRIPTING>\"var\" {\n\treturn T_VAR;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"int\"|\"integer\"){TABS_AND_SPACES}\")\" {\n\treturn T_INT_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"real\"|\"double\"|\"float\"){TABS_AND_SPACES}\")\" {\n\treturn T_DOUBLE_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"string\"|\"binary\"){TABS_AND_SPACES}\")\" {\n\treturn T_STRING_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"array\"{TABS_AND_SPACES}\")\" {\n\treturn T_ARRAY_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"object\"{TABS_AND_SPACES}\")\" {\n\treturn T_OBJECT_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"bool\"|\"boolean\"){TABS_AND_SPACES}\")\" {\n\treturn T_BOOL_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"unset\"){TABS_AND_SPACES}\")\" {\n\treturn T_UNSET_CAST;\n}\n\n<ST_IN_SCRIPTING>\"eval\" {\n\treturn T_EVAL;\n}\n\n<ST_IN_SCRIPTING>\"include\" {\n\treturn T_INCLUDE;\n}\n\n<ST_IN_SCRIPTING>\"include_once\" {\n\treturn T_INCLUDE_ONCE;\n}\n\n<ST_IN_SCRIPTING>\"require\" {\n\treturn T_REQUIRE;\n}\n\n<ST_IN_SCRIPTING>\"require_once\" {\n\treturn T_REQUIRE_ONCE;\n}\n\n<ST_IN_SCRIPTING>\"namespace\" {\n\treturn T_NAMESPACE;\n}\n\n<ST_IN_SCRIPTING>\"use\" {\n\treturn T_USE;\n}\n\n<ST_IN_SCRIPTING>\"insteadof\" {\n        return T_INSTEADOF;\n}\n\n<ST_IN_SCRIPTING>\"global\" {\n\treturn T_GLOBAL;\n}\n\n<ST_IN_SCRIPTING>\"isset\" {\n\treturn T_ISSET;\n}\n\n<ST_IN_SCRIPTING>\"empty\" {\n\treturn T_EMPTY;\n}\n\n<ST_IN_SCRIPTING>\"__halt_compiler\" {\n\treturn T_HALT_COMPILER;\n}\n\n<ST_IN_SCRIPTING>\"static\" {\n\treturn T_STATIC;\n}\n\n<ST_IN_SCRIPTING>\"abstract\" {\n\treturn T_ABSTRACT;\n}\n\n<ST_IN_SCRIPTING>\"final\" {\n\treturn T_FINAL;\n}\n\n<ST_IN_SCRIPTING>\"private\" {\n\treturn T_PRIVATE;\n}\n\n<ST_IN_SCRIPTING>\"protected\" {\n\treturn T_PROTECTED;\n}\n\n<ST_IN_SCRIPTING>\"public\" {\n\treturn T_PUBLIC;\n}\n\n<ST_IN_SCRIPTING>\"unset\" {\n\treturn T_UNSET;\n}\n\n<ST_IN_SCRIPTING>\"=>\" {\n\treturn T_DOUBLE_ARROW;\n}\n\n<ST_IN_SCRIPTING>\"list\" {\n\treturn T_LIST;\n}\n\n<ST_IN_SCRIPTING>\"array\" {\n\treturn T_ARRAY;\n}\n\n<ST_IN_SCRIPTING>\"callable\" {\n return T_CALLABLE;\n}\n\n<ST_IN_SCRIPTING>\"++\" {\n\treturn T_INC;\n}\n\n<ST_IN_SCRIPTING>\"--\" {\n\treturn T_DEC;\n}\n\n<ST_IN_SCRIPTING>\"===\" {\n\treturn T_IS_IDENTICAL;\n}\n\n<ST_IN_SCRIPTING>\"!==\" {\n\treturn T_IS_NOT_IDENTICAL;\n}\n\n<ST_IN_SCRIPTING>\"==\" {\n\treturn T_IS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"!=\"|\"<>\" {\n\treturn T_IS_NOT_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"<=\" {\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\">=\" {\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"+=\" {\n\treturn T_PLUS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"-=\" {\n\treturn T_MINUS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"*=\" {\n\treturn T_MUL_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"/=\" {\n\treturn T_DIV_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\".=\" {\n\treturn T_CONCAT_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"%=\" {\n\treturn T_MOD_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"<<=\" {\n\treturn T_SL_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\">>=\" {\n\treturn T_SR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"&=\" {\n\treturn T_AND_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"|=\" {\n\treturn T_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"^=\" {\n\treturn T_XOR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"||\" {\n\treturn T_BOOLEAN_OR;\n}\n\n<ST_IN_SCRIPTING>\"&&\" {\n\treturn T_BOOLEAN_AND;\n}\n\n<ST_IN_SCRIPTING>\"OR\" {\n\treturn T_LOGICAL_OR;\n}\n\n<ST_IN_SCRIPTING>\"AND\" {\n\treturn T_LOGICAL_AND;\n}\n\n<ST_IN_SCRIPTING>\"XOR\" {\n\treturn T_LOGICAL_XOR;\n}\n\n<ST_IN_SCRIPTING>\"<<\" {\n\treturn T_SL;\n}\n\n<ST_IN_SCRIPTING>\">>\" {\n\treturn T_SR;\n}\n\n<ST_IN_SCRIPTING>{TOKENS} {\n\treturn yytext[0];\n}\n\n\n<ST_IN_SCRIPTING>\"{\" {\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n\n\n<ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"${\" {\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n\n\n<ST_IN_SCRIPTING>\"}\" {\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n\n\n<ST_LOOKING_FOR_VARNAME>{LABEL} {\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n\n\n<ST_LOOKING_FOR_VARNAME>{ANY_CHAR} {\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n\n<ST_IN_SCRIPTING>{BNUM} {\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n\n<ST_IN_SCRIPTING>{LNUM} {\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n\n<ST_IN_SCRIPTING>{HNUM} {\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n\n<ST_VAR_OFFSET>[0]|([1-9][0-9]*) { /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n\n<ST_VAR_OFFSET>{LNUM}|{HNUM}|{BNUM} { /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n\n<ST_IN_SCRIPTING>{DNUM}|{EXPONENT_DNUM} {\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n\n<ST_IN_SCRIPTING>\"__CLASS__\" {\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n\n<ST_IN_SCRIPTING>\"__TRAIT__\" {\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n\n<ST_IN_SCRIPTING>\"__FUNCTION__\" {\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n\n<ST_IN_SCRIPTING>\"__METHOD__\" {\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n\n<ST_IN_SCRIPTING>\"__LINE__\" {\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n\n<ST_IN_SCRIPTING>\"__FILE__\" {\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n\n<ST_IN_SCRIPTING>\"__DIR__\" {\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n\n<ST_IN_SCRIPTING>\"__NAMESPACE__\" {\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n\n<INITIAL>\"<script\"{WHITESPACE}+\"language\"{WHITESPACE}*\"=\"{WHITESPACE}*(\"php\"|\"\\\"php\\\"\"|\"'php'\"){WHITESPACE}*\">\" {\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n\n\n<INITIAL>\"<%=\" {\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n\n<INITIAL>\"<?=\" {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n\n\n<INITIAL>\"<%\" {\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n\n<INITIAL>\"<?php\"([ \\t]|{NEWLINE}) {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n\n\n<INITIAL>\"<?\" {\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n<INITIAL>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n\n\n/* Make sure a label character follows \"->\", otherwise there is no property\n * and \"->\" will be taken literally\n */\n<ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"->\"[a-zA-Z_\\x7f-\\xff] {\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n/* A [ always designates a variable offset, regardless of what follows\n */\n<ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"[\" {\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n<ST_IN_SCRIPTING,ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE,ST_VAR_OFFSET>\"$\"{LABEL} {\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n<ST_VAR_OFFSET>\"]\" {\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n\n<ST_VAR_OFFSET>{TOKENS}|[{}\"`] {\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n\n<ST_VAR_OFFSET>[ \\n\\r\\t\\\\'#] {\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n<ST_IN_SCRIPTING,ST_VAR_OFFSET>{LABEL} {\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n\n\n<ST_IN_SCRIPTING>\"#\"|\"//\" {\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n\n<ST_IN_SCRIPTING>\"/*\"|\"/**\"{WHITESPACE} {\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n\n<ST_IN_SCRIPTING>(\"?>\"|\"</script\"{WHITESPACE}*\">\"){NEWLINE}? {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n\n\n<ST_IN_SCRIPTING>\"%>\"{NEWLINE}? {\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n\n\n<ST_IN_SCRIPTING>b?['] {\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n\n\n<ST_IN_SCRIPTING>b?[\"] {\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n\n\n<ST_IN_SCRIPTING>b?\"<<<\"{TABS_AND_SPACES}({LABEL}|([']{LABEL}['])|([\"]{LABEL}[\"])){NEWLINE} {\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n\n\n<ST_IN_SCRIPTING>[`] {\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n\n\n<ST_END_HEREDOC>{ANY_CHAR} {\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n\n\n<ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"{$\" {\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n\n\n<ST_DOUBLE_QUOTES>[\"] {\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n\n<ST_BACKQUOTE>[`] {\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n\n\n<ST_DOUBLE_QUOTES>{ANY_CHAR} {\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_BACKQUOTE>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_HEREDOC>{ANY_CHAR} {\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_NOWDOC>{ANY_CHAR} {\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_IN_SCRIPTING,ST_VAR_OFFSET>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n\n*/\n}\n"], "fixing_code": ["PHP                                                                        NEWS\n|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\n?? ??? 2013, PHP 5.4.16\n\n- Core:\n  . Fixed bug #64729 (compilation failure on x32). (Gustavo)\n  . Fixed bug #64660 (Segfault on memory exhaustion within function definition).\n    (Stas)\n  . Fixed bug #64853 (Use of no longer available ini directives causes crash on\n    TS build). (Anatol)\n\n- Fileinfo:\n  . Fixed bug #64830 (mimetype detection segfaults on mp3 file). (Anatol)\n\n- FPM:\n  . Ignore QUERY_STRING when sent in SCRIPT_FILENAME. (Remi)\n  . Fixed some possible memory or resource leaks and possible null dereference\n    detected by code coverity scan. (Remi)\n  . Log a warning when a syscall fails. (Remi)\n\n- SNMP:\n  . Fixed bug #64765 (Some IPv6 addresses get interpreted wrong).\n    (Boris Lytochkin)\n  . Fixed bug #64159 (Truncated snmpget). (Boris Lytochkin)\n\n- Zend Engine:\n  . Fixed bug #64821 (Custom Exceptions crash when internal properties overridden).\n    (Anatol)\n\n09 May 2013, PHP 5.4.15\n- Core:\n  . Fixed bug #64578 (debug_backtrace in set_error_handler corrupts zend heap:\n    segfault). (Laruence)\n  . Fixed bug #64458 (dns_get_record result with string of length -1). (Stas)\n  . Fixed bug #64433 (follow_location parameter of context is ignored for most\n    response codes). (Sergey Akbarov)\n  . Fixed bugs #47675 and #64577 (fd leak on Solaris)\n\n- Fileinfo:\n  . Upgraded libmagic to 5.14. (Anatol)\n\n- MySQLi:\n  . Fixed bug #64726 (Segfault when calling fetch_object on a use_result and DB\n    pointer has closed). (Laruence)\n\n- Zip:\n  . Fixed bug #64342 (ZipArchive::addFile() has to check for file existence).\n    (Anatol)\n\n- Streams:\n  . Fixed Windows x64 version of stream_socket_pair() and improved error\n    handling. (Anatol Belski)\n  . Fixed bug #64770 (stream_select() fails with pipes returned by proc_open()\n    on Windows x64). (Anatol)\n\n11 Apr 2013, PHP 5.4.14\n\n- Core:\n  . Fixed bug #64529 (Ran out of opcode space). (Dmitry)\n  . Fixed bug #64515 (Memoryleak when using the same variablename two times in\n    function declaration). (Laruence)\n  . Fixed bug #64432 (more empty delimiter warning in strX methods). (Laruence)\n  . Fixed bug #64417 (ArrayAccess::&offsetGet() in a trait causes fatal error).\n    (Dmitry)\n  . Fixed bug #64370 (microtime(true) less than $_SERVER['REQUEST_TIME_FLOAT']).\n    (Anatol)\n  . Fixed bug #64239 (Debug backtrace changed behavior since 5.4.10 or 5.4.11).\n    (Dmitry, Laruence)\n  . Fixed bug #63976 (Parent class incorrectly using child constant in class\n    property). (Dmitry)\n  . Fixed bug #63914 (zend_do_fcall_common_helper_SPEC does not handle\n    exceptions properly). (Jeff Welch)\n  . Fixed bug #62343 (Show class_alias In get_declared_classes()) (Dmitry)\n\n- PCRE:\n  . Merged PCRE 8.32. (Anatol)\n\n- SNMP:\n  . Fixed bug #61981 (OO API, walk: $suffix_as_key is not working correctly).\n\t(Boris Lytochkin)\n\n- Zip:\n  . Bug #64452 (Zip crash intermittently). (Anatol)\n\n14 Mar 2013, PHP 5.4.13\n\n- Core:\n  . Fixed bug #64354 (Unserialize array of objects whose class can't\n    be autoloaded fail). (Laruence)\n  . Fixed bug #64235 (Insteadof not work for class method in 5.4.11).\n    (Laruence)\n  . Fixed bug #64197 (_Offsetof() macro used but not defined on ARM/Clang).\n    (Ard Biesheuvel)\n  . Implemented FR #64175 (Added HTTP codes as of RFC 6585). (Jonh Wendell)\n  . Fixed bug #64142 (dval to lval different behavior on ppc64). (Remi)\n  . Fixed bug #64070 (Inheritance with Traits failed with error). (Dmitry)\n\n- CLI server:\n  . Fixed bug #64128 (buit-in web server is broken on ppc64). (Remi)\n\n- Mbstring:\n  . mb_split() can now handle empty matches like preg_split() does. (Moriyoshi)\n\n- mysqlnd\n  . Fixed bug #63530 (mysqlnd_stmt::bind_one_parameter crashes, uses wrong alloc\n    for stmt->param_bind). (Andrey)\n\n- OpenSSL:\n  . New SSL stream context option to prevent CRIME attack vector. (Daniel Lowrey,\n\tLars)\n  . Fixed bug #61930 (openssl corrupts ssl key resource when using\n    openssl_get_publickey()). (Stas)\n\n- PDO_mysql:\n  . Fixed bug #60840 (undefined symbol: mysqlnd_debug_std_no_trace_funcs).\n    (Johannes)\n\n- Phar:\n  . Fixed timestamp update on Phar contents modification. (Dmitry)\n\n- SOAP\n  . Added check that soap.wsdl_cache_dir conforms to open_basedir\n    (CVE-2013-1635). (Dmitry)\n  . Disabled external entities loading (CVE-2013-1643, CVE-2013-1824).\n    (Dmitry)\n\n- Phar:\n  . Fixed timestamp update on Phar contents modification. (Dmitry)\n\n- SPL:\n  . Fixed bug #64264 (SPLFixedArray toArray problem). (Laruence)\n  . Fixed bug #64228 (RecursiveDirectoryIterator always assumes SKIP_DOTS).\n    (patch by kriss@krizalys.com, Laruence)\n  . Fixed bug #64106 (Segfault on SplFixedArray[][x] = y when extended).\n    (Nikita Popov)\n  . Fixed bug #52861 (unset fails with ArrayObject and deep arrays).\n    (Mike Willbanks)\n\n- SNMP:\n  . Fixed bug #64124 (IPv6 malformed). (Boris Lytochkin)\n\n21 Feb 2013, PHP 5.4.12\n\n- Core:\n  . Fixed bug #64099 (Wrong TSRM usage in zend_Register_class alias). (Johannes)\n  . Fixed bug #64011 (get_html_translation_table() output incomplete with\n    HTML_ENTITIES and ISO-8859-1). (Gustavo)\n  . Fixed bug #63982 (isset() inconsistently produces a fatal error on\n    protected property). (Stas)\n  . Fixed bug #63943 (Bad warning text from strpos() on empty needle).\n    (Laruence)\n  . Fixed bug #63899 (Use after scope error in zend_compile). (Laruence)\n  . Fixed bug #63893 (Poor efficiency of strtr() using array with keys of very\n    different length). (Gustavo)\n  . Fixed bug #63882 (zend_std_compare_objects crash on recursion). (Dmitry)\n  . Fixed bug #63462 (Magic methods called twice for unset protected\n    properties). (Stas)\n  . Fixed bug #62524 (fopen follows redirects for non-3xx statuses).\n    (Wes Mason)\n  . Support BITMAPV5HEADER in getimagesize(). (AsamK, Lars)\n\n- Date:\n  . Fixed bug #63699 (Performance improvements for various ext/date functions).\n    (Lars, original patch by njaguar at gmail dot com)\n  . Fixed bug #55397: Comparsion of incomplete DateTime causes SIGSEGV.\n    (Derick)\n\n- FPM:\n  . Fixed bug #63999 (php with fpm fails to build on Solaris 10 or 11). (Adam)\n\n- Litespeed:\n  . Fixed bug #63228 (-Werror=format-security error in lsapi code). (George)\n\n- ext/sqlite3:\n  . Fixed bug #63921 (sqlite3::bindvalue and relative PHP functions aren't\n    using sqlite3_*_int64 API). (srgoogleguy, Lars)\n\n- PDO_OCI\n  . Fixed bug #57702 (Multi-row BLOB fetches). (hswong3i, Laruence)\n  . Fixed bug #52958 (Segfault in PDO_OCI on cleanup after running a long\n    testsuite). (hswong3i, Lars)\n\n- PDO_sqlite:\n  . Fixed bug #63916 (PDO::PARAM_INT casts to 32bit int internally even\n    on 64bit builds in pdo_sqlite). (srgoogleguy, Lars)\n\n17 Jan 2013, PHP 5.4.11\n\n- Core:\n  . Fixed bug #63762 (Sigsegv when Exception::$trace is changed by user).\n    (Johannes)\n  . Fixed bug #43177 (Errors in eval()'ed code produce status code 500).\n    (Todd Ruth, Stas).\n\n- Filter:\n  . Fixed bug #63757 (getenv() produces memory leak with CGI SAPI). (Dmitry)\n  . Fixed bug #54096 (FILTER_VALIDATE_INT does not accept +0 and -0).\n    (martin at divbyzero dot net, Lars)\n\n- JSON:\n  . Fixed bug #63737 (json_decode does not properly decode with options\n    parameter). (Adam)\n\n- CLI server\n  . Update list of common mime types. Added webm, ogv, ogg. (Lars,\n    pascalc at gmail dot com)\n\n- cURL extension:\n  . Fixed bug (segfault due to libcurl connection caching). (Pierrick)\n  . Fixed bug #63859 (Memory leak when reusing curl-handle). (Pierrick)\n  . Fixed bug #63795 (CURL >= 7.28.0 no longer support value 1 for\n    CURLOPT_SSL_VERIFYHOST). (Pierrick)\n  . Fixed bug #63352 (Can't enable hostname validation when using curl stream\n    wrappers). (Pierrick)\n  . Fixed bug #55438 (Curlwapper is not sending http header randomly).\n    (phpnet@lostreality.org, Pierrick)\n\n20 Dec 2012, PHP 5.4.10\n\n- Core:\n  . Fixed bug #63726 (Memleak with static properties and internal/user\n    classes). (Laruence)\n  . Fixed bug #63635 (Segfault in gc_collect_cycles). (Dmitry)\n  . Fixed bug #63512 (parse_ini_file() with INI_SCANNER_RAW removes quotes\n    from value). (Pierrick)\n  . Fixed bug #63468 (wrong called method as callback with inheritance).\n    (Laruence)\n  . Fixed bug #63451 (config.guess file does not have AIX 7 defined,\n    shared objects are not created). (kemcline at au1 dot ibm dot com)\n  . Fixed bug #61557 (Crasher in tt-rss backend.php).\n    (i dot am dot jack dot mail at gmail dot com)\n  . Fixed bug #61272 (ob_start callback gets passed empty string).\n    (Mike, casper at langemeijer dot eu)\n\n- Date:\n  . Fixed bug #63666 (Poor date() performance). (Paul Taulborg).\n  . Fixed bug #63435 (Datetime::format('u') sometimes wrong by 1 microsecond).\n    (Remi)\n\n- Imap:\n  . Fixed bug #63126 (DISABLE_AUTHENTICATOR ignores array). (Remi)\n\n- Json:\n  . Fixed bug #63588 (use php_next_utf8_char and remove duplicate\n    implementation). (Remi)\n\n- MySQLi:\n  . Fixed bug #63361 (missing header). (Remi)\n\n- MySQLnd:\n  . Fixed bug #63398 (Segfault when polling closed link). (Laruence)\n\n- Fileinfo:\n  . Fixed bug #63590 (Different results in TS and NTS under Windows).\n    (Anatoliy)\n\n- FPM:\n  . Fixed bug #63581 Possible null dereference and buffer overflow (Remi)\n\n- Pdo_sqlite:\n  . Fixed Bug #63149 getColumnMeta should return the table name\n    when system SQLite used. (Remi)\n\n- Apache2 Handler SAPI:\n  . Enabled Apache 2.4 configure option for Windows (Pierre, Anatoliy)\n\n- Reflection:\n  . Fixed Bug #63614 (Fatal error on Reflection). (Laruence)\n\n- SOAP\n  . Fixed bug #63271 (SOAP wsdl cache is not enabled after initial requests).\n    (John Jawed, Dmitry)\n\n- Sockets\n  . Fixed bug #49341 (Add SO_REUSEPORT support for socket_set_option()).\n    (Igor Wiedler, Lars)\n\n- SPL\n  . Fixed bug #63680 (Memleak in splfixedarray with cycle reference). (Laruence)\n\n22 Nov 2012, PHP 5.4.9\n\n- Core:\n  . Fixed bug #63305 (zend_mm_heap corrupted with traits). (Dmitry, Laruence)\n  . Fixed bug #63369 ((un)serialize() leaves dangling pointers, causes crashes).\n    (Tony, Andrew Sitnikov)\n  . Fixed bug #63241 (PHP fails to open Windows deduplicated files).\n    (daniel dot stelter-gliese at innogames dot de)\n  . Fixed bug #62444 (Handle leak in is_readable on windows).\n    (krazyest at seznam dot cz)\n\n- Curl:\n  . Fixed bug #63363 (Curl silently accepts boolean true for SSL_VERIFYHOST).\n    Patch by John Jawed GitHub PR #221 (Anthony)\n\n- Fileinfo:\n  . Fixed bug #63248 (Load multiple magic files from a directory under Windows).\n    (Anatoliy)\n\n- Libxml\n  . Fixed bug #63389 (Missing context check on libxml_set_streams_context()\n    causes memleak). (Laruence)\n\n- Mbstring:\n  . Fixed bug #63447 (max_input_vars doesn't filter variables when\n    mbstring.encoding_translation = On). (Laruence)\n\n- OCI8:\n  . Fixed bug #63265 (Add ORA-00028 to the PHP_OCI_HANDLE_ERROR macro)\n    (Chris Jones)\n\n- PCRE:\n  . Fixed bug #63180 (Corruption of hash tables). (Dmitry)\n  . Fixed bug #63055 (Segfault in zend_gc with SF2 testsuite).\n    (Dmitry, Laruence)\n  . Fixed bug #63284 (Upgrade PCRE to 8.31). (Anatoliy)\n\n- PDO:\n  . Fixed bug #63235 (buffer overflow in use of SQLGetDiagRec).\n    (Martin Osvald, Remi)\n\n- PDO_pgsql:\n  . Fixed bug #62593 (Emulate prepares behave strangely with PARAM_BOOL).\n    (Will Fitch)\n\n- Phar:\n  . Fixed bug #63297 (Phar fails to write an openssl based signature).\n    (Anatoliy)\n\n- Streams:\n  . Fixed bug #63240 (stream_get_line() return contains delimiter string).\n    (Tjerk, Gustavo)\n\n- Reflection:\n  . Fixed bug #63399 (ReflectionClass::getTraitAliases() incorrectly resolves\n    traitnames). (Laruence)\n\n18 Oct 2012, PHP 5.4.8\n\n- CLI server:\n  . Implemented FR #63242 (Default error page in PHP built-in web server uses\n    outdated html/css). (pascal.chevrel@free.fr)\n  . Changed response to unknown HTTP method to 501 according to RFC.\n    (Niklas Lindgren).\n  . Support HTTP PATCH method. Patch by Niklas Lindgren, GitHub PR #190.\n    (Lars)\n\n- Core:\n  . Fixed bug #63219 (Segfault when aliasing trait method when autoloader\n    throws excpetion). (Laruence)\n  . Added optional second argument for assert() to specify custom message. Patch\n    by Lonny Kapelushnik (lonny@lonnylot.com). (Lars)\n  . Support building PHP with the native client toolchain. (Stuart Langley)\n  . Added --offline option for tests. (Remi)\n  . Fixed bug #63162 (parse_url does not match password component). (husman)\n  . Fixed bug #63111 (is_callable() lies for abstract static method). (Dmitry)\n  . Fixed bug #63093 (Segfault while load extension failed in zts-build).\n    (Laruence)\n  . Fixed bug #62976 (Notice: could not be converted to int when comparing\n    some builtin classes). (Laruence)\n  . Fixed bug #62955 (Only one directive is loaded from \"Per Directory Values\"\n    Windows registry). (aserbulov at parallels dot com)\n  . Fixed bug #62907 (Double free when use traits). (Dmitry)\n  . Fixed bug #61767 (Shutdown functions not called in certain error\n    situation). (Dmitry)\n  . Fixed bug #60909 (custom error handler throwing Exception + fatal error\n    = no shutdown function). (Dmitry)\n  . Fixed bug #60723 (error_log error time has changed to UTC ignoring default\n    timezone). (Laruence)\n\n- cURL:\n  . Fixed bug #62085 (file_get_contents a remote file by Curl wrapper will\n    cause cpu Soaring). (Pierrick)\n\n- Date:\n  . Fixed bug #62896 (\"DateTime->modify('+0 days')\" modifies DateTime object)\n    (Lonny Kapelushnik)\n  . Fixed bug #62561 (DateTime add 'P1D' adds 25 hours). (Lonny Kapelushnik)\n\n- DOM:\n  . Fixed bug #63015 (Incorrect arginfo for DOMErrorHandler). (Rob)\n\n- FPM:\n  . Fixed bug #62954 (startup problems fpm / php-fpm). (fat)\n  . Fixed bug #62886 (PHP-FPM may segfault/hang on startup). (fat)\n  . Fixed bug #63085 (Systemd integration and daemonize). (remi, fat)\n  . Fixed bug #62947 (Unneccesary warnings on FPM). (fat)\n  . Fixed bug #62887 (Only /status?plain&full gives \"last request cpu\"). (fat)\n  . Fixed bug #62216 (Add PID to php-fpm init.d script). (fat)\n\n- OCI8:\n  . Fixed bug #60901 (Improve \"tail\" syntax for AIX installation) (Chris Jones)\n\n- OpenSSL:\n  . Implemented FR #61421 (OpenSSL signature verification missing RMD160,\n    SHA224, SHA256, SHA384, SHA512). (Mark Jones)\n\n- PDO:\n  . Fixed bug #63258 (seg fault with PDO and dblib using DBSETOPT(H->link,\n    DBQUOTEDIDENT, 1)). (Laruence)\n  . Fixed bug #63235 (buffer overflow in use of SQLGetDiagRec).\n    (Martin Osvald, Remi)\n\n- PDO Firebird:\n  . Fixed bug #63214 (Large PDO Firebird Queries).\n    (james at kenjim dot com)\n\n- SOAP\n  . Fixed bug #50997 (SOAP Error when trying to submit 2nd Element of a choice).\n    (Dmitry)\n\n- SPL:\n  . Bug #62987 (Assigning to ArrayObject[null][something] overrides all\n    undefined variables). (Laruence)\n\n- mbstring:\n  . Allow passing null as a default value to mb_substr() and mb_strcut(). Patch\n    by Alexander Moskaliov via GitHub PR #133. (Lars)\n\n- Filter extension:\n  . Bug #49510: Boolean validation fails with FILTER_NULL_ON_FAILURE with empty\n    string or false. (Lars)\n\n- Sockets\n  . Fixed bug #63000 (MCAST_JOIN_GROUP on OSX is broken, merge of PR 185 by\n    Igor Wiedler). (Lars)\n\n13 Sep 2012, PHP 5.4.7\n\n- Core:\n  . Fixed bug (segfault while build with zts and GOTO vm-kind). (Laruence)\n  . Fixed bug #62844 (parse_url() does not recognize //). (Andrew Faulds).\n  . Fixed bug #62829 (stdint.h included on platform where HAVE_STDINT_H is not\n    set). (Felipe)\n  . Fixed bug #62763 (register_shutdown_function and extending class).\n    (Laruence)\n  . Fixed bug #62725 (Calling exit() in a shutdown function does not return\n    the exit value). (Laruence)\n  . Fixed bug #62744 (dangling pointers made by zend_disable_class). (Laruence)\n  . Fixed bug #62716 (munmap() is called with the incorrect length).\n    (slangley@google.com)\n  . Fixed bug #62358 (Segfault when using traits a lot). (Laruence)\n  . Fixed bug #62328 (implementing __toString and a cast to string fails)\n    (Laruence)\n  . Fixed bug #51363 (Fatal error raised by var_export() not caught by error\n    handler). (Lonny Kapelushnik)\n  . Fixed bug #40459 (Stat and Dir stream wrapper methods do not call\n    constructor). (Stas)\n\n- CURL:\n  . Fixed bug #62912 (CURLINFO_PRIMARY_* AND CURLINFO_LOCAL_* not exposed).\n\t(Pierrick)\n  . Fixed bug #62839 (curl_copy_handle segfault with CURLOPT_FILE). (Pierrick)\n\n- Intl:\n  . Fixed Spoofchecker not being registered on ICU 49.1. (Gustavo)\n  . Fix bug #62933 (ext/intl compilation error on icu 3.4.1). (Gustavo)\n  . Fix bug #62915 (defective cloning in several intl classes). (Gustavo)\n\n- Installation:\n  . Fixed bug #62460 (php binaries installed as binary.dSYM). (Reeze Xia)\n\n- PCRE:\n  . Fixed bug #55856 (preg_replace should fail on trailing garbage).\n    (reg dot php at alf dot nu)\n\n- PDO:\n  . Fixed bug #62685 (Wrong return datatype in PDO::inTransaction()). (Laruence)\n\n- Reflection:\n  . Fixed bug #62892 (ReflectionClass::getTraitAliases crashes on importing\n    trait methods as private). (Felipe)\n  . Fixed bug #62715 (ReflectionParameter::isDefaultValueAvailable() wrong\n    result). (Laruence)\n\n- Session:\n  . Fixed bug (segfault due to retval is not initialized). (Laruence)\n  . Fixed bug (segfault due to PS(mod_user_implemented) not be reseted\n    when close handler call exit). (Laruence)\n\n- SOAP\n  . Fixed bug #50997 (SOAP Error when trying to submit 2nd Element of a choice).\n    (Dmitry)\n\n- SPL:\n  . Fixed bug #62904 (Crash when cloning an object which inherits SplFixedArray)\n    (Laruence)\n  . Implemented FR #62840 (Add sort flag to ArrayObject::ksort). (Laruence)\n\n- Standard:\n  . Fixed bug #62836 (Seg fault or broken object references on unserialize()).\n    (Laruence)\n\n- FPM:\n  . Merged PR 121 by minitux to add support for slow request counting on PHP\n    FPM status page. (Lars)\n\n16 Aug 2012, PHP 5.4.6\n\n- CLI Server:\n  . Implemented FR #62700 (have the console output 'Listening on\n    http://localhost:8000'). (pascal.chevrel@free.fr)\n\n- Core:\n  . Fixed bug #62661 (Interactive php-cli crashes if include() is used in\n    auto_prepend_file). (Laruence)\n  . Fixed bug #62653: (unset($array[$float]) causes a crash). (Nikita Popov,\n    Laruence)\n  . Fixed bug #62565 (Crashes due non-initialized internal properties_table).\n    (Felipe)\n  . Fixed bug #60194 (--with-zend-multibyte and --enable-debug reports LEAK\n    with run-test.php). (Laruence)\n\n- CURL:\n  . Fixed bug #62499 (curl_setopt($ch, CURLOPT_COOKIEFILE, \"\") returns false).\n    (r.hampartsumyan@gmail.com, Laruence)\n\n- DateTime:\n  . Fixed Bug #62500 (Segfault in DateInterval class when extended). (Laruence)\n\n- Fileinfo:\n  . Fixed bug #61964 (finfo_open with directory causes invalid free).\n    (reeze.xia@gmail.com)\n\n- Intl:\n  . Fixed bug #62564 (Extending MessageFormatter and adding property causes\n    crash). (Felipe)\n\n- MySQLnd:\n  . Fixed bug #62594 (segfault in mysqlnd_res_meta::set_mode). (Laruence)\n\n- readline:\n  . Fixed bug #62612 (readline extension compilation fails with\n    sapi/cli/cli.h: No such file). (Johannes)\n\n- Reflection:\n  . Implemented FR #61602 (Allow access to name of constant used as default\n    value). (reeze.xia@gmail.com)\n\n- SimpleXML:\n  . Implemented FR #55218 Get namespaces from current node. (Lonny)\n\n- SPL:\n  . Fixed bug #62616 (ArrayIterator::count() from IteratorIterator instance\n    gives Segmentation fault). (Laruence, Gustavo)\n  . Fixed bug #61527 (ArrayIterator gives misleading notice on next() when\n    moved to the end). (reeze.xia@gmail.com)\n\n- Streams:\n  . Fixed bug #62597 (segfault in php_stream_wrapper_log_error with ZTS build).\n    (Laruence)\n\n- Zlib:\n  . Fixed bug #55544 (ob_gzhandler always conflicts with\n    zlib.output_compression). (Laruence)\n\n19 Jul 2012, PHP 5.4.5\n\n- Core:\n  . Fixed bug #62443 (Crypt SHA256/512 Segfaults With Malformed\n    Salt). (Anthony Ferrara)\n  . Fixed bug #62432 (ReflectionMethod random corrupt memory on high\n    concurrent). (Johannes)\n  . Fixed bug #62373 (serialize() generates wrong reference to the object).\n    (Moriyoshi)\n  . Fixed bug #62357 (compile failure: (S) Arguments missing for built-in\n    function __memcmp). (Laruence)\n  . Fixed bug #61998 (Using traits with method aliases appears to result in\n    crash during execution). (Dmitry)\n  . Fixed bug #51094 (parse_ini_file() with INI_SCANNER_RAW cuts a value that\n    includes a semi-colon). (Pierrick)\n  . Fixed potential overflow in _php_stream_scandir (CVE-2012-2688).\n    (Jason Powell, Stas)\n\n- EXIF:\n  . Fixed information leak in ext exif (discovered by Martin Noga,\n    Matthew \"j00ru\" Jurczyk, Gynvael Coldwind)\n\n- FPM:\n  . Fixed bug #62205 (php-fpm segfaults (null passed to strstr)). (fat)\n  . Fixed bug #62160 (Add process.priority to set nice(2) priorities). (fat)\n  . Fixed bug #62153 (when using unix sockets, multiples FPM instances\n  . Fixed bug #62033 (php-fpm exits with status 0 on some failures to start).\n    (fat)\n  . Fixed bug #61839 (Unable to cross-compile PHP with --enable-fpm). (fat)\n  . Fixed bug #61835 (php-fpm is not allowed to run as root). (fat)\n  . Fixed bug #61295 (php-fpm should not fail with commented 'user'\n  . Fixed bug #61218 (FPM drops connection while receiving some binary values\n    in FastCGI requests). (fat)\n  . Fixed bug #61045 (fpm don't send error log to fastcgi clients). (fat)\n    for non-root start). (fat)\n  . Fixed bug #61026 (FPM pools can listen on the same address). (fat)\n    can be launched without errors). (fat)\n\n- Iconv:\n  . Fix bug #55042 (Erealloc in iconv.c unsafe). (Stas)\n\n- Intl:\n  . Fixed bug #62083 (grapheme_extract() memory leaks). (Gustavo)\n  . ResourceBundle constructor now accepts NULL for the first two arguments.\n    (Gustavo)\n  . Fixed bug #62081 (IntlDateFormatter constructor leaks memory when called\n    twice). (Gustavo)\n  . Fixed bug #62070 (Collator::getSortKey() returns garbage). (Gustavo)\n  . Fixed bug #62017 (datefmt_create with incorrectly encoded timezone leaks\n    pattern). (Gustavo)\n  . Fixed bug #60785 (memory leak in IntlDateFormatter constructor). (Gustavo)\n\n- JSON:\n  . Fixed bug #61359 (json_encode() calls too many reallocs). (Stas)\n\n- libxml:\n  . Fixed bug #62266 (Custom extension segfaults during xmlParseFile with FPM\n    SAPI). (Gustavo)\n\n- Phar:\n  . Fixed bug #62227 (Invalid phar stream path causes crash). (Felipe)\n\n- Readline:\n  . Fixed bug #62186 (readline fails to compile - void function should not\n    return a value). (Johannes)\n\n- Reflection:\n  . Fixed bug #62384 (Attempting to invoke a Closure more than once causes\n    segfault). (Felipe)\n  . Fixed bug #62202 (ReflectionParameter::getDefaultValue() memory leaks\n    with constant). (Laruence)\n\n- Sockets:\n  . Fixed bug #62025 (__ss_family was changed on AIX 5.3). (Felipe)\n\n- SPL:\n  . Fixed bug #62433 (Inconsistent behavior of RecursiveDirectoryIterator to\n    dot files). (Laruence)\n  . Fixed bug #62262 (RecursiveArrayIterator does not implement Countable).\n    (Nikita Popov)\n\n- XML Writer:\n  . Fixed bug #62064 (memory leak in the XML Writer module).\n    (jean-pierre dot lozi at lip6 dot fr)\n\n- Zip:\n  . Upgraded libzip to 0.10.1 (Anatoliy)\n\n14 Jun 2012, PHP 5.4.4\n\n- COM:\n  . Fixed bug #62146 com_dotnet cannot be built shared. (Johannes)\n\n- CLI Server:\n  . Implemented FR #61977 (Need CLI web-server support for files with .htm &\n    svg extensions). (Sixd, Laruence)\n  . Improved performance while sending error page, this also fixed\n    bug #61785 (Memory leak when access a non-exists file without router).\n    (Laruence)\n  . Fixed bug #61546 (functions related to current script failed when chdir()\n    in cli sapi). (Laruence, reeze.xia@gmail.com)\n\n- Core:\n  . Fixed missing bound check in iptcparse(). (chris at chiappa.net)\n  . Fixed CVE-2012-2143. (Solar Designer)\n  . Fixed bug #62097 (fix for for bug #54547). (Gustavo)\n  . Fixed bug #62005 (unexpected behavior when incrementally assigning to a\n    member of a null object). (Laruence)\n  . Fixed bug #61978 (Object recursion not detected for classes that implement\n    JsonSerializable). (Felipe)\n  . Fixed bug #61991 (long overflow in realpath_cache_get()). (Anatoliy)\n  . Fixed bug #61922 (ZTS build doesn't accept zend.script_encoding config).\n    (Laruence)\n  . Fixed bug #61827 (incorrect \\e processing on Windows) (Anatoliy)\n  . Fixed bug #61782 (__clone/__destruct do not match other methods when checking\n    access controls). (Stas)\n  . Fixed bug #61764 ('I' unpacks n as signed if n > 2^31-1 on LP64). (Gustavo)\n  . Fixed bug #61761 ('Overriding' a private static method with a different\n    signature causes crash). (Laruence)\n  . Fixed bug #61730 (Segfault from array_walk modifying an array passed by\n    reference). (Laruence)\n  . Fixed bug #61728 (PHP crash when calling ob_start in request_shutdown\n    phase). (Laruence)\n  . Fixed bug #61713 (Logic error in charset detection for htmlentities).\n    (Anatoliy)\n  . Fixed bug #61660 (bin2hex(hex2bin($data)) != $data). (Nikita Popov)\n  . Fixed bug #61650 (ini parser crashes when using ${xxxx} ini variables\n    (without apache2)). (Laruence)\n  . Fixed bug #61605 (header_remove() does not remove all headers). (Laruence)\n  . Fixed bug #54547 (wrong equality of string numbers). (Gustavo)\n  . Fixed bug #54197 ([PATH=] sections incompatibility with user_ini.filename\n    set to null). (Anatoliy)\n  . Changed php://fd to be available only for CLI.\n\n- CURL:\n  . Fixed bug #61948 (CURLOPT_COOKIEFILE '' raises open_basedir restriction).\n    (Laruence)\n\n- Fileinfo\n  . Fixed bug #61812 (Uninitialised value used in libmagic).\n    (Laruence, Gustavo)\n  . Fixed bug #61566 failure caused by the posix lseek and read versions\n    under windows in cdf_read(). (Anatoliy)\n  . Fixed bug #61565 where php_stream_open_wrapper_ex tries to open a\n    directory descriptor under windows. (Anatoliy)\n\n- Intl\n  . Fixed bug #62082 (Memory corruption in internal function\n    get_icu_disp_value_src_php()). (Gustavo)\n\n- Libxml:\n  . Fixed bug #61617 (Libxml tests failed(ht is already destroyed)).\n    (Laruence)\n\n- PDO:\n  . Fixed bug #61755 (A parsing bug in the prepared statements can lead to\n    access violations). (Johannes)\n\n- Phar:\n  . Fixed bug #61065 (Secunia SA44335, CVE-2012-2386). (Rasmus)\n\n- Pgsql:\n  . Added pg_escape_identifier/pg_escape_literal. (Yasuo Ohgaki)\n\n- Streams:\n  . Fixed bug #61961 (file_get_contents leaks when access empty file with\n    maxlen set). (Reeze)\n\n- Zlib:\n  . Fixed bug #61820 (using ob_gzhandler will complain about headers already\n    sent when no compression). (Mike)\n  . Fixed bug #61443 (can't change zlib.output_compression on the fly). (Mike)\n  . Fixed bug #60761 (zlib.output_compression fails on refresh). (Mike)\n\n08 May 2012, PHP 5.4.3\n\n- CGI\n  . Re-Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823.\n    (Stas)\n  . Fix bug #61807 - Buffer Overflow in apache_request_headers.\n    (nyt-php at countercultured dot net).\n\n03 May 2012, PHP 5.4.2\n\n- Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823. (Rasmus)\n\n26 Apr 2012, PHP 5.4.1\n\n- CLI Server:\n  . Fixed bug #61461 (missing checks around malloc() calls). (Ilia)\n  . Implemented FR #60850 (Built in web server does not set\n    $_SERVER['SCRIPT_FILENAME'] when using router). (Laruence)\n  . \"Connection: close\" instead of \"Connection: closed\" (Gustavo)\n\n- Core:\n  . Fixed crash in ZTS using same class in many threads. (Johannes)\n  . Fixed bug #61374 (html_entity_decode tries to decode code points that don't\n    exist in ISO-8859-1). (Gustavo)\n  . Fixed bug #61273 (call_user_func_array with more than 16333 arguments\n    leaks / crashes). (Laruence)\n  . Fixed bug #61225 (Incorrect lexing of 0b00*+<NUM>). (Pierrick)\n  . Fixed bug #61165 (Segfault - strip_tags()). (Laruence)\n  . Fixed bug #61106 (Segfault when using header_register_callback). (Nikita\n    Popov)\n  . Fixed bug #61087 (Memory leak in parse_ini_file when specifying\n    invalid scanner mode). (Nikic, Laruence)\n  . Fixed bug #61072 (Memory leak when restoring an exception handler).\n    (Nikic, Laruence)\n  . Fixed bug #61058 (array_fill leaks if start index is PHP_INT_MAX).\n    (Laruence)\n  . Fixed bug #61052 (Missing error check in trait 'insteadof' clause). (Stefan)\n  . Fixed bug #61011 (Crash when an exception is thrown by __autoload\n    accessing a static property). (Laruence)\n  . Fixed bug #61000 (Exceeding max nesting level doesn't delete numerical\n    vars). (Laruence)\n  . Fixed bug #60978 (exit code incorrect). (Laruence)\n  . Fixed bug #60911 (Confusing error message when extending traits). (Stefan)\n  . Fixed bug #60801 (strpbrk() mishandles NUL byte). (Adam)\n  . Fixed bug #60717 (Order of traits in use statement can cause a fatal\n    error). (Stefan)\n  . Fixed bug #60573 (type hinting with \"self\" keyword causes weird errors).\n    (Laruence)\n  . Fixed bug #60569 (Nullbyte truncates Exception $message). (Ilia)\n  . Fixed bug #52719 (array_walk_recursive crashes if third param of the\n    function is by reference). (Nikita Popov)\n  . Improve performance of set_exception_handler while doing reset (Laruence)\n\n- fileinfo:\n  . Fix fileinfo test problems. (Anatoliy Belsky)\n\n- FPM\n  . Fixed bug #61430 (Transposed memset() params in sapi/fpm/fpm/fpm_shm.c).\n    (michaelhood at gmail dot com, Ilia)\n\n- Ibase\n  . Fixed bug #60947 (Segmentation fault while executing ibase_db_info).\n    (Ilia)\n\n- Installation\n  . Fixed bug #61172 (Add Apache 2.4 support). (Chris Jones)\n\n- Intl:\n  . Fixed bug #61487 (Incorrent bounds checking in grapheme_strpos).\n    (Stas)\n\n- mbstring:\n  . MFH mb_ereg_replace_callback() for security enhancements. (Rui)\n\n- mysqli\n  . Fixed bug #61003 (mysql_stat() require a valid connection). (Johannes).\n\n- mysqlnd\n  . Fixed bug #61704 (Crash apache, phpinfo() threading issue). (Johannes)\n  . Fixed bug #60948 (mysqlnd FTBFS when -Wformat-security is enabled).\n    (Johannes)\n\n- PDO\n  . Fixed bug #61292 (Segfault while calling a method on an overloaded PDO\n    object). (Laruence)\n\n- PDO_mysql\n  . Fixed bug #61207 (PDO::nextRowset() after a multi-statement query doesn't\n    always work). (Johannes)\n  . Fixed bug #61194 (PDO should export compression flag with myslqnd).\n    (Johannes)\n\n- PDO_odbc\n  . Fixed bug #61212 (PDO ODBC Segfaults on SQL_SUCESS_WITH_INFO). (Ilia)\n\n- Phar\n  . Fixed bug #61184 (Phar::webPhar() generates headers with trailing NUL\n    bytes). (Nikita Popov)\n\n- Readline:\n  . Fixed bug #61088 (Memory leak in readline_callback_handler_install).\n    (Nikic, Laruence)\n\n- Reflection:\n  . Implemented FR #61602 (Allow access to the name of constant\n    used as function/method parameter's default value). (reeze.xia@gmail.com)\n  . Fixed bug #60968 (Late static binding doesn't work with\n    ReflectionMethod::invokeArgs()). (Laruence)\n\n- Session\n  . Fixed bug #60634 (Segmentation fault when trying to die() in\n    SessionHandler::write()). (Ilia)\n\n- SOAP\n  . Fixed bug #61423 (gzip compression fails). (Ilia)\n  . Fixed bug #60887 (SoapClient ignores user_agent option and sends no\n    User-Agent header). (carloschilazo at gmail dot com)\n  . Fixed bug #60842, #51775 (Chunked response parsing error when\n    chunksize length line is > 10 bytes). (Ilia)\n  . Fixed bug #49853 (Soap Client stream context header option ignored).\n    (Dmitry)\n\n- SPL:\n  . Fixed bug #61453 (SplObjectStorage does not identify objects correctly).\n    (Gustavo)\n  . Fixed bug #61347 (inconsistent isset behavior of Arrayobject). (Laruence)\n\n- Standard:\n  . Fixed memory leak in substr_replace. (Pierrick)\n  . Make max_file_uploads ini directive settable outside of php.ini (Rasmus)\n  . Fixed bug #61409 (Bad formatting on phpinfo()). (Jakub Vrana)\n  . Fixed bug #60222 (time_nanosleep() does validate input params). (Ilia)\n  . Fixed bug #60106 (stream_socket_server silently truncates long unix socket\n    paths). (Ilia)\n\n- XMLRPC:\n  . Fixed bug #61264 (xmlrpc_parse_method_descriptions leaks temporary\n    variable). (Nikita Popov)\n  . Fixed bug #61097 (Memory leak in xmlrpc functions copying zvals). (Nikita\n    Popov)\n\n- Zlib:\n  . Fixed bug #61306 (initialization of global inappropriate for ZTS). (Gustavo)\n  . Fixed bug #61287 (A particular string fails to decompress). (Mike)\n  . Fixed bug #61139 (gzopen leaks when specifying invalid mode). (Nikita Popov)\n\n01 Mar 2012, PHP 5.4.0\n\n- Installation:\n  . autoconf 2.59+ is now supported (and required) for generating the\n    configure script with ./buildconf. Autoconf 2.60+ is desirable\n    otherwise the configure help order may be incorrect.  (Rasmus, Chris Jones)\n\n- Removed legacy features:\n  . break/continue $var syntax. (Dmitry)\n  . Safe mode and all related php.ini options. (Kalle)\n  . register_globals and register_long_arrays php.ini options. (Kalle)\n  . import_request_variables(). (Kalle)\n  . allow_call_time_pass_reference. (Pierrick)\n  . define_syslog_variables php.ini option and its associated function. (Kalle)\n  . highlight.bg php.ini option. (Kalle)\n  . safe_mode, safe_mode_gid, safe_mode_include_dir,\n    safe_mode_exec_dir, safe_mode_allowed_env_vars and\n    safe_mode_protected_env_vars php.ini options.\n  . zend.ze1_compatibility_mode php.ini option.\n  . Session bug compatibility mode (session.bug_compat_42 and\n    session.bug_compat_warn php.ini options). (Kalle)\n  . session_is_registered(), session_register() and session_unregister()\n    functions. (Kalle)\n  . y2k_compliance php.ini option. (Kalle)\n  . magic_quotes_gpc, magic_quotes_runtime and magic_quotes_sybase\n    php.ini options. get_magic_quotes_gpc, get_magic_quotes_runtime are kept\n    but always return false, set_magic_quotes_runtime raises an\n    E_CORE_ERROR. (Pierrick, Pierre)\n  . Removed support for putenv(\"TZ=..\") for setting the timezone. (Derick)\n  . Removed the timezone guessing algorithm in case the timezone isn't set with\n    date.timezone or date_default_timezone_set(). Instead of a guessed\n    timezone, \"UTC\" is now used instead. (Derick)\n\n- Moved extensions to PECL:\n  . ext/sqlite.  (Note: the ext/sqlite3 and ext/pdo_sqlite extensions are\n    not affected) (Johannes)\n\n- General improvements:\n  . Added short array syntax support ([1,2,3]), see UPGRADING guide for full\n    details. (rsky0711 at gmail . com, sebastian.deutsch at 9elements . com,\n    Pierre)\n  . Added binary number format (0b001010). (Jonah dot Harris at gmail dot com)\n  . Added support for Class::{expr}() syntax (Pierrick)\n  . Added multibyte support by default. Previously PHP had to be compiled\n    with --enable-zend-multibyte.  Now it can be enabled or disabled through\n    the zend.multibyte directive in php.ini. (Dmitry)\n  . Removed compile time dependency from ext/mbstring (Dmitry)\n  . Added support for Traits. (Stefan, with fixes by Dmitry and Laruence)\n  . Added closure $this support back. (Stas)\n  . Added array dereferencing support. (Felipe)\n  . Added callable typehint. (Hannes)\n  . Added indirect method call through array. FR #47160. (Felipe)\n  . Added DTrace support. (David Soria Parra)\n  . Added class member access on instantiation (e.g. (new foo)->bar()) support.\n    (Felipe)\n  . <?= is now always available regardless of the short_open_tag setting. (Rasmus)\n  . Implemented Zend Signal Handling (configurable option --enable-zend-signals,\n    off by default). (Lucas Nealan, Arnaud Le Blanc, Brian Shire, Ilia)\n  . Improved output layer, see README.NEW-OUTPUT-API for internals. (Mike)\n  . Improved UNIX build system to allow building multiple PHP binary SAPIs and\n    one SAPI module the same time. FR #53271, FR #52419. (Jani)\n  . Implemented closure rebinding as parameter to bindTo. (Gustavo Lopes)\n  . Improved the warning message of incompatible arguments. (Laruence)\n  . Improved ternary operator performance when returning arrays. (Arnaud, Dmitry)\n  . Changed error handlers to only generate docref links when the docref_root\n    php.ini setting is not empty. (Derick)\n  . Changed silent conversion of array to string to produce a notice. (Patrick)\n  . Changed default encoding from ISO-8859-1 to UTF-8 when not specified in\n    htmlspecialchars and htmlentities. (Rasmus)\n  . Changed casting of null/''/false into an Object when adding a property\n    from E_STRICT into a warning. (Scott)\n  . Changed E_ALL to include E_STRICT. (Stas)\n  . Disabled Windows CRT warning by default, can be enabled again using the\n    php.ini directive windows_show_crt_warnings. (Pierre)\n  . Fixed bug #55378: Binary number literal returns float number though its\n    value is small enough. (Derick)\n\n- Improved Zend Engine memory usage: (Dmitry)\n  . Improved parse error messages. (Felipe)\n  . Replaced zend_function.pass_rest_by_reference by\n    ZEND_ACC_PASS_REST_BY_REFERENCE in zend_function.fn_flags.\n  . Replaced zend_function.return_reference by ZEND_ACC_RETURN_REFERENCE\n    in zend_function.fn_flags.\n  . Removed zend_arg_info.required_num_args as it was only needed for internal\n    functions. Now the first arg_info for internal functions (which has special\n    meaning) is represented by the zend_internal_function_info structure.\n  . Moved zend_op_array.size, size_var, size_literal, current_brk_cont,\n    backpatch_count into CG(context) as they are used only during compilation.\n  . Moved zend_op_array.start_op into EG(start_op) as it's used only for\n    'interactive' execution of a single top-level op-array.\n  . Replaced zend_op_array.done_pass_two by ZEND_ACC_DONE_PASS_TWO in\n    zend_op_array.fn_flags.\n  . op_array.vars array is trimmed (reallocated) during pass_two.\n  . Replaced zend_class_entry.constants_updated by ZEND_ACC_CONSTANTS_UPDATED\n    in zend_class_entry.ce_flags.\n  . Reduced the size of zend_class_entry by sharing the same memory space\n    by different information for internal and user classes.\n    See zend_class_entry.info union.\n  . Reduced size of temp_variable.\n\n- Improved Zend Engine - performance tweaks and optimizations: (Dmitry)\n  . Inlined most probable code-paths for arithmetic operations directly into\n    executor.\n  . Eliminated unnecessary iterations during request startup/shutdown.\n  . Changed $GLOBALS into a JIT autoglobal, so it's initialized only if used.\n    (this may affect opcode caches!)\n  . Improved performance of @ (silence) operator.\n  . Simplified string offset reading. Given $str=\"abc\" then $str[1][0] is now\n    a legal construct.\n  . Added caches to eliminate repeatable run-time bindings of functions,\n    classes, constants, methods and properties.\n  . Added concept of interned strings. All strings constants known at compile\n    time are allocated in a single copy and never changed.\n  . ZEND_RECV now always has IS_CV as its result.\n  . ZEND_CATCH now has to be used only with constant class names.\n  . ZEND_FETCH_DIM_? may fetch array and dimension operands in different order.\n  . Simplified ZEND_FETCH_*_R operations. They can't be used with the\n    EXT_TYPE_UNUSED flag any more. This is a very rare and useless case.\n    ZEND_FREE might be required after them instead.\n  . Split ZEND_RETURN into two new instructions ZEND_RETURN and\n    ZEND_RETURN_BY_REF.\n  . Optimized access to global constants using values with pre-calculated\n    hash_values from the literals table.\n  . Optimized access to static properties using executor specialization.\n    A constant class name may be used as a direct operand of ZEND_FETCH_*\n    instruction without previous ZEND_FETCH_CLASS.\n  . zend_stack and zend_ptr_stack allocation is delayed until actual usage.\n\n- Other improvements to Zend Engine:\n  . Added an optimization which saves memory and emalloc/efree calls for empty\n    HashTables. (Stas, Dmitry)\n  . Added ability to reset user opcode handlers (Yoram).\n  . Changed the structure of op_array.opcodes. The constant values are moved from\n    opcode operands into a separate literal table. (Dmitry)\n  . Fixed (disabled) inline-caching for ZEND_OVERLOADED_FUNCTION methods.\n    (Dmitry)\n\n- Improved core functions:\n  . Enforce an extended class' __construct arguments to match the\n    abstract constructor in the base class.\n  . Disallow reusing superglobal names as parameter names.\n  . Added optional argument to debug_backtrace() and debug_print_backtrace()\n    to limit the amount of stack frames returned. (Sebastian, Patrick)\n  . Added hex2bin() function. (Scott)\n  . number_format() no longer truncates multibyte decimal points and thousand\n    separators to the first byte. FR #53457. (Adam)\n  . Added support for object references in recursive serialize() calls.\n    FR #36424. (Mike)\n  . Added support for SORT_NATURAL and SORT_FLAG_CASE in array\n    sort functions (sort, rsort, ksort, krsort, asort, arsort and\n    array_multisort). FR#55158 (Arpad)\n  . Added stream metadata API support and stream_metadata() stream class\n    handler. (Stas)\n  . User wrappers can now define a stream_truncate() method that responds\n    to truncation, e.g. through ftruncate(). FR #53888. (Gustavo)\n  . Improved unserialize() performance.\n    (galaxy dot mipt at gmail dot com, Kalle)\n  . Changed array_combine() to return empty array instead of FALSE when both\n    parameter arrays are empty. FR #34857. (joel.perras@gmail.com)\n  . Fixed bug #61095 (Incorect lexing of 0x00*+<NUM>). (Etienne)\n  . Fixed bug #60965 (Buffer overflow on htmlspecialchars/entities with\n    $double=false). (Gustavo)\n  . Fixed bug #60895 (Possible invalid handler usage in windows random\n    functions). (Pierre)\n  . Fixed bug #60879 (unserialize() Does not invoke __wakeup() on object).\n    (Pierre, Steve)\n  . Fixed bug #60825 (Segfault when running symfony 2 tests).\n    (Dmitry, Laruence)\n  . Fixed bug #60627 (httpd.worker segfault on startup with php_value).\n  . Fixed bug #60613 (Segmentation fault with $cls->{expr}() syntax). (Dmitry)\n  . Fixed bug #60611 (Segmentation fault with Cls::{expr}() syntax). (Laruence)\n    (Laruence)\n  . Fixed bug #60558 (Invalid read and writes). (Laruence)\n  . Fixed bug #60444 (Segmentation fault with include & class extending).\n    (Laruence, Dmitry).\n  . Fixed bug #60362 (non-existent sub-sub keys should not have values).\n    (Laruence, alan_k, Stas)\n  . Fixed bug #60350 (No string escape code for ESC (ascii 27), normally \\e).\n    (php at mickweiss dot com)\n  . Fixed bug #60321 (ob_get_status(true) no longer returns an array when\n    buffer is empty). (Pierrick)\n  . Fixed bug #60282 (Segfault when using ob_gzhandler() with open buffers).\n    (Laruence)\n  . Fixed bug #60240 (invalid read/writes when unserializing specially crafted\n    strings). (Mike)\n  . Fixed bug #60227 (header() cannot detect the multi-line header with\n     CR(0x0D)). (rui)\n  . Fixed bug #60174 (Notice when array in method prototype error).\n    (Laruence)\n  . Fixed bug #60169 (Conjunction of ternary and list crashes PHP).\n    (Laruence)\n  . Fixed bug #60038 (SIGALRM cause segfault in php_error_cb). (Laruence)\n    (klightspeed at netspace dot net dot au)\n  . Fixed bug #55871 (Interruption in substr_replace()). (Stas)\n  . Fixed bug #55801 (Behavior of unserialize has changed). (Mike)\n  . Fixed bug #55758 (Digest Authenticate missed in 5.4) . (Laruence)\n  . Fixed bug #55748 (multiple NULL Pointer Dereference with zend_strndup())\n    (CVE-2011-4153). (Stas)\n  . Fixed bug #55124 (recursive mkdir fails with current (dot) directory in path).\n    (Pierre)\n  . Fixed bug #55084 (Function registered by header_register_callback is\n    called only once per process). (Hannes)\n  . Implement FR #54514 (Get php binary path during script execution).\n    (Laruence)\n  . Fixed bug #52211 (iconv() returns part of string on error). (Felipe)\n  . Fixed bug #51860 (Include fails with toplevel symlink to /). (Dmitry)\n\n- Improved generic SAPI support:\n  . Added $_SERVER['REQUEST_TIME_FLOAT'] to include microsecond precision.\n    (Patrick)\n  . Added header_register_callback() which is invoked immediately\n    prior to the sending of headers and after default headers have\n    been added. (Scott)\n  . Added http_response_code() function. FR #52555. (Paul Dragoonis, Kalle)\n  . Fixed bug #55500 (Corrupted $_FILES indices lead to security concern).\n    (CVE-2012-1172). (Stas)\n  . Fixed bug #54374 (Insufficient validating of upload name leading to\n    corrupted $_FILES indices). (CVE-2012-1172). (Stas, lekensteyn at gmail dot com)\n\n- Improved CLI SAPI:\n  . Added built-in web server that is intended for testing purpose.\n    (Moriyoshi, Laruence, and fixes by Pierre, Derick, Arpad,\n    chobieee at gmail dot com)\n  . Added command line option --rz <name> which shows information of the\n    named Zend extension. (Johannes)\n  . Interactive readline shell improvements: (Johannes)\n    . Added \"cli.pager\" php.ini setting to set a pager for output.\n    . Added \"cli.prompt\" php.ini setting to configure the shell prompt.\n    . Added shortcut #inisetting=value to change php.ini settings at run-time.\n    . Changed shell not to terminate on fatal errors.\n    . Interactive shell works with shared readline extension. FR #53878.\n\n- Improved CGI/FastCGI SAPI: (Dmitry)\n  . Added apache compatible functions: apache_child_terminate(),\n    getallheaders(), apache_request_headers() and apache_response_headers()\n  . Improved performance of FastCGI request parsing.\n  . Fixed reinitialization of SAPI callbacks after php_module_startup().\n    (Dmitry)\n\n- Improved PHP-FPM SAPI:\n  . Removed EXPERIMENTAL flag. (fat)\n  . Fixed bug #60659 (FPM does not clear auth_user on request accept).\n    (bonbons at linux-vserver dot org)\n\n- Improved Litespeed SAPI:\n  . Fixed bug #55769 (Make Fails with \"Missing Separator\" error). (Adam)\n\n- Improved Date extension:\n  . Added the + modifier to parseFromFormat to allow trailing text in the\n    string to parse without throwing an error. (Stas, Derick)\n\n- Improved DBA extension:\n  . Added Tokyo Cabinet abstract DB support. (Michael Maclean)\n  . Added Berkeley DB 5 support. (Johannes, Chris Jones)\n\n- Improved DOM extension:\n  . Added the ability to pass options to loadHTML (Chregu, fxmulder at gmail dot com)\n\n- Improved filesystem functions:\n  . scandir() now accepts SCANDIR_SORT_NONE as a possible sorting_order value.\n    FR #53407. (Adam)\n\n- Improved HASH extension:\n  . Added Jenkins's one-at-a-time hash support. (Martin Jansen)\n  . Added FNV-1 hash support. (Michael Maclean)\n  . Made Adler32 algorithm faster. FR #53213. (zavasek at yandex dot ru)\n  . Removed Salsa10/Salsa20, which are actually stream ciphers (Mike)\n  . Fixed bug #60221 (Tiger hash output byte order) (Mike)\n\n- Improved intl extension:\n  . Added Spoofchecker class, allows checking for visibly confusable characters and\n    other security issues. (Scott)\n  . Added Transliterator class, allowing transliteration of strings.\n    (Gustavo)\n  . Added support for UTS #46. (Gustavo)\n  . Fixed build on Fedora 15 / Ubuntu 11. (Hannes)\n  . Fixed bug #55562 (grapheme_substr() returns false on big length). (Stas)\n\n- Improved JSON extension:\n  . Added new json_encode() option JSON_UNESCAPED_UNICODE. FR #53946.\n    (Alexander, Gwynne)\n  . Added JsonSerializable interface. (Sara)\n  . Added JSON_BIGINT_AS_STRING, extended json_decode() sig with $options.\n    (Sara)\n  . Added support for JSON_NUMERIC_CHECK option in json_encode() that converts\n    numeric strings to integers. (Ilia)\n  . Added new json_encode() option JSON_UNESCAPED_SLASHES. FR #49366. (Adam)\n  . Added new json_encode() option JSON_PRETTY_PRINT. FR #44331. (Adam)\n\n- Improved LDAP extension:\n  . Added paged results support. FR #42060. (ando@OpenLDAP.org,\n    iarenuno@eteo.mondragon.edu, jeanseb@au-fil-du.net, remy.saissy@gmail.com)\n\n- Improved mbstring extension:\n  . Added Shift_JIS/UTF-8 Emoji (pictograms) support. (Rui)\n  . Added JIS X0213:2004 (Shift_JIS-2004, EUC-JP-2004, ISO-2022-JP-2004)\n    support. (Rui)\n  . Ill-formed UTF-8 check for security enhancements. (Rui)\n  . Added MacJapanese (Shift_JIS) and gb18030 encoding support. (Rui)\n  . Added encode/decode in hex format to mb_[en|de]code_numericentity(). (Rui)\n  . Added user JIS X0213:2004 (Shift_JIS-2004, EUC-JP-2004, ISO-2022-JP-2004)\n    support. (Rui)\n  . Added the user defined area for CP936 and CP950 (Rui).\n  . Fixed bug #60306 (Characters lost while converting from cp936 to utf8).\n    (Laruence)\n\n- Improved MySQL extensions:\n  . MySQL: Deprecated mysql_list_dbs(). FR #50667. (Andrey)\n  . mysqlnd: Added named pipes support. FR #48082. (Andrey)\n  . MySQLi: Added iterator support in MySQLi. mysqli_result implements\n    Traversable. (Andrey, Johannes)\n  . PDO_mysql: Removed support for linking with MySQL client libraries older\n    than 4.1. (Johannes)\n  . ext/mysql, mysqli and pdo_mysql now use mysqlnd by default. (Johannes)\n  . Fixed bug #55473 (mysql_pconnect leaks file descriptors on reconnect).\n    (Andrey, Laruence)\n  . Fixed bug #55653 (PS crash with libmysql when binding same variable as\n    param and out). (Laruence)\n\n- Improved OpenSSL extension:\n  . Added AES support. FR #48632. (yonas dot y at gmail dot com, Pierre)\n  . Added no padding option to openssl_encrypt()/openssl_decrypt(). (Scott)\n  . Use php's implementation for Windows Crypto API in\n    openssl_random_pseudo_bytes. (Pierre)\n  . On error in openssl_random_pseudo_bytes() made sure we set strong result\n    to false. (Scott)\n  . Fixed possible attack in SSL sockets with SSL 3.0 / TLS 1.0.\n    CVE-2011-3389. (Scott)\n  . Fixed bug #61124 (Crash when decoding an invalid base64 encoded string).\n    (me at ktamura dot com, Scott)\n\n- Improved PDO:\n  . Fixed PDO objects binary incompatibility. (Dmitry)\n\n- PDO DBlib driver:\n  . Added nextRowset support.\n  . Fixed bug #50755 (PDO DBLIB Fails with OOM).\n\n- Improved PostgreSQL extension:\n  . Added support for \"extra\" parameter for PGNotify().\n    (r dot i dot k at free dot fr, Ilia)\n\n- Improved PCRE extension:\n  . Changed third parameter of preg_match_all() to optional. FR #53238. (Adam)\n\n- Improved Readline extension:\n  . Fixed bug #54450 (Enable callback support when built against libedit).\n    (fedora at famillecollet dot com, Hannes)\n\n- Improved Reflection extension:\n  . Added ReflectionClass::newInstanceWithoutConstructor() to create a new\n    instance of a class without invoking its constructor. FR #55490.\n    (Sebastian)\n  . Added ReflectionExtension::isTemporary() and\n    ReflectionExtension::isPersistent() methods. (Johannes)\n  . Added ReflectionZendExtension class. (Johannes)\n  . Added ReflectionClass::isCloneable(). (Felipe)\n\n- Improved Session extension:\n  . Expose session status via new function, session_status (FR #52982) (Arpad)\n  . Added support for object-oriented session handlers. (Arpad)\n  . Added support for storing upload progress feedback in session data. (Arnaud)\n  . Changed session.entropy_file to default to /dev/urandom or /dev/arandom if\n    either is present at compile time. (Rasmus)\n  . Fixed bug #60860 (session.save_handler=user without defined function core\n    dumps). (Felipe)\n  . Implement FR #60551 (session_set_save_handler should support a core's\n    session handler interface). (Arpad)\n  . Fixed bug #60640 (invalid return values). (Arpad)\n\n- Improved SNMP extension (Boris Lytochkin):\n  . Added OO API. FR #53594 (php-snmp rewrite).\n  . Sanitized return values of existing functions. Now it returns FALSE on\n    failure.\n  . Allow ~infinite OIDs in GET/GETNEXT/SET queries. Autochunk them to max_oids\n    upon request.\n  . Introducing unit tests for extension with ~full coverage.\n  . IPv6 support. (FR #42918)\n  . Way of representing OID value can now be changed when SNMP_VALUE_OBJECT\n    is used for value output mode. Use or'ed SNMP_VALUE_LIBRARY(default if\n    not specified) or SNMP_VALUE_PLAIN. (FR #54502)\n  . Fixed bug #60749 (SNMP module should not strip non-standard SNMP port\n    from hostname). (Boris Lytochkin)\n  . Fixed bug #60585 (php build fails with USE flag snmp when IPv6 support\n    is disabled). (Boris Lytochkin)\n  . Fixed bug #53862 (snmp_set_oid_output_format does not allow returning to default)\n  . Fixed bug #46065 (snmp_set_quick_print() persists between requests)\n  . Fixed bug #45893 (Snmp buffer limited to 2048 char)\n  . Fixed bug #44193 (snmp v3 noAuthNoPriv doesn't work)\n\n- Improved SOAP extension:\n  . Added new SoapClient option \"keep_alive\". FR #60329. (Pierrick)\n  . Fixed basic HTTP authentication for WSDL sub requests. (Dmitry)\n\n- Improved SPL extension:\n  . Added RegexIterator::getRegex() method. (Joshua Thijssen)\n  . Added SplObjectStorage::getHash() hook. (Etienne)\n  . Added CallbackFilterIterator and RecursiveCallbackFilterIterator. (Arnaud)\n  . Added missing class_uses(..) as pointed out by #55266 (Stefan)\n  . Immediately reject wrong usages of directories under Spl(Temp)FileObject\n    and friends. (Etienne, Pierre)\n  . FilesystemIterator, GlobIterator and (Recursive)DirectoryIterator now use\n    the default stream context. (Hannes)\n  . Fixed bug #60201 (SplFileObject::setCsvControl does not expose third\n    argument via Reflection). (Peter)\n  . Fixed bug #55287 (spl_classes() not includes CallbackFilter classes)\n    (sasezaki at gmail dot com, salathe)\n\n- Improved Sysvshm extension:\n  . Fixed bug #55750 (memory copy issue in sysvshm extension).\n    (Ilia, jeffhuang9999 at gmail dot com)\n\n- Improved Tidy extension:\n  . Fixed bug #54682 (Tidy::diagnose() NULL pointer dereference).\n    (Maksymilian Arciemowicz, Felipe)\n\n- Improved Tokenizer extension:\n  . Fixed bug #54089 (token_get_all with regards to __halt_compiler is\n    not binary safe). (Nikita Popov)\n\n- Improved XSL extension:\n  . Added XsltProcessor::setSecurityPrefs($options) and getSecurityPrefs() to\n    define forbidden operations within XSLT stylesheets, default is not to\n    enable write operations from XSLT. Bug #54446 (Chregu, Nicolas Gregoire)\n  . XSL doesn't stop transformation anymore, if a PHP function can't be called\n    (Christian)\n\n- Improved ZLIB extension:\n  . Re-implemented non-file related functionality. (Mike)\n  . Fixed bug #55544 (ob_gzhandler always conflicts with zlib.output_compression).\n    (Mike)\n\n14 Jun 2012, PHP 5.3.14\n\n- CLI SAPI:\n  . Fixed bug #61546 (functions related to current script failed when chdir()\n    in cli sapi). (Laruence, reeze.xia@gmail.com)\n\n- CURL:\n  . Fixed bug #61948 (CURLOPT_COOKIEFILE '' raises open_basedir restriction).\n    (Laruence)\n\n- COM:\n  . Fixed bug #62146 com_dotnet cannot be built shared. (Johannes)\n\n- Core:\n  . Fixed CVE-2012-2143. (Solar Designer)\n  . Fixed missing bound check in iptcparse(). (chris at chiappa.net)\n  . Fixed bug #62373 (serialize() generates wrong reference to the object).\n    (Moriyoshi)\n  . Fixed bug #62005 (unexpected behavior when incrementally assigning to a\n    member of a null object). (Laruence)\n  . Fixed bug #61991 (long overflow in realpath_cache_get()). (Anatoliy)\n  . Fixed bug #61764 ('I' unpacks n as signed if n > 2^31-1 on LP64). (Gustavo)\n  . Fixed bug #61730 (Segfault from array_walk modifying an array passed by\n    reference). (Laruence)\n  . Fixed bug #61713 (Logic error in charset detection for htmlentities).\n    (Anatoliy)\n  . Fixed bug #54197 ([PATH=] sections incompatibility with user_ini.filename\n    set to null). (Anatoliy)\n  . Changed php://fd to be available only for CLI.\n\n- Fileinfo:\n  . Fixed bug #61812 (Uninitialised value used in libmagic).\n    (Laruence, Gustavo)\n\n- Iconv extension:\n  . Fixed a bug that iconv extension fails to link to the correct library\n    when another extension makes use of a library that links to the iconv\n    library. See https://bugs.gentoo.org/show_bug.cgi?id=364139 for detail.\n    (Moriyoshi)\n\n- Intl:\n  . Fixed bug #62082 (Memory corruption in internal function\n    get_icu_disp_value_src_php()). (Gustavo)\n\n- JSON\n  . Fixed bug #61537 (json_encode() incorrectly truncates/discards\n    information). (Adam)\n\n- PDO:\n  . Fixed bug #61755 (A parsing bug in the prepared statements can lead to\n    access violations). (Johannes)\n\n- Phar:\n  . Fix bug #61065 (Secunia SA44335). (Rasmus)\n\n- Streams:\n  . Fixed bug #61961 (file_get_contents leaks when access empty file with\n    maxlen set). (Reeze)\n\n08 May 2012, PHP 5.3.13\n- CGI\n  . Improve fix for PHP-CGI query string parameter vulnerability, CVE-2012-2311.\n    (Stas)\n\n03 May 2012, PHP 5.3.12\n- Fix PHP-CGI query string parameter vulnerability, CVE-2012-1823. (Rasmus)\n\n26 Apr 2012, PHP 5.3.11\n\n- Core:\n  . Fixed bug #61605 (header_remove() does not remove all headers).\n    (Laruence)\n  . Fixed bug #61541 (Segfault when using ob_* in output_callback).\n    (reeze.xia@gmail.com)\n  . Fixed bug #61273 (call_user_func_array with more than 16333 arguments\n    leaks / crashes). (Laruence)\n  . Fixed bug #61165 (Segfault - strip_tags()). (Laruence)\n  . Improved max_input_vars directive to check nested variables (Dmitry).\n  . Fixed bug #61095 (Incorect lexing of 0x00*+<NUM>). (Etienne)\n  . Fixed bug #61087 (Memory leak in parse_ini_file when specifying\n    invalid scanner mode). (Nikic, Laruence)\n  . Fixed bug #61072 (Memory leak when restoring an exception handler).\n    (Nikic, Laruence)\n  . Fixed bug #61058 (array_fill leaks if start index is PHP_INT_MAX).\n    (Laruence)\n  . Fixed bug #61043 (Regression in magic_quotes_gpc fix for CVE-2012-0831).\n    (Ond\u0159ej Sur\u00fd)\n  . Fixed bug #61000 (Exceeding max nesting level doesn't delete numerical\n    vars). (Laruence)\n  . Fixed bug #60895 (Possible invalid handler usage in windows random\n    functions). (Pierre)\n  . Fixed bug #60825 (Segfault when running symfony 2 tests).\n    (Dmitry, Laruence)\n  . Fixed bug #60801 (strpbrk() mishandles NUL byte). (Adam)\n  . Fixed bug #60569 (Nullbyte truncates Exception $message). (Ilia)\n  . Fixed bug #60227 (header() cannot detect the multi-line header with CR).\n    (rui, Gustavo)\n  . Fixed bug #60222 (time_nanosleep() does validate input params). (Ilia)\n  . Fixed bug #54374 (Insufficient validating of upload name leading to\n    corrupted $_FILES indices). (CVE-2012-1172). (Stas, lekensteyn at\n    gmail dot com, Pierre)\n  . Fixed bug #52719 (array_walk_recursive crashes if third param of the\n    function is by reference). (Nikita Popov)\n  . Fixed bug #51860 (Include fails with toplevel symlink to /). (Dmitry)\n\n- DOM\n  . Added debug info handler to DOM objects. (Gustavo, Joey Smith)\n\n- FPM\n  . Fixed bug #61430 (Transposed memset() params in sapi/fpm/fpm/fpm_shm.c).\n    (michaelhood at gmail dot com, Ilia)\n\n- Ibase\n  . Fixed bug #60947 (Segmentation fault while executing ibase_db_info).\n    (Ilia)\n\n- Installation\n  . Fixed bug #61172 (Add Apache 2.4 support). (Chris Jones)\n\n- Fileinfo\n  . Fixed bug #61173 (Unable to detect error from finfo constructor). (Gustavo)\n\n- Firebird Database extension (ibase):\n  . Fixed bug #60802 (ibase_trans() gives segfault when passing params).\n\n- Libxml:\n  . Fixed bug #61617 (Libxml tests failed(ht is already destroyed)).\n    (Laruence)\n  . Fixed bug #61367 (open_basedir bypass using libxml RSHUTDOWN).\n    (Tim Starling)\n\n- mysqli\n  . Fixed bug #61003 (mysql_stat() require a valid connection). (Johannes).\n\n- PDO_mysql\n  . Fixed bug #61207 (PDO::nextRowset() after a multi-statement query doesn't\n    always work). (Johannes)\n  . Fixed bug #61194 (PDO should export compression flag with myslqnd).\n    (Johannes)\n\n- PDO_odbc\n  . Fixed bug #61212 (PDO ODBC Segfaults on SQL_SUCESS_WITH_INFO). (Ilia)\n\n- PDO_pgsql\n  . Fixed bug #61267 (pdo_pgsql's PDO::exec() returns the number of SELECTed\n    rows on postgresql >= 9). (ben dot pineau at gmail dot com)\n\n- PDO_Sqlite extension:\n  . Add createCollation support. (Damien)\n\n- Phar:\n  . Fixed bug #61184 (Phar::webPhar() generates headers with trailing NUL\n    bytes). (Nikic)\n\n- PHP-FPM SAPI:\n  . Fixed bug #60811 (php-fpm compilation problem). (rasmus)\n\n- Readline:\n  . Fixed bug #61088 (Memory leak in readline_callback_handler_install).\n    (Nikic, Laruence)\n  . Add open_basedir checks to readline_write_history and readline_read_history.\n    (Rasmus, reported by Mateusz Goik)\n\n- Reflection:\n  . Fixed bug #61388 (ReflectionObject:getProperties() issues invalid reads\n    when get_properties returns a hash table with (inaccessible) dynamic\n    numeric properties). (Gustavo)\n  . Fixed bug #60968 (Late static binding doesn't work with\n    ReflectionMethod::invokeArgs()). (Laruence)\n\n- SOAP\n  . Fixed basic HTTP authentication for WSDL sub requests. (Dmitry)\n  . Fixed bug #60887 (SoapClient ignores user_agent option and sends no\n    User-Agent header). (carloschilazo at gmail dot com)\n  . Fixed bug #60842, #51775 (Chunked response parsing error when\n    chunksize length line is > 10 bytes). (Ilia)\n  . Fixed bug #49853 (Soap Client stream context header option ignored).\n    (Dmitry)\n\n- SPL\n  . Fixed memory leak when calling SplFileInfo's constructor twice. (Felipe)\n  . Fixed bug #61418 (Segmentation fault when DirectoryIterator's or\n    FilesystemIterator's iterators are requested more than once without\n    having had its dtor callback called in between). (Gustavo)\n  . Fixed bug #61347 (inconsistent isset behavior of Arrayobject). (Laruence)\n  . Fixed bug #61326 (ArrayObject comparison). (Gustavo)\n\n- SQLite3 extension:\n  . Add createCollation() method. (Brad Dewar)\n\n- Session:\n  . Fixed bug #60860 (session.save_handler=user without defined function core\n    dumps). (Felipe)\n  . Fixed bug #60634 (Segmentation fault when trying to die() in\n    SessionHandler::write()). (Ilia)\n\n- Streams:\n  . Fixed bug #61371 (stream_context_create() causes memory leaks on use\n    streams_socket_create). (Gustavo)\n  . Fixed bug #61253 (Wrappers opened with errors concurrency problem on ZTS).\n    (Gustavo)\n  . Fixed bug #61115 (stream related segfault on fatal error in\n    php_stream_context_link). (Gustavo)\n  . Fixed bug #60817 (stream_get_line() reads from stream even when there is\n    already sufficient data buffered). stream_get_line() now behaves more like\n    fgets(), as is documented. (Gustavo)\n  . Further fix for bug #60455 (stream_get_line misbehaves if EOF is not\n    detected together with the last read). (Gustavo)\n  . Fixed bug #60106 (stream_socket_server silently truncates long unix\n    socket paths). (Ilia)\n\n- Tidy:\n  . Fixed bug #54682 (tidy null pointer dereference). (Tony, David Soria Parra)\n\n- XMLRPC:\n  . Fixed bug #61264 (xmlrpc_parse_method_descriptions leaks temporary\n    variable). (Nikita Popov)\n  . Fixed bug #61097 (Memory leak in xmlrpc functions copying zvals). (Nikic)\n\n- Zlib:\n  . Fixed bug #61139 (gzopen leaks when specifying invalid mode). (Nikic)\n\n02 Feb 2012, PHP 5.3.10\n\n- Core:\n  . Fixed arbitrary remote code execution vulnerability reported by Stefan\n    Esser, CVE-2012-0830. (Stas, Dmitry)\n\n10 Jan 2012, PHP 5.3.9\n\n- Core:\n  . Added max_input_vars directive to prevent attacks based on hash collisions\n    (CVE-2011-4885) (Dmitry).\n  . Fixed bug #60205 (possible integer overflow in content_length). (Laruence)\n  . Fixed bug #60139 (Anonymous functions create cycles not detected by the\n    GC). (Dmitry)\n  . Fixed bug #60138 (GC crash with referenced array in RecursiveArrayIterator)\n    (Dmitry).\n  . Fixed bug #60120 (proc_open's streams may hang with stdin/out/err when\n    the data exceeds or is equal to 2048 bytes). (Pierre, Pascal Borreli)\n  . Fixed bug #60099 (__halt_compiler() works in braced namespaces). (Felipe)\n  . Fixed bug #60019 (Function time_nanosleep() is undefined on OS X). (Ilia)\n  . Fixed bug #55874 (GCC does not provide __sync_fetch_and_add on some archs).\n    (klightspeed at netspace dot net dot au)\n  . Fixed bug #55798 (serialize followed by unserialize with numeric object\n    prop. gives integer prop). (Gustavo)\n  . Fixed bug #55749 (TOCTOU issue in getenv() on Windows builds). (Pierre)\n  . Fixed bug #55707 (undefined reference to `__sync_fetch_and_add_4' on Linux\n    parisc). (Felipe)\n  . Fixed bug #55674 (fgetcsv & str_getcsv skip empty fields in some\n    tab-separated records). (Laruence)\n  . Fixed bug #55649 (Undefined function Bug()). (Laruence)\n  . Fixed bug #55622 (memory corruption in parse_ini_string). (Pierre)\n  . Fixed bug #55576 (Cannot conditionally move uploaded file without race\n    condition). (Gustavo)\n  . Fixed bug #55510: $_FILES 'name' missing first character after upload.\n    (Arpad)\n  . Fixed bug #55509 (segfault on x86_64 using more than 2G memory). (Laruence)\n  . Fixed bug #55504 (Content-Type header is not parsed correctly on\n    HTTP POST request). (Hannes)\n  . Fixed bug #55475 (is_a() triggers autoloader, new optional 3rd argument to\n    is_a and is_subclass_of). (alan_k)\n  . Fixed bug #52461 (Incomplete doctype and missing xmlns).\n    (virsacer at web dot de, Pierre)\n  . Fixed bug #55366 (keys lost when using substr_replace an array). (Arpad)\n  . Fixed bug #55273 (base64_decode() with strict rejects whitespace after\n    pad). (Ilia)\n  . Fixed bug #52624 (tempnam() by-pass open_basedir with nonnexistent\n    directory). (Felipe)\n  . Fixed bug #50982 (incorrect assumption of PAGE_SIZE size). (Dmitry)\n  . Fixed invalid free in call_user_method() function. (Felipe)\n  . Fixed bug #43200 (Interface implementation / inheritence not possible in\n    abstract classes). (Felipe)\n\n\n- BCmath:\n  . Fixed bug #60377 (bcscale related crashes on 64bits platforms). (shm)\n\n- Calendar:\n  . Fixed bug #55797 (Integer overflow in SdnToGregorian leads to segfault (in\n    optimized builds). (Gustavo)\n\n- cURL:\n  . Fixed bug #60439 (curl_copy_handle segfault when used with\n    CURLOPT_PROGRESSFUNCTION). (Pierrick)\n  . Fixed bug #54798 (Segfault when CURLOPT_STDERR file pointer is closed\n    before calling curl_exec). (Hannes)\n  . Fixed issues were curl_copy_handle() would sometimes lose copied\n    preferences. (Hannes)\n\n- DateTime:\n  . Fixed bug #60373 (Startup errors with log_errors on cause segfault).\n    (Derick)\n  . Fixed bug #60236 (TLA timezone dates are not converted properly from\n    timestamp). (Derick)\n  . Fixed bug #55253 (DateTime::add() and sub() result -1 hour on objects with\n    time zone type 2). (Derick)\n  . Fixed bug #54851 (DateTime::createFromFormat() doesn't interpret \"D\").\n    (Derick)\n  . Fixed bug #53502 (strtotime with timezone memory leak). (Derick)\n  . Fixed bug #52062 (large timestamps with DateTime::getTimestamp and\n    DateTime::setTimestamp). (Derick)\n  . Fixed bug #51994 (date_parse_from_format is parsing invalid date using 'yz'\n    format). (Derick)\n  . Fixed bug #52113 (Seg fault while creating (by unserialization)\n    DatePeriod). (Derick)\n  . Fixed bug #48476 (cloning extended DateTime class without calling\n    parent::__constr crashed PHP). (Hannes)\n\n- EXIF:\n  . Fixed bug #60150 (Integer overflow during the parsing of invalid exif\n    header). (CVE-2011-4566) (Stas, flolechaud at gmail dot com)\n\n- Fileinfo:\n  . Fixed bug #60094 (C++ comment fails in c89). (Laruence)\n  . Fixed possible memory leak in finfo_open(). (Felipe)\n  . Fixed memory leak when calling the Finfo constructor twice. (Felipe)\n\n- Filter:\n  . Fixed Bug #55478 (FILTER_VALIDATE_EMAIL fails with internationalized\n    domain name addresses containing >1 -). (Ilia)\n\n- FTP:\n  . Fixed bug #60183 (out of sync ftp responses). (bram at ebskamp dot me,\n    rasmus)\n\n- Gd:\n  . Fixed bug #60160 (imagefill() doesn't work correctly\n    for small images). (Florian)\n  . Fixed potential memory leak on a png error (Rasmus, Paul Saab)\n\n- Intl:\n  . Fixed bug #60192 (SegFault when Collator not constructed\n    properly). (Florian)\n  . Fixed memory leak in several Intl locale functions. (Felipe)\n\n- Json:\n  . Fixed bug #55543 (json_encode() with JSON_NUMERIC_CHECK fails on objects\n    with numeric string properties). (Ilia, dchurch at sciencelogic dot com)\n\n- Mbstring:\n  . Fixed possible crash in mb_ereg_search_init() using empty pattern. (Felipe)\n\n- MS SQL:\n  . Fixed bug #60267 (Compile failure with freetds 0.91). (Felipe)\n\n- MySQL:\n  . Fixed bug #55550 (mysql.trace_mode miscounts result sets). (Johannes)\n\n- MySQLi extension:\n  . Fixed bug #55859 (mysqli->stat property access gives error). (Andrey)\n  . Fixed bug #55582 (mysqli_num_rows() returns always 0 for unbuffered, when\n    mysqlnd is used). (Andrey)\n  . Fixed bug #55703 (PHP crash when calling mysqli_fetch_fields).\n    (eran at zend dot com, Laruence)\n\n- mysqlnd\n  . Fixed bug #55609 (mysqlnd cannot be built shared). (Johannes)\n  . Fixed bug #55067 (MySQL doesn't support compression - wrong config option).\n    (Andrey)\n\n- NSAPI SAPI:\n  . Don't set $_SERVER['HTTPS'] on unsecure connection (bug #55403). (Uwe\n    Schindler)\n\n- OpenSSL:\n  . Fixed bug #60279 (Fixed NULL pointer dereference in\n    stream_socket_enable_crypto, case when ssl_handle of session_stream is not\n    initialized.) (shm)\n  . Fix segfault with older versions of OpenSSL. (Scott)\n\n- Oracle Database extension (OCI8):\n  . Fixed bug #59985 (show normal warning text for OCI_NO_DATA).\n    (Chris Jones)\n  . Increased maximum Oracle error message buffer length for new 11.2.0.3 size.\n    (Chris Jones)\n  . Improve internal initalization failure error messages. (Chris Jones)\n\n- PDO\n  . Fixed bug #55776 (PDORow to session bug). (Johannes)\n\n- PDO Firebird:\n  . Fixed bug #48877 (\"bindValue\" and \"bindParam\" do not work for PDO Firebird).\n    (Mariuz)\n  . Fixed bug #47415 (PDO_Firebird segfaults when passing lowercased column name to bindColumn).\n  . Fixed bug #53280 (PDO_Firebird segfaults if query column count less than param count).\n    (Mariuz)\n\n- PDO MySQL driver:\n  . Fixed bug #60155 (pdo_mysql.default_socket ignored). (Johannes)\n  . Fixed bug #55870 (PDO ignores all SSL parameters when used with mysql\n    native driver). (Pierre)\n  . Fixed bug #54158 (MYSQLND+PDO MySQL requires #define\n    MYSQL_OPT_LOCAL_INFILE). (Andrey)\n\n- PDO OCI driver:\n  . Fixed bug #55768 (PDO_OCI can't resume Oracle session after it's been\n    killed). (mikhail dot v dot gavrilov at gmail dot com, Chris Jones, Tony)\n\n- Phar:\n  . Fixed bug #60261 (NULL pointer dereference in phar). (Felipe)\n  . Fixed bug #60164 (Stubs of a specific length break phar_open_from_fp\n    scanning for __HALT_COMPILER). (Ralph Schindler)\n  . Fixed bug #53872 (internal corruption of phar). (Hannes)\n  . Fixed bug #52013 (Unable to decompress files in a compressed phar). (Hannes)\n\n- PHP-FPM SAPI:\n  . Dropped restriction of not setting the same value multiple times, the last\n    one holds. (giovanni at giacobbi dot net, fat)\n  . Added .phar to default authorized extensions. (fat)\n  . Fixed bug #60659 (FPM does not clear auth_user on request accept).\n    (bonbons at linux-vserver dot org)\n  . Fixed bug #60629 (memory corruption when web server closed the fcgi fd).\n    (fat)\n  . Enhance error log when the primary script can't be open. FR #60199. (fat)\n  . Fixed bug #60179 (php_flag and php_value does not work properly). (fat)\n  . Fixed bug #55577 (status.html does not install). (fat)\n  . Fixed bug #55533 (The -d parameter doesn't work). (fat)\n  . Fixed bug #55526 (Heartbeat causes a lot of unnecessary events). (fat)\n  . Fixed bug #55486 (status show BIG processes number). (fat)\n  . Enhanced security by limiting access to user defined extensions.\n    FR #55181. (fat)\n  . Added process.max to control the number of process FPM can fork. FR #55166.\n    (fat)\n  . Implemented FR #54577 (Enhanced status page with full status and details\n    about each processes. Also provide a web page (status.html) for\n    real-time FPM status. (fat)\n  . Lowered default value for Process Manager. FR #54098. (fat)\n  . Implemented FR #52569 (Add the \"ondemand\" process-manager\n    to allow zero children). (fat)\n  . Added partial syslog support (on error_log only). FR #52052. (fat)\n\n- Postgres:\n  . Fixed bug #60244 (pg_fetch_* functions do not validate that row param\n    is >0). (Ilia)\n  . Added PGSQL_LIBPQ_VERSION/PGSQL_LIBPQ_VERSION_STR constants. (Yasuo)\n\n- Reflection:\n  . Fixed bug #60367 (Reflection and Late Static Binding). (Laruence)\n\n- Session:\n  . Fixed bug #55267 (session_regenerate_id fails after header sent). (Hannes)\n\n- SimpleXML:\n  . Reverted the SimpleXML->query() behaviour to returning empty arrays\n    instead of false when no nodes are found as it was since 5.3.3\n    (bug #48601). (chregu, rrichards)\n\n- SOAP\n  . Fixed bug #54911 (Access to a undefined member in inherit SoapClient may\n    cause Segmentation Fault). (Dmitry)\n  . Fixed bug #48216 (PHP Fatal error: SOAP-ERROR: Parsing WSDL:\n    Extra content at the end of the doc, when server uses chunked transfer\n    encoding with spaces after chunk size). (Dmitry)\n  . Fixed bug #44686 (SOAP-ERROR: Parsing WSDL with references). (Dmitry)\n\n- Sockets:\n  . Fixed bug #60048 (sa_len a #define on IRIX). (china at thewrittenword dot\n    com)\n\n- SPL:\n  . Fixed bug #60082 (Crash in ArrayObject() when using recursive references).\n    (Tony)\n  . Fixed bug #55807 (Wrong value for splFileObject::SKIP_EMPTY).\n    (jgotti at modedemploi dot fr, Hannes)\n  . Fixed bug #54304 (RegexIterator::accept() doesn't work with scalar values).\n    (Hannes)\n\n- Streams:\n  . Fixed bug #60455 (stream_get_line misbehaves if EOF is not detected together\n    with the last read). (Gustavo)\n\n- Tidy:\n  . Fixed bug #54682 (Tidy::diagnose() NULL pointer dereference).\n    (Maksymilian Arciemowicz, Felipe)\n\n- XSL:\n  . Added xsl.security_prefs ini option to define forbidden operations within\n    XSLT stylesheets, default is not to enable write operations. This option\n    won't be in 5.4, since there's a new method. Fixes Bug #54446. (Chregu,\n    Nicolas Gregoire)\n\n23 Aug 2011, PHP 5.3.8\n\n- Core:\n  . Fixed bug #55439 (crypt() returns only the salt for MD5). (Stas)\n\n- OpenSSL:\n  . Reverted a change in timeout handling restoring PHP 5.3.6 behavior,\n    as the new behavior caused mysqlnd SSL connections to hang (#55283).\n    (Pierre, Andrey, Johannes)\n\n18 Aug 2011, PHP 5.3.7\n- Upgraded bundled SQLite to version 3.7.7.1. (Scott)\n- Upgraded bundled PCRE to version 8.12. (Scott)\n\n- Zend Engine:\n  . Fixed bug #55156 (ReflectionClass::getDocComment() returns comment even\n    though the class has none). (Felipe)\n  . Fixed bug #55007 (compiler fail after previous fail). (Felipe)\n  . Fixed bug #54910 (Crash when calling call_user_func with unknown function\n    name). (Dmitry)\n  . Fixed bug #54804 (__halt_compiler and imported namespaces).\n    (Pierrick, Felipe)\n  . Fixed bug #54624 (class_alias and type hint). (Felipe)\n  . Fixed bug #54585 (track_errors causes segfault). (Dmitry)\n  . Fixed bug #54423 (classes from dl()'ed extensions are not destroyed).\n    (Tony, Dmitry)\n  . Fixed bug #54372 (Crash accessing global object itself returned from its\n    __get() handle). (Dmitry)\n  . Fixed bug #54367 (Use of closure causes problem in ArrayAccess). (Dmitry)\n  . Fixed bug #54358 (Closure, use and reference). (Dmitry)\n  . Fixed bug #54262 (Crash when assigning value to a dimension in a non-array).\n    (Dmitry)\n  . Fixed bug #54039 (use() of static variables in lambda functions can break\n    staticness). (Dmitry)\n\n- Core\n  . Updated crypt_blowfish to 1.2. ((CVE-2011-2483) (Solar Designer)\n  . Removed warning when argument of is_a() or is_subclass_of() is not\n    a known class. (Stas)\n  . Fixed crash in error_log(). (Felipe) Reported by Mateusz Kocielski.\n  . Added PHP_MANDIR constant telling where the manpages were installed into,\n    and an --man-dir argument to php-config. (Hannes)\n  . Fixed a crash inside dtor for error handling. (Ilia)\n  . Fixed buffer overflow on overlog salt in crypt(). (Cl\u00e9ment LECIGNE, Stas)\n  . Implemented FR #54459 (Range function accuracy). (Adam)\n\n  . Fixed bug #55399 (parse_url() incorrectly treats ':' as a valid path).\n    (Ilia)\n  . Fixed bug #55339 (Segfault with allow_call_time_pass_reference = Off).\n    (Dmitry)\n  . Fixed bug #55295 [NEW]: popen_ex on windows, fixed possible heap overflow\n    (Pierre)\n  . Fixed bug #55258 (Windows Version Detecting Error).\n    ( xiaomao5 at live dot com, Pierre)\n  . Fixed bug #55187 (readlink returns weird characters when false result).\n   (Pierre)\n  . Fixed bug #55082 (var_export() doesn't escape properties properly).\n    (Gustavo)\n  . Fixed bug #55014 (Compile failure due to improper use of ctime_r()). (Ilia)\n  . Fixed bug #54939 (File path injection vulnerability in RFC1867 File upload\n    filename). (Felipe) Reported by Krzysztof Kotowicz. (CVE-2011-2202)\n  . Fixed bug #54935 php_win_err can lead to crash. (Pierre)\n  . Fixed bug #54924 (assert.* is not being reset upon request shutdown). (Ilia)\n  . Fixed bug #54895 (Fix compiling with older gcc version without need for\n    membar_producer macro). (mhei at heimpold dot de)\n  . Fixed bug #54866 (incorrect accounting for realpath_cache_size).\n    (Dustin Ward)\n  . Fixed bug #54723 (getimagesize() doesn't check the full ico signature).\n    (Scott)\n  . Fixed bug #54721 (Different Hashes on Windows, BSD and Linux on wrong Salt\n    size). (Pierre, os at irj dot ru)\n  . Fixed bug #54580 (get_browser() segmentation fault when browscap ini\n    directive is set through php_admin_value). (Gustavo)\n  . Fixed bug #54332 (Crash in zend_mm_check_ptr // Heap corruption). (Dmitry)\n  . Fixed bug #54305 (Crash in gc_remove_zval_from_buffer). (Dmitry)\n  . Fixed bug #54238 (use-after-free in substr_replace()). (Stas)\n    (CVE-2011-1148)\n  . Fixed bug #54204 (Can't set a value with a PATH section in php.ini).\n    (Pierre)\n  . Fixed bug #54180 (parse_url() incorrectly parses path when ? in fragment).\n    (tomas dot brastavicius at quantum dot lt, Pierrick)\n  . Fixed bug #54137 (file_get_contents POST request sends additional line\n    break). (maurice-php at mertinkat dot net, Ilia)\n  . Fixed bug #53848 (fgetcsv() ignores spaces at beginnings of fields). (Ilia)\n  . Alternative fix for bug #52550, as applied to the round() function (signed\n    overflow), as the old fix impacted the algorithm for numbers with magnitude\n    smaller than 0. (Gustavo)\n  . Fixed bug #53727 (Inconsistent behavior of is_subclass_of with interfaces)\n    (Ralph Schindler, Dmitry)\n  . Fixed bug #52935 (call exit in user_error_handler cause stream relate\n    core). (Gustavo)\n  . Fixed bug #51997 (SEEK_CUR with 0 value, returns a warning). (Ilia)\n  . Fixed bug #50816 (Using class constants in array definition fails).\n    (Pierrick, Dmitry)\n  . Fixed bug #50363 (Invalid parsing in convert.quoted-printable-decode\n    filter). (slusarz at curecanti dot org)\n  . Fixed bug #48465 (sys_get_temp_dir() possibly inconsistent when using\n    TMPDIR on Windows). (Pierre)\n\n- Apache2 Handler SAPI:\n  . Fixed bug #54529 (SAPI crashes on apache_config.c:197).\n    (hebergement at riastudio dot fr)\n\n- CLI SAPI:\n  . Fixed bug #52496 (Zero exit code on option parsing failure). (Ilia)\n\n- cURL extension:\n  . Added ini option curl.cainfo (support for custom cert db). (Pierre)\n  . Added CURLINFO_REDIRECT_URL support. (Daniel Stenberg, Pierre)\n  . Added support for CURLOPT_MAX_RECV_SPEED_LARGE and\n    CURLOPT_MAX_SEND_SPEED_LARGE. FR #51815. (Pierrick)\n\n- DateTime extension:\n  . Fixed bug where the DateTime object got changed while using date_diff().\n    (Derick)\n  . Fixed bug #54340 (DateTime::add() method bug). (Adam)\n  . Fixed bug #54316 (DateTime::createFromFormat does not handle trailing '|'\n    correctly). (Adam)\n  . Fixed bug #54283 (new DatePeriod(NULL) causes crash). (Felipe)\n  . Fixed bug #51819 (Case discrepancy in timezone names cause Uncaught\n    exception and fatal error). (Hannes)\n\n- DBA extension:\n  . Supress warning on non-existent file open with Berkeley DB 5.2. (Chris Jones)\n  . Fixed bug #54242 (dba_insert returns true if key already exists). (Felipe)\n\n- Exif extesion:\n  . Fixed bug #54121 (error message format string typo). (Ilia)\n\n- Fileinfo extension:\n  . Fixed bug #54934 (Unresolved symbol strtoull in HP-UX 11.11). (Felipe)\n\n- Filter extension:\n  . Added 3rd parameter to filter_var_array() and filter_input_array()\n    functions that allows disabling addition of empty elements. (Ilia)\n  . Fixed bug #53037 (FILTER_FLAG_EMPTY_STRING_NULL is not implemented). (Ilia)\n\n- Interbase extension:\n  . Fixed bug #54269 (Short exception message buffer causes crash). (Felipe)\n\n- intl extension:\n  . Implemented FR #54561 (Expose ICU version info). (David Zuelke, Ilia)\n  . Implemented FR #54540 (Allow loading of arbitrary resource bundles when\n    fallback is disabled). (David Zuelke, Stas)\n\n- Imap extension:\n  . Fixed bug #55313 (Number of retries not set when params specified).\n    (kevin at kevinlocke dot name)\n\n- json extension:\n  . Fixed bug #54484 (Empty string in json_decode doesn't reset\n    json_last_error()). (Ilia)\n\n- LDAP extension:\n  . Fixed bug #53339 (Fails to build when compilng with gcc 4.5 and DSO\n    libraries). (Clint Byrum, Raphael)\n\n- libxml extension:\n  . Fixed bug #54601 (Removing the doctype node segfaults). (Hannes)\n  . Fixed bug #54440 (libxml extension ignores default context). (Gustavo)\n\n- mbstring extension:\n  . Fixed bug #54494 (mb_substr() mishandles UTF-32LE and UCS-2LE). (Gustavo)\n\n- MCrypt extension:\n  . Change E_ERROR to E_WARNING in mcrypt_create_iv when not enough data\n    has been fetched (Windows). (Pierre)\n  . Fixed bug #55169 (mcrypt_create_iv always fails to gather sufficient random\n    data on Windows). (Pierre)\n\n- mysqlnd\n  . Fixed crash when using more than 28,000 bound parameters. Workaround is to\n    set mysqlnd.net_cmd_buffer_size to at least 9000. (Andrey)\n  . Fixed bug #54674 mysqlnd valid_sjis_(head|tail) is using invalid operator\n    and range). (nihen at megabbs dot com, Andrey)\n\n- MySQLi extension:\n  . Fixed bug #55283 (SSL options set by mysqli_ssl_set ignored for MySQLi\n    persistent connections). (Andrey)\n  . Fixed Bug #54221 (mysqli::get_warnings segfault when used in multi queries).\n    (Andrey)\n\n- OpenSSL extension:\n  . openssl_encrypt()/openssl_decrypt() truncated keys of variable length\n    ciphers to the OpenSSL default for the algorithm. (Scott)\n  . On blocking SSL sockets respect the timeout option where possible.\n    (Scott)\n  . Fixed bug #54992 (Stream not closed and error not returned when SSL\n    CN_match fails). (Gustavo, laird_ngrps at dodo dot com dot au)\n\n- Oracle Database extension (OCI8):\n  . Added oci_client_version() returning the runtime Oracle client library\n    version. (Chris Jones)\n\n. PCRE extension:\n  . Increased the backtrack limit from 100000 to 1000000 (Rasmus)\n\n- PDO extension:\n  . Fixed bug #54929 (Parse error with single quote in sql comment). (Felipe)\n  . Fixed bug #52104 (bindColumn creates Warning regardless of ATTR_ERRMODE\n    settings). (Ilia)\n\n- PDO DBlib driver:\n  . Fixed bug #54329 (MSSql extension memory leak).\n    (dotslashpok at gmail dot com)\n  . Fixed bug #54167 (PDO_DBLIB returns null on SQLUNIQUE field).\n    (mjh at hodginsmedia dot com, Felipe)\n\n- PDO ODBC driver:\n  . Fixed data type usage in 64bit. (leocsilva at gmail dot com)\n\n- PDO MySQL driver:\n  . Fixed bug #54644 (wrong pathes in php_pdo_mysql_int.h). (Tony, Johannes)\n  . Fixed bug #53782 (foreach throws irrelevant exception). (Johannes, Andrey)\n  . Implemented FR #48587 (MySQL PDO driver doesn't support SSL connections).\n    (Rob)\n\n- PDO PostgreSQL driver:\n  . Fixed bug #54318 (Non-portable grep option used in PDO pgsql\n    configuration). (bwalton at artsci dot utoronto dot ca)\n\n- PDO Oracle driver:\n  . Fixed bug #44989 (64bit Oracle RPMs still not supported by pdo-oci).\n    (jbnance at tresgeek dot net)\n\n- Phar extension:\n  . Fixed bug #54395 (Phar::mount() crashes when calling with wrong parameters).\n    (Felipe)\n\n- PHP-FPM SAPI:\n  . Implemented FR #54499 (FPM ping and status_path should handle HEAD request). (fat)\n  . Implemented FR #54172 (Overriding the pid file location of php-fpm). (fat)\n  . Fixed missing Expires and Cache-Control headers for ping and status pages.\n    (fat)\n  . Fixed memory leak. (fat) Reported and fixed by Giovanni Giacobbi.\n  . Fixed wrong value of log_level when invoking fpm with -tt. (fat)\n  . Added xml format to the status page. (fat)\n  . Removed timestamp in logs written by children processes. (fat)\n  . Fixed exit at FPM startup on fpm_resources_prepare() errors. (fat)\n  . Added master rlimit_files and rlimit_core in the global configuration\n    settings. (fat)\n  . Removed pid in debug logs written by chrildren processes. (fat)\n  . Added custom access log (also added per request %CPU and memory\n    mesurement). (fat)\n  . Added a real scoreboard and several improvements to the status page. (fat)\n\n- Reflection extension:\n  . Fixed bug #54347 (reflection_extension does not lowercase module function\n    name). (Felipe, laruence at yahoo dot com dot cn)\n\n- SOAP extension:\n  . Fixed bug #55323 (SoapClient segmentation fault when XSD_TYPEKIND_EXTENSION\n    contains itself). (Dmitry)\n  . Fixed bug #54312 (soap_version logic bug). (tom at samplonius dot org)\n\n- Sockets extension:\n  . Fixed stack buffer overflow in socket_connect(). (CVE-2011-1938)\n    Found by Mateusz Kocielski, Marek Kroemeke and Filip Palian. (Felipe)\n  . Changed socket_set_block() and socket_set_nonblock() so they emit warnings\n    on error. (Gustavo)\n  . Fixed bug #51958 (socket_accept() fails on IPv6 server sockets). (Gustavo)\n\n- SPL extension:\n  . Fixed bug #54971 (Wrong result when using iterator_to_array with use_keys\n    on true). (Pierrick)\n  . Fixed bug #54970 (SplFixedArray::setSize() isn't resizing). (Felipe)\n  . Fixed bug #54609 (Certain implementation(s) of SplFixedArray cause hard\n    crash). (Felipe)\n  . Fixed bug #54384 (Dual iterators, GlobIterator, SplFileObject and\n    SplTempFileObject crash when user-space classes don't call the paren\n    constructor). (Gustavo)\n  . Fixed bug #54292 (Wrong parameter causes crash in\n    SplFileObject::__construct()). (Felipe)\n  . Fixed bug #54291 (Crash iterating DirectoryIterator for dir name starting\n    with \\0). (Gustavo)\n  . Fixed bug #54281 (Crash in non-initialized RecursiveIteratorIterator).\n    (Felipe)\n\n- Streams:\n  . Fixed bug #54946 (stream_get_contents infinite loop). (Hannes)\n  . Fixed bug #54623 (Segfault when writing to a persistent socket after\n    closing a copy of the socket). (Gustavo)\n  . Fixed bug #54681 (addGlob() crashes on invalid flags). (Felipe)\n\n\n17 Mar 2011, PHP 5.3.6\n- Upgraded bundled Sqlite3 to version 3.7.4. (Ilia)\n- Upgraded bundled PCRE to version 8.11. (Ilia)\n\n- Zend Engine:\n  . Indirect reference to $this fails to resolve if direct $this is never used\n    in method. (Scott)\n  . Added options to debug backtrace functions. (Stas)\n  . Fixed bug numerous crashes due to setlocale (crash on error, pcre, mysql\n    etc.) on Windows in thread safe mode. (Pierre)\n  . Fixed Bug #53971 (isset() and empty() produce apparently spurious runtime\n    error). (Dmitry)\n  . Fixed Bug #53958 (Closures can't 'use' shared variables by value and by\n    reference). (Dmitry)\n  . Fixed Bug #53629 (memory leak inside highlight_string()). (Hannes, Ilia)\n  . Fixed Bug #51458 (Lack of error context with nested exceptions). (Stas)\n  . Fixed Bug #47143 (Throwing an exception in a destructor causes a fatal\n    error). (Stas)\n  . Fixed bug #43512 (same parameter name can be used multiple times in\n    method/function definition). (Felipe)\n\n- Core:\n  . Added ability to connect to HTTPS sites through proxy with basic\n    authentication using stream_context/http/header/Proxy-Authorization (Dmitry)\n  . Changed default value of ini directive serialize_precision from 100 to 17.\n    (Gustavo)\n  . Fixed bug #54055 (buffer overrun with high values for precision ini\n    setting). (Gustavo)\n  . Fixed bug #53959 (reflection data for fgetcsv out-of-date). (Richard)\n  . Fixed bug #53577 (Regression introduced in 5.3.4 in open_basedir with a\n    trailing forward slash). (lekensteyn at gmail dot com, Pierre)\n  . Fixed bug #53682 (Fix compile on the VAX). (Rasmus, jklos)\n  . Fixed bug #48484 (array_product() always returns 0 for an empty array).\n    (Ilia)\n  . Fixed bug #48607 (fwrite() doesn't check reply from ftp server before\n    exiting). (Ilia)\n\n\n- Calendar extension:\n  . Fixed bug #53574 (Integer overflow in SdnToJulian, sometimes leading to\n    segfault). (Gustavo)\n\n- DOM extension:\n  . Implemented FR #39771 (Made DOMDocument::saveHTML accept an optional DOMNode\n    like DOMDocument::saveXML). (Gustavo)\n\n- DateTime extension:\n  . Fixed a bug in DateTime->modify() where absolute date/time statements had\n    no effect. (Derick)\n  . Fixed bug #53729 (DatePeriod fails to initialize recurrences on 64bit\n    big-endian systems). (Derick, rein@basefarm.no)\n  . Fixed bug #52808 (Segfault when specifying interval as two dates). (Stas)\n  . Fixed bug #52738 (Can't use new properties in class extended from\n    DateInterval). (Stas)\n  . Fixed bug #52290 (setDate, setISODate, setTime works wrong when DateTime\n    created from timestamp). (Stas)\n  . Fixed bug #52063 (DateTime constructor's second argument doesn't have a\n    null default value). (Gustavo, Stas)\n\n- Exif extension:\n  . Fixed bug #54002 (crash on crafted tag, reported by Luca Carettoni).\n    (Pierre) (CVE-2011-0708)\n\n- Filter extension:\n  . Fixed bug #53924 (FILTER_VALIDATE_URL doesn't validate port number).\n    (Ilia, Gustavo)\n  . Fixed bug #53150 (FILTER_FLAG_NO_RES_RANGE is missing some IP ranges).\n    (Ilia)\n  . Fixed bug #52209 (INPUT_ENV returns NULL for set variables (CLI)). (Ilia)\n  . Fixed bug #47435 (FILTER_FLAG_NO_RES_RANGE don't work with ipv6).\n    (Ilia, valli at icsurselva dot ch)\n\n- Fileinfo extension:\n  . Fixed bug #54016 (finfo_file() Cannot determine filetype in archives).\n    (Hannes)\n\n- Gettext\n  . Fixed bug #53837 (_() crashes on Windows when no LANG or LANGUAGE\n    environment variable are set). (Pierre)\n\n- IMAP extension:\n  . Implemented FR #53812 (get MIME headers of the part of the email). (Stas)\n  . Fixed bug #53377 (imap_mime_header_decode() doesn't ignore \\t during long\n    MIME header unfolding). (Adam)\n\n- Intl extension:\n  . Fixed bug #53612 (Segmentation fault when using cloned several intl\n    objects). (Gustavo)\n  . Fixed bug #53512 (NumberFormatter::setSymbol crash on bogus $attr values).\n    (Felipe)\n  . Implemented clone functionality for number, date & message formatters.\n    (Stas).\n\n- JSON extension:\n  . Fixed bug #53963 (Ensure error_code is always set during some failed\n    decodings). (Scott)\n\n- mysqlnd\n  . Fixed problem with always returning 0 as num_rows for unbuffered sets.\n    (Andrey, Ulf)\n\n- MySQL Improved extension:\n  . Added 'db' and 'catalog' keys to the field fetching functions (FR #39847).\n    (Kalle)\n  . Fixed buggy counting of affected rows when using the text protocol. The\n    collected statistics were wrong when multi_query was used with mysqlnd\n    (Andrey)\n  . Fixed bug #53795 (Connect Error from MySqli (mysqlnd) when using SSL).\n    (Kalle)\n  . Fixed bug #53503 (mysqli::query returns false after successful LOAD DATA\n    query). (Kalle, Andrey)\n  . Fixed bug #53425 (mysqli_real_connect() ignores client flags when built to\n    call libmysql). (Kalle, tre-php-net at crushedhat dot com)\n\n- OpenSSL extension:\n  . Fixed stream_socket_enable_crypto() not honoring the socket timeout in\n    server mode. (Gustavo)\n  . Fixed bug #54060 (Memory leaks when openssl_encrypt). (Pierre)\n  . Fixed bug #54061 (Memory leaks when openssl_decrypt). (Pierre)\n  . Fixed bug #53592 (stream_socket_enable_crypto() busy-waits in client mode).\n    (Gustavo)\n  . Implemented FR #53447 (Cannot disable SessionTicket extension for servers\n    that do not support it) by adding a no_ticket SSL context option. (Adam,\n    Tony)\n\n- PDO MySQL driver:\n  . Fixed bug #53551 (PDOStatement execute segfaults for pdo_mysql driver).\n    (Johannes)\n  . Implemented FR #47802 (Support for setting character sets in DSN strings).\n    (Kalle)\n\n- PDO Oracle driver:\n  . Fixed bug #39199 (Cannot load Lob data with more than 4000 bytes on\n    ORACLE 10). (spatar at mail dot nnov dot ru)\n\n- PDO PostgreSQL driver:\n  . Fixed bug #53517 (segfault in pgsql_stmt_execute() when postgres is down).\n    (gyp at balabit dot hu)\n\n- Phar extension:\n  . Fixed bug #54247 (format-string vulnerability on Phar). (Felipe)\n    (CVE-2011-1153)\n  . Fixed bug #53541 (format string bug in ext/phar).\n    (crrodriguez at opensuse dot org, Ilia)\n  . Fixed bug #53898 (PHAR reports invalid error message, when the directory\n    does not exist). (Ilia)\n\n- PHP-FPM SAPI:\n  . Enforce security in the fastcgi protocol parsing.\n    (ef-lists at email dotde)\n  . Fixed bug #53777 (php-fpm log format now match php_error log format). (fat)\n  . Fixed bug #53527 (php-fpm --test doesn't set a valuable return value). (fat)\n  . Fixed bug #53434 (php-fpm slowlog now also logs the original request). (fat)\n\n- Readline extension:\n  . Fixed bug #53630 (Fixed parameter handling inside readline() function).\n    (jo at feuersee dot de, Ilia)\n\n- Reflection extension:\n  . Fixed bug #53915 (ReflectionClass::getConstant(s) emits fatal error on\n    constants with self::). (Gustavo)\n\n- Shmop extension:\n  . Fixed bug #54193 (Integer overflow in shmop_read()). (Felipe)\n    Reported by Jose Carlos Norte <jose at eyeos dot org> (CVE-2011-1092)\n\n- SNMP extension:\n  . Fixed bug #51336 (snmprealwalk (snmp v1) does not handle end of OID tree\n    correctly). (Boris Lytochkin)\n\n- SOAP extension:\n  . Fixed possible crash introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n\n- SPL extension:\n  . Fixed memory leak in DirectoryIterator::getExtension() and\n    SplFileInfo::getExtension(). (Felipe)\n  . Fixed bug #53914 (SPL assumes HAVE_GLOB is defined). (Chris Jones)\n  . Fixed bug #53515 (property_exists incorrect on ArrayObject null and 0\n    values). (Felipe)\n  . Fixed bug #49608 (Using CachingIterator on DirectoryIterator instance\n    segfaults). (Felipe)\n\n  . Added SplFileInfo::getExtension(). FR #48767. (Peter Cowburn)\n\n- SQLite3 extension:\n  . Fixed memory leaked introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n  . Fixed memory leak on SQLite3Result and SQLite3Stmt when assigning to a\n    reference. (Felipe)\n  . Add SQlite3_Stmt::readonly() for checking if a statement is read only.\n    (Scott)\n  . Implemented FR #53466 (SQLite3Result::columnType() should return false after\n    all of the rows have been fetched). (Scott)\n\n- Streams:\n  . Fixed bug #54092 (Segmentation fault when using HTTP proxy with the FTP\n    wrapper). (Gustavo)\n  . Fixed bug #53913 (Streams functions assume HAVE_GLOB is defined). (Chris\n    Jones)\n  . Fixed bug #53903 (userspace stream stat callback does not separate the\n    elements of the returned array before converting them). (Gustavo)\n  . Implemented FR #26158 (open arbitrary file descriptor with fopen). (Gustavo)\n\n- Tokenizer Extension\n  . Fixed bug #54089 (token_get_all() does not stop after __halt_compiler).\n    (Nikita Popov, Ilia)\n\n- XSL extension:\n  . Fixed memory leaked introduced by the NULL poisoning patch.\n    (Mateusz Kocielski, Pierre)\n\n- Zip extension:\n  . Added the filename into the return value of stream_get_meta_data(). (Hannes)\n  . Fixed bug #53923 (Zip functions assume HAVE_GLOB is defined). (Adam)\n  . Fixed bug #53893 (Wrong return value for ZipArchive::extractTo()). (Pierre)\n  . Fixed bug #53885 (ZipArchive segfault with FL_UNCHANGED on empty archive).\n    (Stas, Maksymilian Arciemowicz). (CVE-2011-0421)\n  . Fixed bug #53854 (Missing constants for compression type). (Richard, Adam)\n  . Fixed bug #53603 (ZipArchive should quiet stat errors). (brad dot froehle at\n    gmail dot com, Gustavo)\n  . Fixed bug #53579 (stream_get_contents() segfaults on ziparchive streams).\n    (Hannes)\n  . Fixed bug #53568 (swapped memset arguments in struct initialization).\n    (crrodriguez at opensuse dot org)\n  . Fixed bug #53166 (Missing parameters in docs and reflection definition).\n    (Richard)\n  . Fixed bug #49072 (feof never returns true for damaged file in zip).\n    (Gustavo, Richard Quadling)\n\n06 Jan 2011, PHP 5.3.5\n- Fixed Bug #53632 (infinite loop with x87 fpu). (CVE-2010-4645) (Scott,\n  Rasmus)\n\n09 Dec 2010, PHP 5.3.4\n- Upgraded bundled Sqlite3 to version 3.7.3. (Ilia)\n- Upgraded bundled PCRE to version 8.10. (Ilia)\n\n- Security enhancements:\n  . Fixed crash in zip extract method (possible CWE-170).\n    (Maksymilian Arciemowicz, Pierre)\n  . Paths with NULL in them (foo\\0bar.txt) are now considered as invalid.\n    (Rasmus)\n  . Fixed a possible double free in imap extension (Identified by Mateusz\n    Kocielski). (CVE-2010-4150). (Ilia)\n  . Fixed NULL pointer dereference in ZipArchive::getArchiveComment.\n    (CVE-2010-3709). (Maksymilian Arciemowicz)\n  . Fixed possible flaw in open_basedir (CVE-2010-3436). (Pierre)\n  . Fixed MOPS-2010-24, fix string validation. (CVE-2010-2950). (Pierre)\n  . Fixed symbolic resolution support when the target is a DFS share. (Pierre)\n  . Fixed bug #52929 (Segfault in filter_var with FILTER_VALIDATE_EMAIL with\n    large amount of data) (CVE-2010-3710). (Adam)\n\n- General improvements:\n  . Added stat support for zip stream. (Pierre)\n  . Added follow_location (enabled by default) option for the http stream\n    support. (Pierre)\n  . Improved support for is_link and related functions on Windows. (Pierre)\n  . Added a 3rd parameter to get_html_translation_table. It now takes a charset\n    hint, like htmlentities et al. (Gustavo)\n\n- Implemented feature requests:\n  . Implemented FR #52348, added new constant ZEND_MULTIBYTE to detect\n    zend multibyte at runtime. (Kalle)\n  . Implemented FR #52173, added functions pcntl_get_last_error() and\n     pcntl_strerror(). (nick dot telford at gmail dot com, Arnaud)\n  . Implemented symbolic links support for open_basedir checks. (Pierre)\n  . Implemented FR #51804, SplFileInfo::getLinkTarget on Windows. (Pierre)\n  . Implemented FR #50692, not uploaded files don't count towards\n    max_file_uploads limit. As a side improvement, temporary files are not\n    opened for empty uploads and, in debug mode, 0-length uploads. (Gustavo)\n\n- Improved MySQLnd:\n  . Added new character sets to mysqlnd, which are available in MySQL 5.5\n    (Andrey)\n\n- Improved PHP-FPM SAPI:\n  . Added '-p/--prefix' to php-fpm to use a custom prefix and run multiple\n    instances. (fat)\n  . Added custom process title for FPM. (fat)\n  . Added '-t/--test' to php-fpm to check and validate FPM conf file. (fat)\n  . Added statistics about listening socket queue length for FPM.\n    (andrei dot nigmatulin at gmail dot com, fat)\n\n- Core:\n  . Fixed extract() to do not overwrite $GLOBALS and $this when using\n    EXTR_OVERWRITE. (jorto at redhat dot com)\n  . Fixed bug in the Windows implementation of dns_get_record, where the two\n    last parameters wouldn't be filled unless the type were DNS_ANY (Gustavo).\n  . Changed the $context parameter on copy() to actually have an effect. (Kalle)\n  . Fixed htmlentities/htmlspecialchars accepting certain ill-formed UTF-8\n    sequences. (Gustavo)\n  . Fixed bug #53409 (sleep() returns NULL on Windows). (Pierre)\n  . Fixed bug #53319 (strip_tags() may strip '<br />' incorrectly). (Felipe)\n  . Fixed bug #53304 (quot_print_decode does not handle lower-case hex digits).\n    (Ilia, daniel dot mueller at inexio dot net)\n  . Fixed bug #53248 (rawurlencode RFC 3986 EBCDIC support misses tilde char).\n    (Justin Martin)\n  . Fixed bug #53226 (file_exists fails on big filenames). (Adam)\n  . Fixed bug #53198 (changing INI setting \"from\" with ini_set did not have any\n    effect). (Gustavo)\n  . Fixed bug #53180 (post_max_size=0 not disabling the limit when the content\n    type is application/x-www-form-urlencoded or is not registered with PHP).\n    (gm at tlink dot de, Gustavo)\n  . Fixed bug #53141 (autoload misbehaves if called from closing session).\n    (ladislav at marek dot su)\n  . Fixed bug #53021 (In html_entity_decode, failure to convert numeric entities\n    with ENT_NOQUOTES and ISO-8859-1). Fixed and extended the fix of\n    ENT_NOQUOTES in html_entity_decode that had introduced the bug (rev\n    #185591) to other encodings. Additionaly, html_entity_decode() now doesn't\n    decode &#34; if ENT_NOQUOTES is given. (Gustavo)\n  . Fixed bug #52931 (strripos not overloaded with function overloading\n    enabled). (Felipe)\n  . Fixed bug #52772 (var_dump() doesn't check for the existence of\n    get_class_name before calling it). (Kalle, Gustavo)\n  . Fixed bug #52534 (var_export array with negative key). (Felipe)\n  . Fixed bug #52327 (base64_decode() improper handling of leading padding in\n    strict mode). (Ilia)\n  . Fixed bug #52260 (dns_get_record fails with non-existing domain on Windows).\n    (a_jelly_doughnut at phpbb dot com, Pierre)\n  . Fixed bug #50953 (socket will not connect to IPv4 address when the host has\n    both IPv4 and IPv6 addresses, on Windows). (Gustavo, Pierre)\n  . Fixed bug #50524 (proc_open on Windows does not respect cwd as it does on\n    other platforms). (Pierre)\n  . Fixed bug #49687 (utf8_decode vulnerabilities and deficiencies in the number\n    of reported malformed sequences). (CVE-2010-3870) (Gustavo)\n  . Fixed bug #49407 (get_html_translation_table doesn't handle UTF-8).\n    (Gustavo)\n  . Fixed bug #48831 (php -i has different output to php --ini). (Richard,\n    Pierre)\n  . Fixed bug #47643 (array_diff() takes over 3000 times longer than php 5.2.4).\n    (Felipe)\n  . Fixed bug #47168 (printf of floating point variable prints maximum of 40\n    decimal places). (Ilia)\n  . Fixed bug #46587 (mt_rand() does not check that max is greater than min).\n    (Ilia)\n  . Fixed bug #29085 (bad default include_path on Windows). (Pierre)\n  . Fixed bug #25927 (get_html_translation_table calls the ' &#39; instead of\n    &#039;). (Gustavo)\n\n- Zend engine:\n  . Reverted fix for bug #51176 (Static calling in non-static method behaves\n    like $this->). (Felipe)\n  . Changed deprecated ini options on startup from E_WARNING to E_DEPRECATED.\n    (Kalle)\n  . Fixed NULL dereference in lex_scan on zend multibyte builds where the script\n    had a flex incompatible encoding and there was no converter. (Gustavo)\n  . Fixed covariance of return-by-ref constraints. (Etienne)\n  . Fixed bug #53305 (E_NOTICE when defining a constant starts with\n    __COMPILER_HALT_OFFSET__). (Felipe)\n  . Fixed bug #52939 (zend_call_function does not respect ZEND_SEND_PREFER_REF).\n    (Dmitry)\n  . Fixed bug #52879 (Objects unreferenced in __get, __set, __isset or __unset\n    can be freed too early). (mail_ben_schmidt at yahoo dot com dot au, Dmitry)\n  . Fixed bug #52786 (PHP should reset section to [PHP] after ini sections).\n    (Fedora at famillecollet dot com)\n  . Fixed bug #52508 (newline problem with parse_ini_file+INI_SCANNER_RAW).\n    (Felipe)\n  . Fixed bug #52484 (__set() ignores setting properties with empty names).\n    (Felipe)\n  . Fixed bug #52361 (Throwing an exception in a destructor causes invalid\n    catching). (Dmitry)\n  . Fixed bug #51008 (Zend/tests/bug45877.phpt fails). (Dmitry)\n\n- Build issues:\n  . Fixed bug #52436 (Compile error if systems do not have stdint.h)\n    (Sriram Natarajan)\n  . Fixed bug #50345 (nanosleep not detected properly on some solaris versions).\n    (Ulf, Tony)\n  . Fixed bug #49215 (make fails on glob_wrapper). (Felipe)\n\n- Calendar extension:\n  . Fixed bug #52744 (cal_days_in_month incorrect for December 1 BCE).\n   (gpap at internet dot gr, Adam)\n\n- cURL extension:\n  . Fixed bug #52828 (curl_setopt does not accept persistent streams).\n    (Gustavo, Ilia)\n  . Fixed bug #52827 (cURL leaks handle and causes assertion error\n    (CURLOPT_STDERR)). (Gustavo)\n  . Fixed bug #52202 (CURLOPT_PRIVATE gets corrupted). (Ilia)\n  . Fixed bug #50410 (curl extension slows down PHP on Windows). (Pierre)\n\n- DateTime extension:\n  . Fixed bug #53297 (gettimeofday implementation in php/win32/time.c can return\n    1 million microsecs). (ped at 7gods dot org)\n  . Fixed bug #52668 (Iterating over a dateperiod twice is broken). (Derick)\n  . Fixed bug #52454 (Relative dates and getTimestamp increments by one day).\n    (Derick)\n  . Fixed bug #52430 (date_parse parse 24:xx:xx as valid time). (Derick)\n  . Added support for the ( and ) delimiters/separators to\n    DateTime::createFromFormat(). (Derick)\n\n- DBA extension:\n  . Added Berkeley DB 5.1 support to the DBA extension. (Oracle Corp.)\n\n- DOM extension:\n  . Fixed bug #52656 (DOMCdataSection does not work with splitText). (Ilia)\n\n- Filter extension:\n  . Fixed the filter extension accepting IPv4 octets with a leading 0 as that\n    belongs to the unsupported \"dotted octal\" representation. (Gustavo)\n  . Fixed bug #53236 (problems in the validation of IPv6 addresses with leading\n    and trailing :: in the filter extension). (Gustavo)\n  . Fixed bug #50117 (problems in the validation of IPv6 addresses with IPv4\n    addresses and ::). (Gustavo)\n\n- GD extension:\n  . Fixed bug #53492 (fix crash if anti-aliasing steps are invalid). (Pierre)\n\n- GMP extension:\n  . Fixed bug #52906 (gmp_mod returns negative result when non-negative is\n    expected). (Stas)\n  . Fixed bug #52849 (GNU MP invalid version match). (Adam)\n\n- Hash extension:\n  . Fixed bug #51003 (unaligned memory access in ext/hash/hash_tiger.c).\n    (Mike, Ilia)\n\n- Iconv extension:\n  . Fixed bug #52941 (The 'iconv_mime_decode_headers' function is skipping\n    headers). (Adam)\n  . Fixed bug #52599 (iconv output handler outputs incorrect content type\n    when flags are used). (Ilia)\n  . Fixed bug #51250 (iconv_mime_decode() does not ignore malformed Q-encoded\n    words). (Ilia)\n\n- Intl extension:\n  . Fixed crashes on invalid parameters in intl extension. (CVE-2010-4409).\n    (Stas, Maksymilian Arciemowicz)\n  . Added support for formatting the timestamp stored in a DateTime object.\n    (Stas)\n  . Fixed bug #50590 (IntlDateFormatter::parse result is limited to the integer\n    range). (Stas)\n\n- Mbstring extension:\n  . Fixed bug #53273 (mb_strcut() returns garbage with the excessive length\n    parameter). (CVE-2010-4156) (Mateusz Kocielski, Pierre, Moriyoshi)\n  . Fixed bug #52981 (Unicode casing table was out-of-date. Updated with\n    UnicodeData-6.0.0d7.txt and included the source of the generator program\n    with the distribution) (Gustavo).\n  . Fixed bug #52681 (mb_send_mail() appends an extra MIME-Version header).\n    (Adam)\n\n- MSSQL extension:\n  . Fixed possible crash in mssql_fetch_batch(). (Kalle)\n  . Fixed bug #52843 (Segfault when optional parameters are not passed in to\n    mssql_connect). (Felipe)\n\n- MySQL extension:\n  . Fixed bug #52636 (php_mysql_fetch_hash writes long value into int).\n    (Kalle, rein at basefarm dot no)\n\n- MySQLi extension:\n  . Fixed bug #52891 (Wrong data inserted with mysqli/mysqlnd when using\n    mysqli_stmt_bind_param and value> PHP_INT_MAX). (Andrey)\n  . Fixed bug #52686 (mysql_stmt_attr_[gs]et argument points to incorrect type).\n    (rein at basefarm dot no)\n  . Fixed bug #52654 (mysqli doesn't install headers with structures it uses).\n    (Andrey)\n  . Fixed bug #52433 (Call to undefined method mysqli::poll() - must be static).\n    (Andrey)\n  . Fixed bug #52417 (MySQLi build failure with mysqlnd on MacOS X). (Andrey)\n  . Fixed bug #52413 (MySQLi/libmysql build failure on OS X, FreeBSD). (Andrey)\n  . Fixed bug #52390 (mysqli_report() should be per-request setting). (Kalle)\n  . Fixed bug #52302 (mysqli_fetch_all does not work with MYSQLI_USE_RESULT).\n    (Andrey)\n  . Fixed bug #52221 (Misbehaviour of magic_quotes_runtime (get/set)). (Andrey)\n  . Fixed bug #45921 (Can't initialize character set hebrew). (Andrey)\n\n- MySQLnd:\n  . Fixed bug #52613 (crash in mysqlnd after hitting memory limit). (Andrey)\n\n- ODBC extension:\n  - Fixed bug #52512 (Broken error handling in odbc_execute).\n    (mkoegler at auto dot tuwien dot ac dot at)\n\n- Openssl extension:\n  . Fixed possible blocking behavior in openssl_random_pseudo_bytes on Windows.\n    (Pierre)\n  . Fixed bug #53136 (Invalid read on openssl_csr_new()). (Felipe)\n  . Fixed bug #52947 (segfault when ssl stream option capture_peer_cert_chain\n    used). (Felipe)\n\n- Oracle Database extension (OCI8):\n  . Fixed bug #53284 (Valgrind warnings in oci_set_* functions) (Oracle Corp.)\n  . Fixed bug #51610 (Using oci_connect causes PHP to take a long time to\n    exit).  Requires Oracle 11.2.0.2 client libraries (or Oracle bug fix\n    9891199) for this patch to have an effect. (Oracle Corp.)\n\n- PCNTL extension:\n  . Fixed bug #52784 (Race condition when handling many concurrent signals).\n    (nick dot telford at gmail dot com, Arnaud)\n\n- PCRE extension:\n  . Fixed bug #52971 (PCRE-Meta-Characters not working with utf-8). (Felipe)\n  . Fixed bug #52732 (Docs say preg_match() returns FALSE on error, but it\n    returns int(0)). (slugonamission at gmail dot com)\n\n- PHAR extension:\n  . Fixed bug #50987 (unaligned memory access in phar.c).\n    (geissert at debian dot org, Ilia)\n\n- PHP-FPM SAPI:\n  . Fixed bug #53412 (segfault when using -y). (fat)\n  . Fixed inconsistent backlog default value (-1) in FPM on many systems. (fat)\n  . Fixed bug #52501 (libevent made FPM crashed when forking -- libevent has\n    been removed). (fat)\n  . Fixed bug #52725 (gcc builtin atomic functions were sometimes used when they\n    were not available). (fat)\n  . Fixed bug #52693 (configuration file errors are not logged to stderr). (fat)\n  . Fixed bug #52674 (FPM Status page returns inconsistent Content-Type\n    headers). (fat)\n  . Fixed bug #52498 (libevent was not only linked to php-fpm). (fat)\n\n- PDO:\n  . Fixed bug #52699 (PDO bindValue writes long int 32bit enum).\n    (rein at basefarm dot no)\n  . Fixed bug #52487 (PDO::FETCH_INTO leaks memory). (Felipe)\n\n- PDO DBLib driver:\n  . Fixed bug #52546 (pdo_dblib segmentation fault when iterating MONEY values).\n    (Felipe)\n\n- PDO Firebird driver:\n  . Restored firebird support (VC9 builds only). (Pierre)\n  . Fixed bug #53335 (pdo_firebird did not implement rowCount()).\n    (preeves at ibphoenix dot com)\n  . Fixed bug #53323 (pdo_firebird getAttribute() crash).\n    (preeves at ibphoenix dot com)\n\n- PDO MySQL driver:\n  . Fixed bug #52745 (Binding params doesn't work when selecting a date inside a\n    CASE-WHEN). (Andrey)\n\n- PostgreSQL extension:\n  . Fixed bug #47199 (pg_delete() fails on NULL). (ewgraf at gmail dot com)\n\n- Reflection extension:\n  . Fixed ReflectionProperty::isDefault() giving a wrong result for properties\n    obtained with ReflectionClass::getProperties(). (Gustavo)\n- Reflection extension:\n  . Fixed bug #53366 (Reflection doesnt get dynamic property value from\n    getProperty()). (Felipe)\n  . Fixed bug #52854 (ReflectionClass::newInstanceArgs does not work for classes\n    without constructors). (Johannes)\n\n- SOAP extension:\n  . Fixed bug #44248 (RFC2616 transgression while HTTPS request through proxy\n    with SoapClient object). (Dmitry)\n\n- SPL extension:\n  . Fixed bug #53362 (Segmentation fault when extending SplFixedArray). (Felipe)\n  . Fixed bug #53279 (SplFileObject doesn't initialise default CSV escape\n    character). (Adam)\n  . Fixed bug #53144 (Segfault in SplObjectStorage::removeAll()). (Felipe)\n  . Fixed bug #53071 (SPLObjectStorage defeats gc_collect_cycles). (Gustavo)\n  . Fixed bug #52573 (SplFileObject::fscanf Segmentation fault). (Felipe)\n  . Fixed bug #51763 (SplFileInfo::getType() does not work symbolic link\n    and directory). (Pierre)\n  . Fixed bug #50481 (Storing many SPLFixedArray in an array crashes). (Felipe)\n  . Fixed bug #50579 (RegexIterator::REPLACE doesn't work). (Felipe)\n\n- SQLite3 extension:\n  . Fixed bug #53463 (sqlite3 columnName() segfaults on bad column_number).\n    (Felipe)\n\n- Streams:\n  . Fixed forward stream seeking emulation in streams that don't support seeking\n    in situations where the read operation gives back less data than requested\n    and when there was data in the buffer before the emulation started. Also\n    made more consistent its behavior -- should return failure every time less\n    data than was requested was skipped. (Gustavo)\n  . Fixed bug #53241 (stream casting that relies on fdopen/fopencookie fails\n    with streams opened with, inter alia, the 'xb' mode). (Gustavo)\n  . Fixed bug #53006 (stream_get_contents has an unpredictable behavior when the\n    underlying stream does not support seeking). (Gustavo)\n  . Fixed bug #52944 (Invalid write on second and subsequent reads with an\n    inflate filter fed invalid data). (Gustavo)\n  . Fixed bug #52820 (writes to fopencookie FILE* not commited when seeking the\n    stream). (Gustavo)\n\n- WDDX extension:\n  . Fixed bug #52468 (wddx_deserialize corrupts integer field value when left\n    empty). (Felipe)\n\n- Zlib extension:\n  . Fixed bug #52926 (zlib fopen wrapper does not use context). (Gustavo)\n\n22 Jul 2010, PHP 5.3.3\n- Upgraded bundled sqlite to version 3.6.23.1. (Ilia)\n- Upgraded bundled PCRE to version 8.02. (Ilia)\n\n- Added support for JSON_NUMERIC_CHECK option in json_encode() that converts\n  numeric strings to integers. (Ilia)\n- Added stream_set_read_buffer, allows to set the buffer for read operation.\n  (Pierre)\n- Added stream filter support to mcrypt extension (ported from\n  mcrypt_filter). (Stas)\n- Added full_special_chars filter to ext/filter. (Rasmus)\n- Added backlog socket context option for stream_socket_server(). (Mike)\n- Added fifth parameter to openssl_encrypt()/openssl_decrypt()\n  (string $iv) to use non-NULL IV.\n  Made implicit use of NULL IV a warning. (Sara)\n- Added openssl_cipher_iv_length(). (Sara)\n- Added FastCGI Process Manager (FPM) SAPI. (Tony)\n- Added recent Windows versions to php_uname and fix undefined windows\n  version support. (Pierre)\n- Added Berkeley DB 5 support to the DBA extension. (Johannes, Chris Jones)\n- Added support for copy to/from array/file for pdo_pgsql extension.\n  (Denis Gasparin, Ilia)\n- Added inTransaction() method to PDO, with specialized support for Postgres.\n  (Ilia, Denis Gasparin)\n\n- Changed namespaced classes so that the ctor can only be named\n  __construct now. (Stas)\n- Reset error state in PDO::beginTransaction() reset error state. (Ilia)\n\n- Implemented FR#51295 (SQLite3::busyTimeout not existing). (Mark)\n- Implemented FR#35638 (Adding udate to imap_fetch_overview results).\n  (Charles_Duffy at dell dot com )\n- Rewrote var_export() to use smart_str rather than output buffering, prevents\n  data disclosure if a fatal error occurs (CVE-2010-2531). (Scott)\n- Fixed possible buffer overflows in mysqlnd_list_fields,  mysqlnd_change_user.\n  (Andrey)\n- Fixed possible buffer overflows when handling error packets in mysqlnd.\n  Reported by Stefan Esser. (Andrey)\n- Fixed very rare memory leak in mysqlnd, when binding thousands of columns.\n  (Andrey)\n- Fixed a crash when calling an inexistent method of a class that inherits\n  PDOStatement if instantiated directly instead of doing by the PDO methods.\n  (Felipe)\n\n- Fixed memory leak on error in mcrypt_create_iv on Windows. (Pierre)\n- Fixed a possible crash because of recursive GC invocation. (Dmitry)\n- Fixed a possible resource destruction issues in shm_put_var().\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible information leak because of interruption of XOR operator.\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption because of unexpected call-time pass by\n  refernce and following memory clobbering through callbacks.\n  Reported by Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption in ArrayObject::uasort(). Reported by\n  Stefan Esser. (Dmitry)\n- Fixed a possible memory corruption in parse_str(). Reported by Stefan Esser.\n  (Dmitry)\n- Fixed a possible memory corruption in pack(). Reported by Stefan Esser.\n  (Dmitry)\n- Fixed a possible memory corruption in substr_replace(). Reported by Stefan\n  Esser. (Dmitry)\n- Fixed a possible memory corruption in addcslashes(). Reported by Stefan\n  Esser. (Dmitry)\n- Fixed a possible stack exhaustion inside fnmatch(). Reported by Stefan\n  Esser. (Ilia)\n- Fixed a possible dechunking filter buffer overflow. Reported by Stefan Esser.\n  (Pierre)\n- Fixed a possible arbitrary memory access inside sqlite extension. Reported\n  by Mateusz Kocielski. (Ilia)\n- Fixed string format validation inside phar extension. Reported by Stefan\n  Esser. (Ilia)\n- Fixed handling of session variable serialization on certain prefix\n  characters. Reported by Stefan Esser. (Ilia)\n- Fixed a NULL pointer dereference when processing invalid XML-RPC\n  requests (Fixes CVE-2010-0397, bug #51288). (Raphael Geissert)\n- Fixed 64-bit integer overflow in mhash_keygen_s2k(). (Cl\u00e9ment LECIGNE, Stas)\n- Fixed SplObjectStorage unserialization problems (CVE-2010-2225). (Stas)\n- Fixed the mail.log ini setting when no filename was given. (Johannes)\n\n- Fixed bug #52317 (Segmentation fault when using mail() on a rhel 4.x (only 64\n  bit)). (Adam)\n- Fixed bug #52262 (json_decode() shows no errors on invalid UTF-8).\n  (Scott)\n- Fixed bug #52240 (hash_copy() does not copy the HMAC key, causes wrong\n  results and PHP crashes). (Felipe)\n- Fixed bug #52238 (Crash when an Exception occured in iterator_to_array).\n  (Johannes)\n- Fixed bug #52193 (converting closure to array yields empty array). (Felipe)\n- Fixed bug #52183 (Reflectionfunction reports invalid number of arguments for\n  function aliases). (Felipe)\n- Fixed bug #52162 (custom request header variables with numbers are removed).\n  (Sriram Natarajan)\n- Fixed bug #52160 (Invalid E_STRICT redefined constructor error). (Felipe)\n- Fixed bug #52138 (Constants are parsed into the ini file for section names).\n  (Felipe)\n- Fixed bug #52115 (mysqli_result::fetch_all returns null, not an empty array).\n  (Andrey)\n- Fixed bug #52101 (dns_get_record() garbage in 'ipv6' field on Windows).\n  (Pierre)\n- Fixed bug #52082 (character_set_client & character_set_connection reset after\n  mysqli_change_user()). (Andrey)\n- Fixed bug #52043 (GD doesn't recognize latest libJPEG versions).\n  (php at group dot apple dot com, Pierre)\n- Fixed bug #52041 (Memory leak when writing on uninitialized variable returned\n  from function). (Dmitry)\n- Fixed bug #52060 (Memory leak when passing a closure to method_exists()).\n  (Felipe)\n- Fixed bug #52057 (ReflectionClass fails on Closure class). (Felipe)\n- Fixed bug #52051 (handling of case sensitivity of old-style constructors\n  changed in 5.3+). (Felipe)\n- Fixed bug #52037 (Concurrent builds fail in install-programs). (seanius at\n  debian dot org, Kalle)\n- Fixed bug #52019 (make lcov doesn't support TESTS variable anymore). (Patrick)\n- Fixed bug #52010 (open_basedir restrictions mismatch on vacuum command).\n  (Ilia)\n- Fixed bug #52001 (Memory allocation problems after using variable variables).\n  (Dmitry)\n- Fixed bug #51991 (spl_autoload and *nix support with namespace). (Felipe)\n- Fixed bug #51943 (AIX: Several files are out of ANSI spec). (Kalle,\n  coreystup at gmail dot com)\n- Fixed bug #51911 (ReflectionParameter::getDefaultValue() memory leaks with\n  constant array). (Felipe)\n- Fixed bug #51905 (ReflectionParameter fails if default value is an array\n  with an access to self::). (Felipe)\n- Fixed bug #51899 (Parse error in parse_ini_file() function when empy value\n  followed by no newline). (Felipe)\n- Fixed bug #51844 (checkdnsrr does not support types other than MX). (Pierre)\n- Fixed bug #51827 (Bad warning when register_shutdown_function called with\n  wrong num of parameters). (Felipe)\n- Fixed bug #51822 (Segfault with strange __destruct() for static class\n  variables). (Dmitry)\n- Fixed bug #51791 (constant() aborts execution when fail to check undefined\n  constant). (Felipe)\n- Fixed bug #51732 (Fileinfo __construct or open does not work with NULL).\n  (Pierre)\n- Fixed bug #51725 (xmlrpc_get_type() returns true on invalid dates). (Mike)\n- Fixed bug #51723 (Content-length header is limited to 32bit integer with\n  Apache2 on Windows). (Pierre)\n- Fixed bug #51721 (mark DOMNodeList and DOMNamedNodeMap as Traversable).\n  (David Zuelke)\n- Fixed bug #51712 (Test mysql_mysqlnd_read_timeout_long must fail on MySQL4).\n  (Andrey)\n- Fixed bug #51697 (Unsafe operations in free_storage of SPL iterators,\n  causes crash during shutdown). (Etienne)\n- Fixed bug #51690 (Phar::setStub looks for case-sensitive\n  __HALT_COMPILER()). (Ilia)\n- Fixed bug #51688 (ini per dir crashes when invalid document root  are given).\n  (Pierre)\n- Fixed bug #51671 (imagefill does not work correctly for small images).\n  (Pierre)\n- Fixed bug #51670 (getColumnMeta causes segfault when re-executing query\n  after calling nextRowset). (Pierrick)\n- Fixed bug #51647 Certificate file without private key (pk in another file)\n  doesn't work. (Andrey)\n- Fixed bug #51629 (CURLOPT_FOLLOWLOCATION error message is misleading).\n  (Pierre)\n- Fixed bug #51627 (script path not correctly evaluated).\n  (russell dot tempero at rightnow dot com)\n- Fixed bug #51624 (Crash when calling mysqli_options()). (Felipe)\n- Fixed bug #51615 (PHP crash with wrong HTML in SimpleXML). (Felipe)\n- Fixed bug #51609 (pg_copy_to: Invalid results when using fourth parameter).\n  (Felipe)\n- Fixed bug #51608 (pg_copy_to: WARNING: nonstandard use of \\\\ in a string\n  literal). (cbandy at jbandy dot com)\n- Fixed bug #51607 (pg_copy_from does not allow schema in the tablename\n  argument). (cbandy at jbandy dot com)\n- Fixed bug #51605 (Mysqli - zombie links). (Andrey)\n- Fixed bug #51604 (newline in end of header is shown in start of message).\n  (Daniel Egeberg)\n- Fixed bug #51590 (JSON_ERROR_UTF8 is undefined). (Felipe)\n- Fixed bug #51583 (Bus error due to wrong alignment in mysqlnd). (Rainer Jung)\n- Fixed bug #51582 (Don't assume UINT64_C it's ever available).\n  (reidrac at usebox dot net, Pierre)\n- Fixed bug #51577 (Uninitialized memory reference with oci_bind_array_by_name)\n  (Oracle Corp.)\n- Fixed bug #51562 (query timeout in mssql can not be changed per query).\n  (ejsmont dot artur at gmail dot com)\n- Fixed bug #51552 (debug_backtrace() causes segmentation fault and/or memory\n  issues). (Dmitry)\n- Fixed bug #51445 (var_dump() invalid/slow *RECURSION* detection). (Felipe)\n- Fixed bug #51435 (Missing ifdefs / logic bug in crypt code cause compile\n  errors). (Felipe)\n- Fixed bug #51424 (crypt() function hangs after 3rd call). (Pierre, Sriram)\n- Fixed bug #51394 (Error line reported incorrectly if error handler throws an\n  exception). (Stas)\n- Fixed bug #51393 (DateTime::createFromFormat() fails if format string contains\n  timezone). (Adam)\n- Fixed bug #51347 (mysqli_close / connection memory leak). (Andrey, Johannes)\n- Fixed bug #51338 (URL-Rewriter is still enabled if use_only_cookies is\n  on). (Ilia, j dot jeising at gmail dot com)\n- Fixed bug #51291 (oci_error doesn't report last error when called two times)\n  (Oracle Corp.)\n- Fixed bug #51276 (php_load_extension() is missing when HAVE_LIBDL is\n  undefined). (Tony)\n- Fixed bug #51273 (Faultstring property does not exist when the faultstring is\n  empty) (Ilia, dennis at transip dot nl)\n- Fixed bug #51269 (zlib.output_compression Overwrites Vary Header). (Adam)\n- Fixed bug #51257 (CURL_VERSION_LARGEFILE incorrectly used after libcurl\n  version 7.10.1). (aron dot ujvari at microsec dot hu)\n- Fixed bug #51242 (Empty mysql.default_port does not default to 3306 anymore,\n  but 0). (Adam)\n- Fixed bug #51237 (milter SAPI crash on startup). (igmar at palsenberg dot com)\n- Fixed bug #51213 (pdo_mssql is trimming value of the money column). (Ilia,\n  alexr at oplot dot com)\n- Fixed bug #51190 (ftp_put() returns false when transfer was successful).\n  (Ilia)\n- Fixed bug #51183 (ext/date/php_date.c fails to compile with Sun Studio).\n  (Sriram Natarajan)\n- Fixed bug #51176 (Static calling in non-static method behaves like $this->).\n  (Felipe)\n- Fixed bug #51171 (curl_setopt() doesn't output any errors or warnings when\n  an invalid option is provided). (Ilia)\n- Fixed bug #51128 (imagefill() doesn't work with large images). (Pierre)\n- Fixed bug #51096 ('last day' and 'first day' are handled incorrectly when\n  parsing date strings). (Derick)\n- Fixed bug #51086 (DBA DB4 doesn't work with Berkeley DB 4.8). (Chris Jones)\n- Fixed bug #51062 (DBA DB4 uses mismatched headers and libraries). (Chris\n  Jones)\n- Fixed bug #51026 (mysqli_ssl_set not working). (Andrey)\n- Fixed bug #51023 (filter doesn't detect int overflows with GCC 4.4).\n  (Raphael Geissert)\n- Fixed bug #50999 (unaligned memory access in dba_fetch()). (Felipe)\n- Fixed bug #50976 (Soap headers Authorization not allowed).\n  (Brain France, Dmitry)\n- Fixed bug #50828 (DOMNotation is not subclass of DOMNode). (Rob)\n- Fixed bug #50810 (property_exists does not work for private). (Felipe)\n- Fixed bug #50762 (in WSDL mode Soap Header handler function only being called\n  if defined in WSDL). (mephius at gmail dot com)\n- Fixed bug #50731 (Inconsistent namespaces sent to functions registered with\n  spl_autoload_register). (Felipe)\n- Fixed bug #50563 (removing E_WARNING from parse_url). (ralph at smashlabs dot\n  com, Pierre)\n- Fixed bug #50578 (incorrect shebang in phar.phar). (Fedora at FamilleCollet\n  dot com)\n- Fixed bug #50392 (date_create_from_format enforces 6 digits for 'u' format\n  character). (Derick)\n- Fixed bug #50383 (Exceptions thrown in __call / __callStatic do not include\n  file and line in trace). (Felipe)\n- Fixed bug #50358 (Compile failure compiling ext/phar/util.lo). (Felipe)\n- Fixed bug #50101 (name clash between global and local variable).\n  (patch by yoarvi at gmail dot com)\n- Fixed bug #50055 (DateTime::sub() allows 'relative' time modifications).\n  (Derick)\n- Fixed bug #51002 (fix possible memory corruption with very long names).\n  (Pierre)\n- Fixed bug #49893 (Crash while creating an instance of Zend_Mail_Storage_Pop3).\n  (Dmitry)\n- Fixed bug #49819 (STDOUT losing data with posix_isatty()). (Mike)\n- Fixed bug #49778 (DateInterval::format(\"%a\") is always zero when an interval\n  is created from an ISO string). (Derick)\n- Fixed bug #49700 (memory leaks in php_date.c if garbage collector is\n  enabled). (Dmitry)\n- Fixed bug #49576 (FILTER_VALIDATE_EMAIL filter needs updating) (Rasmus)\n- Fixed bug #49490 (XPath namespace prefix conflict). (Rob)\n- Fixed bug #49429 (odbc_autocommit doesn't work). (Felipe)\n- Fixed bug #49320 (PDO returns null when SQLite connection fails). (Felipe)\n- Fixed bug #49234 (mysqli_ssl_set not found). (Andrey)\n- Fixed bug #49216 (Reflection doesn't seem to work properly on MySqli).\n  (Andrey)\n- Fixed bug #49192 (PHP crashes when GC invoked on COM object). (Stas)\n- Fixed bug #49081 (DateTime::diff() mistake if start in January and interval >\n  28 days). (Derick)\n- Fixed bug #49059 (DateTime::diff() repeats previous sub() operation).\n  (yoarvi@gmail.com, Derick)\n- Fixed bug #48983 (DomDocument : saveHTMLFile wrong charset). (Rob)\n- Fixed bug #48930 (__COMPILER_HALT_OFFSET__ incorrect in PHP >= 5.3). (Felipe)\n- Fixed bug #48902 (Timezone database fallback map is outdated). (Derick)\n- Fixed bug #48781 (Cyclical garbage collector memory leak). (Dmitry)\n- Fixed bug #48601 (xpath() returns FALSE for legitimate query). (Rob)\n- Fixed bug #48361 (SplFileInfo::getPathInfo should return the\n  parent dir). (Etienne)\n- Fixed bug #48289 (iconv_mime_encode() quoted-printable scheme is broken).\n  (Adam, patch from hiroaki dot kawai at gmail dot com).\n- Fixed bug #47842 (sscanf() does not support 64-bit values). (Mike)\n- Fixed bug #46111 (Some timezone identifiers can not be parsed). (Derick)\n- Fixed bug #45808 (stream_socket_enable_crypto() blocks and eats CPU).\n  (vincent at optilian dot com)\n- Fixed bug #43233 (sasl support for ldap on Windows). (Pierre)\n- Fixed bug #35673 (formatOutput does not work with saveHTML). (Rob)\n- Fixed bug #33210 (getimagesize() fails to detect width/height on certain\n  JPEGs). (Ilia)\n\n04 Mar 2010, PHP 5.3.2\n\n- Upgraded bundled sqlite to version 3.6.22. (Ilia)\n- Upgraded bundled libmagic to version 5.03. (Mikko)\n- Upgraded bundled PCRE to version 8.00. (Scott)\n- Updated timezone database to version 2010.3. (Derick)\n\n- Improved LCG entropy. (Rasmus, Samy Kamkar)\n- Improved crypt support for edge cases (UFC compatibility). (Solar Designer,\n  Joey, Pierre)\n\n- Reverted fix for bug #49521 (PDO fetchObject sets values before calling\n  constructor). (Pierrick, Johannes)\n\n- Changed gmp_strval() to use full range from 2 to 62, and -2 to -36. FR #50283\n  (David Soria Parra)\n- Changed \"post_max_size\" php.ini directive to allow unlimited post size by\n  setting it to 0. (Rasmus)\n- Changed tidyNode class to disallow manual node creation. (Pierrick)\n\n- Removed automatic file descriptor unlocking happening on shutdown and/or\n  stream close (on all OSes). (Tony, Ilia)\n\n- Added libpng 1.4.0 support. (Pierre)\n- Added support for DISABLE_AUTHENTICATOR for imap_open. (Pierre)\n- Added missing host validation for HTTP urls inside FILTER_VALIDATE_URL.\n  (Ilia)\n- Added stream_resolve_include_path(). (Mikko)\n- Added INTERNALDATE support to imap_append. (nick at mailtrust dot com)\n- Added support for SHA-256 and SHA-512 to php's crypt. (Pierre)\n- Added realpath_cache_size() and realpath_cache_get() functions. (Stas)\n- Added FILTER_FLAG_STRIP_BACKTICK option to the filter extension. (Ilia)\n- Added protection for $_SESSION from interrupt corruption and improved\n  \"session.save_path\" check. (Stas)\n- Added LIBXML_PARSEHUGE constant to override the maximum text size of a\n  single text node when using libxml2.7.3+. (Kalle)\n- Added ReflectionMethod::setAccessible() for invoking non-public methods\n  through the Reflection API. (Sebastian)\n- Added Collator::getSortKey for intl extension. (Stas)\n- Added support for CURLOPT_POSTREDIR. FR #49571. (Sriram Natarajan)\n- Added support for CURLOPT_CERTINFO. FR #49253.\n  (Linus Nielsen Feltzing <linus@haxx.se>)\n- Added client-side server name indication support in openssl. (Arnaud)\n\n- Improved fix for bug #50006 (Segfault caused by uksort()). (Stas)\n\n- Fixed mysqlnd hang when queries exactly 16777214 bytes long are sent. (Andrey)\n- Fixed incorrect decoding of 5-byte BIT sequences in mysqlnd. (Andrey)\n- Fixed error_log() to be binary safe when using message_type 3. (Jani)\n- Fixed unnecessary invocation of setitimer when timeouts have been disabled.\n  (Arvind Srinivasan)\n- Fixed memory leak in extension loading when an error occurs on Windows.\n  (Pierre)\n- Fixed safe_mode validation inside tempnam() when the directory path does\n  not end with a /). (Martin Jansen)\n- Fixed a possible open_basedir/safe_mode bypass in session extension\n  identified by Grzegorz Stachowiak. (Ilia)\n- Fixed possible crash when a error/warning is raised during php startup.\n  (Pierre)\n- Fixed possible bad behavior of rename on windows when used with symbolic\n  links or invalid paths. (Pierre)\n- Fixed error output to stderr on Windows. (Pierre)\n- Fixed memory leaks in is_writable/readable/etc on Windows. (Pierre)\n- Fixed memory leaks in the ACL function on Windows. (Pierre)\n- Fixed memory leak in the realpath cache on Windows. (Pierre)\n- Fixed memory leak in zip_close. (Pierre)\n- Fixed crypt's blowfish sanity check of the \"setting\" string, to reject\n  iteration counts encoded as 36 through 39. (Solar Designer, Joey, Pierre)\n\n- Fixed bug #51059 (crypt crashes when invalid salt are given). (Pierre)\n- Fixed bug #50952 (allow underscore _ in constants parsed in php.ini files).\n  (Jani)\n- Fixed bug #50940 (Custom content-length set incorrectly in Apache SAPIs).\n  (Brian France, Rasmus)\n- Fixed bug #50930 (Wrong date by php_date.c patch with ancient gcc/glibc\n  versions). (Derick)\n- Fixed bug #50907 (X-PHP-Originating-Script adding two new lines in *NIX).\n  (Ilia)\n- Fixed bug #50859 (build fails with openssl 1.0 due to md2 deprecation).\n  (Ilia, hanno at hboeck dot de)\n- Fixed bug #50847 (strip_tags() removes all tags greater then 1023 bytes\n  long). (Ilia)\n- Fixed bug #50829 (php.ini directive pdo_mysql.default_socket is ignored).\n  (Ilia)\n- Fixed bug #50832 (HTTP fopen wrapper does not support passwordless HTTP\n  authentication). (Jani)\n- Fixed bug #50787 (stream_set_write_buffer() has no effect on socket streams).\n  (vnegrier at optilian dot com, Ilia)\n- Fixed bug #50761 (system.multiCall crashes in xmlrpc extension).\n  (hiroaki dot kawai at gmail dot com, Ilia)\n- Fixed bug #50756 (CURLOPT_FTP_SKIP_PASV_IP does not exist). (Sriram)\n- Fixed bug #50732 (exec() adds single byte twice to $output array). (Ilia)\n- Fixed bug #50728 (All PDOExceptions hardcode 'code' property to 0).\n  (Joey, Ilia)\n- Fixed bug #50723 (Bug in garbage collector causes crash). (Dmitry)\n- Fixed bug #50690 (putenv does not set ENV when the value is only one char).\n  (Pierre)\n- Fixed bug #50680 (strtotime() does not support eighth ordinal number). (Ilia)\n- Fixed bug #50661 (DOMDocument::loadXML does not allow UTF-16). (Rob)\n- Fixed bug #50657 (copy() with an empty (zero-byte) HTTP source succeeds but\n  returns false). (Ilia)\n- Fixed bug #50636 (MySQLi_Result sets values before calling constructor).\n  (Pierrick)\n- Fixed bug #50632 (filter_input() does not return default value if the\n  variable does not exist). (Ilia)\n- Fixed bug #50576 (XML_OPTION_SKIP_TAGSTART option has no effect). (Pierrick)\n- Fixed bug #50558 (Broken object model when extending tidy). (Pierrick)\n- Fixed bug #50540 (Crash while running ldap_next_reference test cases).\n  (Sriram)\n- Fixed bug #50519 (segfault in garbage collection when using set_error_handler\n  and DomDocument). (Dmitry)\n- Fixed bug #50508 (compile failure: Conflicting HEADER type declarations).\n  (Jani)\n- Fixed bug #50496 (Use of <stdbool.h> is valid only in a c99 compilation\n  environment. (Sriram)\n- Fixed bug #50464 (declare encoding doesn't work within an included file).\n  (Felipe)\n- Fixed bug #50458 (PDO::FETCH_FUNC fails with Closures). (Felipe, Pierrick)\n- Fixed bug #50445 (PDO-ODBC stored procedure call from Solaris 64-bit causes\n  seg fault). (davbrown4 at yahoo dot com, Felipe)\n- Fixed bug #50416 (PROCEDURE db.myproc can't return a result set in the given\n  context). (Andrey)\n- Fixed bug #50394 (Reference argument converted to value in __call). (Stas)\n- Fixed bug #50351 (performance regression handling objects, ten times slower\n  in 5.3 than in 5.2). (Dmitry)\n- Fixed bug #50392 (date_create_from_format() enforces 6 digits for 'u'\n  format character). (Ilia)\n- Fixed bug #50345 (nanosleep not detected properly on some solaris versions).\n  (Jani)\n- Fixed bug #50340 (php.ini parser does not allow spaces in ini keys). (Jani)\n- Fixed bug #50334 (crypt ignores sha512 prefix). (Pierre)\n- Fixed bug #50323 (Allow use of ; in values via ;; in PDO DSN).\n  (Ilia, Pierrick)\n- Fixed bug #50285 (xmlrpc does not preserve keys in encoded indexed arrays).\n  (Felipe)\n- Fixed bug #50282 (xmlrpc_encode_request() changes object into array in\n  calling function). (Felipe)\n- Fixed bug #50267 (get_browser(null) does not use HTTP_USER_AGENT). (Jani)\n- Fixed bug #50266 (conflicting types for llabs). (Jani)\n- Fixed bug #50261 (Crash When Calling Parent Constructor with\n  call_user_func()). (Dmitry)\n- Fixed bug #50255 (isset() and empty() silently casts array to object).\n  (Felipe)\n- Fixed bug #50240 (pdo_mysql.default_socket in php.ini shouldn't used\n  if it is empty). (foutrelis at gmail dot com, Ilia)\n- Fixed bug #50231 (Socket path passed using --with-mysql-sock is ignored when\n  mysqlnd is enabled). (Jani)\n- Fixed bug #50219 (soap call Segmentation fault on a redirected url).\n  (Pierrick)\n- Fixed bug #50212 (crash by ldap_get_option() with LDAP_OPT_NETWORK_TIMEOUT).\n  (Ilia, shigeru_kitazaki at cybozu dot co dot jp)\n- Fixed bug #50209 (Compiling with libedit cannot find readline.h).\n  (tcallawa at redhat dot com)\n- Fixed bug #50207 (segmentation fault when concatenating very large strings on\n  64bit linux). (Ilia)\n- Fixed bug #50196 (stream_copy_to_stream() produces warning when source is\n  not file). (Stas)\n- Fixed bug #50195 (pg_copy_to() fails when table name contains schema. (Ilia)\n- Fixed bug #50185 (ldap_get_entries() return false instead of an empty array\n  when there is no error). (Jani)\n- Fixed bug #50174 (Incorrectly matched docComment). (Felipe)\n- Fixed bug #50168 (FastCGI fails with wrong error on HEAD request to\n  non-existant file). (Dmitry)\n- Fixed bug #50162 (Memory leak when fetching timestamp column from Oracle\n  database). (Felipe)\n- Fixed bug #50159 (wrong working directory in symlinked files). (Dmitry)\n- Fixed bug #50158 (FILTER_VALIDATE_EMAIL fails with valid addresses\n  containing = or ?). (Pierrick)\n- Fixed bug #50152 (ReflectionClass::hasProperty behaves like isset() not\n  property_exists). (Felipe)\n- Fixed bug #50146 (property_exists: Closure object cannot have properties).\n  (Felipe)\n- Fixed bug #50145 (crash while running bug35634.phpt). (Felipe)\n- Fixed bug #50140 (With default compilation option, php symbols are unresolved\n  for nsapi). (Uwe Schindler)\n- Fixed bug #50087 (NSAPI performance improvements). (Uwe Schindler)\n- Fixed bug #50073 (parse_url() incorrect when ? in fragment). (Ilia)\n- Fixed bug #50023 (pdo_mysql doesn't use PHP_MYSQL_UNIX_SOCK_ADDR). (Ilia)\n- Fixed bug #50005 (Throwing through Reflection modified Exception object\n  makes segmentation fault). (Felipe)\n- Fixed bug #49990 (SNMP3 warning message about security level printed twice).\n  (Jani)\n- Fixed bug #49985 (pdo_pgsql prepare() re-use previous aborted\n  transaction). (ben dot pineau at gmail dot com, Ilia, Matteo)\n- Fixed bug #49938 (Phar::isBuffering() returns inverted value). (Greg)\n- Fixed bug #49936 (crash with ftp stream in php_stream_context_get_option()).\n  (Pierrick)\n- Fixed bug #49921 (Curl post upload functions changed). (Ilia)\n- Fixed bug #49866 (Making reference on string offsets crashes PHP). (Dmitry)\n- Fixed bug #49855 (import_request_variables() always returns NULL). (Ilia,\n  sjoerd at php dot net)\n- Fixed bug #49851, #50451 (http wrapper breaks on 1024 char long headers).\n  (Ilia)\n- Fixed bug #49800 (SimpleXML allow (un)serialize() calls without warning).\n  (Ilia, wmeler at wp-sa dot pl)\n- Fixed bug #49719 (ReflectionClass::hasProperty returns true for a private\n  property in base class). (Felipe)\n- Fixed bug #49677 (ini parser crashes with apache2 and using ${something}\n  ini variables). (Jani)\n- Fixed bug #49660 (libxml 2.7.3+ limits text nodes to 10MB). (Felipe)\n- Fixed bug #49647 (DOMUserData does not exist). (Rob)\n- Fixed bug #49600 (imageTTFText text shifted right). (Takeshi Abe)\n- Fixed bug #49585 (date_format buffer not long enough for >4 digit years).\n  (Derick, Adam)\n- Fixed bug #49560 (oci8: using LOBs causes slow PHP shutdown). (Oracle Corp.)\n- Fixed bug #49521 (PDO fetchObject sets values before calling constructor).\n  (Pierrick)\n- Fixed bug #49472 (Constants defined in Interfaces can be overridden).\n  (Felipe)\n- Fixed bug #49463 (setAttributeNS fails setting default namespace). (Rob)\n- Fixed bug #49244 (Floating point NaN cause garbage characters). (Sjoerd)\n- Fixed bug #49224 (Compile error due to old DNS functions on AIX systems).\n  (Scott)\n- Fixed bug #49174 (crash when extending PDOStatement and trying to set\n  queryString property). (Felipe)\n- Fixed bug #48811 (Directives in PATH section do not get applied to\n  subdirectories). (Patch by: ct at swin dot edu dot au)\n- Fixed bug #48590 (SoapClient does not honor max_redirects). (Sriram)\n- Fixed bug #48190 (Content-type parameter \"boundary\" is not case-insensitive\n  in HTTP uploads). (Ilia)\n- Fixed bug #47848 (importNode doesn't preserve attribute namespaces). (Rob)\n- Fixed bug #47409 (extract() problem with array containing word \"this\").\n  (Ilia, chrisstocktonaz at gmail dot com)\n- Fixed bug #47281 ($php_errormsg is limited in size of characters)\n  (Oracle Corp.)\n- Fixed bug #46478 (htmlentities() uses obsolete mapping table for character\n  entity references). (Moriyoshi)\n- Fixed bug #45599 (strip_tags() truncates rest of string with invalid\n  attribute). (Ilia, hradtke)\n- Fixed bug #45120 (PDOStatement->execute() returns true then false for same\n  statement). (Pierrick)\n- Fixed bug #44827 (define() allows :: in constant names). (Ilia)\n- Fixed bug #44098 (imap_utf8() returns only capital letters).\n  (steffen at dislabs dot de, Pierre)\n- Fixed bug #34852 (Failure in odbc_exec() using oracle-supplied odbc\n  driver). (tim dot tassonis at trivadis dot com)\n\n19 Nov 2009, PHP 5.3.1\n- Upgraded bundled sqlite to version 3.6.19. (Scott)\n- Updated timezone database to version 2009.17 (2009q). (Derick)\n\n- Changed ini file directives [PATH=](on Win32) and [HOST=](on all) to be case\n  insensitive. (garretts)\n\n- Restored shebang line check to CGI sapi (not checked by scanner anymore).\n  (Jani)\n\n- Added \"max_file_uploads\" INI directive, which can be set to limit the\n  number of file uploads per-request to 20 by default, to prevent possible\n  DOS via temporary file exhaustion. (Ilia)\n- Added missing sanity checks around exif processing. (Ilia)\n- Added error constant when json_encode() detects an invalid UTF-8 sequence.\n  (Scott)\n- Added support for ACL on Windows for thread safe SAPI (Apache2 for example)\n  and fix its support on NTS. (Pierre)\n\n- Improved symbolic, mounted volume and junctions support for realpath on\n  Windows. (Pierre)\n- Improved readlink on Windows, suppress \\??\\ and use the drive syntax only.\n  (Pierre)\n- Improved dns_get_record() AAAA support on windows. Always available when\n  IPv6 is support is installed, format is now the same than on unix. (Pierre)\n- Improved the DNS functions on OSX to use newer APIs, also use Bind 9 API\n  where available on other platforms. (Scott)\n- Improved shared extension loading on OSX to use the standard Unix dlopen()\n  API. (Scott)\n\n- Fixed crash in com_print_typeinfo when an invalid typelib is given. (Pierre)\n- Fixed a safe_mode bypass in tempnam() identified by Grzegorz Stachowiak.\n  (Rasmus)\n- Fixed a open_basedir bypass in posix_mkfifo() identified by Grzegorz\n  Stachowiak.  (Rasmus)\n- Fixed certificate validation inside php_openssl_apply_verification_policy\n  (Ryan Sleevi, Ilia)\n- Fixed crash in SQLiteDatabase::ArrayQuery() and SQLiteDatabase::SingleQuery()\n  when calling using Reflection. (Felipe)\n- Fixed crash when instantiating PDORow and PDOStatement through Reflection.\n  (Felipe)\n- Fixed sanity check for the color index in imagecolortransparent. (Pierre)\n- Fixed scandir/readdir when used mounted points on Windows. (Pierre)\n- Fixed zlib.deflate compress filter to actually accept level parameter. (Jani)\n- Fixed leak on error in popen/exec (and related functions) on Windows.\n  (Pierre)\n- Fixed possible bad caching of symlinked directories in the realpath cache\n  on Windows. (Pierre)\n- Fixed atime and mtime in stat related functions on Windows. (Pierre)\n- Fixed spl_autoload_unregister/spl_autoload_functions wrt. Closures and\n  Functors. (Christian Seiler)\n- Fixed open_basedir circumvention for \"mail.log\" ini directive.\n  (Maksymilian Arciemowicz, Stas)\n- Fixed signature generation/validation for zip archives in ext/phar. (Greg)\n- Fixed memory leak in stream_is_local(). (Felipe, Tony)\n- Fixed BC break in mime_content_type(), removes the content encoding. (Scott)\n\n- Fixed PECL bug #16842 (oci_error return false when NO_DATA_FOUND is raised).\n  (Chris Jones)\n\n- Fixed bug #50063 (safe_mode_include_dir fails). (Johannes, christian at\n  elmerot dot se)\n- Fixed bug #50052 (Different Hashes on Windows and Linux on wrong Salt size).\n  (Pierre)\n- Fixed bug #49986 (Missing ICU DLLs on windows package). (Pierre)\n- Fixed bug #49910 (no support for ././@LongLink for long filenames in phar\n  tar support). (Greg)\n- Fixed bug #49908 (throwing exception in __autoload crashes when interface\n  is not defined). (Felipe)\n- Fixed bug #49847 (exec() fails to return data inside 2nd parameter, given\n  output lines >4095 bytes). (Ilia)\n- Fixed bug #49809 (time_sleep_until() is not available on OpenSolaris). (Jani)\n- Fixed bug #49757 (long2ip() can return wrong value in a multi-threaded\n  applications). (Ilia, Florian Anderiasch)\n- Fixed bug #49738 (calling mcrypt after mcrypt_generic_deinit crashes).\n  (Sriram Natarajan)\n- Fixed bug #49732 (crashes when using fileinfo when timestamp conversion\n  fails). (Pierre)\n- Fixed bug #49698 (Unexpected change in strnatcasecmp()). (Rasmus)\n- Fixed bug #49630 (imap_listscan function missing). (Felipe)\n- Fixed bug #49572 (use of C++ style comments causes build failure).\n  (Sriram Natarajan)\n- Fixed bug #49531 (CURLOPT_INFILESIZE sometimes causes warning \"CURLPROTO_FILE\n  cannot be set\"). (Felipe)\n- Fixed bug #49517 (cURL's CURLOPT_FILE prevents file from being deleted after\n  fclose). (Ilia)\n- Fixed bug #49470 (FILTER_SANITIZE_EMAIL allows disallowed characters).\n  (Ilia)\n- Fixed bug #49447 (php engine need to correctly check for socket API\n  return status on windows). (Sriram Natarajan)\n- Fixed bug #49391 (ldap.c utilizing deprecated ldap_modify_s). (Ilia)\n- Fixed bug #49372 (segfault in php_curl_option_curl). (Pierre)\n- Fixed bug #49361 (wordwrap() wraps incorrectly on end of line boundaries).\n  (Ilia, code-it at mail dot ru)\n- Fixed bug #49306 (inside pdo_mysql default socket settings are ignored).\n  (Ilia)\n- Fixed bug #49289 (bcmath module doesn't compile with phpize configure).\n  (Jani)\n- Fixed bug #49286 (php://input (php_stream_input_read) is broken). (Jani)\n- Fixed bug #49269 (Ternary operator fails on Iterator object when used inside\n  foreach declaration). (Etienne, Dmitry)\n- Fixed bug #49236 (Missing PHP_SUBST(PDO_MYSQL_SHARED_LIBADD)). (Jani)\n- Fixed bug #49223 (Inconsistency using get_defined_constants). (Garrett)\n- Fixed bug #49193 (gdJpegGetVersionString() inside gd_compact identifies\n  wrong type in declaration). (Ilia)\n- Fixed bug #49183 (dns_get_record does not return NAPTR records). (Pierre)\n- Fixed bug #49144 (Import of schema from different host transmits original\n  authentication details). (Dmitry)\n- Fixed bug #49142 (crash when exception thrown from __tostring()).\n  (David Soria Parra)\n- Fixed bug #49132 (posix_times returns false without error).\n  (phpbugs at gunnu dot us)\n- Fixed bug #49125 (Error in dba_exists C code). (jdornan at stanford dot edu)\n- Fixed bug #49122 (undefined reference to mysqlnd_stmt_next_result on compile\n  with --with-mysqli and MySQL 6.0). (Jani)\n- Fixed bug #49108 (2nd scan_dir produces segfault). (Felipe)\n- Fixed bug #49098 (mysqli segfault on error). (Rasmus)\n- Fixed bug #49095 (proc_get_status['exitcode'] fails on win32). (Felipe)\n- Fixed bug #49092 (ReflectionFunction fails to work with functions in fully\n  qualified namespaces). (Kalle, Jani)\n- Fixed bug #49074 (private class static fields can be modified by using\n  reflection). (Jani)\n- Fixed bug #49072 (feof never returns true for damaged file in zip). (Pierre)\n- Fixed bug #49065 (\"disable_functions\" php.ini option does not work on\n  Zend extensions). (Stas)\n- Fixed bug #49064 (--enable-session=shared does not work: undefined symbol:\n  php_url_scanner_reset_vars). (Jani)\n- Fixed bug #49056 (parse_ini_file() regression in 5.3.0 when using non-ASCII\n  strings as option keys). (Jani)\n- Fixed bug #49052 (context option headers freed too early when using\n  --with-curlwrappers). (Jani)\n- Fixed bug #49047 (The function touch() fails on directories on Windows).\n  (Pierre)\n- Fixed bug #49032 (SplFileObject::fscanf() variables passed by reference).\n  (Jani)\n- Fixed bug #49027 (mysqli_options() doesn't work when using mysqlnd). (Andrey)\n- Fixed bug #49026 (proc_open() can bypass safe_mode_protected_env_vars\n  restrictions). (Ilia)\n- Fixed bug #49020 (phar misinterprets ustar long filename standard).\n  (Greg)\n- Fixed bug #49018 (phar tar stores long filenames wit prefix/name reversed).\n  (Greg)\n- Fixed bug #49014 (dechunked filter broken when serving more than 8192 bytes\n  in a chunk). (andreas dot streichardt at globalpark dot com, Ilia)\n- Fixed bug #49012 (phar tar signature algorithm reports as Unknown (0) in\n  getSignature() call). (Greg)\n- Fixed bug #49000 (PHP CLI in Interactive mode (php -a) crashes\n  when including files from function). (Stas)\n- Fixed bug #48994 (zlib.output_compression does not output HTTP headers when\n  set to a string value). (Jani)\n- Fixed bug #48980 (Crash when compiling with pdo_firebird). (Felipe)\n- Fixed bug #48962 (cURL does not upload files with specified filename).\n  (Ilia)\n- Fixed bug #48929 (Double \\r\\n after HTTP headers when \"header\" context\n  option is an array). (David Z\u00fclke)\n- Fixed bug #48913 (Too long error code strings in pdo_odbc driver).\n  (naf at altlinux dot ru, Felipe)\n- Fixed bug #48912 (Namespace causes unexpected strict behaviour with\n  extract()). (Dmitry)\n- Fixed bug #48909 (Segmentation fault in mysqli_stmt_execute()). (Andrey)\n- Fixed bug #48899 (is_callable returns true even if method does not exist in\n  parent class). (Felipe)\n- Fixed bug #48893 (Problems compiling with Curl). (Felipe)\n- Fixed bug #48880 (Random Appearing open_basedir problem). (Rasmus, Gwynne)\n- Fixed bug #48872 (string.c: errors: duplicate case values). (Kalle)\n- Fixed bug #48854 (array_merge_recursive modifies arrays after first one).\n  (Felipe)\n- Fixed bug #48805 (IPv6 socket transport is not working). (Ilia)\n- Fixed bug #48802 (printf() returns incorrect outputted length). (Jani)\n- Fixed bug #48791 (open office files always reported as corrupted). (Greg)\n- Fixed bug #48788 (RecursiveDirectoryIterator doesn't descend into symlinked\n  directories). (Ilia)\n- Fixed bug #48783 (make install will fail saying phar file exists). (Greg)\n- Fixed bug #48774 (SIGSEGVs when using curl_copy_handle()).\n  (Sriram Natarajan)\n- Fixed bug #48771 (rename() between volumes fails and reports no error on\n  Windows). (Pierre)\n- Fixed bug #48768 (parse_ini_*() crash with INI_SCANNER_RAW). (Jani)\n- Fixed bug #48763 (ZipArchive produces corrupt archive). (dani dot church at\n  gmail dot com, Pierre)\n- Fixed bug #48762 (IPv6 address filter still rejects valid address). (Felipe)\n- Fixed bug #48757 (ReflectionFunction::invoke() parameter issues). (Kalle)\n- Fixed bug #48754 (mysql_close() crash php when no handle specified).\n  (Johannes, Andrey)\n- Fixed bug #48752 (Crash during date parsing with invalid date). (Pierre)\n- Fixed bug #48746 (Unable to browse directories within Junction Points).\n  (Pierre, Kanwaljeet Singla)\n- Fixed bug #48745 (mysqlnd: mysql_num_fields returns wrong column count for\n  mysql_list_fields). (Andrey)\n- Fixed bug #48740 (PHAR install fails when INSTALL_ROOT is not the final\n  install location). (james dot cohen at digitalwindow dot com, Greg)\n- Fixed bug #48733 (CURLOPT_WRITEHEADER|CURLOPT_FILE|CURLOPT_STDERR warns on\n  files that have been opened with r+). (Ilia)\n- Fixed bug #48719 (parse_ini_*(): scanner_mode parameter is not checked for\n  sanity). (Jani)\n- Fixed bug #48718 (FILTER_VALIDATE_EMAIL does not allow numbers in domain\n  components). (Ilia)\n- Fixed bug #48681 (openssl signature verification for tar archives broken).\n  (Greg)\n- Fixed bug #48660 (parse_ini_*(): dollar sign as last character of value\n  fails). (Jani)\n- Fixed bug #48645 (mb_convert_encoding() doesn't understand hexadecimal\n  html-entities). (Moriyoshi)\n- Fixed bug #48637 (\"file\" fopen wrapper is overwritten when using\n  --with-curlwrappers). (Jani)\n- Fixed bug #48608 (Invalid libreadline version not detected during configure).\n  (Jani)\n- Fixed bug #48400 (imap crashes when closing stream opened with\n  OP_PROTOTYPE flag). (Jani)\n- Fixed bug #48377 (error message unclear on converting phar with existing\n  file). (Greg)\n- Fixed bug #48247 (Infinite loop and possible crash during startup with\n  errors when errors are logged). (Jani)\n- Fixed bug #48198 error: 'MYSQLND_LLU_SPEC' undeclared. Cause for #48780 and\n  #46952 - both fixed too. (Andrey)\n- Fixed bug #48189 (ibase_execute error in return param). (Kalle)\n- Fixed bug #48182 (ssl handshake fails during asynchronous socket connection).\n  (Sriram Natarajan)\n- Fixed bug #48116 (Fixed build with Openssl 1.0). (Pierre,\n  Al dot Smith at aeschi dot ch dot eu dot org)\n- Fixed bug #48057 (Only the date fields of the first row are fetched, others\n  are empty). (info at programmiernutte dot net)\n- Fixed bug #47481 (natcasesort() does not sort extended ASCII characters\n  correctly). (Herman Radtke)\n- Fixed bug #47351 (Memory leak in DateTime). (Derick, Tobias John)\n- Fixed bug #47273 (Encoding bug in SoapServer->fault). (Dmitry)\n- Fixed bug #46682 (touch() afield returns different values on windows).\n  (Pierre)\n- Fixed bug #46614 (Extended MySQLi class gives incorrect empty() result).\n  (Andrey)\n- Fixed bug #46020 (with Sun Java System Web Server 7.0 on HPUX, #define HPUX).\n  (Uwe Schindler)\n- Fixed bug #45905 (imagefilledrectangle() clipping error).\n  (markril at hotmail dot com, Pierre)\n- Fixed bug #45554 (Inconsistent behavior of the u format char). (Derick)\n- Fixed bug #45141 (setcookie will output expires years of >4 digits). (Ilia)\n- Fixed bug #44683 (popen crashes when an invalid mode is passed). (Pierre)\n- Fixed bug #43510 (stream_get_meta_data() does not return same mode as used\n  in fopen). (Jani)\n- Fixed bug #42434 (ImageLine w/ antialias = 1px shorter). (wojjie at gmail dot\n  com, Kalle)\n- Fixed bug #40013 (php_uname() does not return nodename on Netware (Guenter\n  Knauf)\n- Fixed bug #38091 (Mail() does not use FQDN when sending SMTP helo).\n  (Kalle, Rick Yorgason)\n- Fixed bug #28038 (Sent incorrect RCPT TO commands to SMTP server) (Garrett)\n- Fixed bug #27051 (Impersonation with FastCGI does not exec process as\n  impersonated user). (Pierre)\n\n\n30 Jun 2009, PHP 5.3.0\n- Upgraded bundled PCRE to version 7.9. (Nuno)\n- Upgraded bundled sqlite to version 3.6.15. (Scott)\n\n- Moved extensions to PECL (Derick, Lukas, Pierre, Scott):\n  . ext/dbase\n  . ext/fbsql\n  . ext/fdf\n  . ext/ncurses\n  . ext/mhash (BC layer is now entirely within ext/hash)\n  . ext/ming\n  . ext/msql\n  . ext/sybase (not maintained anymore, sybase_ct has to be used instead)\n\n- Removed the experimental RPL (master/slave) functions from mysqli. (Andrey)\n- Removed zend.ze1_compatibility_mode. (Dmitry)\n- Removed all zend_extension_* php.ini directives. Zend extensions are now\n  always loaded using zend_extension directive. (Derick)\n- Removed special treatment of \"/tmp\" in sessions for open_basedir.\n  Note: This undocumented behaviour was introduced in 5.2.2. (Alexey)\n- Removed shebang line check from CGI sapi (checked by scanner). (Dmitry)\n\n- Changed PCRE, Reflection and SPL extensions to be always enabled. (Marcus)\n- Changed md5() to use improved implementation. (Solar Designer, Dmitry)\n- Changed HTTP stream wrapper to accept any code between and including\n  200 to 399 as successful. (Mike, Noah Fontes)\n- Changed __call() to be invoked on private/protected method access, similar to\n  properties and __get(). (Andrei)\n- Changed dl() to be disabled by default. Enabled only when explicitly\n  registered by the SAPI. Currently enabled with cli, cgi and embed SAPIs.\n  (Dmitry)\n- Changed opendir(), dir() and scandir() to use default context when no context\n  argument is passed. (Sara)\n- Changed open_basedir to allow tightening in runtime contexts. (Sara)\n- Changed PHP/Zend extensions to use flexible build IDs. (Stas)\n- Changed error level E_ERROR into E_WARNING in Soap extension methods\n  parameter validation. (Felipe)\n- Changed openssl info to show the shared library version number. (Scott)\n- Changed floating point behaviour to consistently use double precision on all\n  platforms and with all compilers. (Christian Seiler)\n- Changed round() to act more intuitively when rounding to a certain precision\n  and round very large and very small exponents correctly. (Christian Seiler)\n- Changed session_start() to return false when session startup fails. (Jani)\n- Changed property_exists() to check the existence of a property independent of\n  accessibility (like method_exists()). (Felipe)\n- Changed array_reduce() to allow mixed $initial (Christian Seiler)\n\n- Improved PHP syntax and semantics:\n  . Added lambda functions and closures. (Christian Seiler, Dmitry)\n  . Added \"jump label\" operator (limited \"goto\"). (Dmitry, Sara)\n  . Added NOWDOC syntax. (Gwynne Raskind, Stas, Dmitry)\n  . Added HEREDOC syntax with double quotes. (Lars Strojny, Felipe)\n  . Added support for using static HEREDOCs to initialize static variables and\n    class members or constants. (Matt)\n  . Improved syntax highlighting and consistency for variables in double-quoted\n    strings and literal text in HEREDOCs and backticks. (Matt)\n  . Added \"?:\" operator. (Marcus)\n  . Added support for namespaces. (Dmitry, Stas, Gregory, Marcus)\n  . Added support for Late Static Binding. (Dmitry, Etienne Kneuss)\n  . Added support for __callStatic() magic method. (Sara)\n  . Added forward_static_call(_array) to complete LSB. (Mike Lively)\n  . Added support for dynamic access of static members using $foo::myFunc().\n    (Etienne Kneuss)\n  . Improved checks for callbacks. (Marcus)\n  . Added __DIR__ constant. (Lars Strojny)\n  . Added new error modes E_USER_DEPRECATED and E_DEPRECATED.\n    E_DEPRECATED is used to inform about stuff being scheduled for removal\n    in future PHP versions. (Lars Strojny, Felipe, Marcus)\n  . Added \"request_order\" INI variable to control specifically $_REQUEST\n    behavior. (Stas)\n  . Added support for exception linking. (Marcus)\n  . Added ability to handle exceptions in destructors. (Marcus)\n\n- Improved PHP runtime speed and memory usage:\n  . Substitute global-scope, persistent constants with their values at compile\n    time. (Matt)\n  . Optimized ZEND_SIGNED_MULTIPLY_LONG(). (Matt)\n  . Removed direct executor recursion. (Dmitry)\n  . Use fastcall calling convention in executor on x86. (Dmitry)\n  . Use IS_CV for direct access to $this variable. (Dmitry)\n  . Use ZEND_FREE() opcode instead of ZEND_SWITCH_FREE(IS_TMP_VAR). (Dmitry)\n  . Lazy EG(active_symbol_table) initialization. (Dmitry)\n  . Optimized ZEND_RETURN opcode to not allocate and copy return value if it is\n    not used. (Dmitry)\n  . Replaced all flex based scanners with re2c based scanners.\n    (Marcus, Nuno, Scott)\n  . Added garbage collector. (David Wang, Dmitry).\n  . Improved PHP binary size and startup speed with GCC4 visibility control.\n    (Nuno)\n  . Improved engine stack implementation for better performance and stability.\n    (Dmitry)\n  . Improved memory usage by moving constants to read only memory.\n    (Dmitry, Pierre)\n  . Changed exception handling. Now each op_array doesn't contain\n    ZEND_HANDLE_EXCEPTION opcode in the end. (Dmitry)\n  . Optimized require_once() and include_once() by eliminating fopen(3) on\n    second usage. (Dmitry)\n  . Optimized ZEND_FETCH_CLASS + ZEND_ADD_INTERFACE into single\n    ZEND_ADD_INTERFACE opcode. (Dmitry)\n  . Optimized string searching for a single character.\n    (Michal Dziemianko, Scott)\n  . Optimized interpolated strings to use one less opcode. (Matt)\n\n- Improved php.ini handling: (Jani)\n  . Added \".htaccess\" style user-defined php.ini files support for CGI/FastCGI.\n  . Added support for special [PATH=/opt/httpd/www.example.com/] and\n    [HOST=www.example.com] sections. Directives set in these sections can\n    not be overridden by user-defined ini-files or during runtime.\n  . Added better error reporting for php.ini syntax errors.\n  . Allowed using full path to load modules using \"extension\" directive.\n  . Allowed \"ini-variables\" to be used almost everywhere ini php.ini files.\n  . Allowed using alphanumeric/variable indexes in \"array\" ini options.\n  . Added 3rd optional parameter to parse_ini_file() to specify the scanning\n    mode of INI_SCANNER_NORMAL or INI_SCANNER_RAW. In raw mode option values\n    and section values are treated as-is.\n  . Fixed get_cfg_var() to be able to return \"array\" ini options.\n  . Added optional parameter to ini_get_all() to only retrieve the current\n    value. (Hannes)\n\n- Improved Windows support:\n  . Update all libraries to their latest stable version. (Pierre, Rob, Liz,\n    Garrett).\n  . Added Windows support for stat(), touch(), filemtime(), filesize() and\n    related functions. (Pierre)\n  . Re-added socket_create_pair() for Windows in sockets extension. (Kalle)\n  . Added inet_pton() and inet_ntop() also for Windows platforms.\n    (Kalle, Pierre)\n  . Added mcrypt_create_iv() for Windows platforms. (Pierre)\n  . Added ACL Cache support on Windows.\n    (Kanwaljeet Singla, Pierre, Venkat Raman Don)\n  . Added constants based on Windows' GetVersionEx information.\n    PHP_WINDOWS_VERSION_* and PHP_WINDOWS_NT_*. (Pierre)\n  . Added support for ACL (is_writable, is_readable, reports now correct\n    results) on Windows. (Pierre, Venkat Raman Don, Kanwaljeet Singla)\n  . Added support for fnmatch() on Windows. (Pierre)\n  . Added support for time_nanosleep() and time_sleep_until() on Windows.\n    (Pierre)\n  . Added support for symlink(), readlink(), linkinfo() and link() on Windows.\n    They are available only when the running platform supports them. (Pierre)\n  . the GMP extension now relies on MPIR instead of the GMP library. (Pierre)\n  . Added Windows support for stream_socket_pair(). (Kalle)\n  . Drop all external dependencies for the core features. (Pierre)\n  . Drastically improve the build procedure (Pierre, Kalle, Rob):\n    . VC9 (Visual C++ 2008) or later support\n    . Initial experimental x64 support\n  . MSI installer now supports all recent Windows versions, including\n    Windows 7. (John, Kanwaljeet Singla)\n\n- Improved and cleaned CGI code:\n  . FastCGI is now always enabled and cannot be disabled.\n    See sapi/cgi/CHANGES for more details. (Dmitry)\n  . Added CGI SAPI -T option which can be used to measure execution\n    time of script repeated several times. (Dmitry)\n\n- Improved streams:\n  . Fixed confusing error message on failure when no errors are logged. (Greg)\n  . Added stream_supports_lock() function. (Benjamin Schulz)\n  . Added context parameter for copy() function. (Sara)\n  . Added \"glob://\" stream wrapper. (Marcus)\n  . Added \"params\" as optional parameter for stream_context_create(). (Sara)\n  . Added ability to use stream wrappers in include_path. (Gregory, Dmitry)\n\n- Improved DNS API\n  . Added Windows support for dns_check_record(), dns_get_mx(), checkdnsrr() and\n    getmxrr(). (Pierre)\n  . Added support for old style DNS functions (supports OSX and FBSD). (Scott)\n  . Added a new \"entries\" array in dns_check_record() containing the TXT\n    elements. (Felipe, Pierre)\n\n- Improved hash extension:\n  . Changed mhash to be a wrapper layer around the hash extension. (Scott)\n  . Added hash_copy() function. (Tony)\n  . Added sha224 hash algorithm to the hash extension. (Scott)\n\n- Improved IMAP support (Pierre):\n  . Added imap_gc() to clear the imap cache\n  . Added imap_utf8_to_mutf7() and imap_mutf7_to_utf8()\n\n- Improved mbstring extension:\n  . Added \"mbstring.http_output_conv_mimetypes\" INI directive that allows\n    common non-text types such as \"application/xhtml+xml\" to be converted\n    by mb_output_handler(). (Moriyoshi)\n\n- Improved OCI8 extension (Chris Jones/Oracle Corp.):\n  . Added Database Resident Connection Pooling (DRCP) and Fast\n    Application Notification (FAN) support.\n  . Added support for Oracle External Authentication (not supported\n    on Windows).\n  . Improve persistent connection handling of restarted DBs.\n  . Added SQLT_AFC (aka CHAR datatype) support to oci_bind_by_name.\n  . Fixed bug #45458 (Numeric keys for associative arrays are not\n    handled properly)\n  . Fixed bug #41069 (Segmentation fault with query over DB link).\n  . Fixed define of SQLT_BDOUBLE and SQLT_BFLOAT constants with Oracle\n    10g ORACLE_HOME builds.\n  . Changed default value of oci8.default_prefetch from 10 to 100.\n  . Fixed PECL Bug #16035 (OCI8: oci_connect without ORACLE_HOME defined causes\n    segfault) (Chris Jones/Oracle Corp.)\n  . Fixed PECL Bug #15988 (OCI8: sqlnet.ora isn't read with older Oracle\n    libraries) (Chris Jones/Oracle Corp.)\n  . Fixed PECL Bug #14268 (Allow \"pecl install oci8\" command to \"autodetect\" an\n    Instant Client RPM install) (Chris Jones/Oracle Corp.)\n  . Fixed PECL bug #12431 (OCI8 ping functionality is broken).\n  . Allow building (e.g from PECL) the PHP 5.3-based OCI8 code with\n    PHP 4.3.9 onwards.\n  . Provide separate extensions for Oracle 11g and 10g on Windows.\n    (Pierre, Chris)\n\n- Improved OpenSSL extension:\n  . Added support for OpenSSL digest and cipher functions. (Dmitry)\n  . Added access to internal values of DSA, RSA and DH keys. (Dmitry)\n  . Fixed a memory leak on openssl_decrypt(). (Henrique)\n  . Fixed segfault caused by openssl_pkey_new(). (Henrique)\n  . Fixed bug caused by uninitilized variables in openssl_pkcs7_encrypt() and\n    openssl_pkcs7_sign(). (Henrique)\n  . Fixed error message in openssl_seal(). (Henrique)\n\n- Improved pcntl extension: (Arnaud)\n  . Added pcntl_signal_dispatch().\n  . Added pcntl_sigprocmask().\n  . Added pcntl_sigwaitinfo().\n  . Added pcntl_sigtimedwait().\n\n- Improved SOAP extension:\n  . Added support for element names in context of XMLSchema's <any>. (Dmitry)\n  . Added ability to use Traversable objects instead of plain arrays.\n    (Joshua Reese, Dmitry)\n  . Fixed possible crash bug caused by an uninitialized value. (Zdash Urf)\n\n- Improved SPL extension:\n  . Added SPL to list of standard extensions that cannot be disabled. (Marcus)\n  . Added ability to store associative information with objects in\n    SplObjectStorage. (Marcus)\n  . Added ArrayAccess support to SplObjectStorage. (Marcus)\n  . Added SplDoublyLinkedList, SplStack, SplQueue classes. (Etienne)\n  . Added FilesystemIterator. (Marcus)\n  . Added GlobIterator. (Marcus)\n  . Added SplHeap, SplMinHeap, SplMaxHeap, SplPriorityQueue classes. (Etienne)\n  . Added new parameter $prepend to spl_autoload_register(). (Etienne)\n  . Added SplFixedArray. (Etienne, Tony)\n  . Added delaying exceptions in SPL's autoload mechanism. (Marcus)\n  . Added RecursiveTreeIterator. (Arnaud, Marcus)\n  . Added MultipleIterator. (Arnaud, Marcus, Johannes)\n\n- Improved Zend Engine:\n  . Added \"compact\" handler for Zend MM storage. (Dmitry)\n  . Added \"+\" and \"*\" specifiers to zend_parse_parameters(). (Andrei)\n  . Added concept of \"delayed early binding\" that allows opcode caches to\n    perform class declaration (early and/or run-time binding) in exactly\n    the same order as vanilla PHP. (Dmitry)\n\n- Improved crypt() function: (Pierre)\n  . Added Blowfish and extended DES support. (Using Blowfish implementation\n    from Solar Designer).\n  . Made crypt features portable by providing our own implementations\n    for crypt_r and the algorithms which are used when OS does not provide\n    them. PHP implementations are always used for Windows builds.\n\n- Deprecated session_register(), session_unregister() and\n  session_is_registered(). (Hannes)\n- Deprecated define_syslog_variables(). (Kalle)\n- Deprecated ereg extension. (Felipe)\n\n- Added new extensions:\n  . Added Enchant extension as a way to access spell checkers. (Pierre)\n  . Added fileinfo extension as replacement for mime_magic extension. (Derick)\n  . Added intl extension for Internationalization. (Ed B., Vladimir I.,\n    Dmitry L., Stanislav M., Vadim S., Kirti V.)\n  . Added mysqlnd extension as replacement for libmysql for ext/mysql, mysqli\n    and PDO_mysql. (Andrey, Johannes, Ulf)\n  . Added phar extension for handling PHP Archives. (Greg, Marcus, Steph)\n  . Added SQLite3 extension. (Scott)\n\n- Added new date/time functionality: (Derick)\n  . date_parse_from_format(): Parse date/time strings according to a format.\n  . date_create_from_format()/DateTime::createFromFormat(): Create a date/time\n    object by parsing a date/time string according to a given format.\n  . date_get_last_errors()/DateTime::getLastErrors(): Return a list of warnings\n    and errors that were found while parsing a date/time string through:\n    . strtotime() / new DateTime\n    . date_create_from_format() / DateTime::createFromFormat()\n    . date_parse_from_format().\n  . support for abbreviation and offset based timezone specifiers for\n    the 'e' format specifier, DateTime::__construct(), DateTime::getTimeZone()\n    and DateTimeZone::getName().\n  . support for selectively listing timezone identifiers by continent or\n    country code through timezone_identifiers_list() /\n    DateTimezone::listIdentifiers().\n  . timezone_location_get() / DateTimezone::getLocation() for retrieving\n    location information from timezones.\n  . date_timestamp_set() / DateTime::setTimestamp() to set a Unix timestamp\n    without invoking the date parser. (Scott, Derick)\n  . date_timestamp_get() / DateTime::getTimestamp() to retrieve the Unix\n    timestamp belonging to a date object.\n  . two optional parameters to timezone_transitions_get() /\n    DateTimeZone::getTranstions() to limit the range of transitions being\n    returned.\n  . support for \"first/last day of <month>\" style texts.\n  . support for date/time strings returned by MS SQL.\n  . support for serialization and unserialization of DateTime objects.\n  . support for diffing date/times through date_diff() / DateTime::diff().\n  . support for adding/subtracting weekdays with strtotime() and\n    DateTime::modify().\n  . DateInterval class to represent the difference between two date/times.\n  . support for parsing ISO intervals for use with DateInterval.\n  . date_add() / DateTime::add(), date_sub() / DateTime::sub() for applying an\n    interval to an existing date/time.\n  . proper support for \"this week\", \"previous week\"/\"last week\" and \"next week\"\n    phrases so that they actually mean the week and not a seven day period\n    around the current day.\n  . support for \"<xth> <weekday> of\" and \"last <weekday> of\" phrases to be used\n    with months - like in \"last saturday of februari 2008\".\n  . support for \"back of <hour>\" and \"front of <hour>\" phrases that are used in\n    Scotland.\n  . DatePeriod class which supports iterating over a DateTime object applying\n    DateInterval on each iteration, up to an end date or limited by maximum\n    number of occurences.\n\n- Added compatibility mode in GD, imagerotate, image(filled)ellipse\n  imagefilter, imageconvolution and imagecolormatch are now always enabled.\n  (Pierre)\n- Added array_replace() and array_replace_recursive() functions. (Matt)\n- Added ReflectionProperty::setAccessible() method that allows non-public\n  property's values to be read through ::getValue() and set through\n  ::setValue(). (Derick, Sebastian)\n- Added msg_queue_exists() function to sysvmsg extension. (Benjamin Schulz)\n- Added Firebird specific attributes that can be set via PDO::setAttribute()\n  to control formatting of date/timestamp columns: PDO::FB_ATTR_DATE_FORMAT,\n  PDO::FB_ATTR_TIME_FORMAT and PDO::FB_ATTR_TIMESTAMP_FORMAT. (Lars W)\n- Added gmp_testbit() function. (Stas)\n- Added icon format support to getimagesize(). (Scott)\n- Added LDAP_OPT_NETWORK_TIMEOUT option for ldap_set_option() to allow\n  setting network timeout (FR #42837). (Jani)\n- Added optional escape character parameter to fgetcsv(). (David Soria Parra)\n- Added an optional parameter to strstr() and stristr() for retrieval of either\n  the part of haystack before or after first occurrence of needle.\n  (Johannes, Felipe)\n- Added xsl->setProfiling() for profiling stylesheets. (Christian)\n- Added long-option feature to getopt() and made getopt() available also on\n  win32 systems by adding a common getopt implementation into core.\n  (David Soria Parra, Jani)\n- Added support for optional values, and = as separator, in getopt(). (Hannes)\n- Added lcfirst() function. (David C)\n- Added PREG_BAD_UTF8_OFFSET_ERROR constant. (Nuno)\n- Added native support for asinh(), acosh(), atanh(), log1p() and expm1().\n  (Kalle)\n- Added LIBXML_LOADED_VERSION constant (libxml2 version currently used). (Rob)\n- Added JSON_FORCE_OBJECT flag to json_encode(). (Scott, Richard Quadling)\n- Added timezone_version_get() to retrieve the version of the used timezone\n  database. (Derick)\n- Added 'n' flag to fopen to allow passing O_NONBLOCK to the underlying\n  open(2) system call. (Mikko)\n- Added \"dechunk\" filter which can decode HTTP responses with chunked\n  transfer-encoding. HTTP streams use this filter automatically in case\n  \"Transfer-Encoding: chunked\" header is present in response. It's possible to\n  disable this behaviour using \"http\"=>array(\"auto_decode\"=>0) in stream\n  context. (Dmitry)\n- Added support for CP850 encoding in mbstring extension.\n  (Denis Giffeler, Moriyoshi)\n- Added stream_cast() and stream_set_options() to user-space stream wrappers,\n  allowing stream_select(), stream_set_blocking(), stream_set_timeout() and\n  stream_set_write_buffer() to work with user-space stream wrappers. (Arnaud)\n- Added header_remove() function. (chsc at peytz dot dk, Arnaud)\n- Added stream_context_get_params() function. (Arnaud)\n- Added optional parameter \"new\" to sybase_connect(). (Timm)\n- Added parse_ini_string() function. (grange at lemonde dot fr, Arnaud)\n- Added str_getcsv() function. (Sara)\n- Added openssl_random_pseudo_bytes() function. (Scott)\n- Added ability to send user defined HTTP headers with SOAP request.\n  (Brian J.France, Dmitry)\n- Added concatenation option to bz2.decompress stream filter.\n  (Keisial at gmail dot com, Greg)\n- Added support for using compressed connections with PDO_mysql. (Johannes)\n- Added the ability for json_decode() to take a user specified depth. (Scott)\n- Added support for the mysql_stmt_next_result() function from libmysql.\n  (Andrey)\n- Added function preg_filter() that does grep and replace in one go. (Marcus)\n- Added system independent realpath() implementation which caches intermediate\n  directories in realpath-cache. (Dmitry)\n- Added optional clear_realpath_cache and filename parameters to\n  clearstatcache(). (Jani, Arnaud)\n- Added litespeed SAPI module. (George Wang)\n- Added ext/hash support to ext/session's ID generator. (Sara)\n- Added quoted_printable_encode() function. (Tony)\n- Added stream_context_set_default() function. (Davey Shafik)\n- Added optional \"is_xhtml\" parameter to nl2br() which makes the function\n  output <br> when false and <br /> when true (FR #34381). (Kalle)\n- Added PHP_MAXPATHLEN constant (maximum length of a path). (Pierre)\n- Added support for SSH via libssh2 in cURL. (Pierre)\n- Added support for gray levels PNG image with alpha in GD extension. (Pierre)\n- Added support for salsa hashing functions in HASH extension. (Scott)\n- Added DOMNode::getLineNo to get line number of parsed node. (Rob)\n- Added table info to PDO::getColumnMeta() with SQLite. (Martin Jansen, Scott)\n- Added mail logging functionality that allows logging of mail sent via\n  mail() function. (Ilia)\n- Added json_last_error() to return any error information from json_decode().\n  (Scott)\n- Added gethostname() to return the current system host name. (Ilia)\n- Added shm_has_var() function. (Mike)\n- Added depth parameter to json_decode() to lower the nesting depth from the\n  maximum if required. (Scott)\n- Added pixelation support in imagefilter(). (Takeshi Abe, Kalle)\n- Added SplObjectStorage::addAll/removeAll. (Etienne)\n\n- Implemented FR #41712 (curl progress callback: CURLOPT_PROGRESSFUNCTION).\n  (sdteffen[at]gmail[dot].com, Pierre)\n- Implemented FR #47739 (Missing cURL option do disable IPv6). (Pierre)\n- Implemented FR #39637 (Missing cURL option CURLOPT_FTP_FILEMETHOD). (Pierre)\n\n- Fixed an issue with ReflectionProperty::setAccessible().\n  (Sebastian, Roman Borschel)\n- Fixed html_entity_decode() incorrectly converting numeric html entities\n  to different characters with cp1251 and cp866. (Scott)\n- Fixed an issue in date() where a : was printed for the O modifier after a P\n  modifier was used. (Derick)\n- Fixed exec() on Windows to not eat the first and last double quotes. (Scott)\n- Fixed readlink on Windows in thread safe SAPI (apache2.x etc.). (Pierre)\n- Fixed a bug causing miscalculations with the \"last <weekday> of <n> month\"\n  relative time string. (Derick)\n- Fixed bug causing the algorithm parameter of mhash() to be modified. (Scott)\n- Fixed invalid calls to free when internal fileinfo magic file is used. (Scott)\n- Fixed memory leak inside wddx_add_vars() function. (Felipe)\n- Fixed check in recode extension to allow builing of recode and mysql\n  extensions when using a recent libmysql. (Johannes)\n\n- Fixed PECL bug #12794 (PDOStatement->nextRowset() doesn't work). (Johannes)\n- Fixed PECL bug #12401 (Add support for ATTR_FETCH_TABLE_NAMES). (Johannes)\n\n- Fixed bug #48696 (ldap_read() segfaults with invalid parameters). (Felipe)\n- Fixed bug #48643 (String functions memory issue). (Dmitry)\n- Fixed bug #48641 (tmpfile() uses old parameter parsing).\n  (crrodriguez at opensuse dot org)\n- Fixed bug #48624 (.user.ini never gets parsed). (Pierre)\n- Fixed bug #48620 (X-PHP-Originating-Script assumes no trailing CRLF in\n  existing headers). (Ilia)\n- Fixed bug #48578 (Can't build 5.3 on FBSD 4.11). (Rasmus)\n- Fixed bug #48535 (file_exists returns false when impersonate is used).\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #48493 (spl_autoload_register() doesn't work correctly when\n  prepending functions). (Scott)\n- Fixed bug #48215 (Calling a method with the same name as the parent class\n  calls the constructor). (Scott)\n- Fixed bug #48200 (compile failure with mbstring.c when\n  --enable-zend-multibyte is used). (Jani)\n- Fixed bug #48188 (Cannot execute a scrollable cursors twice with PDO_PGSQL).\n  (Matteo)\n- Fixed bug #48185 (warning: value computed is not used in\n  pdo_sqlite_stmt_get_col line 271). (Matteo)\n- Fixed bug #48087 (call_user_method() invalid free of arguments). (Felipe)\n- Fixed bug #48060 (pdo_pgsql - large objects are returned as empty). (Matteo)\n- Fixed bug #48034 (PHP crashes when script is 8192 (8KB) bytes long). (Dmitry)\n- Fixed bug #48004 (Error handler prevents creation of default object). (Dmitry)\n- Fixed bug #47880 (crashes in call_user_func_array()). (Dmitry)\n- Fixed bug #47856 (stristr() converts needle to lower-case). (Ilia)\n- Fixed bug #47851 (is_callable throws fatal error). (Dmitry)\n- Fixed bug #47816 (pcntl tests failing on NetBSD). (Matteo)\n- Fixed bug #47779 (Wrong value for SIG_UNBLOCK and SIG_SETMASK constants).\n  (Matteo)\n- Fixed bug #47771 (Exception during object construction from arg call calls\n  object's destructor). (Dmitry)\n- Fixed bug #47767 (include_once does not resolve windows symlinks or junctions)\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #47757 (rename JPG to JPEG in phpinfo). (Pierre)\n- Fixed bug #47745 (FILTER_VALIDATE_INT doesn't allow minimum integer). (Dmitry)\n- Fixed bug #47714 (autoloading classes inside exception_handler leads to\n  crashes). (Dmitry)\n- Fixed bug #47671 (Cloning SplObjectStorage instances). (Etienne)\n- Fixed bug #47664 (get_class returns NULL instead of FALSE). (Dmitry)\n- Fixed bug #47662 (Support more than 127 subpatterns in preg_match). (Nuno)\n- Fixed bug #47596 (Bus error on parsing file). (Dmitry)\n- Fixed bug #47572 (Undefined constant causes segmentation fault). (Felipe)\n- Fixed bug #47560 (explode()'s limit parameter odd behaviour). (Matt)\n- Fixed bug #47549 (get_defined_constants() return array with broken array\n  categories). (Ilia)\n- Fixed bug #47535 (Compilation failure in ps_fetch_from_1_to_8_bytes()).\n  (Johannes)\n- Fixed bug #47534 (RecursiveDiteratoryIterator::getChildren ignoring\n  CURRENT_AS_PATHNAME). (Etienne)\n- Fixed bug #47443 (metaphone('scratch') returns wrong result). (Felipe)\n- Fixed bug #47438 (mysql_fetch_field ignores zero offset). (Johannes)\n- Fixed bug #47398 (PDO_Firebird doesn't implements quoter correctly). (Felipe)\n- Fixed bug #47390 (odbc_fetch_into - BC in php 5.3.0). (Felipe)\n- Fixed bug #47359 (Use the expected unofficial mimetype for bmp files). (Scott)\n- Fixed bug #47343 (gc_collect_cycles causes a segfault when called within a\n  destructor in one case). (Dmitry)\n- Fixed bug #47320 ($php_errormsg out of scope in functions). (Dmitry)\n- Fixed bug #47318 (UMR when trying to activate user config). (Pierre)\n- Fixed bug #47243 (OCI8: Crash at shutdown on Windows) (Chris Jones/Oracle\n  Corp.)\n- Fixed bug #47231 (offsetGet error using incorrect offset). (Etienne)\n- Fixed bug #47229 (preg_quote() should escape the '-' char). (Nuno)\n- Fixed bug #47165 (Possible memory corruption when passing return value by\n  reference). (Dmitry)\n- Fixed bug #47087 (Second parameter of mssql_fetch_array()). (Felipe)\n- Fixed bug #47085 (rename() returns true even if the file in PHAR does not\n  exist). (Greg)\n- Fixed bug #47050 (mysqli_poll() modifies improper variables). (Johannes)\n- Fixed bug #47045 (SplObjectStorage instances compared with ==). (Etienne)\n- Fixed bug #47038 (Memory leak in include). (Dmitry)\n- Fixed bug #47031 (Fix constants in DualIterator example). (Etienne)\n- Fixed bug #47021 (SoapClient stumbles over WSDL delivered with\n  \"Transfer-Encoding: chunked\"). (Dmitry)\n- Fixed bug #46994 (OCI8: CLOB size does not update when using CLOB IN OUT param\n  in stored procedure) (Chris Jones/Oracle Corp.)\n- Fixed bug #46979 (use with non-compound name *has* effect). (Dmitry)\n- Fixed bug #46957 (The tokenizer returns deprecated values). (Felipe)\n- Fixed bug #46944 (UTF-8 characters outside the BMP aren't encoded correctly).\n  (Scott)\n- Fixed bug #46897 (ob_flush() should fail to flush unerasable buffers).\n  (David C.)\n- Fixed bug #46849 (Cloning DOMDocument doesn't clone the properties). (Rob)\n- Fixed bug #46847 (phpinfo() is missing some settings). (Hannes)\n- Fixed bug #46844 (php scripts or included files with first line starting\n  with # have the 1st line missed from the output). (Ilia)\n- Fixed bug #46817 (tokenizer misses last single-line comment (PHP 5.3+, with\n  re2c lexer)). (Matt, Shire)\n- Fixed bug #46811 (ini_set() doesn't return false on failure). (Hannes)\n- Fixed bug #46763 (mb_stristr() wrong output when needle does not exist).\n  (Henrique M. Decaria)\n- Fixed bug #46755 (warning: use statement with non-compound name). (Dmitry)\n- Fixed bug #46746 (xmlrpc_decode_request outputs non-suppressable error when\n  given bad data). (Ilia)\n- Fixed bug #46738 (Segfault when mb_detect_encoding() fails). (Scott)\n- Fixed bug #46731 (Missing validation for the options parameter of the\n  imap_fetch_overview() function). (Ilia)\n- Fixed bug #46711 (cURL curl_setopt leaks memory in foreach loops). (magicaltux\n  [at] php [dot] net)\n- Fixed bug #46701 (Creating associative array with long values in the key fails\n  on 32bit linux). (Shire)\n- Fixed bug #46681 (mkdir() fails silently on PHP 5.3). (Hannes)\n- Fixed bug #46653 (can't extend mysqli). (Johannes)\n- Fixed bug #46646 (Restrict serialization on some internal classes like Closure\n  and SplFileInfo using exceptions). (Etienne)\n- Fixed bug #46623 (OCI8: phpinfo doesn't show compile time ORACLE_HOME with\n  phpize) (Chris Jones/Oracle Corp.)\n- Fixed bug #46578 (strip_tags() does not honor end-of-comment when it\n  encounters a single quote). (Felipe)\n- Fixed bug #46546 (Segmentation fault when using declare statement with\n  non-string value). (Felipe)\n- Fixed bug #46542 (Extending PDO class with a __call() function doesn't work as\n  expected). (Johannes)\n- Fixed bug #46421 (SplFileInfo not correctly handling /). (Etienne)\n- Fixed bug #46347 (parse_ini_file() doesn't support * in keys). (Nuno)\n- Fixed bug #46268 (DateTime::modify() does not reset relative time values).\n  (Derick)\n- Fixed bug #46241 (stacked error handlers, internal error handling in general).\n  (Etienne)\n- Fixed bug #46238 (Segmentation fault on static call with empty string method).\n  (Felipe)\n- Fixed bug #46192 (ArrayObject with objects as storage serialization).\n  (Etienne)\n- Fixed bug #46185 (importNode changes the namespace of an XML element). (Rob)\n- Fixed bug #46178 (memory leak in ext/phar). (Greg)\n- Fixed bug #46160 (SPL - Memory leak when exception is thrown in offsetSet).\n  (Felipe)\n- Fixed Bug #46147 (after stream seek, appending stream filter reads incorrect\n  data). (Greg)\n- Fixed bug #46127 (php_openssl_tcp_sockop_accept forgets to set context on\n  accepted stream) (Mark Karpeles, Pierre)\n- Fixed bug #46115 (Memory leak when calling a method using Reflection).\n  (Dmitry)\n- Fixed bug #46110 (XMLWriter - openmemory() and openuri() leak memory on\n  multiple calls). (Ilia)\n- Fixed bug #46108 (DateTime - Memory leak when unserializing). (Felipe)\n- Fixed bug #46106 (Memory leaks when using global statement). (Dmitry)\n- Fixed bug #46099 (Xsltprocessor::setProfiling - memory leak). (Felipe, Rob).\n- Fixed bug #46087 (DOMXPath - segfault on destruction of a cloned object).\n  (Ilia)\n- Fixed bug #46048 (SimpleXML top-level @attributes not part of iterator).\n  (David C.)\n- Fixed bug #46044 (Mysqli - wrong error message). (Johannes)\n- Fixed bug #46042 (memory leaks with reflection of mb_convert_encoding()).\n  (Ilia)\n- Fixed bug #46039 (ArrayObject iteration is slow). (Arnaud)\n- Fixed bug #46033 (Direct instantiation of SQLite3stmt and SQLite3result cause\n  a segfault.) (Scott)\n- Fixed bug #45991 (Ini files with the UTF-8 BOM are treated as invalid).\n  (Scott)\n- Fixed bug #45989 (json_decode() doesn't return NULL on certain invalid\n  strings). (magicaltux, Scott)\n- Fixed bug #45976 (Moved SXE from SPL to SimpleXML). (Etienne)\n- Fixed bug #45928 (large scripts from stdin are stripped at 16K border).\n  (Christian Schneider, Arnaud)\n- Fixed bug #45911 (Cannot disable ext/hash). (Arnaud)\n- Fixed bug #45907 (undefined reference to 'PHP_SHA512Init'). (Greg)\n- Fixed bug #45826 (custom ArrayObject serialization). (Etienne)\n- Fixed bug #45820 (Allow empty keys in ArrayObject). (Etienne)\n- Fixed bug #45791 (json_decode() doesn't convert 0e0 to a double). (Scott)\n- Fixed bug #45786 (FastCGI process exited unexpectedly). (Dmitry)\n- Fixed bug #45757 (FreeBSD4.11 build failure: failed include; stdint.h).\n  (Hannes)\n- Fixed bug #45743 (property_exists fails to find static protected member in\n  child class). (Felipe)\n- Fixed bug #45717 (Fileinfo/libmagic build fails, missing err.h and getopt.h).\n  (Derick)\n- Fixed bug #45706 (Unserialization of classes derived from ArrayIterator\n  fails). (Etienne, Dmitry)\n- Fixed bug #45696 (Not all DateTime methods allow method chaining). (Derick)\n- Fixed bug #45682 (Unable to var_dump(DateInterval)). (Derick)\n- Fixed bug #45447 (Filesystem time functions on Vista and server 2008).\n  (Pierre)\n- Fixed bug #45432 (PDO: persistent connection leak). (Felipe)\n- Fixed bug #45392 (ob_start()/ob_end_clean() and memory_limit). (Ilia)\n- Fixed bug #45384 (parse_ini_file will result in parse error with no trailing\n  newline). (Arnaud)\n- Fixed bug #45382 (timeout bug in stream_socket_enable_crypto). (vnegrier at\n  optilian dot com, Ilia)\n- Fixed bug #45044 (relative paths not resolved correctly). (Dmitry)\n- Fixed bug #44861 (scrollable cursor don't work with pgsql). (Matteo)\n- Fixed bug #44842 (parse_ini_file keys that start/end with underscore).\n  (Arnaud)\n- Fixed bug #44575 (parse_ini_file comment # line problems). (Arnaud)\n- Fixed bug #44409 (PDO::FETCH_SERIALIZE calls __construct()). (Matteo)\n- Fixed bug #44173 (PDO->query() parameter parsing/checking needs an update).\n  (Matteo)\n- Fixed bug #44154 (pdo->errorInfo() always have three elements in the returned\n  array). (David C.)\n- Fixed bug #44153 (pdo->errorCode() returns NULL when there are no errors).\n  (David C.)\n- Fixed bug #44135 (PDO MySQL does not support CLIENT_FOUND_ROWS). (Johannes,\n  chx1975 at gmail dot com)\n- Fixed bug #44100 (Inconsistent handling of static array declarations with\n  duplicate keys). (Dmitry)\n- Fixed bug #43831 ($this gets mangled when extending PDO with persistent\n  connection). (Felipe)\n- Fixed bug #43817 (opendir() fails on Windows directories with parent directory\n  unaccessible). (Dmitry)\n- Fixed bug #43069 (SoapClient causes 505 HTTP Version not supported error\n  message). (Dmitry)\n- Fixed bug #43008 (php://filter uris ignore url encoded filternames and can't\n  handle slashes). (Arnaud)\n- Fixed bug #42362 (HTTP status codes 204 and 304 should not be gzipped).\n  (Scott, Edward Z. Yang)\n- Fixed bug #41874 (separate STDOUT and STDERR in exec functions). (Kanwaljeet\n  Singla, Venkat Raman Don, Pierre)\n- Fixed bug #41534 (SoapClient over HTTPS fails to reestablish connection).\n  (Dmitry)\n- Fixed bug #38802 (max_redirects and ignore_errors). (patch by\n  datibbaw@php.net)\n- Fixed bug #35980 (touch() works on files but not on directories). (Pierre)\n\n17 Jun 2009, PHP 5.2.10\n- Updated timezone database to version 2009.9 (2009i) (Derick)\n\n- Added \"ignore_errors\" option to http fopen wrapper. (David Zulke, Sara)\n- Added new CURL options CURLOPT_REDIR_PROTOCOLS, CURLOPT_PROTOCOLS,\n  and CURLPROTO_* for redirect fixes in CURL 7.19.4. (Yoram Bar Haim, Stas)\n- Added support for Sun CC (FR #46595 and FR #46513). (David Soria Parra)\n\n- Changed default value of array_unique()'s optional sorting type parameter\n  back to SORT_STRING to fix backwards compatibility breakage introduced in\n  PHP 5.2.9. (Moriyoshi)\n\n- Fixed memory corruptions while reading properties of zip files. (Ilia)\n- Fixed memory leak in ob_get_clean/ob_get_flush. (Christian)\n- Fixed segfault on invalid session.save_path. (Hannes)\n- Fixed leaks in imap when a mail_criteria is used. (Pierre)\n- Fixed missing erealloc() in fix for Bug #40091 in spl_autoload_register. (Greg)\n\n- Fixed bug #48562 (Reference recursion causes segfault when used in\n  wddx_serialize_vars()). (Felipe)\n- Fixed bug #48557 (Numeric string keys in Apache Hashmaps are not cast to\n  integers). (David Zuelke)\n- Fixed bug #48518 (curl crashes when writing into invalid file handle). (Tony)\n- Fixed bug #48514 (cURL extension uses same resource name for simple and\n  multi APIs). (Felipe)\n- Fixed bug #48469 (ldap_get_entries() leaks memory on empty search\n  results). (Patrick)\n- Fixed bug #48456 (CPPFLAGS not restored properly in phpize.m4). (Jani,\n  spisek at kerio dot com)\n- Fixed bug #48448 (Compile failure under IRIX 6.5.30 building cast.c).\n  (Kalle)\n- Fixed bug #48441 (ldap_search() sizelimit, timelimit and deref options\n  persist). (Patrick)\n- Fixed bug #48434 (Improve memory_get_usage() accuracy). (Arnaud)\n- Fixed bug #48416 (Force a cache limit in ereg() to stop excessive memory\n  usage). (Scott)\n- Fixed bug #48409 (Crash when exception is thrown while passing function\n  arguments). (Arnaud)\n- Fixed bug #48378 (exif_read_data() segfaults on certain corrupted .jpeg\n  files). (Pierre)\n- Fixed bug #48359 (Script hangs on snmprealwalk if OID is not increasing).\n  (Ilia, simonov at gmail dot com)\n- Fixed bug #48336 (ReflectionProperty::getDeclaringClass() does not work\n  with redeclared property).\n  (patch by Markus dot Lidel at shadowconnect dot com)\n- Fixed bug #48326 (constant MSG_DONTWAIT not defined). (Arnaud)\n- Fixed bug #48313 (fgetcsv() does not return null for empty rows). (Ilia)\n- Fixed bug #48309 (stream_copy_to_stream() and fpasstru() do not update\n  stream position of plain files). (Arnaud)\n- Fixed bug #48307 (stream_copy_to_stream() copies 0 bytes when $source is a\n  socket). (Arnaud)\n- Fixed bug #48273 (snmp*_real_walk() returns SNMP errors as values).\n  (Ilia, lytboris at gmail dot com)\n- Fixed bug #48256 (Crash due to double-linking of history.o).\n  (tstarling at wikimedia dot org)\n- Fixed bug #48248 (SIGSEGV when access to private property via &__get).\n  (Felipe)\n- Fixed bug #48247 (Crash on errors during startup). (Stas)\n- Fixed bug #48240 (DBA Segmentation fault dba_nextkey). (Felipe)\n- Fixed bug #48224 (Incorrect shuffle in array_rand). (Etienne)\n- Fixed bug #48221 (memory leak when passing invalid xslt parameter).\n  (Felipe)\n- Fixed bug #48207 (CURLOPT_(FILE|WRITEHEADER options do not error out when\n  working with a non-writable stream). (Ilia)\n- Fixed bug #48206 (Iterating over an invalid data structure with\n  RecursiveIteratorIterator leads to a segfault). (Scott)\n- Fixed bug #48204 (xmlwriter_open_uri() does not emit warnings on invalid\n  paths). (Ilia)\n- Fixed bug #48203 (Crash when CURLOPT_STDERR is set to regular file). (Jani)\n- Fixed bug #48202 (Out of Memory error message when passing invalid file\n  path) (Pierre)\n- Fixed bug #48156 (Added support for lcov v1.7). (Ilia)\n- Fixed bug #48132 (configure check for curl ssl support fails with\n  --disable-rpath). (Jani)\n- Fixed bug #48131 (Don't try to bind ipv4 addresses to ipv6 ips via bindto).\n  (Ilia)\n- Fixed bug #48070 (PDO_OCI: Segfault when using persistent connection).\n  (Pierre, Matteo, jarismar dot php at gmail dot com)\n- Fixed bug #48058 (Year formatter goes wrong with out-of-int range). (Derick)\n- Fixed bug #48038 (odbc_execute changes variables used to form params array).\n  (Felipe)\n- Fixed bug #47997 (stream_copy_to_stream returns 1 on empty streams). (Arnaud)\n- Fixed bug #47991 (SSL streams fail if error stack contains items). (Mikko)\n- Fixed bug #47981 (error handler not called regardless). (Hannes)\n- Fixed bug #47969 (ezmlm_hash() returns different values depend on OS). (Ilia)\n- Fixed bug #47946 (ImageConvolution overwrites background). (Ilia)\n- Fixed bug #47940 (memory leaks in imap_body). (Pierre, Jake Levitt)\n- Fixed bug #47937 (system() calls sapi_flush() regardless of output\n  buffering). (Ilia)\n- Fixed bug #47903 (\"@\" operator does not work with string offsets). (Felipe)\n- Fixed bug #47893 (CLI aborts on non blocking stdout). (Arnaud)\n- Fixed bug #47849 (Non-deep import loses the namespace). (Rob)\n- Fixed bug #47845 (PDO_Firebird omits first row from query). (Lars W)\n- Fixed bug #47836 (array operator [] inconsistency when the array has\n  PHP_INT_MAX index value). (Matt)\n- Fixed bug #47831 (Compile warning for strnlen() in main/spprintf.c).\n  (Ilia, rainer dot jung at kippdata dot de)\n- Fixed bug #47828 (openssl_x509_parse() segfaults when a UTF-8 conversion\n  fails). (Scott, Kees Cook, Pierre)\n- Fixed bug #47818 (Segfault due to bound callback param). (Felipe)\n- Fixed bug #47801 (__call() accessed via parent:: operator is provided\n  incorrect method name). (Felipe)\n- Fixed bug #47769 (Strange extends PDO). (Felipe)\n- Fixed bug #47745 (FILTER_VALIDATE_INT doesn't allow minimum integer).\n  (Dmitry)\n- Fixed bug #47721 (Alignment issues in mbstring and sysvshm extension).\n  (crrodriguez at opensuse dot org, Ilia)\n- Fixed bug #47704 (PHP crashes on some \"bad\" operations with string\n  offsets). (Dmitry)\n- Fixed bug #47695 (build error when xmlrpc and iconv are compiled against\n  different iconv versions). (Scott)\n- Fixed bug #47667 (ZipArchive::OVERWRITE seems to have no effect).\n  (Mikko, Pierre)\n- Fixed bug #47644 (Valid integers are truncated with json_decode()). (Scott)\n- Fixed bug #47639 (pg_copy_from() WARNING: nonstandard use of \\\\ in a\n  string literal). (Ilia)\n- Fixed bug #47616 (curl keeps crashing). (Felipe)\n- Fixed bug #47598 (FILTER_VALIDATE_EMAIL is locale aware). (Ilia)\n- Fixed bug #47566 (pcntl_wexitstatus() returns signed status).\n  (patch by james at jamesreno dot com)\n- Fixed bug #47564 (unpacking unsigned long 32bit bit endian returns wrong\n  result). (Ilia)\n- Fixed bug #47487 (performance degraded when reading large chunks after\n  fix of bug #44607). (Arnaud)\n- Fixed bug #47468 (enable cli|cgi-only extensions for embed sapi). (Jani)\n- Fixed bug #47435 (FILTER_FLAG_NO_PRIV_RANGE does not work with ipv6\n  addresses in the filter extension). (Ilia)\n- Fixed bug #47430 (Errors after writing to nodeValue parameter of an absent\n  previousSibling). (Rob)\n- Fixed bug #47365 (ip2long() may allow some invalid values on certain 64bit\n   systems). (Ilia)\n- Fixed bug #47254 (Wrong Reflection for extends class). (Felipe)\n- Fixed bug #47042 (cgi sapi is incorrectly removing SCRIPT_FILENAME).\n  (Sriram Natarajan, David Soria Parra)\n- Fixed bug #46882 (Serialize / Unserialize misbehaviour under OS with\n  different bit numbers). (Matt)\n- Fixed bug #46812 (get_class_vars() does not include visible private variable\n  looking at subclass). (Arnaud)\n- Fixed bug #46386 (Digest authentication with SOAP module fails against MSSQL\n  SOAP services). (Ilia, lordelph at gmail dot com)\n- Fixed bug #46109 (Memory leak when mysqli::init() is called multiple times).\n  (Andrey)\n- Fixed bug #45997 (safe_mode bypass with exec/system/passthru (windows only)).\n  (Pierre)\n- Fixed bug #45877 (Array key '2147483647' left as string). (Matt)\n- Fixed bug #45822 (Near infinite-loops while parsing huge relative offsets).\n  (Derick, Mike Sullivan)\n- Fixed bug #45799 (imagepng() crashes on empty image).\n  (Martin McNickle, Takeshi Abe)\n- Fixed bug #45622 (isset($arrayObject->p) misbehaves with\n  ArrayObject::ARRAY_AS_PROPS set). (robin_fernandes at uk dot ibm dot com, Arnaud)\n- Fixed bug #45614 (ArrayIterator::current(), ::key() can show 1st private prop\n  of wrapped object). (robin_fernandes at uk dot ibm dot com, Arnaud)\n- Fixed bug #45540 (stream_context_create creates bad http request). (Arnaud)\n- Fixed bug #45202 (zlib.output_compression can not be set with ini_set()).\n  (Jani)\n- Fixed bug #45191 (error_log ignores date.timezone php.ini val when setting\n  logging timestamps). (Derick)\n- Fixed bug #45092 (header HTTP context option not being used when compiled\n  using --with-curlwrappers). (Jani)\n- Fixed bug #44996 (xmlrpc_decode() ignores time zone on iso8601.datetime).\n  (Ilia, kawai at apache dot org)\n- Fixed bug #44827 (define() is missing error checks for class constants).\n  (Ilia)\n- Fixed bug #44214 (Crash using preg_replace_callback() and global variables).\n  (Nuno, Scott)\n- Fixed bug #43073 (TrueType bounding box is wrong for angle<>0).\n  (Martin McNickle)\n- Fixed bug #42663 (gzinflate() try to allocate all memory with truncated\n  data). (Arnaud)\n- Fixed bug #42414 (some odbc_*() functions incompatible with Oracle ODBC\n  driver). (jhml at gmx dot net)\n- Fixed bug #42362 (HTTP status codes 204 and 304 should not be gzipped).\n  (Scott, Edward Z. Yang)\n- Fixed bug #42143 (The constant NAN is reported as 0 on Windows)\n  (Kanwaljeet Singla, Venkat Raman Don)\n- Fixed bug #38805 (PDO truncates text from SQL Server text data type field).\n  (Steph)\n\n26 Feb 2009, PHP 5.2.9\n- Changed __call() to be invoked on private/protected method access, similar to\n  properties and __get(). (Andrei)\n\n- Added optional sorting type flag parameter to array_unique(). Default is\n  SORT_REGULAR. (Andrei)\n\n- Fixed a crash on extract in zip when files or directories entry names contain\n  a relative path. (Pierre)\n- Fixed error conditions handling in stream_filter_append(). (Arnaud)\n- Fixed zip filename property read. (Pierre)\n- Fixed explode() behavior with empty string to respect negative limit. (Shire)\n- Fixed security issue in imagerotate(), background colour isn't validated\n  correctly with a non truecolour image. Reported by Hamid Ebadi,\n  APA Laboratory (Fixes CVE-2008-5498). (Scott)\n- Fixed a segfault when malformed string is passed to json_decode(). (Scott)\n- Fixed bug in xml_error_string() which resulted in messages being\n  off by one. (Scott)\n\n- Fixed bug #47422 (modulus operator returns incorrect results on 64 bit\n  linux). (Matt)\n- Fixed bug #47399 (mb_check_encoding() returns true for some illegal SJIS\n  characters). (for-bugs at hnw dot jp, Moriyoshi)\n- Fixed bug #47353 (crash when creating a lot of objects in object\n  destructor). (Tony)\n- Fixed bug #47322 (sscanf %d doesn't work). (Felipe)\n- Fixed bug #47282 (FILTER_VALIDATE_EMAIL is marking valid email addresses\n  as invalid). (Ilia)\n- Fixed bug #47220 (segfault in dom_document_parser in recovery mode). (Rob)\n- Fixed bug #47217 (content-type is not set properly for file uploads). (Ilia)\n- Fixed bug #47174 (base64_decode() interprets pad char in mid string as\n  terminator). (Ilia)\n- Fixed bug #47165 (Possible memory corruption when passing return value by\n  reference). (Dmitry)\n- Fixed bug #47152 (gzseek/fseek using SEEK_END produces strange results).\n  (Felipe)\n- Fixed bug #47131 (SOAP Extension ignores \"user_agent\" ini setting). (Ilia)\n- Fixed bug #47109 (Memory leak on $a->{\"a\".\"b\"} when $a is not an object).\n  (Etienne, Dmitry)\n- Fixed bug #47104 (Linking shared extensions fails with icc). (Jani)\n- Fixed bug #47049 (SoapClient::__soapCall causes a segmentation fault).\n  (Dmitry)\n- Fixed bug #47048 (Segfault with new pg_meta_data). (Felipe)\n- Fixed bug #47042 (PHP cgi sapi is removing SCRIPT_FILENAME for non\n  apache). (Sriram Natarajan)\n- Fixed bug #47037 (No error when using fopen with empty string). (Cristian\n  Rodriguez R., Felipe)\n- Fixed bug #47035 (dns_get_record returns a garbage byte at the end of a\n  TXT record). (Felipe)\n- Fixed bug #47027 (var_export doesn't show numeric indices on ArrayObject).\n  (Derick)\n- Fixed bug #46985 (OVERWRITE and binary mode does not work, regression\n  introduced in 5.2.8). (Pierre)\n- Fixed bug #46973 (IPv6 address filter rejects valid address). (Felipe)\n- Fixed bug #46964 (Fixed pdo_mysql build with older version of MySQL). (Ilia)\n- Fixed bug #46959 (Unable to disable PCRE). (Scott)\n- Fixed bug #46918 (imap_rfc822_parse_adrlist host part not filled in\n  correctly). (Felipe)\n- Fixed bug #46889 (Memory leak in strtotime()). (Derick)\n- Fixed bug #46887 (Invalid calls to php_error_docref()). (oeriksson at\n  mandriva dot com, Ilia)\n- Fixed bug #46873 (extract($foo) crashes if $foo['foo'] exists). (Arnaud)\n- Fixed bug #46843 (CP936 euro symbol is not converted properly). (ty_c at\n  cybozuy dot co dot jp, Moriyoshi)\n- Fixed bug #46798 (Crash in mssql extension when retrieving a NULL value\n  inside a binary or image column type). (Ilia)\n- Fixed bug #46782 (fastcgi.c parse error). (Matt)\n- Fixed bug #46760 (SoapClient doRequest fails when proxy is used). (Felipe)\n- Fixed bug #46748 (Segfault when an SSL error has more than one error).\n  (Scott)\n- Fixed bug #46739 (array returned by curl_getinfo should contain\n  content_type key). (Mikko)\n- Fixed bug #46699 (xml_parse crash when parser is namespace aware). (Rob)\n- Fixed bug #46419 (Elements of associative arrays with NULL value are\n  lost). (Dmitry)\n- Fixed bug #46282 (Corrupt DBF When Using DATE). (arne at bukkie dot nl)\n- Fixed bug #46026 (bz2.decompress/zlib.inflate filter tries to decompress\n  after end of stream). (Greg)\n- Fixed bug #46005 (User not consistently logged under Apache2). (admorten\n  at umich dot edu, Stas)\n- Fixed bug #45996 (libxml2 2.7 causes breakage with character data in\n  xml_parse()). (Rob)\n- Fixed bug #45940 (MySQLI OO does not populate connect_error property on\n  failed connect). (Johannes)\n- Fixed bug #45923 (mb_st[r]ripos() offset not handled correctly). (Moriyoshi)\n- Fixed bug #45327 (memory leak if offsetGet throws exception). (Greg)\n- Fixed bug #45239 (Encoding detector hangs with mbstring.strict_detection\n  enabled). (Moriyoshi)\n- Fixed bug #45161 (Reusing a curl handle leaks memory). (Mark Karpeles, Jani)\n- Fixed bug #44336 (Improve pcre UTF-8 string matching performance). (frode\n  at coretrek dot com, Nuno)\n- Fixed bug #43841 (mb_strrpos() offset is byte count for negative values).\n  (Moriyoshi)\n- Fixed bug #37209 (mssql_execute with non fatal errors). (Kalle)\n- Fixed bug #35975 (Session cookie expires date format isn't the most\n  compatible. Now matches that of setcookie()). (Scott)\n\n\n08 Dec 2008, PHP 5.2.8\n- Reverted bug fix #42718 that broke magic_quotes_gpc (Scott)\n\n04 Dec 2008, PHP 5.2.7\n- Upgraded PCRE to version 7.8 (Fixes CVE-2008-2371). (Ilia)\n- Updated timezone database to version 2008.9. (Derick)\n- Upgraded bundled libzip to 0.9.0. (Pierre)\n\n- Added logging option for error_log to send directly to SAPI. (Stas)\n- Added PHP_MAJOR_VERSION, PHP_MINOR_VERSION, PHP_RELEASE_VERSION,\n  PHP_EXTRA_VERSION, PHP_VERSION_ID, PHP_ZTS and PHP_DEBUG constants. (Pierre)\n- Added \"PHP_INI_SCAN_DIR\" environment variable which can be used to\n  either disable or change the compile time ini scan directory (FR #45114).\n  (Jani)\n\n- Fixed missing initialization of BG(page_uid) and BG(page_gid),\n  reported by Maksymilian Arciemowicz. (Stas)\n- Fixed memory leak inside sqlite_create_aggregate(). (Felipe)\n- Fixed memory leak inside PDO sqlite's sqliteCreateAggregate() method.\n  (Felipe)\n- Fixed a crash inside gd with invalid fonts (Fixes CVE-2008-3658). (Pierre)\n- Fixed a possible overflow inside memnstr (Fixes CVE-2008-3659).\n  (LaurentGaffie)\n- Fixed incorrect php_value order for Apache configuration, reported by\n  Maksymilian Arciemowicz. (Stas)\n- Fixed memory leak inside readline_callback_handler_remove() function.\n  (Felipe)\n- Fixed sybase_fetch_*() to continue reading after CS_ROW_FAIL status (Timm)\n- Fixed a bug inside dba_replace() that could cause file truncation\n  withinvalid keys. (Ilia)\n- Fixed memory leak inside readline_callback_handler_install() function.(Ilia)\n- Fixed memory leak inside readline_completion_function() function. (Felipe)\n- Fixed stream_get_contents() when using $maxlength and socket is notclosed.\n  indeyets [at] php [dot] net on #46049. (Arnaud)\n- Fixed stream_get_line() to behave as documented on non-blocking streams.\n  (Arnaud)\n- Fixed endless loop in PDOStatement::debugDumpParams().\n  (jonah.harris at gmail dot com)\n- Fixed ability to use \"internal\" heaps in extensions. (Arnaud, Dmitry)\n- Fixed weekdays adding/subtracting algorithm. (Derick)\n- Fixed some ambiguities in the date parser. (Derick)\n- Fixed a bug with the YYYY-MM format not resetting the day correctly.\n  (Derick)\n- Fixed a bug in the DateTime->modify() methods, it would not use the advanced\n  relative time strings. (Derick)\n- Fixed extraction of zip files or directories when the entry name is a\n  relative path. (Pierre)\n- Fixed read or write errors for large zip archives. (Pierre)\n- Fixed security issues detailed in CVE-2008-2665 and CVE-2008-2666.\n  (Christian Hoffmann)\n- Fixed simplexml asXML() not to lose encoding when dumping entire\n  document to file. (Ilia)\n- Fixed a crash inside PDO when trying instantiate PDORow manually.\n  (Felipe)\n- Fixed build failure of ext/mysqli with libmysql 6.0 - missing\n  rplfunctions. (Andrey)\n- Fixed a regression when using strip_tags() and < is within an\n  attribute.(Scott)\n- Fixed a crash on invalid method in ReflectionParameter constructor.\n  (Christian Seiler)\n- Reverted fix for bug #44197 due to behaviour change in minor version.\n  (Felipe)\n\n- Fixed bug #46732 (mktime.year description is wrong). (Derick)\n- Fixed bug #46696 (cURL fails in upload files with specified content-type).\n  (Ilia)\n- Fixed bug #46673 (stream_lock call with wrong parameter). (Arnaud)\n- Fixed bug #46649 (Setting array element with that same array produces\n  inconsistent results). (Arnaud)\n- Fixed bug #46626 (mb_convert_case does not handle apostrophe correctly).\n  (Ilia)\n- Fixed bug #46543 (ibase_trans() memory leaks when using wrong parameters).\n  (Felipe)\n- Fixed bug #46521 (Curl ZTS OpenSSL, error in config.m4 fragment).\n  (jd at cpanel dot net)\n- Fixed bug #46496 (wddx_serialize treats input as ISO-8859-1). (Mark Karpeles)\n- Fixed bug #46427 (SoapClient() stumbles over its \"stream_context\" parameter).\n  (Dmitry, Herman Radtke)\n- Fixed bug #46426 (offset parameter of stream_get_contents() does not\n  workfor \"0\"). (Felipe)\n- Fixed bug #46406 (Unregistering nodeclass throws E_FATAL). (Rob)\n- Fixed bug #46389 (NetWare needs small patch for _timezone).\n  (patch by guenter@php.net)\n- Fixed bug #46388 (stream_notification_callback inside of object destroys\n  object variables). (Felipe)\n- Fixed bug #46381 (wrong $this passed to internal methods causes segfault).\n  (Tony)\n- Fixed bug #46379 (Infinite loop when parsing '#' in one line file). (Arnaud)\n- Fixed bug #46366 (bad cwd with / as pathinfo). (Dmitry)\n- Fixed bug #46360 (TCP_NODELAY constant for socket_{get,set}_option).\n  (bugs at trick dot vanstaveren dot us)\n- Fixed bug #46343 (IPv6 address filter accepts invalid address). (Ilia)\n- Fixed bug #46335 (DOMText::splitText doesn't handle multibyte characters).\n  (Rob)\n- Fixed bug #46323 (compilation of simplexml for NetWare breaks).\n  (Patch by guenter [at] php [dot] net)\n- Fixed bug #46319 (PHP sets default Content-Type header for HTTP 304\n  response code, in cgi sapi). (Ilia)\n- Fixed bug #46313 (Magic quotes broke $_FILES). (Arnaud)\n- Fixed bug #46308 (Invalid write when changing property from inside getter).\n  (Dmitry)\n- Fixed bug #46292 (PDO::setFetchMode() shouldn't requires the 2nd arg when\n  using FETCH_CLASSTYPE). (Felipe)\n- Fixed bug #46274, #46249 (pdo_pgsql always fill in NULL for empty BLOB and\n  segfaults when returned by SELECT). (Felipe)\n- Fixed bug #46271 (local_cert option is not resolved to full path). (Ilia)\n- Fixed bug #46247 (ibase_set_event_handler() is allowing to pass callback\n  without event). (Felipe)\n- Fixed bug #46246 (difference between call_user_func(array($this, $method))\n  and $this->$method()). (Dmitry)\n- Fixed bug #46222 (ArrayObject EG(uninitialized_var_ptr) overwrite).\n  (Etienne)\n- Fixed bug #46215 (json_encode mutates its parameter and has some\n  class-specific state). (Felipe)\n- Fixed bug #46206 (pg_query_params/pg_execute convert passed values to\n  strings). (Ilia)\n- Fixed bug #46191 (BC break: DOMDocument saveXML() doesn't accept null).\n  (Rob)\n- Fixed bug #46164 (stream_filter_remove() closes the stream). (Arnaud)\n- Fixed bug #46157 (PDOStatement::fetchObject prototype error). (Felipe)\n- Fixed bug #46147 (after stream seek, appending stream filter reads\n  incorrect data). (Greg)\n- Fixed bug #46139 (PDOStatement->setFetchMode() forgets FETCH_PROPS_LATE).\n  (chsc at peytz dot dk, Felipe)\n- Fixed bug #46127 (php_openssl_tcp_sockop_accept forgets to set context\n  on accepted stream) (Mark Karpeles, Pierre)\n- Fixed bug #46110 (XMLWriter - openmemory() and openuri() leak memory on\n  multiple calls). (Ilia)\n- Fixed bug #46088 (RegexIterator::accept - segfault). (Felipe)\n- Fixed bug #46082 (stream_set_blocking() can cause a crash in some\n  circumstances). (Felipe)\n- Fixed bug #46064 (Exception when creating ReflectionProperty object\n  on dynamicly created property). (Felipe)\n- Fixed bug #46059 (Compile failure under IRIX 6.5.30 building posix.c).\n  (Arnaud)\n- Fixed bug #46053 (SplFileObject::seek - Endless loop). (Arnaud)\n- Fixed bug #46051 (SplFileInfo::openFile - memory overlap). (Arnaud)\n- Fixed bug #46047 (SimpleXML converts empty nodes into object with\n  nested array). (Rob)\n- Fixed bug #46031 (Segfault in AppendIterator::next). (Arnaud)\n- Fixed bug #46029 (Segfault in DOMText when using with Reflection). (Rob)\n- Fixed bug #46026 (bzip2.decompress/zlib.inflate filter tries to decompress\n  after end of stream). (Keisial at gmail dot com, Greg)\n- Fixed bug #46024 (stream_select() doesn't return the correct number).\n  (Arnaud)\n- Fixed bug #46010 (warnings incorrectly generated for iv in ecb mode).\n  (Felipe)\n- Fixed bug #46003 (isset on nonexisting node return unexpected results). (Rob)\n- Fixed bug #45956 (parse_ini_file() does not return false with syntax errors\n  in parsed file). (Jani)\n- Fixed bug #45901 (wddx_serialize_value crash with SimpleXMLElement object).\n  (Rob)\n- Fixed bug #45862 (get_class_vars is inconsistent with 'protected' and\n  'private' variables). (ilewis at uk dot ibm dot com, Felipe)\n- Fixed bug #45860 (header() function fails to correctly replace all Status\n  lines). (Dmitry)\n- Fixed bug #45805 (Crash on throwing exception from error handler). (Dmitry)\n- Fixed bug #45765 (ReflectionObject with default parameters of self::xxx cause\n  an error). (Felipe)\n- Fixed bug #45751 (Using auto_prepend_file crashes (out of scope stack address\n  use)). (basant dot kukreja at sun dot com)\n- Fixed bug #45722 (mb_check_encoding() crashes). (Moriyoshi)\n- Fixed bug #45705 (rfc822_parse_adrlist() modifies passed address parameter).\n  (Jani)\n- Fixed bug #45691 (Some per-dir or runtime settings may leak into other\n  requests). (Moriyoshi)\n- Fixed bug #45581 (htmlspecialchars() double encoding &#x hex items). (Arnaud)\n- Fixed bug #45580 (levenshtein() crashes with invalid argument). (Ilia)\n- Fixed bug #45575 (Segfault with invalid non-string as event handler callback).\n  (Christian Seiler)\n- Fixed bug #45568 (ISAPI doesn't properly clear auth_digest in header).\n  (Patch by: navara at emclient dot com)\n- Fixed bug #45556 (Return value from callback isn't freed). (Felipe)\n- Fixed bug #45555 (Segfault with invalid non-string as\n  register_introspection_callback). (Christian Seiler)\n- Fixed bug #45553 (Using XPath to return values for attributes with a\n  namespace does not work). (Rob)\n- Fixed bug #45529 (new DateTimeZone() and date_create()->getTimezone() behave\n  different). (Derick)\n- Fixed bug #45522 (FCGI_GET_VALUES request does not return supplied values).\n  (Arnaud)\n- Fixed bug #45486 (mb_send_mail(); header 'Content-Type: text/plain; charset='\n   parsing incorrect). (Felipe)\n- Fixed bug #45485 (strip_tags and <?XML tag). (Felipe)\n- Fixed bug #45460 (imap patch for fromlength fix in imap_headerinfo doesn't\n  accept lengths of 1024). (Felipe, andrew at lifescale dot com)\n- Fixed bug #45449 (filesize() regression using ftp wrapper).\n  (crrodriguez at suse dot de)\n- Fixed bug #45423 (fastcgi parent process doesn't invoke php_module_shutdown\n  before shutdown) (basant dot kukreja at sun dot com)\n- Fixed bug #45406 (session.serialize_handler declared by shared extension fails).\n  (Kalle, oleg dot grenrus at dynamoid dot com)\n- Fixed bug #45405 (snmp extension memory leak).\n  (Federico Cuello, Rodrigo Campos)\n- Fixed bug #45382 (timeout bug in stream_socket_enable_crypto). (Ilia)\n- Fixed bug #45373 (php crash on query with errors in params). (Felipe)\n- Fixed bug #45352 (Segmentation fault because of tick function on second\n  request). (Dmitry)\n- Fixed bug #45312 (Segmentation fault on second request for array functions).\n  (Dmitry)\n- Fixed bug #45303 (Opening php:// wrapper in append mode results in a warning).\n  (Arnaud)\n- Fixed bug #45251 (double free or corruption with setAttributeNode()). (Rob)\n- Fixed bug #45226 and #18916 (xmlrpc_set_type() segfaults and wrong behavior\n  with valid ISO8601 date string). (Jeff Lawsons)\n- Fixed bug #45220 (curl_read callback returns -1 when needs to return\n  size_t (unsigned)). (Felipe)\n- Fixed bug #45181 (chdir() should clear relative entries in stat cache).\n  (Arnaud)\n- Fixed bug #45178 (memory corruption on assignment result of \"new\" by\n  reference). (Dmitry)\n- Fixed bug #45166 (substr() overflow changes). (Felipe)\n- Fixed bug #45151 (Crash with URI/file..php (filename contains 2 dots)).\n  (Fixes CVE-2008-3660) (Dmitry)\n- Fixed bug #45139 (ReflectionProperty returns incorrect declaring class).\n  (Felipe)\n- Fixed bug #45124 ($_FILES['upload']['size'] sometimes return zero and some\n  times the filesize). (Arnaud)\n- Fixed bug #45028 (CRC32 output endianness is different between crc32() and\n  hash()). (Tony)\n- Fixed bug #45004 (pg_insert() does not accept 4 digit timezone format).\n  (Ilia)\n- Fixed bug #44991 (Compile Failure With freetds0.82).\n  (jklowden at freetds dot org, matthias at dsx dot at)\n- Fixed bug #44938 (gettext functions crash with overly long domain).\n  (Christian Schneider, Ilia)\n- Fixed bug #44925 (preg_grep() modifies input array). (Nuno)\n- Fixed bug #44900 (OpenSSL extension fails to link with OpenSSL 0.9.6).\n  (jd at cpanel dot net, Pierre)\n- Fixed bug #44891 Memory leak using registerPHPFunctions and XSLT Variable\n  as function parameter. (Rob)\n- Fixed bug #44882 (SOAP extension object decoding bug). (Dmitry)\n- Fixed bug #44830 (Very minor issue with backslash in heredoc). (Matt)\n- Fixed bug #44818 (php://memory writeable when opened read only). (Arnaud)\n- Fixed bug #44811 (Improve error message when creating a new SoapClient\n  that contains invalid data). (Markus Fischer, David C)\n- Fixed bug #44798 (Memory leak assigning value to attribute). (Ilia)\n- Fixed bug #44716 (Progress notifications incorrect). (Hannes)\n- Fixed bug #44712 (stream_context_set_params segfaults on invalid arguments).\n  (Hannes)\n- Fixed bug #44617 (wrong HTML entity output when substitute_character=entity).\n  (Moriyoshi)\n- Fixed bug #44607 (stream_get_line unable to correctly identify the \"ending\"\n  in the stream content). (Arnaud)\n- Fixed bug #44425 (Extending PDO/MySQL class with a __call() function doesn't\n  work). (Johannes)\n- Fixed bug #44327 (PDORow::queryString property & numeric offsets / Crash).\n  (Felipe)\n- Fixed bug #44251, #41125 (PDO + quote() + prepare() can result in segfault).\n  (tsteiner at nerdclub dot net)\n- Fixed bug #44246 (closedir() accepts a file resource opened by fopen()).\n  (Dmitry, Tony)\n- Fixed bug #44182 (extract($a, EXTR_REFS) can fail to split copy-on-write\n  references). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #44181 (extract($a, EXTR_OVERWRITE|EXTR_REFS) can fail to create\n  references to $a). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #44127 (UNIX abstract namespace socket connect does not work).\n  (Jani)\n- Fixed bug #43993 (mb_substr_count() behaves differently to substr_count()\n  with overlapping needles). (Moriyoshi)\n- Fixed Bug #43958 (class name added into the error message). (Dmitry)\n- Fixed bug #43941 (json_encode silently cuts non-UTF8 strings). (Stas)\n- Fixed bug #43925 (Incorrect argument counter in prepared statements with\n  pgsql). (Felipe)\n- Fixed bug #43731 (socket_getpeername: cannot use on stdin with inetd).\n  (Arnaud)\n- Fixed bug #43723 (SOAP not sent properly from client for <choice>). (Dmitry)\n- Fixed bug #43668 (Added odbc.default_cursortype to control the ODBCcursor\n  model). (Patrick)\n- Fixed bug #43666 (Fixed code to use ODBC 3.52 datatypes for 64bit\n  systems). (Patrick)\n- Fixed bug #43540 (rfc1867 handler newlength problem). (Arnaud)\n- Fixed bug #43452 (strings containing a weekday, or a number plus weekday\n  behaved incorrect of the current day-of-week was the same as the one in the\n  phrase). (Derick)\n- Fixed bug #43353 (wrong detection of 'data' wrapper causes notice).\n  (gk at gknw dot de, Arnaud)\n- Fixed bug #43053 (Regression: some numbers shown in scientific notation).\n  (int-e at gmx dot de)\n- Fixed bug #43045 (SOAP encoding violation on \"INF\" for type double/float).\n  (Dmitry)\n- Fixed bug #42862 (IMAP toolkit crash: rfc822.c legacy routine buffer\n  overflow). (Fixes CVE-2008-2829) (Dmitry)\n- Fixed bug #42855 (dns_get_record() doesn't return all text from TXT record).\n  (a dot u dot savchuk at gmail dot com)\n- Fixed bug #42737 (preg_split('//u') triggers a E_NOTICE with newlines).\n  (Nuno)\n- Fixed bug #42718 (FILTER_UNSAFE_RAW not applied when configured as default\n  filter). (Arnaud)\n- Fixed bug #42604 (\"make test\" fails with --with-config-file-scan-dir=path).\n  (Jani)\n- Fixed bug #42473 (ob_start php://output and headers). (Arnaud)\n- Fixed bug #42318 (problem with nm on AIX, not finding object files).\n  (Dmitry)\n- Fixed bug #42294 (Unified solution for round() based on C99 round). (Ilia)\n- Fixed bug #42078 (pg_meta_data mix tables metadata from different schemas).\n  (Felipe)\n- Fixed bug #41348 (OCI8: allow compilation with Oracle 8.1). (Chris Jones)\n- Fixed bug #41033 (enable signing with DSA keys.\n  (gordyf at google dot com, Pierre)\n- Fixed bug #37100 (data is returned truncated with BINARY CURSOR). (Tony)\n- Fixed bug #30312 (crash in sybase_unbuffered_query() function). (Timm)\n- Fixed bug #24679 (pg_* functions doesn't work using schema). (Felipe)\n- Fixed bug #14962 (PECL) (::extractTo 2nd argument is not really optional)\n  (Mark van Der Velden)\n- Fixed bug #14032 (Mail() always returns false but mail is sent). (Mikko)\n\n\n01 May 2008, PHP 5.2.6\n- Fixed two possible crashes inside posix extension (Tony)\n- Fixed incorrect heredoc handling when label is used within the block.\n  (Matt)\n- Fixed possible stack buffer overflow in FastCGI SAPI. (Andrei Nigmatulin)\n- Fixed sending of uninitialized paddings which may contain some information. (Andrei Nigmatulin)\n- Fixed a bug in formatting timestamps when DST is active in the default timezone (Derick)\n- Properly address incomplete multibyte chars inside escapeshellcmd() (Ilia, Stefan Esser)\n- Fix integer overflow in printf(). (Stas, Maksymilian Aciemowicz)\n- Fixed security issue detailed in CVE-2008-0599. (Rasmus)\n- Fixed potential memleak in stream filter parameter for zlib filter. (Greg)\n- Added Reflection API metadata for the methods of the DOM classes. (Sebastian)\n- Fixed weird behavior in CGI parameter parsing. (Dmitry, Hannes Magnusson)\n- Fixed a safe_mode bypass in cURL identified by Maksymilian Arciemowicz.\n  (Ilia)\n- Fixed a bug with PDO::FETCH_COLUMN|PDO::FETCH_GROUP mode when a column # by\n  which to group by data is specified. (Ilia)\n- Fixed segfault in filter extension when using callbacks. (Arnar Mar Sig,\n  Felipe)\n- Fixed faulty fix for bug #40189 (endless loop in zlib.inflate stream filter). (Greg)\n- Upgraded PCRE to version 7.6 (Nuno)\n\n- Fixed bug #44742 (timezone_offset_get() causes segmentation faults). (Derick)\n- Fixed bug #44720 (Prevent crash within session_register()). (Scott)\n- Fixed bug #44703 (htmlspecialchars() does not detect bad character set argument). (Andy Wharmby)\n- Fixed bug #44673 (With CGI argv/argc starts from arguments, not from script) (Dmitry)\n- Fixed bug #44667 (proc_open() does not handle pipes with the mode 'wb' correctly). (Jani)\n- Fixed bug #44663 (Crash in imap_mail_compose if \"body\" parameter invalid). (Ilia)\n- Fixed bug #44650 (escaepshellscmd() does not check arg count). (Ilia)\n- Fixed bug #44613 (Crash inside imap_headerinfo()). (Ilia, jmessa)\n- Fixed bug #44603 (Order issues with Content-Type/Length headers on POST). (Ilia)\n- Fixed bug #44594 (imap_open() does not validate # of retries parameter). (Ilia)\n- Fixed bug #44591 (imagegif's filename parameter). (Felipe)\n- Fixed bug #44557 (Crash in imap_setacl when supplied integer as username) (Thomas Jarosch)\n- Fixed bug #44487 (call_user_method_array issues a warning when throwing an exception). (David Soria Parra)\n- Fixed bug #44478 (Inconsistent behaviour when assigning new nodes). (Rob, Felipe)\n- Fixed bug #44445 (email validator does not handle domains starting/ending with a -). (Ilia)\n- Fixed bug #44440 (st_blocks undefined under BeOS). (Felipe)\n- Fixed bug #44394 (Last two bytes missing from output). (Felipe)\n- Fixed bug #44388 (Crash inside exif_read_data() on invalid images) (Ilia)\n- Fixed bug #44373 (PDO_OCI extension compile failed). (Felipe)\n- Fixed bug #44333 (SEGFAULT when using mysql_pconnect() with client_flags). (Felipe)\n- Fixed bug #44306 (Better detection of MIPS processors on Windows). (Ilia)\n- Fixed bug #44242 (metaphone('CMXFXM') crashes PHP). (Felipe)\n- Fixed bug #44233 (MSG_PEEK undefined under BeOS R5). (jonathonfreeman at gmail dot com, Ilia)\n- Fixed bug #44216 (strftime segfaults on large negative value). (Derick)\n- Fixed bug #44209 (strtotime() doesn't support 64 bit timestamps on 64 bit platforms). (Derick)\n- Fixed bug #44206 (OCI8 selecting ref cursors leads to ORA-1000 maximum open cursors reached). (Oracle Corp.)\n- Fixed bug #44200 (A crash in PDO when no bound targets exists and yet bound parameters are present). (Ilia)\n- Fixed bug #44197 (socket array keys lost on socket_select). (Felipe)\n- Fixed bug #44191 (preg_grep messes up array index). (Felipe)\n- Fixed bug #44189 (PDO setAttribute() does not properly validate values for native numeric options). (Ilia)\n- Fixed bug #44184 (Double free of loop-variable on exception). (Dmitry)\n- Fixed bug #44171 (Invalid FETCH_COLUMN index does not raise an error). (Ilia)\n- Fixed bug #44166 (Parameter handling flaw in PDO::getAvailableDrivers()). (Ilia)\n- Fixed bug #44159 (Crash: $pdo->setAttribute(PDO::STATEMENT_ATTR_CLASS, NULL)). (Felipe)\n- Fixed bug #44152 (Possible crash with syslog logging on ZTS builds). (Ilia)\n- Fixed bug #44141 (private parent constructor callable through static function). (Dmitry)\n- Fixed bug #44113 (OCI8 new collection creation can fail with OCI-22303). (Oracle Corp.)\n- Fixed bug #44069 (Huge memory usage with concatenation using . instead of .=). (Dmitry)\n- Fixed bug #44046 (crash inside array_slice() function with an invalid by-ref offset). (Ilia)\n- Fixed bug #44028 (crash inside stream_socket_enable_crypto() when enabling encryption without crypto type). (Ilia)\n- Fixed bug #44018 (RecursiveDirectoryIterator options inconsistancy). (Marcus)\n- Fixed bug #44008 (OCI8 incorrect usage of OCI-Lob->close crashes PHP). (Oracle Corp.)\n- Fixed bug #43998 (Two error messages returned for incorrect encoding for mb_strto[upper|lower]). (Rui)\n- Fixed bug #43994 (mb_ereg 'successfully' matching incorrect). (Rui)\n- Fixed bug #43954 (Memory leak when sending the same HTTP status code multiple times). (Scott)\n- Fixed bug #43927 (koi8r is missing from html_entity_decode()). (andy at demos dot su, Tony)\n- Fixed bug #43912 (Interbase column names are truncated to 31 characters). (Ilia)\n- Fixed bug #43875 (Two error messages returned for $new and $flag argument in mysql_connect()). (Hannes)\n- Fixed bug #43863 (str_word_count() breaks on cyrillic \"ya\" in locale cp1251). (phprus at gmail dot com, Tony)\n- Fixed bug #43841 (mb_strrpos offset is byte count for negative values). (Rui)\n- Fixed bug #43840 (mb_strpos bounds check is byte count rather than a character count). (Rui)\n- Fixed bug #43808 (date_create never fails (even when it should)). (Derick)\n- Fixed bug #43793 (zlib filter is unable to auto-detect gzip/zlib file headers). (Greg)\n- Fixed bug #43703 (Signature compatibility check broken). (Dmitry)\n- Fixed bug #43677 (Inconsistent behaviour of include_path set with php_value). (manuel at mausz dot at)\n- Fixed bug #43663 (Extending PDO class with a __call() function doesn't work). (David Soria Parra)\n- Fixed bug #43647 (Make FindFile use PATH_SEPARATOR instead of \";\"). (Ilia)\n- Fixed bug #43635 (mysql extension ingores INI settings on NULL values passed to mysql_connect()). (Ilia)\n- Fixed bug #43620 (Workaround for a bug inside libcurl 7.16.2 that can result in a crash). (Ilia)\n- Fixed bug #43614 (incorrect processing of numerical string keys of array in arbitrary serialized data). (Dmitriy Buldakov, Felipe)\n- Fixed bug #43606 (define missing depencies of the exif extension). (crrodriguez at suse dot de)\n- Fixed bug #43589 (a possible infinite loop in bz2_filter.c). (Greg)\n- Fixed bug #43580 (removed bogus declaration of a non-existent php_is_url() function). (Ilia)\n- Fixed bug #43559 (array_merge_recursive() doesn't behave as expected with duplicate NULL values). (Felipe, Tony)\n- Fixed bug #43533 (escapeshellarg('') returns null). (Ilia)\n- Fixed bug #43527 (DateTime created from a timestamp reports environment timezone). (Derick)\n- Fixed bug #43522 (stream_get_line() eats additional characters). (Felipe, Ilia, Tony)\n- Fixed bug #43507 (SOAPFault HTTP Status 500 - would like to be able to set the HTTP Status). (Dmitry)\n- Fixed bug #43505 (Assign by reference bug). (Dmitry)\n- Fixed bug #43498 (file_exists() on a proftpd server got SIZE not allowed in ASCII mode). (Ilia, crrodriguez at suse dot de)\n- Fixed bug #43497 (OCI8 XML/getClobVal aka temporary LOBs leak UGA memory). (Chris)\n- Fixed bug #43495 (array_merge_recursive() crashes with recursive arrays). (Ilia)\n- Fixed bug #43493 (pdo_pgsql does not send username on connect when password is not available). (Ilia)\n- Fixed bug #43491 (Under certain conditions, file_exists() never returns). (Dmitry)\n- Fixed bug #43483 (get_class_methods() does not list all visible methods). (Dmitry)\n- Fixed bug #43482 (array_pad() does not warn on very small pad numbers). (Ilia)\n- Fixed bug #43457 (Prepared statement with incorrect parms doesn't throw exception with pdo_pgsql driver). (Ilia)\n- Fixed bug #43450 (Memory leak on some functions with implicit object __toString() call). (David C.)\n- Fixed bug #43386 (array_globals not reset to 0 properly on init). (Ilia)\n- Fixed bug #43377 (PHP crashes with invalid argument for DateTimeZone). (Ilia)\n- Fixed bug #43373 (pcntl_fork() should not raise E_ERROR on error). (Ilia)\n- Fixed bug #43364 (recursive xincludes don't remove internal xml nodes properly). (Rob, patch from ddb@bitxtender.de)\n- Fixed bug #43301 (mb_ereg*_replace() crashes when replacement string is invalid PHP expression and 'e' option is used). (Jani)\n- Fixed bug #43295 (crash because of uninitialized SG(sapi_headers).mimetype). (Dmitry)\n- Fixed bug #43293 (Multiple segfaults in getopt()). (Hannes)\n- Fixed bug #43279 (pg_send_query_params() converts all elements in 'params' to strings). (Ilia)\n- Fixed bug #43276 (Incomplete fix for bug #42739, mkdir() under safe_mode). (Ilia)\n- Fixed bug #43248 (backward compatibility break in realpath()). (Dmitry)\n- Fixed bug #43221 (SimpleXML adding default namespace in addAttribute). (Rob)\n- Fixed bug #43216 (stream_is_local() returns false on \"file://\"). (Dmitry)\n- Fixed bug #43201 (Crash on using uninitialized vals and __get/__set). (Dmitry)\n- Fixed bug #43182 (file_put_contents() LOCK_EX does not work properly on file truncation). (Ilia)\n- Fixed bug #43175 (__destruct() throwing an exception with __call() causes segfault). (Dmitry)\n- Fixed bug #43128 (Very long class name causes segfault). (Dmitry)\n- Fixed bug #43105 (PHP seems to fail to close open files). (Hannes)\n- Fixed bug #43092 (curl_copy_handle() crashes with > 32 chars long URL). (Jani)\n- Fixed bug #43003 (Invalid timezone reported for DateTime objects constructed using a timestamp). (Derick)\n- Fixed bug #42978 (mismatch between number of bound params and values causes a crash in pdo_pgsql). (Ilia)\n- Fixed bug #42945 (preg_split() swallows part of the string). (Nuno)\n- Fixed bug #42937 (__call() method not invoked when methods are called on parent from child class). (Dmitry)\n- Fixed bug #42841 (REF CURSOR and oci_new_cursor() crash PHP). (Chris)\n- Fixed bug #42838 (Wrong results in array_diff_uassoc) (Felipe)\n- Fixed bug #42779 (Incorrect forcing from HTTP/1.0 request to HTTP/1.1 response). (Ilia)\n- Fixed bug #42736 (xmlrpc_server_call_method() crashes). (Tony)\n- Fixed bug #42692 (Procedure 'int1' not present with doc/lit SoapServer). (Dmitry)\n- Fixed bug #42548 (mysqli PROCEDURE calls can't return result sets). (Hartmut)\n- Fixed bug #42505 (new sendmail default breaks on Netware platform) (Guenter Knauf)\n- Fixed bug #42369 (Implicit conversion to string leaks memory). (David C., Rob).\n- Fixed bug #42272 (var_export() incorrectly escapes char(0)). (Derick)\n- Fixed bug #42261 (Incorrect lengths for date and boolean data types). (Ilia)\n- Fixed bug #42190 (Constructing DateTime with TimeZone Indicator invalidates DateTimeZone). (Derick)\n- Fixed bug #42177 (Warning \"array_merge_recursive(): recursion detected\" comes again...). (Felipe)\n- Fixed bug #41941 (oci8 extension not lib64 savvy). (Chris)\n- Fixed bug #41828 (Failing to call RecursiveIteratorIterator::__construct() causes a sefault). (Etienne)\n- Fixed bug #41599 (setTime() fails after modify() is used). (Derick)\n- Fixed bug #41562 (SimpleXML memory issue). (Rob)\n- Fixed bug #40013 (php_uname() does not return nodename on Netware (Guenter Knauf)\n- Fixed bug #38468 (Unexpected creation of cycle). (Dmitry)\n- Fixed bug #32979 (OpenSSL stream->fd casts broken in 64-bit build) (stotty at tvnet dot hu)\n\n08 Nov 2007, PHP 5.2.5\n- Upgraded PCRE to version 7.3 (Nuno)\n- Added optional parameter $provide_object to debug_backtrace(). (Sebastian)\n- Added alpha support for imagefilter() IMG_FILTER_COLORIZE. (Pierre)\n- Added ability to control memory consumption between request using\n  ZEND_MM_COMPACT environment variable. (Dmitry)\n\n- Improved speed of array_intersect_key(), array_intersect_assoc(),\n  array_uintersect_assoc(), array_diff_key(), array_diff_assoc() and\n  array_udiff_assoc(). (Dmitry)\n\n- Fixed move_uploaded_file() to always set file permissions of resulting file\n  according to UMASK. (Andrew Sitnikov)\n- Fixed possible crash in ext/soap because of uninitialized value. (Zdash Urf)\n- Fixed regression in glob() when enforcing safe_mode/open_basedir checks on\n  paths containing '*'. (Ilia)\n- Fixed \"mail.force_extra_parameters\" php.ini directive not to be modifiable\n  in .htaccess due to the security implications - reported by SecurityReason.\n  (Stas)\n- Fixed PDO crash when driver returns empty LOB stream. (Stas)\n- Fixed dl() to only accept filenames - reported by Laurent Gaffie. (Stas)\n- Fixed dl() to limit argument size to MAXPATHLEN (CVE-2007-4887).\n  (Christian Hoffmann)\n- Fixed iconv_*() functions to limit argument sizes as workaround to libc\n  bug (CVE-2007-4783, CVE-2007-4840 by Laurent Gaffie).\n  (Christian Hoffmann, Stas)\n- Fixed missing brackets leading to build warning and error in the log.\n  Win32 code. (Andrey)\n- Fixed leaks with multiple connects on one mysqli object. (Andrey)\n- Fixed endianness detection on MacOS when building universal binary.\n  (Uwe Schindler, Christian Speich, Tony)\n- Fixed possible triggering of buffer overflows inside glibc\n  implementations of the fnmatch(), setlocale() and glob() functions.\n  Reported by Laurent Gaffie. (Ilia)\n- Fixed imagerectangle regression with 1x1 rectangle (libgd #106). (Pierre)\n- Fixed htmlentities/htmlspecialchars not to accept partial multibyte\n  sequences. (Stas)\n\n- Fixed bug #43196 (array_intersect_assoc() crashes with non-array input).\n  (Jani)\n- Fixed bug #43139 (PDO ignores ATTR_DEFAULT_FETCH_MODE in some cases with\n  fetchAll()). (Ilia)\n- Fixed bug #43137 (rmdir() and rename() do not clear statcache). (Jani)\n- Fixed bug #43130 (Bound parameters cannot have - in their name). (Ilia)\n- Fixed bug #43099 (XMLWriter::endElement() does not check # of params).\n  (Ilia)\n- Fixed bug #43020 (Warning message is missing with shuffle() and more\n  than one argument). (Scott)\n- Fixed bug #42976 (Crash when constructor for newInstance() or\n  newInstanceArgs() fails) (Ilia)\n- Fixed bug #42943 (ext/mssql: Move *timeout initialization from RINIT\n  to connect time). (Ilia)\n- Fixed bug #42917 (PDO::FETCH_KEY_PAIR doesn't work with setFetchMode).\n  (Ilia)\n- Fixed bug #42890 (Constant \"LIST\" defined by mysqlclient and c-client).\n  (Andrey)\n- Fixed bug #42869 (automatic session id insertion adds sessions id to\n  non-local forms). (Ilia)\n- Fixed bug #42818 ($foo = clone(array()); leaks memory). (Dmitry)\n- Fixed bug #42817 (clone() on a non-object does not result in a fatal\n  error). (Ilia)\n- Fixed bug #42785 (json_encode() formats doubles according to locale rather\n  then following standard syntax). (Ilia)\n- Fixed bug #42783 (pg_insert() does not accept an empty list for\n  insertion). (Ilia)\n- Fixed bug #42773 (WSDL error causes HTTP 500 Response). (Dmitry)\n- Fixed bug #42772 (Storing $this in a static var fails while handling a cast\n  to string). (Dmitry)\n- Fixed bug #42767 (highlight_string() truncates trailing comment). (Ilia)\n- Fixed bug #42739 (mkdir() doesn't like a trailing slash when safe_mode is\n  enabled). (Ilia)\n- Fixed bug #42703 (Exception raised in an iterator::current() causes segfault\n  in FilterIterator) (Marcus)\n- Fixed bug #42699 (PHP_SELF duplicates path). (Dmitry)\n- Fixed bug #42654 (RecursiveIteratorIterator modifies only part of leaves)\n  (Marcus)\n- Fixed bug #42643 (CLI segfaults if using ATTR_PERSISTENT). (Ilia)\n- Fixed bug #42637 (SoapFault : Only http and https are allowed). (Bill Moran)\n- Fixed bug #42629 (Dynamically loaded PHP extensions need symbols exported\n  on MacOSX). (jdolecek at NetBSD dot org)\n- Fixed bug #42627 (bz2 extension fails to build with -fno-common).\n  (dolecek at netbsd dot org)\n- Fixed Bug #42596 (session.save_path MODE option does not work). (Ilia)\n- Fixed bug #42590 (Make the engine recognize \\v and \\f escape sequences).\n  (Ilia)\n- Fixed bug #42587 (behavior change regarding symlinked .php files). (Dmitry)\n- Fixed bug #42579 (apache_reset_timeout() does not exist). (Jani)\n- Fixed bug #42549 (ext/mysql failed to compile with libmysql 3.23). (Scott)\n- Fixed bug #42523 (PHP_SELF duplicates path). (Dmitry)\n- Fixed bug #42512 (ip2long('255.255.255.255') should return 4294967295 on\n  64-bit PHP). (Derick)\n- Fixed bug #42506 (php_pgsql_convert() timezone parse bug) (nonunnet at\n  gmail dot com, Ilia)\n- Fixed bug #42496 (OCI8 cursor is not closed when using 2 clobs in a select\n  query). (Oracle Corp.)\n- Fixed bug #42462 (Segmentation when trying to set an attribute in a\n  DOMElement). (Rob)\n- Fixed bug #42453 (CGI SAPI does not shut down cleanly with -i/-m/-v cmdline\n  options). (Dmitry)\n- Fixed bug #42452 (PDO classes do not expose Reflection API information).\n  (Hannes)\n- Fixed bug #42468 (Write lock on file_get_contents fails when using a\n  compression stream). (Ilia)\n- Fixed bug #42488 (SoapServer reports an encoding error and the error itself\n  breaks). (Dmitry)\n- Fixed bug #42378 (mysqli_stmt_bind_result memory exhaustion). (Andrey)\n- Fixed bug #42359 (xsd:list type not parsed). (Dmitry)\n- Fixed bug #42326 (SoapServer crash). (Dmitry)\n- Fixed bug #42214 (SoapServer sends clients internal PHP errors). (Dmitry)\n- Fixed bug #42189 (xmlrpc_set_type() crashes php on invalid datetime\n  values). (Ilia)\n- Fixed bug #42139 (XMLReader option constants are broken using XML()). (Rob)\n- Fixed bug #42086 (SoapServer return Procedure '' not present for WSIBasic\n  compliant wsdl). (Dmitry)\n- Fixed bug #41822 (Relative includes broken when getcwd() fails). (Ab5602,\n  Jani)\n- Fixed bug #41561 (Values set with php_admin_* in httpd.conf can be overwritten\n  with ini_set()). (Stas, Jani)\n- Fixed bug #39651 (proc_open() append mode doesn't work on windows). (Nuno)\n\n30 Aug 2007, PHP 5.2.4\n- Removed --enable-versioning configure option. (Jani)\n\n- Upgraded PCRE to version 7.2 (Nuno)\n- Updated timezone database to version 2007.6. (Derick)\n\n- Improved openssl_x509_parse() to return extensions in readable form. (Dmitry)\n\n- Enabled changing the size of statement cache for non-persistent OCI8\n  connections. (Chris Jones, Tony)\n\n- Changed \"display_errors\" php.ini option to accept \"stderr\" as value which\n  makes the error messages to be outputted to STDERR instead of STDOUT with\n  CGI and CLI SAPIs (FR #22839). (Jani)\n- Changed error handler to send HTTP 500 instead of blank page on PHP errors.\n  (Dmitry, Andrei Nigmatulin)\n- Changed mail() function to be always available. (Johannes)\n\n- Added check for unknown options passed to configure. (Jani)\n- Added persistent connection status checker to pdo_pgsql.\n  (Elvis Pranskevichus, Ilia)\n- Added support for ATTR_TIMEOUT inside pdo_pgsql driver. (Ilia)\n- Added php_ini_loaded_file() function which returns the path to the actual\n  php.ini in use. (Jani)\n- Added GD version constants GD_MAJOR_VERSION, GD_MINOR_VERSION,\n  GD_RELEASE_VERSION, GD_EXTRA_VERSION and GD_VERSION_STRING. (Pierre)\n- Added missing open_basedir checks to CGI.\n  (anight at eyelinkmedia dot com, Tony)\n- Added missing format validator to unpack() function. (Ilia)\n- Added missing error check inside bcpowmod(). (Ilia)\n- Added CURLOPT_PRIVATE & CURLINFO_PRIVATE constants.\n  (Andrey A. Belashkov, Tony)\n- Added missing MSG_EOR and MSG_EOF constants to sockets extension. (Jani)\n- Added PCRE_VERSION constant. (Tony)\n- Added ReflectionExtension::info() function to print the phpinfo()\n  block for an extension. (Johannes)\n\n- Implemented FR #41884 (ReflectionClass::getDefaultProperties() does not\n  handle static attributes). (Tony)\n\n- Fixed \"Floating point exception\" inside wordwrap().\n  (Mattias Bengtsson, Ilia)\n- Fixed several integer overflows in ImageCreate(), ImageCreateTrueColor(),\n  ImageCopyResampled() and ImageFilledPolygon() reported by Mattias Bengtsson.\n  (Tony)\n- Fixed size calculation in chunk_split(). (Stas)\n- Fixed integer overflow in str[c]spn(). (Stas)\n- Fixed money_format() not to accept multiple %i or %n tokens.\n  (Stas, Ilia)\n- Fixed zend_alter_ini_entry() memory_limit interruption\n  vulnerability. (Ilia)\n- Fixed INFILE LOCAL option handling with MySQL extensions not to be\n  allowed when open_basedir or safe_mode is active. (Stas)\n- Fixed session.save_path and error_log values to be checked against\n  open_basedir and safe_mode (CVE-2007-3378) (Stas, Maksymilian Arciemowicz)\n- Fixed possible invalid read in glob() win32 implementation (CVE-2007-3806).\n  (Tony)\n- Improved fix for MOPB-03-2007. (Ilia)\n- Corrected fix for CVE-2007-2872. (Ilia)\n\n- Fixed possible crash in imagepsloadfont(), work around a bug in the pslib on\n  Windows. (Pierre)\n- Fixed oci8 and PDO_OCI extensions to allow configuring with Oracle 11g\n  client libraries. (Chris Jones)\n- Fixed EOF handling in case of reading from file opened in write only mode.\n  (Dmitry)\n- Fixed var_export() to use the new H modifier so that it can generate\n  parseable PHP code for floats, independent of the locale. (Derick)\n- Fixed regression introduced by the fix for the libgd bug #74. (Pierre)\n- Fixed SimpleXML's behavior when used with empty(). (Sara)\n- Fixed crash in OpenSSL extension because of non-string passphrase. (Dmitry)\n\n- Fixed PECL Bug #11345 (PDO_OCI crash after National language Support \"NLS\"\n  environment initialization error). (Chris Jones)\n- Fixed PECL bug #11216 (crash in ZipArchive::addEmptyDir when a directory\n  already exists). (Pierre)\n\n- Fixed bug #43926 (isInstance() isn't equivalent to instanceof operator). (Marcus)\n- Fixed bug #42368 (Incorrect error message displayed by pg_escape_string).\n  (Ilia)\n- Fixed bug #42365 (glob() crashes and/or accepts way too many flags).\n  (Jani)\n- Fixed Bug #42364 (Crash when using getRealPath with DirectoryIterator).\n  (Johannes)\n- Fixed bug #42292 ($PHP_CONFIG not set for phpized builds). (Jani)\n- Fixed bug #42261 (header wrong for date field).\n  (roberto at spadim dot com dot br, Ilia)\n- Fixed bug #42259 (SimpleXMLIterator loses ancestry). (Rob)\n- Fixed bug #42247 (ldap_parse_result() not defined under win32). (Jani)\n- Fixed bug #42243 (copy() does not output an error when the first arg is a\n  dir). (Ilia)\n- Fixed bug #42242 (sybase_connect() crashes). (Ilia)\n- Fixed bug #42237 (stream_copy_to_stream returns invalid values for mmaped\n  streams). (andrew dot minerd at sellingsource dot com, Ilia)\n- Fixed bug #42233 (Problems with \u00e6\u00f8\u00e5 in extract()). (Jani)\n- Fixed bug #42222 (possible buffer overflow in php_openssl_make_REQ). (Pierre)\n- Fixed bug #42211 (property_exists() fails to find protected properties\n  from a parent class). (Dmitry)\n- Fixed bug #42208 (substr_replace() crashes when the same array is passed\n  more than once). (crrodriguez at suse dot de, Ilia)\n- Fixed bug #42198 (SCRIPT_NAME and PHP_SELF truncated when inside a userdir\n  and using PATH_INFO). (Dmitry)\n- Fixed bug #42195 (C++ compiler required always). (Jani)\n- Fixed bug #42183 (classmap causes crash in non-wsdl mode). (Dmitry)\n- Fixed bug #42173 (oci8 INTERVAL and TIMESTAMP type fixes). (Chris)\n- Fixed bug #42151 (__destruct functions not called after catching a SoapFault\n  exception). (Dmitry)\n- Fixed bug #42142 (substr_replace() returns FALSE when length > string length).\n  (Ilia)\n- Fixed bug #42135 (Second call of session_start() causes creation of SID).\n  (Ilia)\n- Fixed bug #42134 (oci_error() returns false after oci_new_collection() fails).\n  (Tony)\n- Fixed bug #42119 (array_push($arr,&$obj) doesn't work with\n  zend.ze1_compatibility_mode On). (Dmitry)\n- Fixed bug #42117 (bzip2.compress loses data in internal buffer).\n  (Philip, Ilia)\n- Fixed bug #42112 (deleting a node produces memory corruption). (Rob)\n- Fixed bug #42107 (sscanf broken when using %2$s format parameters). (Jani)\n- Fixed bug #42090 (json_decode causes segmentation fault). (Hannes)\n- Fixed bug #42082 (NodeList length zero should be empty). (Hannes)\n- Fixed bug #42072 (No warning message for clearstatcache() with arguments).\n  (Ilia)\n- Fixed bug #42071 (ini scanner allows using NULL as option name). (Jani)\n- Fixed bug #42027 (is_file() / is_dir() matches file/dirnames with wildcard char\n  or trailing slash in Windows). (Dmitry)\n- Fixed bug #42019 (configure option --with-adabas=DIR does not work). (Jani)\n- Fixed bug #42015 (ldap_rename(): server error \"DSA is unwilling to perform\").\n  (bob at mroczka dot com, Jani)\n- Fixed bug #42009 (is_a() and is_subclass_of() should NOT call autoload, in the\n  same way as \"instanceof\" operator). (Dmitry)\n- Fixed bug #41989 (move_uploaded_file() & relative path in ZTS mode). (Tony)\n- Fixed bug #41984 (Hangs on large SoapClient requests). (Dmitry)\n- Fixed bug #41983 (Error Fetching http headers terminated by '\\n'). (Dmitry)\n- Fixed bug #41973 (--with-ldap=shared fails with LDFLAGS=\"-Wl,--as-needed\"). (Nuno)\n- Fixed bug #41971 (PDOStatement::fetch and PDOStatement::setFetchMode causes\n  unexpected behavior). (Ilia)\n- Fixed bug #41964 (strtotime returns a timestamp for non-time string of\n  pattern '(A|a) .+'). (Derick)\n- Fixed bug #41961 (Ensure search for hidden private methods does not stray from\n  class hierarchy). (robin_fernandes at uk dot ibm dot com)\n- Fixed bug #41947 (SimpleXML incorrectly registers empty strings asnamespaces).\n  (Rob)\n- Fixed bug #41929 (Foreach on object does not iterate over all visible properties).\n  (Dmitry)\n- Fixed bug #41919 (crash in string to array conversion).\n  (judas dot iscariote at gmail dot com, Ilia)\n- Fixed bug #41909 (var_export() is locale sensitive when exporting float\n  values). (Derick)\n- Fixed bug #41908 (CFLAGS=\"-Os\" ./configure --enable-debug fails).\n  (christian at hoffie dot info, Tony)\n- Fixed bug #41904 (proc_open(): empty env array should cause empty environment\n  to be passed to process). (Jani)\n- Fixed bug #41867 (SimpleXML: getName is broken). (Rob)\n- Fixed bug #41865 (fputcsv(): 2nd parameter is not optional). (Jani)\n- Fixed bug #41861 (SimpleXML: getNamespaces() returns the namespaces of a node's\n  siblings). (Rob)\n- Fixed bug #41845 (pgsql extension does not compile with PostgreSQL <7.4). (Ilia)\n- Fixed bug #41844 (Format returns incorrect number of digits for negative years\n  -0001 to -0999). (Derick)\n- Fixed bug #41842 (Cannot create years < 0100 & negative years with date_create\n  or new DateTime). (Derick)\n- Fixed bug #41833 (addChild() on a non-existent node, no node created,\n  getName() segfaults). (Rob)\n- Fixed bug #41831 (pdo_sqlite prepared statements convert resources to\n  strings). (Ilia)\n- Fixed bug #41815 (Concurrent read/write fails when EOF is reached). (Sascha)\n- Fixed bug #41813 (segmentation fault when using string offset as an object).\n  (judas dot iscariote at gmail dot com, Tony)\n- Fixed bug #41795 (checkdnsrr does not support DNS_TXT type).\n  (lucas at facebook dot com, Tony)\n- Fixed bug #41773 (php_strip_whitespace() sends headers with errors\n  suppressed). (Tony)\n- Fixed bug #41770 (SSL: fatal protocol error due to buffer issues). (Ilia)\n- Fixed bug #41765 (Recode crashes/does not work on amd64).\n  (nexus at smoula dot net, Stas)\n- Fixed bug #41724 (libxml_get_last_error() - errors service request scope).\n  (thekid at php dot net, Ilia)\n- Fixed bug #41717 (imagepolygon does not respect thickness). (Pierre)\n- Fixed bug #41713 (Persistent memory consumption on win32 since 5.2). (Dmitry)\n- Fixed bug #41711 (NULL temporary lobs not supported in OCI8).\n  (Chris Jones, Tony)\n- Fixed bug #41709 (strtotime() does not handle 00.00.0000). (Derick)\n- Fixed bug #41698 (float parameters truncated to integer in prepared\n  statements). (Ilia)\n- Fixed bug #41692 (ArrayObject shows weird behavior in respect to\n  inheritance). (Tony)\n- Fixed bug #41691 (ArrayObject::exchangeArray hangs Apache). (Tony)\n- Fixed bug #41686 (Omitting length param in array_slice not possible). (Ilia)\n- Fixed bug #41685 (array_push() fails to warn when next index is\n  already occupied). (Ilia)\n- Fixed bug #41655 (open_basedir bypass via glob()). (Ilia)\n- Fixed bug #41640 (get_class_vars produces error on class constants).\n  (Johannes)\n- Fixed bug #41635 (SoapServer and zlib.output_compression with FastCGI\n  result in major slowdown). (Dmitry)\n- Fixed bug #41633 (Crash instantiating classes with self-referencing\n  constants). (Dmitry)\n- Fixed bug #41630 (segfault when an invalid color index is present in the\n  image data). (Reported by Elliot <wccoder@gmail dot com>) (Pierre)\n- Fixed bug #41628 (PHP settings leak between Virtual Hosts in Apache 1.3).\n  (Scott, manuel at mausz dot at)\n- Fixed bug #41608 (segfault on a weird code with objects and switch()).\n  (Tony)\n- Fixed bug #41600 (url rewriter tags doesn't work with namespaced tags).\n  (Ilia)\n- Fixed bug #41596 (Fixed a crash inside pdo_pgsql on some non-well-formed\n  SQL queries). (Ilia)\n- Fixed bug #41594 (OCI8 statement cache is flushed too frequently). (Tony)\n- Fixed bug #41582 (SimpleXML crashes when accessing newly created element).\n  (Tony)\n- Fixed bug #41576 (configure failure when using --without-apxs or some other\n  SAPIs disabling options). (Jani)\n- Fixed bug #41567 (json_encode() double conversion is inconsistent with PHP).\n  (Lucas, Ilia)\n- Fixed bug #41566 (SOAP Server not properly generating href attributes).\n  (Dmitry)\n- Fixed bug #41555 (configure failure: regression caused by fix for #41265).\n  (Jani)\n- Fixed bug #41527 (WDDX deserialize numeric string array key).\n  (Matt, Ilia)\n- Fixed bug #41523 (strtotime('0000-00-00 00:00:00') is parsed as 1999-11-30).\n  (Derick)\n- Fixed bug #41518 (file_exists() warns of open_basedir restriction on\n  non-existent file). (Tony)\n- Fixed bug #41445 (parse_ini_file() has a problem with certain types of\n  integer as sections). (Tony)\n- Fixed bug #41433 (DBA: configure fails to include correct db.h for db4).\n  (Jani)\n- Fixed bug #41372 (Internal pointer of source array resets during array\n  copying). (Dmitry)\n- Fixed bug #41350 (my_thread_global_end() error during request shutdown on\n  Windows). (Scott, Andrey)\n- Fixed bug #41278 (get_loaded_extensions() should list Zend extensions).\n  (Johannes)\n- Fixed bug #41127 (Memory leak in ldap_{first|next}_attribute functions).\n  (Jani)\n- Fixed bug #40757 (get_object_vars get nothing in child class). (Dmitry)\n- Fixed bug #40705 (Iterating within function moves original array pointer).\n  (Dmitry)\n- Fixed bug #40509 (key() function changed behaviour if global array is used\n  within function). (Dmitry)\n- Fixed bug #40419 (Trailing slash in CGI request does not work). (Dmitry)\n- Fixed bug #39330 (apache2handler does not call shutdown actions before\n  apache child die). (isk at ecommerce dot com, Gopal, Tony)\n- Fixed bug #39291 (ldap_sasl_bind() misses the sasl_authc_id parameter).\n  (diafour at gmail dot com, Jani)\n- Fixed bug #37715 (array pointers resetting on copy). (Dmitry)\n- Fixed bug #37273 (Symlinks and mod_files session handler allow open_basedir\n  bypass). (Ilia)\n- Fixed bug #36492 (Userfilters can leak buckets). (Sara)\n- Fixed bugs #36796, #36918, #41371 (stream_set_blocking() does not work).\n  (Jani)\n- Fixed bug #35981 (pdo-pgsql should not use pkg-config when not present).\n  (Jani)\n- Fixed bug #31892 (PHP_SELF incorrect without cgi.fix_pathinfo, but turning on\n  screws up PATH_INFO). (Dmitry)\n- Fixed bug #21197 (socket_read() outputs error with PHP_NORMAL_READ).\n  (Nuno, Jani)\n\n31 May 2007, PHP 5.2.3\n- Changed CGI install target to php-cgi and 'make install' to install CLI\n  when CGI is selected. (Jani)\n- Changed JSON maximum nesting depth from 20 to 128. (Rasmus)\n\n- Improved compilation of heredocs and interpolated strings. (Matt, Dmitry)\n- Optimized out a couple of per-request syscalls. (Rasmus)\n- Optimized digest generation in md5() and sha1() functions. (Ilia)\n- Upgraded bundled SQLite 3 to version 3.3.17. (Ilia)\n\n- Added \"max_input_nesting_level\" php.ini option to limit nesting level of\n  input variables. Fix for MOPB-03-2007. (Stas)\n- Added a 4th parameter flag to htmlspecialchars() and htmlentities() that\n  makes the function not encode existing html entities. (Ilia)\n- Added PDO::FETCH_KEY_PAIR mode that will fetch a 2 column result set into\n  an associated array. (Ilia)\n- Added CURLOPT_TIMEOUT_MS and CURLOPT_CONNECTTIMEOUT_MS cURL constants. (Sara)\n- Added --ini switch to CLI that prints out configuration file names. (Marcus)\n- Added mysql_set_charset() to allow runtime altering of connection encoding.\n  (Scott)\n\n- Implemented FR #41416 (getColumnMeta() should also return table name). (Tony)\n\n- Fixed an integer overflow inside chunk_split(). Identified by Gerhard Wagner.\n  (Ilia)\n- Fixed SOAP extension's handler() to work even when\n  \"always_populate_raw_post_data\" is off. (Ilia)\n- Fixed possible infinite loop in imagecreatefrompng. (libgd #86)\n  (by Xavier Roche, CVE-2007-2756). (Pierre)\n- Fixed ext/filter Email Validation Vulnerability (MOPB-45 by Stefan Esser).\n  (Ilia)\n- Fixed altering $this via argument named \"this\". (Dmitry)\n- Fixed PHP CLI usage of php.ini from the binary location. (Hannes)\n- Fixed segfault in strripos(). (Tony, Joxean Koret)\n- Fixed bug #41693 (scandir() allows empty directory names). (Ilia)\n- Fixed bug #41673 (json_encode breaks large numbers in arrays). (Ilia)\n- Fixed bug #41525 (ReflectionParameter::getPosition() not available). (Marcus)\n- Fixed bug #41511 (Compile failure under IRIX 6.5.30 building md5.c). (Jani)\n- Fixed bug #41504 (json_decode() incorrectly decodes JSON arrays with empty\n  string keys). (Ilia)\n- Fixed bug #41492 (open_basedir/safe_mode bypass inside realpath()). (Ilia)\n- Fixed bug #41477 (no arginfo about SoapClient::__soapCall()). (Ilia)\n- Fixed bug #41455 (ext/dba/config.m4 pollutes global $LIBS and $LDFLAGS).\n  (mmarek at suse dot cz, Tony)\n- Fixed bug #41442 (imagegd2() under output control). (Tony)\n- Fixed bug #41430 (Fatal error with negative values of maxlen parameter of\n  file_get_contents()). (Tony)\n- Fixed bug #41423 (PHP assumes wrongly that certain ciphers are enabled in\n  OpenSSL). (Pierre)\n- Fixed bug #41421 (Uncaught exception from a stream wrapper segfaults).\n  (Tony, Dmitry)\n- Fixed bug #41403 (json_decode cannot decode floats if localeconv\n  decimal_point is not '.'). (Tony)\n- Fixed bug #41401 (wrong unary operator precedence). (Stas)\n- Fixed bug #41394 (dbase_create creates file with corrupted header). (Tony)\n- Fixed bug #41390 (Clarify error message with invalid protocol scheme).\n  (Scott)\n- Fixed bug #41378 (fastcgi protocol lacks support for Reason-Phrase in\n  \"Status:\" header). (anight at eyelinkmedia dot com, Dmitry)\n- Fixed bug #41374 (whole text concats values of wrong nodes). (Rob)\n- Fixed bug #41358 (configure cannot determine SSL lib with libcurl >= 7.16.2).\n  (Mike)\n- Fixed bug #41353 (crash in openssl_pkcs12_read() on invalid input). (Ilia)\n- Fixed bug #41351 (Invalid opcode with foreach ($a[] as $b)). (Dmitry, Tony)\n- Fixed bug #41347 (checkdnsrr() segfaults on empty hostname). (Scott)\n- Fixed bug #41337 (WSDL parsing doesn't ignore non soap bindings). (Dmitry)\n- Fixed bug #41326 (Writing empty tags with Xmlwriter::WriteElement[ns])\n  (Pierre)\n- Fixed bug #41321 (downgrade read errors in getimagesize() to E_NOTICE).\n  (Ilia)\n- Fixed bug #41304 (compress.zlib temp files left). (Dmitry)\n- Fixed bug #41293 (Fixed creation of HTTP_RAW_POST_DATA when there is no\n  default post handler). (Ilia)\n- Fixed bug #41291 (FastCGI does not set SO_REUSEADDR).\n  (fmajid at kefta dot com, Dmitry)\n- Fixed gd build when used with freetype 1.x (Pierre, Tony)\n- Fixed bug #41287 (Namespace functions don't allow xmlns definition to be\n  optional). (Rob)\n- Fixed bug #41285 (Improved fix for CVE-2007-1887 to work with non-bundled\n  sqlite2 lib). (Ilia)\n- Fixed bug #41283 (Bug with deserializing array key that are doubles or\n  floats in wddx). (Ilia)\n- Fixed bug #41257 (lookupNamespaceURI does not work as expected). (Rob)\n- Fixed bug #41236 (Regression in timeout handling of non-blocking SSL\n  connections during reads and writes). (Ilia)\n- Fixed bug #41134 (zend_ts_hash_clean not thread-safe).\n  (marco dot cova at gmail dot com, Tony)\n- Fixed bug #41097 (ext/soap returning associative array as indexed without\n  using WSDL). (Dmitry)\n- Fixed bug #41004 (minOccurs=\"0\" and null class member variable). (Dmitry)\n- Fixed bug #39542 (Behavior of require/include different to < 5.2.0).\n  (Dmitry)\n\n03 May 2007, PHP 5.2.2\n- Improved bundled GD\n  . Sync to 2.0.35\n  . Added imagegrabwindow and imagegrabscreen, capture a screen or a\n    window using its handle (Pierre)\n  . colors allocated henceforth from the resulting image overwrite the palette\n    colors (Rob Leslie)\n  . Improved thread safety of the gif support (Roman Nemecek, Nuno, Pierre)\n  . Use the dimension of the GIF frame to create the destination image (Pierre)\n  . Load only once the local color map from a GIF data (Pierre)\n  . Improved thread safety of the freetype cache (Scott MacVicar, Nuno, Pierre)\n  . imagearc huge CPU usage with large angles, libgd bug #74 (Pierre)\n- Improved FastCGI SAPI to support external pipe and socket servers on win32.\n  (Dmitry)\n- Improved Zend Memory Manager\n  . guarantee of reasonable time for worst cases of best-fit free block\n    searching algorithm. (Dmitry)\n  . better cache usage and less fragmentation on erealloc() (Tony, Dmitry)\n- Improved SPL (Marcus)\n  . Added SplFileInfo::getBasename(), DirectoryIterator::getBasename().\n  . Added SplFileInfo::getLinkTarget(), SplFileInfo::getRealPath().\n  . Made RecursiveFilterIterator::accept() abstract as stated in documentation.\n- Improved SOAP\n  . Added ability to encode arrays with \"SOAP-ENC:Array\" type instead of WSDL\n    type. To activate the ability use \"feature\"=>SOAP_USE_XSI_ARRAY_TYPE\n    option in SoapClient/SoapServer constructors. (Rob, Dmitry)\n\n- Added GMP_VERSION constant. (Tony)\n- Added --ri switch to CLI which allows to check extension information. (Marcus)\n- Added tidyNode::getParent() method (John, Nuno)\n- Added openbasedir and safemode checks in zip:// stream wrapper and\n  ZipArchive::open (Pierre)\n- Added php_pdo_sqlite_external.dll, a version of the PDO SQLite driver that\n  links against an external sqlite3.dll.  This provides Windows users to upgrade\n  their sqlite3 version outside of the PHP release cycle.  (Wez, Edin)\n- Added linenumbers to array returned by token_get_all(). (Johannes)\n\n- Upgraded SQLite 3 to version 3.3.16 (Ilia)\n- Upgraded libraries bundled in the Windows distribution. (Edin)\n  . c-client (imap) to version 2006e\n  . libpq (PostgreSQL) to version 8.2.3\n  . libmysql (MySQL) to version 5.0.37\n  . openssl to version 0.9.8e\n- Upgraded PCRE to version 7.0 (Nuno)\n\n- Updated timezone database to version 2007.5. (Derick)\n\n- Fixed commandline handling for CLI and CGI. (Marcus, Johannes)\n- Fixed iterator_apply() with a callback using __call(). (Johannes)\n- Fixed possible multi bytes issues in openssl csr parser (Pierre)\n- Fixed shmop_open() with IPC_CREAT|IPC_EXCL flags on Windows.\n  (Vladimir Kamaev, Tony).\n- Fixed possible leak in ZipArchive::extractTo when safemode checks fails (Ilia)\n- Fixed possible relative path issues in zip_open and TS mode (old API) (Pierre)\n- Fixed zend_llist_remove_tail (Michael Wallner, Dmitry)\n- Fixed a thread safety issue in gd gif read code (Nuno, Roman Nemecek)\n- Fixed CVE-2007-1001, GD wbmp used with invalid image size (Pierre)\n- Fixed unallocated memory access/double free in in array_user_key_compare()\n  (MOPB-24 by Stefan Esser) (Stas)\n- Fixed wrong length calculation in unserialize S type\n  (MOPB-29 by Stefan Esser) (Stas)\n\n- Fixed bug #41215 (setAttribute return code reversed). (Ilia)\n- Fixed bug #41192 (Per Directory Values only work for one key). (Dmitry)\n- Fixed bug #41175 (addAttribute() fails to add an attribute with an empty\n  value). (Ilia)\n- Fixed bug #41159 (mysql_pconnect() hash does not account for connect\n  flags). (Ilia)\n- Fixed bug #41121 (range() overflow handling for large numbers on 32bit\n  machines). (Ilia)\n- Fixed bug #41118 (PHP does not handle overflow of octal integers). (Tony)\n- Fixed bug #41109 (recursiveiterator.inc says \"implements\" Iterator instead of\n  \"extends\"). (Marcus)\n- Fixed bug #40130 (TTF usage doesn't work properly under Netware). (Scott,\n  gk at gknw dot de)\n- Fixed bug #41093 (magic_quotes_gpc ignores first arrays keys). (Arpad, Ilia)\n- Fixed bug #41075 (memleak when creating default object caused exception).\n  (Dmitry)\n- Fixed bug #41067 (json_encode() problem with UTF-16 input). (jp at df5ea\n  dot net. Ilia)\n- Fixed bug #41063 (chdir doesn't like root paths). (Dmitry)\n- Fixed bug #41061 (\"visibility error\" in ReflectionFunction::export()).\n  (Johannes)\n- Fixed bug #41043 (pdo_oci crash when freeing error text with persistent\n  connection). (Tony)\n- Fixed bug #41037 (unregister_tick_function() inside the tick function crash PHP).\n  (Tony)\n- Fixed bug #41034 (json_encode() ignores null byte started keys in arrays).\n  (Ilia)\n- Fixed bug #41026 (segfault when calling \"self::method()\" in shutdown functions).\n  (Tony)\n- Fixed bug #40999 (mcrypt_create_iv() not using random seed). (Ilia)\n- Fixed bug #40998 (long session array keys are truncated). (Tony)\n- Implement feature request #40947, allow a single filter as argument\n  for filter_var_array (Pierre)\n- Fixed bug #40935 (pdo_mysql does not raise an exception on empty\n  fetchAll()). (Ilia)\n- Fixed bug #40931 (open_basedir bypass via symlink and move_uploaded_file()).\n  (Tony)\n- Fixed bug #40921 (php_default_post_reader crashes when post_max_size is\n  exceeded). (trickie at gmail dot com, Ilia)\n- Fixed bug #40915 (addcslashes unexpected behavior with binary input). (Tony)\n- Fixed bug #40899 (memory leak when nesting list()). (Dmitry)\n- Fixed bug #40897 (error_log file not locked). (Ilia)\n- Fixed bug #40883 (mysql_query() is allocating memory incorrectly). (Tony)\n- Fixed bug #40872 (inconsistency in offsetSet, offsetExists treatment of\n  string enclosed integers). (Marcus)\n- Fixed bug #40861 (strtotime() doesn't handle double negative relative time\n  units correctly). (Derick, Ilia)\n- Fixed bug #40854 (imap_mail_compose() creates an invalid terminator for\n  multipart e-mails). (Ilia)\n- Fixed bug #40848 (sorting issue on 64-bit Solaris). (Wez)\n- Fixed bug #40836 (Segfault in ext/dom). (Rob)\n- Fixed bug #40833 (Crash when using unset() on an ArrayAccess object retrieved\n  via __get()). (Dmitry)\n- Fixed bug #40822 (pdo_mysql does not return rowCount() on select). (Ilia)\n- Fixed bug #40815 (using strings like \"class::func\" and static methods in\n  set_exception_handler() might result in crash). (Tony)\n- Fixed bug #40809 (Poor performance of \".=\"). (Dmitry)\n- Fixed bug #40805 (Failure executing function ibase_execute()). (Tony)\n- Fixed bug #40800 (cannot disable memory_limit with -1). (Dmitry, Tony)\n- Fixed bug #40794 (ReflectionObject::getValues() may crash when used with\n  dynamic properties). (Tony)\n- Fixed bug #40784 (Case sensitivity in constructor's fallback). (Tony)\n- Fixed bug #40770 (Apache child exits when PHP memory limit reached). (Dmitry)\n- Fixed bug #40764 (line thickness not respected for horizontal and vertical\n  lines). (Pierre)\n- Fixed bug #40758 (Test fcgi_is_fastcgi() is wrong on windows). (Dmitry)\n- Fixed bug #40754 (added substr() & substr_replace() overflow checks). (Ilia)\n- Fixed bug #40752 (parse_ini_file() segfaults when a scalar setting is\n  redeclared as an array). (Tony)\n- Fixed bug #40750 (openssl stream wrapper ignores default_stream_timeout).\n  (Tony)\n- Fixed bug #40727 (segfault in PDO when failed to bind parameters). (Tony)\n- Fixed bug #40709 (array_reduce() behaves strange with one item stored arrays).\n  (Ilia)\n- Fixed bug #40703 (Resolved a possible namespace conflict between libxmlrpc\n  and MySQL's NDB table handler). (Ilia)\n- Fixed bug #40961 (Incorrect results of DateTime equality check). (Mike)\n- Fixed bug #40678 (Cross compilation fails). (Tony)\n- Fixed bug #40621 (Crash when constructor called inappropriately). (Tony)\n- Fixed bug #40609 (Segfaults when using more than one SoapVar in a request).\n  (Rob, Dmitry)\n- Fixed bug #40606 (umask is not being restored when request is finished).\n  (Tony)\n- Fixed bug #40598 (libxml segfault). (Rob)\n- Fixed bug #40591 (list()=\"string\"; gives invalid opcode). (Dmitry)\n- Fixed bug #40578 (imagettftext() multithreading issue). (Tony, Pierre)\n- Fixed bug #40576 (double values are truncated to 6 decimal digits when\n  encoding). (Tony)\n- Fixed bug #40560 (DIR functions do not work on root UNC path). (Dmitry)\n- Fixed bug #40548 (SplFileInfo::getOwner/getGroup give a warning on broken\n  symlink). (Marcus)\n- Fixed bug #40546 (SplFileInfo::getPathInfo() throws an exception if directory\n  is in root dir). (Marcus)\n- Fixed bug #40545 (multithreading issue in zend_strtod()). (Tony)\n- Fixed bug #40503 (json_encode() value corruption on 32bit systems with\n  overflown values). (Ilia)\n- Fixed bug #40467 (Partial SOAP request sent when XSD sequence or choice\n  include minOccurs=0). (Dmitry)\n- Fixed bug #40465 (Ensure that all PHP elements are printed by var_dump).\n  (wharmby at uk dot ibm dot com, Ilia)\n- Fixed bug #40464 (session.save_path wont use default-value when safe_mode\n  or open_basedir is enabled). (Ilia)\n- Fixed bug #40455 (proc_open() uses wrong command line when safe_mode_exec_dir\n  is set). (Tony)\n- Fixed bug #40432 (strip_tags() fails with greater than in attribute). (Ilia)\n- Fixed bug #40431 (dynamic properties may cause crash in ReflectionProperty\n  methods). (Tony)\n- Fixed bug #40451 (addAttribute() may crash when used with non-existent child\n  node). (Tony)\n- Fixed bug #40442 (ArrayObject::offsetExists broke in 5.2.1, works in 5.2.0).\n  (olivier at elma dot fr, Marcus)\n- Fixed bug #40428 (imagepstext() doesn't accept optional parameter). (Pierre)\n- Fixed bug #40417 (Allow multiple instances of the same named PDO token in\n  prepared statement emulation code). (Ilia)\n- Fixed bug #40414 (possible endless fork() loop when running fastcgi).\n  (Dmitry)\n- Fixed bug #40410 (ext/posix does not compile on MacOS 10.3.9). (Tony)\n- Fixed bug #40392 (memory leaks in PHP milter SAPI).\n  (tuxracer69 at gmail dot com, Tony)\n- Fixed bug #40371 (pg_client_encoding() not working on Windows). (Edin)\n- Fixed bug #40352 (FCGI_WEB_SERVER_ADDRS function get lost). (Dmitry)\n- Fixed bug #40290 (strtotime() returns unexpected result with particular\n  timezone offset). (Derick)\n- Fixed bug #40286 (PHP fastcgi with PHP_FCGI_CHILDREN don't kill children when\n  parent is killed). (Dmitry)\n- Fixed bug #40261 (Extremely slow data handling due to memory fragmentation).\n  (Dmitry)\n- Fixed bug #40236 (php -a function allocation eats memory). (Dmitry)\n- Fixed bug #40109 (iptcembed fails on non-jfif jpegs). (Tony)\n- Fixed bug #39965 (Latitude and longitude are backwards in date_sun_info()).\n  (Derick)\n- Implement #39867 (openssl PKCS#12 support) (Marc Delling, Pierre)\n- Fixed bug #39836 (SplObjectStorage empty after unserialize). (Marcus)\n- Fixed bug #39416 (Milliseconds in date()). (Derick)\n- Fixed bug #39396 (stream_set_blocking crashes on Win32). (Ilia, maurice at\n  iceblog dot de)\n- Fixed bug #39351 (relative include fails on Solaris). (Dmitry, Tony)\n- Fixed bug #39322 (proc_terminate() destroys process resource). (Nuno)\n- Fixed bug #38406 (crash when assigning objects to SimpleXML attributes). (Tony)\n- Fixed bug #37799 (ftp_ssl_connect() falls back to non-ssl connection). (Nuno)\n- Fixed bug #36496 (SSL support in imap_open() not working on Windows). (Edin)\n- Fixed bug #36226 (Inconsistent handling when passing nillable arrays).\n  (Dmitry)\n- Fixed bug #35872 (Avoid crash caused by object store being referenced during\n  RSHUTDOWN). (Andy)\n- Fixed bug #34794 (proc_close() hangs when used with two processes).\n  (jdolecek at netbsd dot org, Nuno)\n- Fixed PECL bug #10194 (crash in Oracle client when memory limit reached in\n  the callback). (Tony)\n- Fixed substr_compare and substr_count information leak (MOPB-14) (Stas, Ilia)\n- Fixed crash on op-assign where argument is string offset (Brian, Stas)\n- Fixed bug #38710 (data leakage because of nonexisting boundary checking in\n  statements in mysqli) (Stas)\n- Fixed bug #37386 (autocreating element doesn't assign value to first node).\n  (Rob)\n- Fixed bug #37013 (server hangs when returning circular object references).\n  (Dmitry)\n- Fixed bug #33664 Console window appears when using exec()\n  (Richard Quadling, Stas)\n\n\n08 Feb 2007, PHP 5.2.1\n- Added read-timeout context option \"timeout\" for HTTP streams. (Hannes, Ilia).\n- Added CURLOPT_TCP_NODELAY constant to Curl extension. (Sara)\n- Added support for hex numbers of any size. (Matt)\n- Added function stream_socket_shutdown(). It is a wrapper for system\n  shutdown() function, that shut downs part of a full-duplex connection.\n  (Dmitry)\n- Added internal heap protection (Dmitry)\n  . memory-limit is always enabled (--enable-memory-limit removed)\n  . default value if memory-limit is set to 128M\n  . safe unlinking\n  . cookies\n  . canary protection (debug build only)\n  . random generation of cookies and canaries\n- Added forward support for 'b' prefix in front of string literals. (Andrei)\n- Added three new functions to ext/xmlwriter (Rob, Ilia)\n  . xmlwriter_start_dtd_entity()\n  . xmlwriter_end_dtd_entity()\n  . xmlwriter_write_dtd_entity()\n- Added a meta tag to phpinfo() output to prevent search engines from indexing\n  the page. (Ilia)\n- Added new function, sys_get_temp_dir(). (Hartmut)\n- Added missing object support to file_put_contents(). (Ilia)\n- Added support for md2, ripemd256 and ripemd320 algos to hash(). (Sara)\n- Added forward support for (binary) cast. (Derick)\n- Added optimization for imageline with horizontal and vertical lines (Pierre)\n\n- Removed dependency from SHELL32.DLL. (Dmitry)\n- Removed double \"wrong parameter count\" warnings in various functions.\n  (Hannes)\n- Moved extensions to PECL:\n  . ext/informix (Derick, Tony)\n\n- Changed double-to-string utilities to use BSD implementation. (Dmitry, Tony)\n- Updated bundled libcURL to version 7.16.0 in the Windows distro. (Edin)\n- Updated timezone database to version 2006.16. (Derick)\n- cgi.* and fastcgi.* directives are moved to INI subsystem. The new directive\n  cgi.check_shebang_line can be used to omitting check for \"#! /usr/bin/php\"\n  line. (Dmitry).\n- Improved proc_open(). Now on Windows it can run external commands not\n  through CMD.EXE. (Dmitry)\n- VCWD_REALPATH() is improved to use realpath cache without VIRTUAL_DIR.\n  (Dmitry)\n- ext/bcmath initialization code is moved from request startup to module\n  startup. (Dmitry)\n- Zend Memory Manager Improvements (Dmitry)\n  . use HeapAlloc() instead of VirtualAlloc()\n  . use \"win32\" storage manager (instead of \"malloc\") on Windows by default\n- Zip Extension Improvements (Pierre)\n  . Fixed leak in statName and stateIndex\n  . Fixed return setComment (Hannes)\n  . Added addEmptyDir method\n- Filter Extension Improvements (Ilia, Pierre)\n  . Fixed a bug when callback function returns a non-modified value.\n  . Added filter support for $_SERVER in cgi/apache2 sapis.\n  . Make sure PHP_SELF is filtered in Apache 1 sapi.\n  . Fixed bug #39358 (INSTALL_HEADERS contains incorrect reference to\n    php_filter.h).\n  . Added \"default\" option that allows a default value to be set for an\n    invalid or missing value.\n  . Invalid filters fails instead of returning unsafe value\n  . Fixed possible double encoding problem with sanitizing filters\n  . Make use of space-strict strip_tags() function\n  . Fixed whitespace trimming\n  . Added support for FastCGI environment variables. (Dmitry)\n- PDO_MySQL Extension Improvements (Ilia)\n  . Enabled buffered queries by default.\n  . Enabled prepared statement emulation by default.\n\n- Small optimization of the date() function. (Matt,Ilia)\n- Optimized the internal is_numeric_string() function. (Matt,Ilia)\n- Optimized array functions utilizing php_splice(). (Ilia)\n- Windows related optimizations (Dmitry, Stas)\n  . COM initialization/deinitialization are done only if necessary\n  . removed unnecessary checks for ISREG file and corresponding stat() calls\n  . opendir() is reimplementation using GetFistFile/GetNextFile those are\n    faster then _findfirst/_findnext\n  . implemented registry cache that prevent registry lookup on each request.\n    In case of modification of corresponding registry-tree PHP will reload it\n    automatic\n  . start timeout thread only if necessary\n  . stat() is reimplementation using GetFileAttributesEx(). The new\n    implementation is faster then implementation in MS VC CRT, but it doesn't\n    support Windows 95.\n- Streams optimization (Dmitry)\n  . removed unnecessary ftell() calls (one call for each included PHP file)\n  . disabled calls to read() after EOF\n\n- Fixed incorrect function names on FreeBSD where inet_pton() was named\n  __inet_pton() and inet_ntop() was named __inet_ntop(). (Hannes)\n- Fixed FastCGI impersonation for persistent connections on Windows. (Dmitry)\n- Fixed wrong signature initialization in imagepng (Takeshi Abe)\n- Fixed ftruncate() with negative size on FreeBSD. (Hannes)\n- Fixed segfault in RegexIterator when given invalid regex. (Hannes)\n- Fixed segfault in SplFileObject->openFile()->getPathname(). (Hannes)\n- Fixed segfault in ZTS mode when OCI8 statements containing sub-statements\n  are destroyed in wrong order. (Tony)\n- Fixed the validate email filter so that the letter \"v\" can also be used in\n  the user part of the email address. (Derick)\n- Fixed bug #40297 (compile failure in ZTS mode when collections support is\n  missing). (Tony)\n- Fixed bug #40285 (The PDO prepare parser goes into an infinite loop in\n  some instances). (Ilia)\n- Fixed bug #40274 (Sessions fail with numeric root keys). (Ilia)\n- Fixed bug #40259 (ob_start call many times - memory error). (Dmitry)\n- Fixed bug #40231 (file_exists incorrectly reports false). (Dmitry)\n- Fixed bug #40228 (ZipArchive::extractTo does create empty directories\n  recursively). (Pierre)\n- Fixed bug #40200 (The FastCgi version has different realpath results than\n  thread safe version). (Dmitry)\n- Fixed bug #40191 (use of array_unique() with objects triggers segfault).\n  (Tony)\n- Fixed bug #40189 (possible endless loop in zlib.inflate stream filter).\n  (Greg, Tony)\n- Fixed bug #40169 (CURLOPT_TCP_NODELAY only available in curl >= 7.11.2).\n  (Tony)\n- Fixed bug #40129 (iconv extension doesn't compile with CodeWarrior on\n  Netware). (gk at gknw dot de, Tony)\n- Fixed bug #40127 (apache2handler doesn't compile on Netware).\n  (gk at gknw dot de)\n- Fixed bug #40121 (PDO_DBLIB driver wont free statements). (Ilia)\n- Fixed bug #40098 (php_fopen_primary_script() not thread safe). (Ilia)\n- Fixed bug #40092 (chroot() doesn't clear realpath cache). (Dmitry)\n- Fixed bug #40091 (spl_autoload_register with 2 instances of the same class).\n  (Ilia)\n- Fixed bug #40083 (milter SAPI functions always return false/null). (Tony)\n- Fixed bug #40079 (php_get_current_user() not thread safe).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #40078 (ORA-01405 when fetching NULL values using\n  oci_bind_array_by_name()). (Tony)\n- Fixed bug #40076 (zend_alloc.c: Value of enumeration constant must be in\n  range of signed integer). (Dmitry)\n- Fixed bug #40073 (exif_read_data dies on certain images). (Tony, Marcus)\n- Fixed bug #40036 (empty() does not work correctly with ArrayObject when\n  using ARRAY_AS_PROPS). (Ilia)\n- Fixed bug #40012 (php_date.c doesn't compile on Netware).\n  (gk at gknw dot de, Derick)\n- Fixed bug #40009 (http_build_query(array()) returns NULL). (Ilia)\n- Fixed bug #40002 (Try/Catch performs poorly). (Dmitry)\n- Fixed bug #39993 (tr_TR.UTF-8 locale has problems with PHP). (Ilia)\n- Fixed bug #39990 (Cannot \"foreach\" over overloaded properties). (Dmitry)\n- Fixed bug #39988 (type argument of oci_define_by_name() is ignored).\n  (Chris Jones, Tony)\n- Fixed bug #39984 (redirect response code in header() could be ignored\n  in CGI sapi). (Ilia)\n- Fixed bug #39979 (PGSQL_CONNECT_FORCE_NEW will causes next connect to\n  establish a new connection). (Ilia)\n- Fixed bug #39971 (pg_insert/pg_update do not allow now() to be used\n  for timestamp fields). (Ilia)\n- Fixed bug #39969 (ini setting short_open_tag has no effect when using\n  --enable-maintainer-zts). (Dmitry)\n- Fixed bug #39952 (zip ignoring --with-libdir on zlib checks)\n  (judas dot iscariote at gmail dot com)\n- Fixed bug #39944 (References broken). (Dmitry)\n- Fixed bug #39935 (Extensions tidy,mcrypt,mhash,pdo_sqlite ignores\n  --with-libdir). (judas dot iscariote at gmail dot com, Derick)\n- Fixed bug #39903 (Notice message when executing __halt_compiler() more than\n  once). (Tony)\n- Fixed bug #39898 (FILTER_VALIDATE_URL validates \\r\\n\\t etc). (Ilia)\n- Fixed bug #39890 (using autoconf 2.6x and --with-layout=GNU breaks PEAR\n  install path). (Tony)\n- Fixed bug #39884 (ReflectionParameter::getClass() throws exception for\n  type hint self). (thekid at php dot net)\n- Fixed bug #39878 (CURL doesn't compile on Sun Studio Pro). (Ilia)\n- Fixed bug #39873 (number_format() breaks with locale & decimal points).\n  (Ilia)\n- Fixed bug #39869 (safe_read does not initialize errno).\n  (michiel at boland dot org, Dmitry)\n- Fixed bug #39850 (SplFileObject throws contradictory/wrong error messages\n  when trying to open \"php://wrong\"). (Tony)\n- Fixed bug #39846 (Invalid IPv4 treated as valid). (Ilia)\n- Fixed bug #39845 (Persistent connections generate a warning in pdo_pgsql).\n  (Ilia)\n- Fixed bug #39832 (SOAP Server: parameter not matching the WSDL specified\n  type are set to 0). (Dmitry)\n- Fixed bug #39825 (foreach produces memory error). (Dmitry)\n- Fixed bug #39816 (apxs2filter ignores httpd.conf & .htaccess php config\n  settings). (Ilia)\n- Fixed bug #39815 (SOAP double encoding is not locale-independent). (Dmitry)\n- Fixed bug #39797 (virtual() does not reset changed INI settings). (Ilia)\n- Fixed bug #39795 (build fails on AIX because crypt_r() uses different\n  data struct). (Tony)\n- Fixed bug #39791 (Crash in strtotime() on overly long relative date\n  multipliers). (Ilia)\n- Fixed bug #39787 (PHP doesn't work with Apache 2.3).\n  (mv at binarysec dot com).\n- Fixed bug #39782 (setTime() on a DateTime constructed with a Weekday\n  yields incorrect results). (Ilia)\n- Fixed bug #39780 (PNG image with CRC/data error raises fatal error) (Pierre)\n- Fixed bug #39779 (Enable AUTH PLAIN mechanism in underlying libc-client).\n  (michael dot heimpold at s2000 dot tu-chemnitz dot de, Ilia)\n- Fixed bug #39775 (\"Indirect modification ...\" message is not shown).\n  (Dmitry)\n- Fixed bug #39763 (magic quotes are applied twice by ext/filter in\n  parse_str()). (Ilia)\n- Fixed bug #39760 (cloning fails on nested SimpleXML-Object). (Rob)\n- Fixed bug #39759 (Can't use stored procedures fetching multiple result\n  sets in pdo_mysql). (Ilia)\n- Fixed bug #39754 (Some POSIX extension functions not thread safe).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39751 (putenv crash on Windows). (KevinJohnHoffman at gmail.com)\n- Fixed bug #39732 (oci_bind_array_by_name doesn't work on Solaris 64bit).\n  (Tony)\n- Fixed bug #39724 (Broken build due to spl/filter usage of pcre extension).\n  (Tony, Ilia)\n- Fixed bug #39718 (possible crash if assert.callback is set in ini). (Ilia)\n- Fixed bug #39702 (php crashes in the allocator on linux-m68k). (Dmitry)\n- Fixed bug #39685 (iconv() - undefined function). (Hannes)\n- Fixed bug #39673 (file_get_contents causes bus error on certain offsets).\n  (Tony)\n- Fixed bug #39663 (Memory leak in pg_get_notify() and a possible memory\n  corruption on Windows in pgsql and pdo_pgsql extensions).\n  (Ilia, matteo at beccati dot com)\n- Fixed bug #39662 (Segfault when calling asXML() of a cloned\n  SimpleXMLElement). (Rob, Tony)\n- Fixed bug #39656 (crash when calling fetch() on a PDO statment object after\n  closeCursor()). (Ilia, Tony)\n- Fixed bug #39653 (ext/dba doesn't check for db-4.5 and db-4.4 when db4\n  support is enabled). (Tony)\n- Fixed bug #39652 (Wrong negative results from memory_get_usage()). (Dmitry)\n- Fixed bug #39648 (Implementation of PHP functions chown() and chgrp() are\n  not thread safe). (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39640 (Segfault with \"Allowed memory size exhausted\"). (Dmitry)\n- Fixed bug #39625 (Apache crashes on importStylesheet call). (Rob)\n- Fixed bug #39623 (thread safety fixes on *nix for putenv() & mime_magic).\n  (Ilia, wharmby at uk dot ibm dot com)\n- Fixed bug #39621 (str_replace() is not binary safe on strings with equal\n  length). (Tony)\n- Fixed bug #39613 (Possible segfault in imap initialization due to missing\n  module dependency). (wharmby at uk dot ibm dot com, Tony)\n- Fixed bug #39606 (Use of com.typelib_file in PHP.ini STILL causes A/V). (Rob)\n- Fixed bug #39602 (Invalid session.save_handler crashes PHP). (Dmitry)\n- Fixed bug #39596 (Creating Variant of type VT_ARRAY). (Rob)\n- Fixed bug #39583 (ftp_put() does not change transfer mode to ASCII). (Tony)\n- Fixed bug #39576 (array_walk() doesn't separate user data zval). (Tony)\n- Fixed bug #39575 (move_uploaded_file() no longer working (safe mode\n  related)). (Tony)\n- Fixed bug #39571 (timeout ssl:// connections). (Ilia)\n- Fixed bug #39564 (PDO::errorInfo() returns inconsistent information when\n  sqlite3_step() fails). (Tony)\n- Fixed bug #39548 (ZMSG_LOG_SCRIPT_NAME not routed to OutputDebugString()\n  on Windows). (Dmitry)\n- Fixed bug #39538 (fgetcsv can't handle starting newlines and trailing odd\n  number of backslashes). (David Soria Parra, Pierre)\n- Fixed bug #39534 (Error in maths to calculate of\n  ZEND_MM_ALIGNED_MIN_HEADER_SIZE). (wharmby at uk dot ibm dot com, Dmitry)\n- Fixed bug #39527 (Failure to retrieve results when multiple unbuffered,\n  prepared statements are used in pdo_mysql). (Ilia)\n- Fixed bug #39508 (imagefill crashes with small images 3 pixels or less).\n  (Pierre)\n- Fixed bug #39506 (Archive corrupt with ZipArchive::addFile method). (Pierre)\n- Fixed bug #39504 (xmlwriter_write_dtd_entity() creates Attlist tag, not\n  entity). (Hannes)\n- Fixed bug #39483 (Problem with handling of \\ char in prepared statements).\n  (Ilia, suhachov at gmail dot com)\n- Fixed bug #39458 (ftp_nlist() returns false on empty dirs). (Nuno)\n- Fixed bug #39454 (Returning a SOAP array segfaults PHP). (Dmitry)\n- Fixed bug #39450 (getenv() fills other super-globals). (Ilia, Tony)\n- Fixed bug #39449 (Overloaded array properties do not work correctly).\n  (Dmitry)\n- Fixed bug #39445 (Calling debug_backtrace() in the __toString()\n  function produces a crash). (Dmitry)\n- Fixed bug #39438 (Fatal error: Out of memory). (Dmitry)\n- Fixed bug #39435 ('foo' instanceof bar gives invalid opcode error). (Sara)\n- Fixed bug #39414 (Syntax error while compiling with Sun Workshop Complier).\n  (Johannes)\n- Fixed bug #39398 (Booleans are not automatically translated to integers).\n  (Ilia)\n- Fixed bug #39394 (Missing check for older variants of openssl). (Ilia)\n- Fixed bug #39367 (clearstatcache() doesn't clear realpath cache).\n  (j at pureftpd dot org, Dmitry)\n- Fixed bug #39366 (imagerotate does not use alpha with angle > 45 degrees)\n  (Pierre)\n- Fixed bug #39364 (Removed warning on empty haystack inside mb_strstr()).\n  (Ilia)\n- Fixed bug #39362 (Added an option to imap_open/imap_reopen to control the\n  number of connection retries). (Ilia)\n- Fixed bugs #39361 & #39400 (mbstring function overloading problem). (Seiji)\n- Fixed bug #39354 (Allow building of curl extension against libcurl\n  7.16.0). (Ilia)\n- Fixed bug #39350 (crash with implode(\"\\n\", array(false))). (Ilia)\n- Fixed bug #39344 (Unnecessary calls to OnModify callback routine for\n  an extension INI directive). (wharmby at uk dot ibm dot com, Dmitry)\n- Fixed bug #39320 (ZEND_HASH_APPLY_STOP causes deletion). (Marcus)\n- Fixed bug #39313 (spl_autoload triggers Fatal error). (Marcus)\n- Fixed bug #39300 (make install fails if wget is not available). (Tony)\n- Fixed bug #39297 (Memory corruption because of indirect modification of\n  overloaded array). (Dmitry)\n- Fixed bug #39286 (misleading error message when invalid dimensions are\n  given) (Pierre)\n- Fixed bug #39273 (imagecopyresized may ignore alpha channel) (Pierre)\n- Fixed bug #39265 (Fixed path handling inside mod_files.sh).\n  (michal dot taborsky at gmail dot com, Ilia)\n- Fixed bug #39217 (serialNumber might be -1 when the value is too large).\n  (Pierre, Tony)\n- Fixed bug #39215 (Inappropriate close of stdin/stdout/stderr). (Wez, Ilia)\n- Fixed bug #39201 (Possible crash in Apache 2 with 413 ErrorHandler). (Ilia)\n- Fixed bug #39151 (Parse error in recursiveiteratoriterator.php). (Marcus)\n- Fixed bug #39121 (Incorrect return array handling in non-wsdl soap client).\n  (Dmitry)\n- Fixed bug #39090 (DirectoryFilterDots doxygen docs and example is wrong).\n  (Marcus)\n- Fixed bug #38852 (XML-RPC Breaks iconv). (Hannes)\n- Fixed bug #38770 (unpack() broken with longs on 64 bit machines).\n  (Ilia, David Soria Parra).\n- Fixed bug #38698 (for some keys cdbmake creates corrupted db and cdb can't\n  read valid db). (Marcus)\n- Fixed bug #38680 (Added missing handling of basic types in json_decode).\n  (Ilia)\n- Fixed bug #38604 (Fixed request time leak inside foreach() when iterating\n  through virtual properties). (Dmitry)\n- Fixed bug #38602 (header( \"HTTP/1.0 ...\" ) does not change proto version).\n  (Ilia)\n- Fixed bug #38542 (proc_get_status() returns wrong PID on windows). (Nuno)\n- Fixed bug #38536 (SOAP returns an array of values instead of an object).\n  (Dmitry)\n- Fixed bug #38456 (Apache2 segfaults when virtual() is called in .php\n  ErrorDocument). (Ilia)\n- Fixed bug #38325 (spl_autoload_register() gives wrong line for \"class not\n  found\"). (Ilia)\n- Fixed bug #38319 (Remove bogus warnings from persistent PDO connections).\n  (Ilia)\n- Fixed bug #38274 (Memlimit fatal error sent to \"wrong\" stderr when using\n  fastcgi). (Dmitry)\n- Fixed bug #38252 (Incorrect PDO error message on invalid default fetch\n  mode). (Ilia)\n- Fixed bug #37927 (Prevent trap when COM extension processes argument of\n  type VT_DISPATCH|VT_REF) (Andy)\n- Fixed bug #37773 (iconv_substr() gives \"Unknown error\" when string\n  length = 1\"). (Ilia)\n- Fixed bug #37627 (session save_path check checks the parent directory).\n  (Ilia)\n- Fixed bug #37619 (proc_open() closes stdin on fork() failure).\n  (jdolecek at NetBSD dot org, Nuno)\n- Fixed bug #37588 (COM Property propputref converts to PHP function\n  and can't be accesed). (Rob)\n- Fixed bug #36975 (natcasesort() causes array_pop() to misbehave).\n  (Hannes)\n- Fixed bug #36812 (pg_execute() modifies input array). (Ilia)\n- Fixed bug #36798 (Error parsing named parameters with queries containing\n  high-ascii chars). (Ilia)\n- Fixed bug #36644 (possible crash in variant_date_from_timestamp()). (Ilia)\n- Fixed bug #36427 (proc_open() / proc_close() leak handles on windows).\n  (jdolecek at NetBSD dot org, Nuno)\n- Fixed bug #36392 (wrong number of decimal digits with %e specifier in\n  sprintf). (Matt,Ilia)\n- Fixed bug #36214 (__get method works properly only when conditional\n  operator is used). (Dmitry)\n- Fixed bug #35634 (Erroneous \"Class declarations may not be nested\"\n  error raised). (Carl P. Corliss, Dmitry)\n- Fixed bug #35106 (nested foreach fails when array variable has a\n  reference). (Dmitry)\n- Fixed bug #34564 (COM extension not returning modified \"out\" argument) (Andy)\n- Fixed bug #33734 (Something strange with COM Object). (Rob)\n- Fixed bug #33386 (ScriptControl only sees last function of class). (Rob)\n- Fixed bug #33282 (Re-assignment by reference does not clear the is_ref\n  flag) (Ilia, Dmitry, Matt Wilmas)\n- Fixed bug #30074 (apparent symbol table error with\n  extract($blah, EXTR_REFS)) (Brian)\n- Fixed bug #29840 (is_executable() does not honor safe_mode_exec_dir\n  setting). (Ilia)\n- Fixed PECL bug #7295 (ORA-01405: fetched column value is NULL on LOB\n  fields). (Tony)\n\n02 Nov 2006, PHP 5.2.0\n- Updated bundled OpenSSL to version 0.9.8d in the Windows distro. (Edin)\n- Updated Postgresql client libraries to 8.1.4 in the Windows distro. (Edin)\n- Updated PCRE to version 6.7. (Ilia)\n- Updated libsqlite in ext/pdo_sqlite to 3.3.7. (Ilia)\n- Updated bundled MySQL client library to version 5.0.22 in the Windows\n  distribution. (Edin)\n- Updated timezonedb to version 2006.7. (Derick)\n\n- Added ability to make SOAP call userspace PHP<->XML converters. (Dmitry)\n- Added support for character sets in pg_escape_string() for PostgreSQL 8.1.4\n  and higher. (Ilia)\n- Added support for character sets in PDO quote() method for PostgreSQL 8.1.4\n  and higher. (Ilia)\n- Added DSA key generation support to openssl_pkey_new(), FR #38731 (marci\n  at balabit dot hu, Tony)\n- Added SoapServer::setObject() method (it is a simplified version of\n  SoapServer::setClass() method). (Dmitry)\n- Added support for hexadecimal entity in imagettftext() for the bundled GD.\n  (Pierre)\n- Added support for httpOnly flag for session extension and cookie setting\n  functions. (Scott MacVicar, Ilia)\n- Added version specific registry keys to allow different configurations for\n  different php version. (Richard, Dmitry)\n- Added \"PHPINIDir\" Apache directive to apache and apache_hooks SAPIs.\n  (Dmitry)\n- Added an optional boolean parameter to memory_get_usage() and\n  memory_get_peak_usage() to get memory size allocated by emalloc() or real\n  size of memory allocated from system. (Dmitry)\n- Added Zip Archive extension. (Pierre)\n- Added RFC1867 fileupload processing hook. (Stefan E.)\n- Added JSON and Filter extensions. (Derick, Rasmus)\n- Added error messages to disk_free_space() and disk_total_space() functions.\n  FR #37971 (Tony)\n- Added PATHINFO_FILENAME option to pathinfo() to get the filename.\n  (Toby S. and Christian S.)\n- Added array_fill_keys() function. (Marcus, Matt Wilmas)\n- Added posix_initgroups() function. (Ilia)\n- Added an optional parameter to parse_url() to allow retrieval of distinct\n  URL components. (Ilia)\n- Added optional parameter to http_build_query() to allow specification of\n  string separator. (Ilia)\n- Added image_type_to_extension() function. (Hannes, Ilia)\n- Added allow_url_include ini directive to complement allow_url_fopen. (Rasmus)\n- Added automatic module globals management. (Dmitry)\n- Added RFC2397 (data: stream) support. (Marcus)\n- Added new error mode E_RECOVERABLE_ERROR. (Derick, Marcus, Tony)\n- Added support for getenv() input filtering. (Rasmus)\n- Added support for constructors in interfaces to force constructor signature\n  checks in implementations. (Marcus)\n- Added memory_get_peak_usage() function for retrieving peak memory usage of\n  a PHP script. (Ilia)\n- Added pg_field_table() function. (Edin)\n- Added SimpleXMLElement::saveXML() as an alias for SimpleXMLElement::asXML().\n  (Hannes)\n- Added DOMNode::getNodePath() for getting an XPath for a node. (Christian)\n- Added gmp_nextprime() function. (ants dot aasma at gmail dot com, Tony)\n- Added error_get_last() function. (Mike)\n\n- Removed current working directory from the php.ini search path for CLI and\n  re-added it for other SAPIs (restore to pre 5.1.x behavior). (Edin)\n- Moved extensions to PECL:\n  . ext/filepro (Derick, Tony)\n  . ext/hwapi (Derick, Tony)\n- Disabled CURLOPT_FOLLOWLOCATION in curl when open_basedir or\n  safe_mode are enabled. (Stefan E., Ilia)\n\n- Increased default memory limit to 16 megabytes to accommodate for a more\n  accurate memory utilization measurement.\n- In addition to path to php.ini, PHPRC now may specify full file name.\n  (Dmitry)\n\n- Optimized array/HashTable copying. (Matt Wilmas, Dmitry)\n- Optimized zend_try/zend_catch macros by eliminating memcpy(3). (Dmitry)\n- Optimized require_once() and include_once() by eliminating fopen(3) on\n  second usage. (Dmitry)\n- Optimized request shutdown sequence. Restoring ini directives now iterates\n  only over modified directives instead of all. (Dmitry)\n\n- Changed priority of PHPRC environment variable on win32 to be higher then\n  value from registry. (Dmitry)\n- Changed __toString() to be called wherever applicable. (Marcus)\n- Changed E_ALL error reporting mode to include E_RECOVERABLE_ERROR. (Marcus)\n- Changed realpath cache to be disabled when \"open_basedir\" or \"safe_mode\"\n  are enabled on per-request basis. (Ilia)\n\n- Improved SNMP extension: (Jani)\n  . Renamed snmp_set_oid_numeric_print() to snmp_set_oid_output_format().\n  . Added 2 new constants: SNMP_OID_OUTPUT_FULL and SNMP_OID_OUTPUT_NUMERIC\n  . Fixed bug #37564 (AES privacy encryption not possible due to net-snmp 5.2\n    compatibility issue). (Patch: scott dot moynes+php at gmail dot com)\n- Improved OpenSSL extension: (Pierre)\n  . Added support for all supported algorithms in openssl_verify\n  . Added openssl_pkey_get_details, returns the details of a key\n  . Added x509 v3 extensions support\n  . Added openssl_csr_get_subject() and openssl_csr_get_public_key()\n  . Added 3 new constants OPENSSL_VERSION_TEXT and OPENSSL_VERSION_NUMBER and\n    OPENSSL_KEYTYPE_EC\n- Improved the Zend memory manager: (Dmitry)\n  . Removed unnecessary \"--disable-zend-memory-manager\" configure option.\n  . Added \"--enable-malloc-mm\" configure option which is enabled by default in\n    debug builds to allow using internal and external memory debuggers.\n  . Allow tweaking the memory manager with ZEND_MM_MEM_TYPE and ZEND_MM_SEG_SIZE\n    environment variables.\n  . For more information: Zend/README.ZEND_MM\n- Improved safe_mode check for the error_log() function. (Ilia)\n- Improved the error reporting in SOAP extension on request failure. (Ilia)\n- Improved crypt() on win32 to be about 10 times faster and to have friendlier\n  license. (Frank, Dmitry)\n- Improved performance of the implode() function on associated arrays. (Ilia)\n- Improved performance of str_replace() when doing 1 char to 1 char or 1 char\n  to many chars replacement. (Ilia)\n- Improved apache2filter SAPI:\n  . Allowed PHP to be an arbitrary filter in the chain and read the script from\n    the Apache stream. (John)\n  . Added support for apache2filter in the Windows build including binary\n    support for both Apache 2.0.x (php5apache2_filter.dll) and Apache 2.2.x\n    (php5apache2_2_filter.dll). (Edin)\n- Improved apache2handler SAPI:\n  . Changed ap_set_content_type() to be called only once. (Mike)\n  . Added support for Apache 2.2 handler in the Windows distribution. (Edin)\n- Improved FastCGI SAPI: (Dmitry)\n  . Removed source compatibility with libfcgi.\n  . Optimized access to FastCGI environment variables by using HashTable\n    instead of linear search.\n  . Allowed PHP_FCGI_MAX_REQUESTS=0 that assumes no limit.\n  . Allowed PHP_FCGI_CHILDREN=0 that assumes no worker children. (FastCGI\n    requests are handled by main process itself)\n- Improved CURL:\n  . Added control character checks for \"open_basedir\" and \"safe_mode\" checks.\n    (Ilia)\n  . Added implementation of curl_multi_info_read(). (Brian)\n- Improved PCRE: (Andrei)\n  . Added run-time configurable backtracking/recursion limits.\n  . Added preg_last_error(). (Andrei)\n- Improved PDO:\n  . Added new attribute ATTR_DEFAULT_FETCH_MODE. (Pierre)\n  . Added FETCH_PROPS_LATE. (Marcus)\n- Improved SPL: (Marcus)\n  . Made most iterator code exception safe.\n  . Added RegExIterator and RecursiveRegExIterator.\n  . Added full caching support and ArrayAccess to CachingIterator.\n  . Added array functions to ArrayObject/ArrayIterator and made them faster.\n  . Added support for reading csv and skipping empty lines in SplFileObject.\n  . Added CachingIterator::TOSTRING_USE_INNER, calls inner iterator __toString.\n  . Added ability to set the CSV separator per SplFileObject.\n- Improved xmlReader: (Rob)\n  . Added readInnerXml(), xmlReader::setSchema().\n  . Added readInnerXML(), readOuterXML(), readString(), setSchema(). (2.6.20+)\n  . Changed to passing libxml options when loading reader.\n\n- Fixed invalid read in imagecreatefrompng when an empty file is given\n  (Pierre, Tony)\n- Fixed infinite loop when a wrong color index is given to imagefill (Pierre)\n- Fixed mess with CGI/CLI -d option (now it works with cgi; constants are\n  working exactly like in php.ini; with FastCGI -d affects all requests).\n  (Dmitry)\n- Fixed missing open_basedir check inside chdir() function. (Ilia)\n- Fixed overflow on 64bit systems in str_repeat() and wordwrap(). (Stefan E.)\n- Fixed XSLTProcessor::importStylesheet() to return TRUE on success\n  (Christian)\n- Fixed leaks in openssl_csr_sign and openssl_csr_new (Pierre)\n- Fixed phpinfo() cutoff of variables at \\0. (Ilia)\n- Fixed a bug in the filter extension that prevented magic_quotes_gpc from\n  being applied when RAW filter is used. (Ilia)\n- Fixed memory leaks in openssl streams context options. (Pierre)\n- Fixed handling of extremely long paths inside tempnam() function. (Ilia)\n- Fixed bug #39721 (Runtime inheritance causes data corruption). (Dmitry)\n- Fixed bug #39304 (Segmentation fault with list unpacking of string offset).\n  (Dmitry)\n- Fixed bug #39192 (Not including nsapi.h properly with SJSWS 7). This will\n  make PHP 5.2 compatible to new Sun Webserver. (Uwe)\n- Fixed bug #39140 (Uncaught exception may cause crash). (Dmitry)\n- Fixed bug #39125 (Memleak when reflecting non-existing class/method). (Tony)\n- Fixed bug #39067 (getDeclaringClass() and private properties). (Tony)\n- Fixed bug #39039 (SSL: fatal protocol error when fetching HTTPS from servers\n  running Google web server). (Ilia)\n- Fixed bug #39035 (Compatibility issue between DOM and\n  zend.ze1_compatibility_mode). (Rob)\n- Fixed bug #39034 (curl_exec() with return transfer returns TRUE on empty\n  files). (Ilia)\n- Fixed bug #39032 (strcspn() stops on null character). (Tony)\n- Fixed bug #39020 (PHP in FastCGI server mode crashes). (Dmitry)\n- Fixed bug #39017 (foreach(($obj = new myClass) as $v); echo $obj;\n  segfaults). (Dmitry)\n- Fixed bug #39004 (Fixed generation of config.nice with autoconf 2.60). (Ilia)\n- Fixed bug #39003 (__autoload() is called for type hinting). (Dmitry, Tony)\n- Fixed bug #39001 (ReflectionProperty returns incorrect declaring class for\n  protected properties). (Tony)\n- Fixed bug #38996 (PDO_MYSQL doesn't check connections for liveness). (Tony)\n- Fixed bug #38993 (Fixed safe_mode/open_basedir checks for session.save_path,\n  allowing them to account for extra parameters). (Ilia)\n- Fixed bug #38989 (Absolute path with slash at beginning doesn't work on win).\n  (Dmitry)\n- Fixed bug #38985 (Can't cast COM objects). (Wez)\n- Fixed bug #38981 (using FTP URLs in get_headers() causes crash). (Tony)\n- Fixed bug #38963 (Fixed a possible open_basedir bypass in tempnam()). (Ilia)\n- Fixed bug #38961 (metaphone() results in segmentation fault on NetBSD).\n  (Tony)\n- Fixed bug #38949 (Cannot get xmlns value attribute). (Rob)\n- Fixed bug #38942 (Double old-style-ctor inheritance). (Dmitry)\n- Fixed bug #38941 (imap extension does not compile against new version of the\n  imap library). (Ilia)\n- Fixed bug #38934 (move_uploaded_file() cannot read uploaded file outside of\n  open_basedir). (Ilia)\n- Fixed bug #38904 (apache2filter changes cwd to /). (Ilia, Hannes)\n- Fixed bug #38891 (get_headers() do not work with curl-wrappers). (Ilia)\n- Fixed bug #38882 (ldap_connect causes segfault with newer versions of\n  OpenLDAP). (Tony)\n- Fixed bug #38859 (parse_url() fails if passing '@' in passwd). (Tony)\n- Fixed bug #38850 (lookupNamespaceURI doesn't return default namespace). (Rob)\n- Fixed bug #38844 (curl_easy_strerror() is defined only since cURL 7.12.0).\n  (Tony)\n- Fixed bug #38813 (DOMEntityReference->__construct crashes when called\n  explicitly). (Rob)\n- Fixed bug #38808 (\"maybe ref\" issue for current() and others). (Dmitry)\n- Fixed bug #38779 (engine crashes when require()'ing file with syntax error\n  through userspace stream wrapper). (Tony, Dmitry)\n- Fixed bug #38772 (inconsistent overriding of methods in different visibility\n  contexts). (Dmitry)\n- Fixed bug #38759 (PDO sqlite2 empty query causes segfault). (Tony)\n- Fixed bug #38721 (Invalid memory read in date_parse()). (Tony, Derick)\n- Fixed bug #38700 (SoapClient::__getTypes never returns). (Dmitry)\n- Fixed bug #38693 (curl_multi_add_handle() set curl handle to null). (Ilia)\n- Fixed bug #38687 (sockaddr local storage insufficient for all sock families).\n  (Sara)\n- Fixed bug #38661 (mixed-case URL breaks url-wrappers). (Ilia)\n- Fixed bug #38653 (memory leak in ReflectionClass::getConstant()). (Tony)\n- Fixed bug #38649 (uninit'd optional arg in stream_socket_sendto()). (Sara)\n- Fixed bug #38637 (curl_copy_handle() fails to fully copy the cURL handle).\n  (Tony, Ilia)\n- Fixed bug #38624 (Strange warning when incrementing an object property and\n  exception is thrown from __get method). (Tony)\n- Fixed bug #38623 (leaks in a tricky code with switch() and exceptions).\n  (Dmitry)\n- Fixed bug #38579 (include_once() may include the same file twice). (Dmitry)\n- Fixed bug #38574 (missing curl constants and improper constant detection).\n  (Ilia)\n- Fixed bug #38543 (shutdown_executor() may segfault when memory_limit is too\n  low). (Dmitry)\n- Fixed bug #38535 (memory corruption in pdo_pgsql driver on error retrieval\n  inside a failed query executed via query() method). (Ilia)\n- Fixed bug #38534 (segfault when calling setlocale() in userspace session\n  handler). (Tony)\n- Fixed bug #38524 (strptime() does not initialize the internal date storage\n  structure). (Ilia)\n- Fixed bug #38511, #38473, #38263 (Fixed session extension request shutdown\n  order to ensure it is shutdown before the extensions it may depend on).\n  (Ilia)\n- Fixed bug #38488 (Access to \"php://stdin\" and family crashes PHP on win32).\n  (Dmitry)\n- Fixed bug #38474 (getAttribute select attribute by order, even when\n  prefixed). (Rob)\n- Fixed bug #38467 (--enable-versioning causes make fail on OS X). (Tony)\n- Fixed bug #38465 (ReflectionParameter fails if default value is an access\n  to self::). (Johannes)\n- Fixed bug #38464 (array_count_values() mishandles numeric strings).\n  (Matt Wilmas, Ilia)\n- Fixed bug #38461 (setting private attribute with __set() produces\n  segfault). (Tony)\n- Fixed bug #38458, PECL bug #8944, PECL bug #7775 (error retrieving columns\n  after long/text columns with PDO_ODBC). (Wez)\n- Fixed bug #38454 (warning upon disabling handler via\n  xml_set_element_handler). (dtorop933 at gmail dot com, Rob)\n- Fixed bug #38451 (PDO_MYSQL doesn't compile on Solaris). (Tony)\n- Fixed bug #38450 (constructor is not called for classes used in userspace\n  stream wrappers). (Tony)\n- Fixed bug #38438 (DOMNodeList->item(0) segfault on empty NodeList). (Ilia)\n- Fixed bug #38431 (xmlrpc_get_type() crashes PHP on objects). (Tony)\n- Fixed bug #38427 (unicode causes xml_parser to misbehave). (Rob)\n- Fixed bug #38424 (Different attribute assignment if new or existing). (Rob)\n- Fixed bug #38400 (Use of com.typelib_file may cause a crash). (Ilia)\n- Fixed bug #38394 (PDO fails to recover from failed prepared statement\n  execution). (Ilia)\n- Fixed bug #38377 (session_destroy() gives warning after\n  session_regenerate_id()). (Ilia)\n- Implemented #38357 (dbase_open can't open DBase 3 dbf file).\n  (rodrigo at fabricadeideias dot com, Mike)\n- Fixed bug #38354 (Unwanted reformatting of XML when using AsXML). (Christian)\n- Fixed bug #38347 (Segmentation fault when using foreach with an unknown/empty\n  SimpleXMLElement). (Tony)\n- Fixed bug #38322 (reading past array in sscanf() leads to arbitrary code\n  execution). (Tony)\n- Fixed bug #38315 (Constructing in the destructor causes weird behavior).\n  (Dmitry)\n- Fixed bug #38303 (spl_autoload_register() suppress all errors silently).\n  (Ilia)\n- Fixed bug #38290 (configure script ignores --without-cdb,inifile,flatfile).\n  (Marcus)\n- Fixed bug #38289 (segfault in session_decode() when _SESSION is NULL).\n  (Tony)\n- Fixed bug #38287 (static variables mess up global vars). (Dmitry)\n- Fixed bug #38278 (session_cache_expire()'s value does not match phpinfo's\n  session.cache_expire). (Tony)\n- Fixed bug #38276 (file_exists() works incorrectly with long filenames\n  on Windows). (Ilia, Tony)\n- Fixed bug #38269 (fopen wrapper doesn't fail on invalid hostname with\n  curlwrappers enabled). (Tony)\n- Fixed bug #38265 (heap corruption). (Dmitry)\n- Fixed bug #38261 (openssl_x509_parse() leaks with invalid cert) (Pierre)\n- Fixed bug #38255 (openssl possible leaks while passing keys) (Pierre)\n- Fixed bug #38253 (PDO produces segfault with default fetch mode). (Tony)\n- Fixed bug #38251 (socket_select() and invalid arguments). (Tony)\n- Fixed bug #38236 (Binary data gets corrupted on multipart/formdata POST).\n  (Ilia)\n- Fixed bug #38234 (Exception in __clone makes memory leak). (Dmitry, Nuno)\n- Fixed bug #38229 (strtotime() does not parse YYYY-MM format). (Ilia)\n- Fixed bug #38224 (session extension can't handle broken cookies). (Ilia)\n- Fixed bug #38220 (Crash on some object operations). (Dmitry)\n- Fixed bug #38217 (ReflectionClass::newInstanceArgs() tries to allocate too\n  much memory). (Tony)\n- Fixed bug #38214 (gif interlace output cannot work). (Pierre)\n- Fixed bug #38213, #37611, #37571 (wddx encoding fails to handle certain\n  characters). (Ilia)\n- Fixed bug #38212 (Segfault on invalid imagecreatefromgd2part() parameters).\n  (Pierre)\n- Fixed bug #38211 (variable name and cookie name match breaks script\n  execution). (Dmitry)\n- Fixed bug #38199 (fclose() unable to close STDOUT and STDERR). (Tony)\n- Fixed bug #38198 (possible crash when COM reports an exception). (Ilia)\n- Fixed bug #38194 (ReflectionClass::isSubclassOf() returns TRUE for the\n  class itself). (Ilia)\n- Fixed bug #38183 (disable_classes=Foobar causes disabled class to be\n  called Foo). (Jani)\n- Fixed bug #38179 (imagecopy from a palette to a truecolor image loose alpha\n  channel) (Pierre)\n- Fixed bug #38173 (Freeing nested cursors causes OCI8 to segfault). (Tony)\n- Fixed bug #38168 (Crash in pdo_pgsql on missing bound parameters). (Ilia)\n- Fixed bug #38161 (oci_bind_by_name() returns garbage when Oracle didn't set\n  the variable). (Tony)\n- Fixed bug #38146 (Cannot use array returned from foo::__get('bar') in write\n  context). (Dmitry)\n- Fixed bug #38132 (ReflectionClass::getStaticProperties() retains \\0 in key\n  names). (Ilia)\n- Fixed bug #38125 (undefined reference to spl_dual_it_free_storage). (Marcus)\n- Fixed bug #38112 (corrupted gif segfaults) (Pierre)\n- Fixed bug #38096 (large timeout values ignored on 32bit machines in\n  stream_socket_accept() and stream_socket_client()). (Ilia)\n- Fixed bug #38086 (stream_copy_to_stream() returns 0 when maxlen is bigger\n  than the actual length). (Tony)\n- Fixed bug #38072 (boolean arg for mysqli_autocommit() is always true on\n  Solaris). (Tony)\n- Fixed bug #38067 (Parameters are not decoded from utf-8 when using encoding\n  option). (Dmitry)\n- Fixed bug #38064 (ignored constructor visibility). (Marcus)\n- Fixed bug #38055 (Wrong interpretation of boolean parameters). (Dmitry)\n- Fixed bug #38047 (\"file\" and \"line\" sometimes not set in backtrace from\n  inside error handler). (Dmitry)\n- Fixed bug #38019 (segfault extending mysqli class). (Dmitry)\n- Fixed bug #38005 (SoapFault faultstring doesn't follow encoding rules).\n  (Dmitry)\n- Fixed bug #38004 (Parameters in SoapServer are decoded twice). (Dmitry)\n- Fixed bug #38003 (in classes inherited from MySQLi it's possible to call\n  private constructors from invalid context). (Tony)\n- Fixed bug #37987 (invalid return of file_exists() in safe mode). (Ilia)\n- Fixed bug #37947 (zend_ptr_stack reallocation problem). (Dmitry)\n- Fixed bug #37945 (pathinfo() cannot handle argument with special characters\n  like German \"Umlaut\"). (Mike)\n- Fixed bug #37931 (possible crash in OCI8 after database restart\n  when using persistent connections). (Tony)\n- Fixed bug #37923 (Display constant value in reflection::export). (Johannes)\n- Fixed bug #37920 (compilation problems on z/OS). (Tony)\n- Fixed bug #37870 (pgo_pgsql tries to de-allocate unused statements).\n  (Ilia, ce at netage dot bg)\n- Fixed bug #37864 (file_get_contents() leaks on empty file). (Hannes)\n- Fixed bug #37862 (Integer pointer comparison to numeric value).\n  (bugs-php at thewrittenword dot com)\n- Fixed bug #37846 (wordwrap() wraps incorrectly). (ddk at krasn dot ru, Tony)\n- Fixed bug #37816 (ReflectionProperty does not throw exception when accessing\n  protected attribute). (Marcus)\n- Fixed bug #37811 (define not using toString on objects). (Marcus)\n- Fixed bug #37807 (segmentation fault during SOAP schema import). (Tony)\n- Fixed bug #37806 (weird behavior of object type and comparison). (Marcus)\n- Fixed bug #37780 (memory leak trying to execute a non existing file (CLI)).\n  (Mike)\n- Fixed bug #37779 (empty include_path leads to search for files inside /).\n  (jr at terragate dot net, Ilia)\n- Fixed bug #37747 (strtotime segfaults when given \"nextyear\"). (Derick)\n- Fixed bug #37720 (merge_php_config scrambles values).\n  (Mike, pumuckel at metropolis dot de)\n- Fixed bug #37709 (Possible crash in PDO::errorCode()). (Ilia)\n- Fixed bug #37707 (clone without assigning leaks memory). (Ilia, Nuno, Dmitri)\n- Fixed bug #37705 (Semaphore constants not available). (Ilia)\n- Fixed bug #37671 (MySQLi extension fails to recognize BIT column). (Ilia)\n- Fixed bug #37667 (Object is not added into array returned by __get). (Marcus)\n- Fixed bug #37635 (parameter of pcntl signal handler is trashed). (Mike)\n- Fixed bug #37632 (Protected method access problem). (Marcus)\n- Fixed bug #37630 (MySQL extensions should link against thread safe client\n  libs if built with ZTS). (Mike)\n- Fixed bug #37620 (mysqli_ssl_set validation is inappropriate). (Georg)\n- Fixed bug #37616 (DATE_RFC822 does not product RFC 822 dates).\n  (Hannes Magnusson, Derick)\n- Fixed bug #37614 (Class name lowercased in error message). (Johannes)\n- Fixed bug #37587 (var without attribute causes segfault). (Marcus)\n- Fixed bug #37586 (Bumped minimum PCRE version to 6.6, needed for recursion\n  limit support). (Ilia)\n- Fixed bug #37581 (oci_bind_array_by_name clobbers input array when using\n  SQLT_AFC, AVC). (Tony)\n- Fixed bug #37569 (WDDX incorrectly encodes high-ascii characters). (Ilia)\n- Fixed bug #37565 (Using reflection::export with simplexml causing a crash).\n  (Marcus)\n- Fixed bug #37564 (AES privacy encryption not possible due to net-snmp 5.2\n  compatibility issue). (Jani, patch by scott dot moynes+php at gmail dot com)\n- Fixed bug #37563 (array_key_exists performance is poor for &$array). (Ilia)\n- Fixed bug #37558 (timeout functionality doesn't work after a second PHP\n  start-up on the same thread). (p dot desarnaud at wanadoo dot fr)\n- Fixed bug #37531 (oci8 persistent connection corruption). (Tony)\n- Fixed bug #37523 (namespaces added too late, leads to missing xsi:type\n  attributes. Incompatibility with libxml2-2.6.24). (Dmitry)\n- Fixed bug #37514 (strtotime doesn't assume year correctly). (Derick)\n- Fixed bug #37510 (session_regenerate_id changes session_id() even on\n  failure). (Hannes)\n- Fixed bug #37505 (touch() truncates large files). (Ilia)\n- Fixed bug #37499 (CLI segmentation faults during cleanup with sybase-ct\n  extension enabled). (Tony)\n- Fixed bug #37496 (FastCGI output buffer overrun). (Piotr, Dmitry)\n- Fixed bug #37487 (oci_fetch_array() array-type should always default to\n  OCI_BOTH). (Tony)\n- Fixed bug #37457 (Crash when an exception is thrown in accept() method of\n  FilterIterator). (Marcus)\n- Fixed bug #37456 (DOMElement->setAttribute() loops forever). (Rob)\n- Fixed bug #37445 (Fixed crash in pdo_mysql resulting from premature object\n  destruction). (Ilia)\n- Fixed bug #37428 (PHP crashes on windows if there are start-up errors and\n  event log is used for logging them). (Edin)\n- Fixed bug #37418 (tidy module crashes on shutdown). (Tony)\n- Fixed bug #37416 (iterator_to_array() hides exceptions thrown in rewind()\n  method). (Tony)\n- Fixed bug #37413 (Rejected versions of flex that don't work). (Ilia)\n- Fixed bug #37395 (recursive mkdir() fails to create nonexistent directories\n  in root dir). (Tony)\n- Fixed bug #37394 (substr_compare() returns an error when offset equals\n  string length). (Ilia)\n- Fixed bug #37392 (Unnecessary call to OCITransRollback() at the end of\n  request). (Tony)\n- Fixed bug #37376 (fastcgi.c compile fail with gcc 2.95.4). (Ilia)\n- Fixed bug #37368 (Incorrect timestamp returned for strtotime()). (Derick)\n- Fixed bug #37363 (PDO_MYSQL does not build if no other mysql extension is\n  enabled). (Mike)\n- Fixed bug #37348 (make PEAR install ignore open_basedir). (Ilia)\n- Fixed bug #37341 ($_SERVER in included file is shortened to two entries,\n  if $_ENV gets used). (Dmitry)\n- Fixed bug #37313 (sigemptyset() used without including <signal.h>).\n  (jdolecek)\n- Fixed bug #37306 (max_execution_time = max_input_time). (Dmitry)\n- Fixed bug #37278 (SOAP not respecting uri in __soapCall). (Dmitry)\n- Fixed bug #37265 (Added missing safe_mode & open_basedir checks to\n  imap_body()). (Ilia)\n- Fixed bug #37262 (var_export() does not escape \\0 character). (Ilia)\n- Fixed bug #37256 (php-fastcgi doesn't handle connection abort). (Dmitry)\n- Fixed bug #37244 (Added strict flag to base64_decode() that enforces\n  RFC3548 compliance). (Ilia)\n- Fixed bug #37144 (PHP crashes trying to assign into property of dead object).\n  (Dmitry)\n- Fixed bug #36949 (invalid internal mysqli objects dtor). (Mike)\n- Implement #36732 (req/x509 extensions support for openssl_csr_new and\n  openssl_csr_sign) (ben at psc dot edu, Pierre)\n- Fixed bug #36759 (Objects destructors are invoked in wrong order when script\n  is finished). (Dmitry)\n- Fixed bug #36681 (pdo_pgsql driver incorrectly ignored some errors).\n  (Wez, Ilia)\n- Fixed bug #36630 (umask not reset at the end of the request). (Ilia)\n- Fixed bug #36515 (Unlinking buckets from non-existent brigades). (Sara)\n- Fixed bug #35973 (Error ORA-24806 occurs when trying to fetch a NCLOB\n  field). (Tony)\n- Fixed bug #35886 (file_get_contents() fails with some combinations of\n  offset & maxlen). (Nuno)\n- Fixed bug #35512 (Lack of read permission on main script results in\n  E_WARNING rather then E_ERROR). (Ilia)\n- Fixed bug #34180 (--with-curlwrappers causes PHP to disregard some HTTP\n  stream context options). (Mike)\n- Fixed bug #34066 (recursive array_walk causes segfault). (Tony)\n- Fixed bug #34065 (throw in foreach causes memory leaks). (Dmitry)\n- Fixed bug #34005 (oci_password_change() fails).\n  (pholdaway at technocom-wireless dot com, Tony)\n- Fixed bug #33895 (Missing math constants). (Hannes)\n- Fixed bug #33770 (https:// or ftps:// do not work when --with-curlwrappers\n  is used and ssl certificate is not verifiable). (Ilia)\n- Fixed bug #29538 (number_format and problem with 0). (Matt Wilmas)\n- Implement #28382 (openssl_x509_parse() extensions support) (Pierre)\n- Fixed PECL bug #9061 (oci8 might reuse wrong persistent connection). (Tony)\n- Fixed PECL bug #8816 (issue in php_oci_statement_fetch with more than one\n  piecewise column) (jeff at badtz-maru dot com, Tony)\n- Fixed PECL bug #8112 (OCI8 persistent connections misbehave when Apache\n  process times out). (Tony)\n- Fixed PECL bug #7755 (error selecting DOUBLE fields with PDO_ODBC).\n  (\"slaws\", Wez)\n\n\n04 May 2006, PHP 5.1.4\n- Added \"capture_peer_cert\" and \"capture_peer_cert_chain\" context options\n  for SSL streams. (Wez).\n- Added PDO::PARAM_EVT_* family of constants. (Sara)\n- Fixed possible crash in highlight_string(). (Dmitry)\n- Fixed bug #37291 (FastCGI no longer works with isapi_fcgi.dll). (Dmitry)\n- Fixed bug #37277 (cloning Dom Documents or Nodes does not work). (Rob)\n- Fixed bug #37276 (problems with $_POST array). (Dmitry)\n- Fixed bug #36632 (bad error reporting for pdo_odbc exec UPDATE). (Wez).\n- Fixed bug #35552 (crash when pdo_odbc prepare fails). (Wez).\n\n28 Apr 2006, PHP 5.1.3\n- Updated bundled PCRE library to version 6.6. (Andrei)\n- Moved extensions to PECL:\n  . ext/msession (Derick)\n- Reimplemented FastCGI interface. (Dmitry)\n- Improved SPL: (Marcus)\n  - Fixed issues with not/double calling of constructors of SPL iterators.\n  - Fixed issues with info-class/file-class in SPL directory handling classes.\n  - Fixed ArrayIterator::seek().\n  - Added SimpleXMLIterator::count().\n  - Dropped erroneous RecursiveDirectoryIterator::getSubPathInfo().\n- Improved SimpleXML: (Marcus, Rob)\n  . Added SimpleXMLElement::getName() to retrieve name of element.\n  . Added ability to create elements on the fly.\n  . Added addChild() method for element creation supporting namespaces.\n  . Added addAttribute() method for attribute creation supporting namespaces.\n  . Added ability to delete specific elements and attributes by offset.\n- Improved Reflection API: (Marcus)\n  . Added ReflectionClass::newInstanceArgs($args).\n  . Added ability to analyze extension dependency.\n  . Added ReflectionFunction::isDeprecated() and constant IS_DEPRECATED.\n  . Added ReflectionParameter::getDeclaringClass().\n  . Changed reflection constants to be prefixed with IS_. (Johannes)\n- Improved cURL extension: (Ilia)\n  . Added curl_setopt_array() function that allows setting of multiple\n    options via an associated array.\n  . Added the ability to retrieve the request message sent to the server.\n- Improved GD extension: (Pierre)\n  . Added a weak/tolerant mode to the JPEG loader.\n  . Added filtering mode option to imagepng() to allow reducing file size.\n  . Fixed imagecolorallocate() and imagecolorallocatelapha() to return FALSE\n    on error.\n- Changed get_headers() to retrieve headers also from non-200 responses.\n  (Ilia)\n- Changed get_headers() to use the default context. (Ilia)\n- Added lchown() and lchgrp() to change user/group ownership of symlinks.\n  (Derick)\n- Added support for exif date format in strtotime(). (Derick)\n- Added a check for special characters in the session name. (Ilia)\n- Added \"consumed\" stream filter. (Marcus)\n- Added new mysqli constants for BIT and NEW_DECIMAL field types:\n  MYSQLI_TYPE_NEWDECIMAL and MYSQLI_TYPE_BIT. FR #36007. (Georg)\n- Added imap_savebody() that allows message body to be written to a\n  file. (Mike)\n- Added overflow checks to wordwrap() function. (Ilia)\n- Added support for BINARY_DOUBLE and BINARY_FLOAT to PDO_OCI and OCI8\n  (also fixes bug #36764). (Tony)\n- Eliminated run-time constant fetching for TRUE, FALSE and NULL. (Dmitry)\n- Removed the E_STRICT deprecation notice from \"var\". (Ilia)\n- Fixed reading stream filters never notified about EOF. (Mike)\n- Fixed tempnam() 2nd parameter to be checked against path components. (Ilia)\n- Fixed a bug that would not fill in the fifth argument to preg_replace()\n  properly, if the variable was not declared previously. (Andrei)\n- Fixed safe_mode check for source argument of the copy() function. (Ilia)\n- Fixed mysqli bigint conversion under Windows (Georg)\n- Fixed XSS inside phpinfo() with long inputs. (Ilia)\n- Fixed Apache2 SAPIs header handler modifying header strings. (Mike)\n- Fixed 'auto_globals_jit' to work together with 'register_argc_argv'. (Dmitry)\n- Fixed offset/length parameter validation in substr_compare() function. (Ilia)\n- Fixed debug_zval_dump() to support private and protected members. (Dmitry)\n- Fixed SoapFault::getMessage(). (Dmitry)\n- Fixed issue with iconv_mime_decode where the \"encoding\" would only allow\n  upper case specifiers. (Derick)\n- Fixed tiger hash algorithm generating wrong results on big endian platforms.\n  (Mike)\n- Fixed crash with DOMImplementation::createDocumentType(\"name:\"). (Mike)\n- Fixed bug #37205 (Serving binary content/images fails with \"comm with server\n  aborted\" FastCGI err). (Dmitry)\n- Fixed bug #37192 (cc may complain about non-constant initializers in\n  hash_adler.c). (Mike)\n- Fixed bug #37191 (chmod takes off sticky bit when safe_mode is On). (Tony)\n- Fixed bug #37167 (PDO segfaults when throwing exception from the\n  fetch handler). (Tony)\n- Fixed bug #37162 (wddx does not build as a shared extension).\n  (jdolecek at NetBSD dot org, Ilia)\n- Fixed bug #37158 (fread behavior changes after calling\n  stream_wrapper_register). (Wez)\n- Fixed bug #37138 (__autoload tries to load callback'ed self and parent).\n  (Dmitry)\n- Fixed bug #37103 (libmbfl headers not installed). (Jani)\n- Fixed bug #37062 (compile failure on ARM architecture). (Tony)\n- Fixed bug #37061 (curl_exec() doesn't zero-terminate binary strings). (Tony)\n- Fixed bug #37060 (Type of retval of Countable::count() is not checked).\n  (Johannes)\n- Fixed bug #37059 (oci_bind_by_name() doesn't support RAW and LONG RAW\n  fields). (Tony)\n- Fixed bug #37057 (xmlrpc_decode() may produce arrays with numeric strings,\n  which are unaccessible). (Tony)\n- Fixed bug #37055 (incorrect reference counting for persistent OCI8\n  connections). (Tony)\n- Fixed bug #37054 (SoapClient Error Fetching http headers). (Dmitry)\n- Fixed bug #37053 (html_errors with internal classes produces wrong links).\n  (Tony)\n- Fixed bug #37046 (foreach breaks static scope). (Dmitry)\n- Fixed bug #37045 (Fixed check for special chars for http redirects). (Ilia)\n- Fixed bug #37017 (strtotime fails before 13:00:00 with some time zones\n  identifiers). (Derick)\n- Fixed bug #37002 (Have to quote literals in INI when concatenating with\n  vars). (Dmitry)z\n- Fixed bug #36988 (mktime freezes on long numbers). (Derick)\n- Fixed bug #36981 (SplFileObject->fgets() ignores max_length). (Tony)\n- Fixed bug #36957 (serialize() does not handle recursion). (Ilia)\n- Fixed bug #36944 (strncmp & strncasecmp do not return false on negative\n  string length). (Tony)\n- Fixed bug #36941 (ArrayIterator does not clone itself). (Marcus)\n- Fixed bug #36934 (OCILob->read() doesn't move internal pointer when\n  reading 0's). (Tony)\n- Fixed bug #36908 (wsdl default value overrides value in soap request).\n  (Dmitry)\n- Fixed bug #36898 (__set() leaks in classes extending internal ones).\n  (Tony, Dmitry)\n- Fixed bug #36886 (User filters can leak buckets in some situations). (Ilia)\n- Fixed bug #36878 (error messages are printed even though an exception has\n  been thrown). (Tony)\n- Fixed bug #36875 (is_*() functions do not account for open_basedir). (Ilia)\n- Fixed bug #36872 (session_destroy() fails after call to\n  session_regenerate_id(true)). (Ilia)\n- Fixed bug #36869 (memory leak in output buffering when using chunked\n  output). (Tony)\n- Fixed bug #36859 (DOMElement crashes when calling __construct when\n  cloning). (Tony)\n- Fixed bug #36857 (Added support for partial content fetching to the\n  HTTP streams wrapper). (Ilia)\n- Fixed bug #36851 (Documentation and code discrepancies for NULL\n  data in oci_fetch_*() functions). (Tony)\n- Fixed bug #36825 (Exceptions thrown in ArrayObject::offsetGet cause\n  segfault). (Tony)\n- Fixed bug #36820 (Privileged connection with an Oracle password file\n  fails). (Tony)\n- Fixed bug #36809 (__FILE__ behavior changed). (Dmitry)\n- Fixed bug #36808 (syslog ident becomes garbage between requests). (Tony)\n- Fixed bug #36802 (mysqli_set_charset() crash with a non-open connection).\n  (Ilia)\n- Fixed bug #36756 (DOMDocument::removeChild corrupts node). (Rob)\n- Fixed bug #36749 (SOAP: 'Error Fetching http body' when using HTTP Proxy).\n  (Dmitry)\n- Fixed bug #36745 (No error message when load data local file isn't found).\n  (Georg)\n- Fixed bug #36743 (In a class extending XMLReader array properties are not\n  writable). (Tony)\n- Fixed bug #36727 (segfault in pdo_pgsql bindValue() when no parameters are\n  defined). (Tony)\n- Fixed bug #36721 (The SoapServer is not able to send a header that it didn't\n  receive). (Dmitry)\n- Fixed bug #36697 (Transparency is lost when using imagecreatetruecolor).\n  (Pierre)\n- Fixed bug #36689 (Removed arbitrary limit on the length of syslog messages).\n  (Ilia)\n- Fixed bug #36656 (http_build_query generates invalid URIs due to use of\n  square brackets). (Mike)\n- Fixed bug #36638 (strtotime() returns false when 2nd argument < 1). (Derick)\n- Fixed bug #36629 (SoapServer::handle() exits on SOAP faults). (Dmitry)\n- Fixed bug #36625 (pg_trace() does not work). (iakio at mono-space dot net)\n- Fixed bug #36614 (Segfault when using Soap). (Dmitry)\n- Fixed bug #36611 (assignment to SimpleXML object attribute changes argument\n  type to string). (Tony)\n- Fixed bug #36606 (pg_query_params() changes arguments type to string). (Tony)\n- Fixed bug #36599 (DATE_W3C format constant incorrect). (Derick)\n- Fixed bug #36575 (SOAP: Incorrect complex type instantiation with\n  hierarchies). (Dmitry)\n- Fixed bug #36572 (Added PDO::MYSQL_ATTR_DIRECT_QUERY constant that should\n  be set when executing internal queries like \"show master status\" via MySQL).\n  (Ilia)\n- Fixed bug #36568 (memory_limit setting on win32 has no effect). (Dmitry)\n- Fixed bug #36513 (comment will be outputted in last line). (Dmitry)\n- Fixed bug #36510 (strtotime() fails to parse date strings with tabs).\n  (Ilia, Derick)\n- Fixed bug #36459 (Incorrect adding PHPSESSID to links, which contains \\r\\n).\n  (Ilia)\n- Fixed bug #36458 (sleep() accepts negative values). (Ilia)\n- Fixed bug #36436 (DBA problem with Berkeley DB4). (Marcus)\n- Fixed bug #36434 (Improper resolution of declaring class name of an\n  inherited property). (Ilia)\n- Fixed bug #36420 (segfault when access result->num_rows after calling\n  result->close()). (Ilia,Tony)\n- Fixed bug #36403 (oci_execute() no longer supports OCI_DESCRIBE_ONLY). (Tony)\n- Fixed bug #36400 (Custom 5xx error does not return correct HTTP response error\n  code). (Tony)\n- Fixed bug #36396 (strtotime() fails to parse dates in dd-mm-yyyy format).\n  (Derick)\n- Fixed bug #36388 (ext/soap crashes when throwing exception and session\n  persistence). (David)\n- Fixed bug #36382 (PDO/PgSQL's getColumnMeta() crashes). (Derick)\n- Fixed bug #36359 (splFileObject::fwrite() doesn't write when no data\n  length specified). (Tony)\n- Fixed bug #36351 (parse_url() does not parse numeric paths properly). (Ilia)\n- Fixed bug #36345 (PDO/MySQL problem loading BLOB over 1MB). (Ilia)\n- Fixed bug #36337 (ReflectionProperty fails to return correct visibility).\n  (Ilia)\n- Fixed bug #36334 (Added missing documentation about realpath cache INI\n  settings). (Ilia)\n- Fixed bug #36308 (ReflectionProperty::getDocComment() does not reflect\n  extended class commentary). (Ilia)\n- Fixed bug #36306 (crc32() differ on 32-bit and 64-bit platforms)\n  (anight@eyelinkmedia dot com, Pierre)\n- Fixed bug #36303 (foreach on error_zval produces segfault). (Dmitry)\n- Fixed bug #36295 (typo in SplFileObject::flock() parameter name). (Tony)\n- Fixed bug #36287 (Segfault with SplFileInfo conversion). (Marcus)\n- Fixed bug #36283 (SOAPClient Compression Broken). (Dmitry)\n- Fixed bug #36268 (Object destructors called even after fatal errors). (Dmitry)\n- Fixed bug #36258 (SplFileObject::getPath() may lead to segfault). (Tony)\n- Fixed bug #36250 (PHP causes ORA-07445 core dump in Oracle server 9.2.x).\n  (Tony)\n- Fixed bug #36242 (Possible memory corruption in stream_select()). (Tony)\n- Fixed bug #36235 (ocicolumnname returns false before a successful fetch).\n  (Tony)\n- Fixed bug #36226 (Inconsistent handling when passing potential arrays).\n  (Dmitry)\n- Fixed bug #36224 (date(DATE_ATOM) gives wrong results).\n  (Derick, Hannes Magnusson)\n- Fixed bug #36222 (errorInfo in PDOException is always NULL). (Ilia)\n- Fixed bug #36208 (symbol namespace conflicts using bundled gd). (Jakub Moc)\n- Fixed bug #36205 (Memory leaks on duplicate cookies). (Dmitry)\n- Fixed bug #36185 (str_rot13() crash on non-string parameter). (Pierre)\n- Fixed bug #36176 (PDO_PGSQL - PDO::exec() does not return number of rows\n  affected by the operation). (Ilia)\n- Fixed bug #36158 (SIGTERM is not handled correctly when running as a\n  FastCGI server). (Dmitry)\n- Fixed bug #36152 (problems with curl+ssl and pgsql+ssl in same PHP). (Mike)\n- Fixed bug #36148 (unpack(\"H*hex\", $data) is adding an extra character to\n  the end of the string). (Ilia)\n- Fixed bug #36134 (DirectoryIterator constructor failed to detect empty\n  directory names). (Ilia)\n- Fixed bug #36113 (Reading records of unsupported type causes segfault).\n  (Tony)\n- Fixed bug #36096 (oci_result() returns garbage after oci_fetch() failed).\n  (Tony)\n- Fixed bug #36083 (SoapClient waits for responses on one-way operations).\n  (Dmitry)\n- Fixed bug #36071 (Engine Crash related with 'clone'). (Dmitry)\n- Fixed bug #36055 (possible OCI8 crash in multi-threaded environment). (Tony)\n- Fixed bug #36046 (parse_ini_file() miscounts lines in multi-line values).\n  (Ilia)\n- Fixed bug #36038 (ext/hash compile failure on Mac OSX). (Tony)\n- Fixed bug #36037 (heredoc adds extra line number). (Dmitry)\n- Fixed bug #36016 (realpath cache memleaks). (Dmitry, Nuno)\n- Fixed bug #36011 (Strict errormsg wrong for call_user_func() and the likes).\n  (Marcus)\n- Fixed bug #36010 (Segfault when re-creating and re-executing statements with\n  bound parameters). (Tony)\n- Fixed bug #36006 (Problem with $this in __destruct()). (Dmitry)\n- Fixed bug #35999 (recursive mkdir() does not work with relative path\n  like \"foo/bar\"). (Tony)\n- Fixed bug #35998 (SplFileInfo::getPathname() returns unix style filenames\n  in win32). (Marcus)\n- Fixed bug #35988 (Unknown persistent list entry type in module shutdown).\n  (Dmitry)\n- Fixed bug #35954 (Fatal com_exception casting object). (Rob)\n- Fixed bug #35900 (stream_select() should warning when tv_sec is negative).\n  (Ilia)\n- Fixed bug #35785 (SimpleXML causes memory read error zend engine). (Marcus)\n- Fixed bug #34272 (empty array onto COM object blows up). (Rob)\n- Fixed bug #33292 (apache_get_modules() crashes on Windows). (Edin)\n- Fixed bug #29476 (sqlite_fetch_column_types() locks the database forever).\n  (Ilia)\n\n12 Jan 2006, PHP 5.1.2\n- Updated libsqlite in ext/sqlite to 2.8.17. (Ilia)\n- Updated libsqlite in ext/pdo_sqlite to 3.2.8. (Ilia)\n- Updated to libxml2-2.6.22 and libxslt-1.1.15 in the win32 bundle. (Rob)\n- Added new extensions: (Ilia, Wez)\n  . XMLWriter\n  . Hash\n- Added PNG compression support to GD extension. (Pierre)\n- Added reflection constants as class constants. (Johannes)\n- Added --enable-gcov configure option to enable C-level code coverage.\n  (John, Jani, Ilia, Marcus)\n- Added missing support for 'B' format identifier to date() function. (Ilia)\n- Changed reflection to be an extension. (Marcus)\n- Improved SPL extension: (Marcus)\n  . Added class SplFileInfo as root class for DirectoryIterator and\n    SplFileObject\n  . Added SplTempFileObject\n- Improved SimpleXML extension: (Marcus)\n  . Fixed memleaks\n  . Fixed var_dump()\n  . Fixed isset/empty/(bool) behavior\n  . Fixed iterator edge cases\n  . Added methods getNamespaces(), getDocNamespaces()\n- Upgraded pear to version 1.4.6. (Greg)\n- Added constants for libxslt and libexslt versions: LIBXSLT_VERSION,\n  LIBXSLT_DOTTED_VERSION, LIBEXSLT_VERSION and LIBEXSLT_DOTTED_VERSION. (Pierre)\n- Fixed possible crash in apache_getenv()/apache_setenv() on invalid parameters.\n  (Ilia)\n- Changed errors to warnings in imagecolormatch(). (Pierre)\n- Fixed segfault/leak in imagecolormatch(). (Pierre)\n- Fixed small leak in mysqli_stmt_fetch() when bound variable was empty string.\n  (Andrey)\n- Fixed prepared statement name conflict handling in PDO_PGSQL. (Thies, Ilia)\n- Fixed memory corruption when PDO::FETCH_LAZY mode is being used. (Ilia)\n- Fixed possible leaks in imagecreatefromstring() with invalid data. (Pierre)\n- Fixed possible memory corruption inside mb_strcut(). (Ilia)\n- Fixed possible header injection by limiting each header to a single line.\n  (Ilia)\n- Fixed possible XSS inside error reporting functionality. (Ilia)\n- Fixed many bugs in OCI8. (Tony)\n- Fixed crash and leak in mysqli when using 4.1.x client libraries and\n  connecting to 5.x server. (Andrey)\n- Fixed bug #35916 (Duplicate calls to stream_bucket_append() lead to a crash).\n  (Ilia)\n- Fixed bug #35908 (curl extension uses undefined GCRY_THREAD_OPTIONS_USER).\n  (Ilia)\n- Fixed bug #35907 (PDO_OCI uses hardcoded lib path $ORACLE_HOME/lib). (Tony)\n- Fixed bug #35887 (wddx_deserialize not parsing dateTime fields properly).\n  (Derick)\n- Fixed bug #35885 (strtotime(\"NOW\") no longer works). (Derick)\n- Fixed bug #35821 (array_map() segfaults when exception is throwed from\n  the callback). (Tony)\n- Fixed bug #35817 (unpack() does not decode odd number of hexadecimal values).\n  (Ilia)\n- Fixed bug #35797 (segfault on PDOStatement::execute() with\n  zend.ze1_compatibility_mode = On). (Tony, Ilia)\n- Fixed bug #35781 (stream_filter_append() can cause segfault). (Tony)\n- Fixed bug #35760 (sybase_ct doesn't compile on Solaris using old gcc). (Tony)\n- Fixed bug #35759 (mysqli_stmt_bind_result() makes huge allocation when\n  column empty). (Andrey)\n- Fixed bug #35751 (using date with a timestamp makes httpd segfault). (Derick)\n- Fixed bug #35740 (memory leak when including a directory). (Tony)\n- Fixed bug #35730 (ext/mssql + freetds: Use correct character encoding\n  and allow setting it). (Frank)\n- Fixed bug #35723 (xmlrpc_introspection.c fails compile per C99 std). (Jani)\n- Fixed bug #35720 (A final constructor can be overwritten). (Marcus)\n- Fixed bug #35713 (getopt() returns array with numeric strings when passed\n  options like '-1'). (Tony)\n- Fixed bug #35705 (strtotime() fails to parse soap date format without TZ).\n  (Ilia)\n- Fixed bug #35699 (date() can't handle leap years before 1970). (Derick)\n- Fixed bug #35694 (Improved error message for invalid fetch mode). (Ilia)\n- Fixed bug #35692 (iconv_mime_decode() segmentation fault; with libiconv\n  only). (Tony)\n- Fixed bug #35690 (pack() tries to allocate huge memory block when packing\n  float values to strings). (Tony)\n- Fixed bug #35669 (imap_mail_compose() crashes with\n  multipart-multiboundary-email). (Ilia)\n- Fixed bug #35660 (AIX TZ variable format not understood, yields UTC\n  timezone). (Derick)\n- Fixed bug #35655 (whitespace following end of heredoc is lost). (Ilia)\n- Fixed bug #35630 (strtotime() crashes on certain relative identifiers).\n  (Ilia)\n- Fixed bug #35629 (crash in http:// wrapper on multiple redirects). (Ilia)\n- Fixed bug #35624 (strtotime() does not handle 3 character weekdays). (Ilia)\n- Fixed bug #35612 (iis6 Access Violation crash). (Dmitry, alacn.uhahaa)\n- Fixed bug #35594 (Multiple calls to getopt() may result in a crash).\n  (rabbitt at gmail dot com, Ilia)\n- Fixed bug #35571 (Fixed crash in Apache 2 SAPI when more then one php\n  script is loaded via SSI include). (Ilia)\n- Fixed bug #35570 (segfault when re-using soap client object). (Dmitry)\n- Fixed bug #35558 (mktime() interpreting 3 digit years incorrectly). (Ilia)\n- Fixed bug #35543 (php crash when calling non existing method of a class\n  that extends PDO). (Tony)\n- Fixed bug #35539 (typo in error message for ErrorException). (Tony)\n- FIxed bug #35536 (mysql_field_type() doesn't handle NEWDECIMAL). (Tony)\n- Fixed bug #35517 (mysql_stmt_fetch returns NULL on data truncation). (Georg)\n- Fixed bug #35509 (string constant as array key has different behavior inside\n  object). (Dmitry)\n- Fixed bug #35508 (PDO fails when unknown fetch mode specified). (Tony)\n- Fixed bug #35499 (strtotime() does not handle whitespace around the date\n  string). (Ilia)\n- Fixed bug #35496 (Crash in mcrypt_generic()/mdecrypt_generic() without\n  proper init). (Ilia)\n- Fixed bug #35490 (socket_sendto() unable to handle IPv6 addresses). (Tony)\n- Fixed bug #35461 (Ming extension fails to compile with ming 0.3beta1). (Jani)\n- Fixed bug #35437 (Segfault or Invalid Opcode 137/1/4). (Dmitry)\n- Fixed bug #35470 (Assigning global using variable name from array doesn't\n  function). (Dmitry)\n- Fixed bug #35456 (+ 1 [time unit] format did not work). (Ilia)\n- Fixed bug #35447 (xml_parse_into_struct() chokes on the UTF-8 BOM). (Rob)\n- Fixed bug #35431 (PDO crashes when using LAZY fetch with fetchAll). (Wez)\n- Fixed bug #35430 (PDO crashes on incorrect FETCH_FUNC use). (Tony)\n- Fixed bug #35427 (str_word_count() handles '-' incorrectly). (Ilia)\n- Fixed bug #35425 (idate() function ignores timezone settings). (Ilia)\n- Fixed bug #35422 (strtotime() does not parse times with UTC as timezone).\n  (Ilia)\n- Fixed bug #35414 (strtotime() no longer works with ordinal suffix). (Ilia)\n- Fixed bug #35410 (wddx_deserialize() doesn't handle large ints as keys\n  properly). (Ilia)\n- Fixed bug #35409 (undefined reference to 'rl_completion_matches'). (Jani)\n- Fixed bug #35399 (Since fix of bug #35273 SOAP decoding of\n  soapenc:base64binary fails). (Dmitry)\n- Fixed bug #35393 (changing static protected members from outside the class,\n  one more reference issue). (Dmitry)\n- Fixed bug #35381 (ssl library is not initialized properly). (Alan)\n- Fixed bug #35377 (PDO_SQLITE: undefined reference to \"fdatasync\").\n  (Nuno, Jani)\n- Fixed bug #35373 (HP-UX \"alias not allowed in this configuration\"). (Dmitry)\n- Fixed bug #35288 (iconv() function defined as libiconv()). (Nuno)\n- Fixed bug #35103 (mysqli handles bad unsigned (big)int incorrectly).(Andrey)\n- Fixed bug #35062 (socket_read() produces warnings on non blocking sockets).\n  (Nuno, Ilia)\n- Fixed bug #35028 (SimpleXML object fails FALSE test). (Marcus)\n- Fixed bug #34729 (Crash in ZTS mode under Apache). (Dmitry, Zeev)\n- Fixed bug #34429 (Output buffering cannot be turned off with FastCGI).\n  (Dmitry, Ilya)\n- Fixed bug #34359 (Possible crash inside fopen http wrapper). (Ilia,Sara,Nuno)\n- Fixed bug #33789 (Many Problems with SunFuncs). (Derick)\n- Fixed bug #33671 (sun_rise and sun_set don't return a GMT timestamp if one\n  passes an offset). (Derick)\n- Fixed bug #32820 (date_sunrise and date_sunset don't handle GMT offset\n  well). (Derick)\n- Fixed bug #31347 (is_dir and is_file (incorrectly) return true for any string\n  greater then 255 characters). (Nuno,Ilia)\n- Fixed bug #30937 (date_sunrise() & date_sunset() don't handle endless\n  day/night at high latitudes). (Derick)\n- Fixed bug #30760 (Remove MessageBox on win32 for E_CORE errors if\n  display_startup_error is off). (Ilia)\n- Fixed bug #29955 (mb_strtoupper() / lower() broken with Turkish encoding).\n  (Rui)\n- Fixed bug #28899 (mb_substr() and substr() behave differently when\n  \"mbstring.func_overload\" is enabled). (Rui)\n- Fixed bug #27678 (number_format() crashes with large numbers). (Marcus)\n\n28 Nov 2005, PHP 5.1.1\n- Disabled native date class to prevent pear::date conflict. (Ilia)\n- Changed reflection constants be both PHP and class constants. (Johannes)\n- Added an additional field $frame['object'] to the result array of\n  debug_backtrace() that contains a reference to the respective object when the\n  frame was called from an object. (Sebastian)\n- Fixed bug #35423 (RecursiveDirectoryIterator doesnt appear to recurse with\n  RecursiveFilterIterator). (Marcus)\n- Fixed bug #35413 (Removed -dev flag from Zend Engine version). (Ilia)\n- Fixed bug #35411 (Regression with \\{$ handling). (Ilia)\n- Fixed bug #35406 (eval hangs when evall'ed code ends with comment w/o\n  newline). (Marcus)\n- Fixed bug #35391 (pdo_mysql::exec does not return number of affected rows).\n  (Tony)\n- Fixed bug #35382 (Comment in end of file produces fatal error). (Ilia)\n- Fixed bug #35360 (exceptions in interactive mode (php -a) may cause crash).\n  (Dmitry)\n- Fixed bug #35358 (Incorrect error messages for PDO class constants). (Ilia)\n- Fixed bug #35338 (pdo_pgsql does not handle binary bound params). (Wez)\n- Fixed bug #35316 (Application exception trying to create COM object). (Rob)\n- Fixed bug #35170 (PHP_AUTH_DIGEST differs under Apache 1.x and 2.x). (Ilia)\n\n24 Nov 2005, PHP 5.1\n- Added support for class constants and static members for internal classes.\n  (Dmitry, Michael Wallner)\n- Added \"new_link\" parameter to mssql_connect() (Bug #34369). (Frank)\n- Added missing safe_mode checks for image* functions and cURL. (Ilia)\n- Added missing safe_mode/open_basedir checks for file uploads. (Ilia)\n- Added PDO_MYSQL_ATTR_USE_BUFFERED_QUERY parameter for pdo_mysql. (Ilia)\n- Added date_timezone_set() function to set the timezone that the date\n  function will use. (Derick)\n- Added pg_fetch_all_columns() function to fetch all values of a column from a\n  result cursor. (Ilia)\n- Added support for LOCK_EX flag for file_put_contents(). (Ilia)\n- Added bindto socket context option. (Ilia)\n- Added offset parameter to the stream_copy_to_stream() function. (Ilia)\n- Added offset & length parameters to substr_count() function. (Ilia)\n- Added man pages for \"phpize\" and \"php-config\" scripts. (Jakub Vrana)\n- Added support for .cc files in extensions. (Brian)\n- Added PHP_INT_MAX and PHP_INT_SIZE as predefined constants. (Andrey)\n- Added user opcode API that allow overloading of opcode handlers. (Dmitry)\n- Added an optional remove old session parameter to session_regenerate_id().\n  (Ilia)\n- Added array type hinting. (Dmitry)\n- Added the tidy_get_opt_doc() function to return documentation for\n  configuration options in tidy. (Patch by: nlopess@php.net)\n- Added support for .cc files in extensions. (Brian)\n- Added imageconvolution() function which can be used to apply a custom 3x3\n  matrix convolution to an image. (Pierre)\n- Added optional first parameter to XsltProcessor::registerPHPFunctions to\n  only allow certain functions to be called from XSLT. (Christian)\n- Added the ability to override the autotools executables used by the\n  buildconf script via the PHP_AUTOCONF and PHP_AUTOHEADER environmental\n  variables. (Jon)\n- Added several new functions to support the PostgreSQL v3 protocol introduced\n  in PostgreSQL 7.4. (Christopher)\n  . pg_transaction_status() - in-transaction status of a database connection.\n  . pg_query_params() - execution of parameterized queries.\n  . pg_prepare() - prepare named queries.\n  . pg_execute() - execution of named prepared queries.\n  . pg_send_query_params() - async equivalent of pg_query_params().\n  . pg_send_prepare() - async equivalent of pg_prepare().\n  . pg_send_execute() - async equivalent of pg_execute().\n  . pg_result_error_field() - highly detailed error information, most\n    importantly\n    the SQLSTATE error code.\n  . pg_set_error_verbosity() - set verbosity of errors.\n- Added optional fifth parameter \"count\" to preg_replace_callback() and\n  preg_replace() to count the number of replacements made. FR #32275. (Andrey)\n- Added optional third parameter \"charlist\" to str_word_count() which contains\n  characters to be considered as word part. FR #31560. (Andrey, Ilia)\n- Added interface Serializable. (Stanislav, Marcus)\n- Added pg_field_type_oid() PostgreSQL function. (mauroi at digbang dot com)\n- Added zend_declare_property_...() and zend_update_property_...() API\n  functions for bool, double and binary safe strings. (Hartmut)\n- Added possibility to access INI variables from within .ini file. (Andrei)\n- Added variable $_SERVER['REQUEST_TIME'] containing request start time.\n  (Ilia)\n- Added optional float parameter to gettimeofday(). (Ilia)\n- Added apache_reset_timeout() Apache1 function. (Rasmus)\n- Added sqlite_fetch_column_types() 3rd argument for arrays. (Ilia)\n- Added optional offset parameter to stream_get_contents() and\n  file_get_contents(). (Ilia)\n- Added optional maxlen parameter to file_get_contents(). (Ilia)\n- Added SAPI hook to get the current request time. (Rasmus)\n- Added new functions:\n  . array_diff_key() (Andrey)\n  . array_diff_ukey() (Andrey)\n  . array_intersect_key() (Christiano Duarte)\n  . array_intersect_ukey() (Christiano Duarte)\n  . array_product() (Andrey)\n  . DomDocumentFragment::appendXML() (Christian)\n  . fputcsv() (David Sklar)\n  . htmlspecialchars_decode() (Ilia)\n  . inet_pton() (Sara)\n  . inet_ntop() (Sara)\n  . mysqli::client_info property (Georg)\n  . posix_access() (Magnus)\n  . posix_mknod() (Magnus)\n  . SimpleXMLElement::registerXPathNamespace() (Christian)\n  . stream_context_get_default() (Wez)\n  . stream_socket_enable_crypto() (Wez)\n  . stream_wrapper_unregister() (Sara)\n  . stream_wrapper_restore() (Sara)\n  . stream_filter_remove() (Sara)\n  . time_sleep_until() (Ilia)\n- Added DomDocument::$recover property for parsing not well-formed XML\n Documents. (Christian)\n- Added Cursor support for MySQL 5.0.x in mysqli (Georg)\n- Added proxy support to ftp wrapper via http. (Sara)\n- Added MDTM support to ftp_url_stat. (Sara)\n- Added zlib stream filter support. (Sara)\n- Added bz2 stream filter support. (Sara)\n- Added max_redirects context option that specifies how many HTTP\n  redirects to follow. (Ilia)\n- Added support of parameter=>value arrays to\n  xsl_xsltprocessor_set_parameter(). (Tony)\n\n- PHP extension loading mechanism with support for module\n  dependencies and conflicts. (Jani, Dmitry)\n- Improved interactive mode of PHP CLI (php -a). (Johannes, Marcus)\n- Improved performance of:\n  . general execution/compilation. (Andi, Thies, Sterling, Dmitry, Marcus)\n  . switch() statement. (Dmitry)\n  . several array functions. (Marcus)\n  . virtual path handling by adding a realpath() cache. (Andi)\n  . variable fetches. (Andi)\n  . magic method invocations. (Marcus)\n- Improved support for embedded server in mysqli. (Georg)\n- Improved mysqli extension. (Georg)\n  . added constructor for mysqli_stmt and mysqli_result classes\n  . added new function mysqli_get_charset()\n  . added new function mysqli_set_charset()\n  . added new class mysqli_driver\n  . added new class mysqli_warning\n  . added new class mysqli_exception\n  . added new class mysqli_sql_exception\n- Improved SPL extension. (Marcus)\n  . Moved RecursiveArrayIterator from examples into extension\n  . Moved RecursiveFilterIterator from examples into extension\n  . Added SplObjectStorage\n  . Made all SPL constants class constants\n  . Renamed CachingRecursiveIterator to RecursiveCachingIterator to follow\n    Recursive<*>Iterator naming scheme.\n  . added standard hierarchy of Exception classes\n  . added interface Countable\n  . added interfaces Subject and SplObserver\n  . added spl_autoload*() functions\n  . converted several 5.0 examples into c code\n  . added class SplFileObject\n  . added possibility to use a string with class_parents() and\n    class_implements(). (Andrey)\n\n- Changed type hints to allow \"null\" as default value for class and array.\n  (Marcus, Derick, Dmitry)\n- Changed SQLite extension to be a shared module in Windows distribution.\n  (Edin)\n- Changed \"instanceof\" and \"catch\" operators, is_a() and is_subclass_of()\n  functions to not call __autoload(). (Dmitry)\n- Changed sha1_file() and md5_file() functions to use streams instead of low\n  level IO. (Uwe)\n- Changed abstract private methods to be not allowed anymore. (Stas)\n- Changed stream_filter_(ap|pre)pend() to return resource. (Sara)\n- Changed mysqli_exception and sqlite_exception to use RuntimeException as\n  base if SPL extension is present. (Georg, Marcus)\n\n- Upgraded bundled libraries:\n  . PCRE library to version 6.2. (Andrei)\n  . SQLite 3 library in ext/pdo_sqlite to 3.2.7. (Ilia)\n  . SQLite 2 library in ext/sqlite to 2.8.16. (Ilia)\n- Upgraded bundled libraries in Windows distribution. (Edin)\n  . zlib 1.2.3\n  . curl 7.14.0\n  . openssl 0.9.8\n  . ming 0.3b\n  . libpq (PostgreSQL) 8.0.1\n\n- Implemented feature request #33452 (Year belonging to ISO week). (Derick)\n- Allowed return by reference from internal functions. (Marcus, Andi, Dmitry)\n- Rewrote strtotime() with support for timezones and many new formats.\n  Implements feature requests #21399, #26694, #28088, #29150, #29585 and\n  #29595. (Derick)\n\n- Moved extensions to PECL:\n  . ext/cpdf        (Tony, Derick)\n  . ext/dio         (Jani, Derick)\n  . ext/fam         (Jani, Derick)\n  . ext/ingres_ii   (Jani, Derick)\n  . ext/mnogosearch (Jani, Derick)\n  . ext/w32api      (Jani, Derick)\n  . ext/yp          (Jani, Derick)\n  . ext/mcve        (Jani, Derick, Pierre)\n  . ext/oracle      (Jani, Derick)\n  . ext/ovrimos     (Jani, Derick, Pierre)\n  . ext/pfpro       (Jani, Derick, Pierre)\n  . ext/dbx         (Jani, Derick)\n  . ext/ircg        (Jani, Derick)\n\n- Removed php_check_syntax() function which never worked properly. (Ilia)\n- Removed garbage manager in Zend Engine which results in more aggressive\n  freeing of data. (Dmitry, Andi)\n\n- Fixed \"make test\" to work for phpized extensions. (Hartmut, Jani)\n- Fixed Apache 2 regression with sub-request handling on non-linux systems.\n  (Ilia, Tony)\n- Fixed PDO shutdown problem (possible infinite loop running rollback on\n  shutdown). (Wez)\n- Fixed PECL bug #3714 (PDO: beginTransaction doesn't work if you're in\n  auto-commit mode). (Wez)\n- Fixed ZTS destruction. (Marcus)\n- Fixed __get/__set to allow recursive calls for different properties. (Dmitry)\n- Fixed a bug where stream_get_meta_data() did not return the \"uri\" element\n  for files opened with tmpname(). (Derick)\n- Fixed a problem with SPL iterators aggregating the inner iterator. (Marcus)\n- Fixed an error in mysqli_fetch_fields (returned NULL instead of an array\n  when row number > field_count). (Georg)\n- Fixed bug in mysql::client_version(). (Georg)\n- Fixed bug in mysqli extension with unsigned int(11) being represented as\n  signed integer in PHP instead of string in 32bit systems. (Andrey)\n- Fixed bug with $HTTP_RAW_POST_DATA not getting set. (Brian)\n- Fixed crash inside stream_get_line() when length parameter equals 0. (Ilia)\n- Fixed ext/mysqli to allocate less memory when fetching bound params of type\n  (MEDIUM|LONG)BLOB/(MEDIUM|LONG)TEXT. (Andrey)\n- Fixed extension initialization to respect dependencies between extensions.\n  (Wez)\n- Fixed failing queries (FALSE returned) with mysqli_query() on 64 bit systems.\n  (Andrey)\n- Fixed fgetcsv() and fputcsv() inconsistency. (Dmitry)\n- Fixed inheritance check to control return by reference and pass by\n  reference correctly (ArrayAccess can no longer support references correctly).\n  (Marcus, Andi, Dmitry)\n- Fixed initializing and argument checking for posix_mknod(). (Derick)\n- Fixed memory corruption in ImageTTFText() with 64bit systems. (Andrey)\n- Fixed memory corruption in pg_copy_from() in case the as_null parameter was\n  passed. (Derick)\n- Fixed memory corruption in stristr(). (Derick)\n- Fixed possible GLOBALS variable override when register_globals are ON.\n  (Ilia, Stefan)\n- Fixed possible INI setting leak via virtual() in Apache 2 sapi. (Ilia)\n- Fixed possible register_globals toggle via parse_str(). (Ilia, Stefan)\n- Fixed potential GLOBALS overwrite via import_request_variables() and\n  possible crash and/or memory corruption. (Ilia)\n- Fixed segfaults when CURL callback functions throw exception. (Tony)\n- Fixed support for shared extensions on AIX. (Dmitry)\n- Fixed bug #35342 (isset(DOMNodeList->length) returns false). (Rob)\n- Fixed bug #35341 (Fix for bug #33760 breaks build with older curl). (Tony)\n- Fixed bug #35336 (crash on PDO::FETCH_CLASS + __set()). (Tony)\n- Fixed bug #35303 (PDO prepare() crashes with invalid parameters). (Ilia)\n- Fixed bug #35293 (PDO segfaults when using persistent connections). (Tony)\n- Fixed bug #35278 (Multiple virtual() calls crash Apache 2 php module). (Ilia)\n- Fixed bug #35273 (Error in mapping soap - java types). (Dmitry)\n- Fixed bug #35249 (compile failure when ext/readline is compiled as shared).\n  (Jani)\n- Fixed bug #35248 (sqlite_query() doesn't set error_msg when return value is\n  being used). (Ilia)\n- Fixed bug #35243 (php_mblen() crashes when compiled with thread-safety on\n  Linux). (Patch: shulmanb at il dot ibm dot com, Jani)\n- Fixed bug #35239 (Objects can lose references). (Dmitry)\n- Fixed bug #35229 (call_user_func() crashes when argument_stack is nearly\n  full). (Dmitry)\n- Fixed bug #35197 (Destructor is not called). (Tony)\n- Fixed bug #35179 (tokenizer extension needs T_HALT_COMPILER). (Greg)\n- Fixed bug #35176 (include()/require()/*_once() produce wrong error messages\n  about main()). (Dmitry)\n- Fixed bug #35147 (__HALT_COMPILER() breaks with --enable-zend-multibyte).\n  (Dmitry, Moriyoshi)\n- Fixed bug #35143 (gettimeofday() ignores current time zone). (Derick)\n- Fixed bug #35142 (SOAP Client/Server Complex Object Support). (Dmitry)\n- Fixed bug #35135 (PDOStatment without related PDO object may crash). (Ilia)\n- Fixed bug #35091 (SoapClient leaks memory). (Dmitry)\n- Fixed bug #35079 (stream_set_blocking(true) toggles, not enables blocking).\n  (askalski at gmail dot com, Tony)\n- Fixed bug #35078 (configure does not find ldap_start_tls_s). (Jani)\n- Fixed bug #35046 (phpinfo() uses improper css enclosure). (Ilia)\n- Fixed bugs #35022, #35019 (Regression in the behavior of key() and\n  current() functions). (Ilia)\n- Fixed bug #35017 (Exception thrown in error handler may cause unexpected\n  behavior). (Dmitry)\n- Fixed bug #35014 (array_product() always returns 0). (Ilia)\n- Fixed bug #35009 (ZTS: Persistent resource destruct crashes when extension\n  is compiled as shared). (Dmitry)\n- Fixed bug #34996 (ImageTrueColorToPalette() crashes when ncolors is zero).\n  (Tony)\n- Fixed bug #34982 (array_walk_recursive() modifies elements outside function\n  scope). (Dmitry)\n- Fixed bug #34977 (Compile failure on MacOSX due to use of varargs.h). (Tony)\n- Fixed bug #34968 (bz2 extension fails on to build on some win32 setups).\n (Ilia)\n- Fixed bug #34965 (tidy is not binary safe). (Mike)\n- Fixed bug #34957 (PHP doesn't respect ACLs for access checks). (Wez)\n- Fixed bug #34950 (Unable to get WSDL through proxy). (Dmitry)\n- Fixed bug #34938 (dns_get_record() doesn't resolve long hostnames and\n  leaks). (Tony)\n- Fixed bug #34905 (Digest authentication does not work with Apache 1). (Ilia)\n- Fixed bug #34902 (mysqli::character_set_name() - undefined method). (Tony)\n- Fixed bug #34899 (Fixed sqlite extension compile failure). (Ilia)\n- Fixed bug #34893 (PHP5.1 overloading, Cannot access private property).\n  (Dmitry)\n- Fixed bug #34884 (Possible crash in ext/sqlite when sqlite.assoc_case is\n  being used). (Tony, Ilia)\n- Fixed bug #34879 (str_replace, array_map corrupt negative array indexes on\n  64-bit platforms). (Dmitry)\n- Fixed bug #34873 (Segmentation Fault on foreach in object). (Dmitry)\n- Fixed bug #34856 (configure fails to detect libiconv's type). (Tony)\n- Fixed bug #34855 (ibase_service_attach() segfault on AMD64).\n  (irie at gmx dot de, Tony)\n- Fixed bug #34851 (SO_RECVTIMEO and SO_SNDTIMEO socket options expect\n  integer parameter on Windows). (Mike)\n- Fixed bug #34850 (--program-suffix and --program-prefix not included in\n  man page names). (Jani)\n- Fixed bug #34821 (zlib encoders fail on widely varying binary data on\n  windows). (Mike, Ilia)\n- Fixed bug #34818 (several functions crash when invalid mysqli_link object\n  is passed). (Tony)\n- Fixed bug #34810 (mysqli::init() and others use wrong $this pointer without\n  checks). (Tony)\n- Fixed bug #34809 (FETCH_INTO in PDO crashes without a destination object).\n  (Ilia)\n- Fixed bug #34802 (Fixed crash on object instantiation failure). (Ilia)\n- Fixed bug #34796 (missing SSL linking in ext/ftp when configured as shared).\n  (Jani)\n- Fixed bug #34790 (preg_match_all(), named capturing groups, variable\n  assignment/return => crash). (Dmitry)\n- Fixed bug #34788 (SOAP Client not applying correct namespace to generated\n  values). (Dmitry)\n- Fixed bug #34787 (SOAP Client not handling boolean types correctly). (Dmitry)\n- Fixed bug #34786 (2 @ results in change to error_reporting() to random\n  value) (Dmitry, Tony)\n- Fixed bug #34785 (subclassing of mysqli_stmt does not work). (Georg)\n- Fixed bug #34782 (token_get_all() gives wrong result). (Dmitry)\n- Fixed bug #34777 (Crash in dblib when fetching non-existent error info).\n  (Ilia)\n- Fixed bug #34771 (strtotime() fails with 1-12am/pm). (Derick)\n- Fixed bug #34767 (Zend Engine 1 Compatibility not copying objects\n  correctly). (Dmitry)\n- Fixed bug #34758 (PDO_DBLIB did not implement rowCount()). (Ilia)\n- Fixed bug #34757 (iconv_substr() gives \"Unknown error\" when offset > string\n  length). (Tony)\n- Fixed bug #34742 (ftp wrapper failures caused from segmented command\n  transfer). (Ilia)\n- Fixed bug #34725 (CLI segmentation faults during cleanup). (Dmitry)\n- Fixed bug #34723 (array_count_values() strips leading zeroes). (Tony)\n- Fixed bug #34712 (zend.ze1_compatibility_mode = on segfault). (Dmitry)\n- Fixed bug #34704 (Infinite recursion due to corrupt JPEG). (Marcus)\n- Fixed bug #34678 (__call(), is_callable() and static methods). (Dmitry)\n- Fixed bug #34676 (missing support for strtotime(\"midnight\") and\n  strtotime(\"noon\")). (Derick)\n- Fixed bug #34645 (ctype corrupts memory when validating large numbers).\n (Ilia)\n- Fixed bug #34643 (wsdl default value has no effect). (Dmitry)\n- Fixed bug #34623 (Crash in pdo_mysql on longtext fields). (Ilia)\n- Fixed bug #34617 (zend_deactivate: objects_store used after\n  zend_objects_store_destroy is called). (Dmitry)\n- Fixed bug #34590 (User defined PDOStatement class can't implement\n  methods). (Marcus)\n- Fixed bug #34584 (Segfault with SPL autoload handler). (Marcus)\n- Fixed bug #34581 (crash with mod_rewrite). (Tony, Ilia)\n- Fixed bug #34565 (mb_send_mail does not fetch\n  mail.force_extra_parameters). (Marco, Ilia)\n- Fixed bug #34557 (php -m exits with \"error\" 1). (Johannes)\n- Fixed bug #34518 (Unset doesn't separate container in CV). (Dmitry)\n- Fixed bug #34505 (Possible memory corruption when unmangling properties\n  with empty names). (Tony)\n- Fixed bug #34478 (Incorrect parsing of url's fragment (#...)). (Dmitry)\n- Fixed bug #34467 (foreach + __get + __set inconsistency). (Dmitry)\n- Fixed bug #34456 (Possible crash inside pspell extension). (Ilia)\n- Fixed bug #34453 (parsing http://www.w3.org/2001/xml.xsd exception). (Dmitry)\n- Fixed bug #34450 (Segfault when calling mysqli_close() in destructor). (Tony)\n- Fixed bug #34449 (ext/soap: XSD_ANYXML functionality not exposed). (Dmitry)\n- Fixed bug #34420 (Possible crash inside curl_multi_remove_handle()). (Ilia)\n- Fixed bug #34358 (Fatal error: Cannot re-assign $this). (Dmitry)\n- Fixed bug #34331 (php crashes when variables_order is empty). (Ilia)\n- Fixed bug #34321 (Possible crash in filter code). (Ilia)\n- Fixed bug #34311 (unserialize() crashes with chars above 191 dec). (Nuno)\n- Fixed bug #34310 (foreach($arr as $c->d => $x) crashes). (Dmitry)\n- Fixed bug #34307 (on_modify handler not called to set the default value if\n  setting from php.ini was invalid). (Andrei)\n- Fixed bug #34306 (wddx_serialize_value() crashes with long array keys).\n  (Jani)\n- Fixed bug #34304 (date() doesn't have a modifier for ISO Week Day). (Derick)\n- Fixed bug #34302 (date('W') do not return leading zeros for week 1 to 9).\n  (Derick)\n- Fixed bug #34299 (ReflectionClass::isInstantiable() returns true for abstract\n  classes). (Marcus)\n- Fixed bug #34284 (CLI phpinfo showing html on _SERVER[\"argv\"]). (Jani)\n- Fixed bug #34277 (array_filter() crashes with references and objects).\n  (Dmitry)\n- Fixed bug #34276 (setAttributeNS doesn't work with default namespace).\n  (Rob)\n- Fixed bug #34260 (Segfault with callbacks (array_map) + overloading).\n  (Dmitry)\n- Fixed bug #34257 (lib64 not handled correctly in ming extension). (Marcus)\n- Fixed bug #34221 (Compiling xmlrpc as shared fails other parts). (Jani)\n- Fixed bug #34216 (Segfault with autoload). (Marcus)\n- Fixed bug #34199 (if($obj)/if(!$obj) inconsistency because of cast handler).\n  (Dmitry, Alex)\n- Fixed bug #34191 (ob_gzhandler does not enforce trailing \\0). (Ilia)\n- Fixed bug #34156 (memory usage remains elevated after memory limit is\n  reached). (Ilia)\n- Fixed bug #34148 (+,- and . not supported as parts of scheme). (Ilia)\n- Fixed bug #34137 (assigning array element by reference causes binary mess).\n  (Dmitry)\n- Fixed bug #34103 (line numbering not maintained in dom document). (Rob)\n- Fixed bug #34078 (Reflection API problems in methods with boolean or\n  null default values). (Tony)\n- Fixed bug #34068 (Numeric string as array key not cast to integer in\n  wddx_deserialize()). (Ilia)\n- Fixed bug #34064 (arr[] as param to function in class gives invalid\n  opcode). (Dmitry)\n- Fixed bug #34062 (Crash in catch block when many arguments are used).\n  (Dmitry)\n- Fixed bug #34052 (date('U') returns %ld not unix timestamp). (Nuno)\n- Fixed bug #34045 (Buffer overflow with serialized object). (Dmitry)\n- Fixed bug #34001 (pdo_mysql truncates numeric fields at 4 chars). (Ilia)\n- Fixed bug #33999 (object remains object when cast to int). (Dmitry)\n- Fixed bug #33996 (No information given for fatal error on passing invalid\n  value to typed argument). (Dmitry)\n- Fixed bug #33989 (extract($GLOBALS,EXTR_REFS) crashes PHP). (Dmitry)\n- Fixed bug #33987 (php script as ErrorDocument causes crash in Apache 2).\n  (Ilia)\n- Fixed bug #33967 (misuse of Exception constructor doesn't display\n  errorfile). (Jani)\n- Fixed bug #33966 (Wrong use of reflectionproperty causes a segfault). (Tony)\n- Fixed bug #33963 (mssql_bind() fails on input parameters). (Frank)\n- Fixed bug #33958 (duplicate cookies and magic_quotes=off may cause a crash).\n  (Ilia)\n- Fixed bug #33957 (gmdate('W')/date('W') sometimes returns wrong week number).\n  (Derick)\n- Fixed bug #33940 (array_map() fails to pass by reference when called\n  recursively). (Dmitry)\n- Fixed bug #33917 (number_format() output with > 1 char separators). (Jani)\n- Fixed bug #33904 (input array keys being escaped when magic quotes is off).\n  (Ilia)\n- Fixed bug #33903 (spl_autoload_register class method). (Marcus)\n- Fixed bug #33899 (CLI: setting extension_dir=some/path extension=foobar.so\n  does not work). (Jani)\n- Fixed bug #33882 (CLI was looking for php.ini in wrong path). (Hartmut)\n- Fixed bug #33869 (strtotime() problem with \"+1days\" format). (Ilia)\n- Fixed bug #33841 (pdo sqlite driver forgets to update affected column\n  count on execution of prepared statments). (Ilia)\n- Fixed bug #33837 (Informix ESQL version numbering schema changed). (Jani)\n- Fixed bug #33829 (mime_content_type() returns text/plain for gzip and bzip\n  files). (Derick)\n- Fixed bug #33802 (throw Exception in error handler causes crash). (Dmitry)\n- Fixed bug #33771 (error_reporting falls to 0 when @ was used inside\n  try/catch block). (Tony)\n- Fixed bug #33760 (cURL needs to implement CRYPTO_callback functions to\n  prevent locking). (Mike, Ilia)\n- Fixed bug #33732 (Wrong behavior of constants in class and interface\n  extending). (Dmitry)\n- Fixed bug #33723 (php_value overrides php_admin_value). (Dmitry)\n- Fixed bug #33720 (mb_encode_mimeheader does not work for multibyte\n  chars). (Rui)\n- Fixed bug #33710 (ArrayAccess objects does not initialize $this). (Dmitry)\n- Fixed bug #33690 (Crash setting some ini directives in httpd.conf). (Rasmus)\n- Fixed bug #33673 (Added detection for partially uploaded files). (Ilia)\n- Fixed bug #33605 (substr_compare() crashes with negative offset and length).\n  (Tony)\n- Fixed bug #33597 (setcookie() \"expires\" date format doesn't comply with RFC).\n  (Tony)\n- Fixed bug #33588 (LDAP: RootDSE query not possible). (Jani)\n- Fixed bug #33578 (strtotime() problem with \"Oct17\" format). (Derick)\n- Fixed bug #33578 (strtotime() doesn't understand \"11 Oct\" format). (Derick)\n- Fixed bug #33562 (date(\"\") crashes). (Derick)\n- Fixed bug #33558 (warning with nested calls to functions returning by\n  reference). (Dmitry)\n- Fixed bug #33536 (strtotime() defaults to now even on non time string).\n  (Derick)\n- Fixed bug #33532 (Different output for strftime() and date()). (Derick)\n- Fixed bug #33523 (Memory leak in xmlrpc_encode_request()). (Ilia)\n- Fixed bug #33520 (crash if safe_mode is on and session.save_path is changed).\n  (Dmitry)\n- Fixed bug #33512 (Add missing support for isset()/unset() overloading to\n  complement the property get/set methods). (Dmitry)\n- Fixed bug #33491 (crash after extending MySQLi internal class). (Tony)\n- Fixed bug #33475 (cURL handle is not closed on curl_close(). (Ilia)\n- Fixed bug #33469 (Compile error undefined reference to ifx_checkAPI). (Jani)\n- Fixed bug #33433 (strtoll not available on Tru64). (Jani, Derick)\n- Fixed bug #33427 (ext/odbc: check if unixODBC header file exists). (Jani)\n- Fixed bug #33415 (strtotime() related bugs). (Derick)\n- Fixed bug #33414 (Comprehensive list of incorrect days returned after\n  strtotime() / date() tests). (Derick)\n- Fixed bug #33389 (double free() when exporting a ReflectionClass). (Marcus)\n- Fixed bug #33383 (crash when retrieving empty LOBs). (Tony)\n- Fixed bug #33382 (array_reverse() fails after *sort()),  introduced by\n  zend_hash_sort() optimizations in HEAD. (Tony)\n- Fixed bug #33340 (CLI Crash when calling php:function from XSLT). (Rob)\n- Fixed bug #33326 (Cannot build extensions with phpize on Macosx). (Jani)\n- Fixed bug #33318 (throw 1; results in Invalid opcode 108/1/8). (Dmitry)\n- Fixed bug #33312 (ReflectionParameter methods do not work correctly).\n  (Dmitry)\n- Fixed bug #33299 (php:function no longer handles returned dom objects).\n  (Rob, Joe Orton)\n- Fixed bug #33286 (nested array_walk() calls and user array compare functions\n  broken; FCI cache). (Andrei, patch from m.bretz@metropolis-ag.de)\n- Fixed bug #33277 (private method accessed by child class). (Dmitry)\n- Fixed bug #33268 (iconv_strlen() works only with a parameter of < 3 in\n  length). (Ilia)\n- Fixed bug #33257 (array_splice() inconsistent when passed function instead of\n  variable). (Dmitry)\n- Fixed bug #33243 (ze1_compatibility_mode does not work as expected). (Dmitry)\n- Fixed bug #33242 (Mangled error message when stream fails). (Derick)\n- Fixed bug #33222 (segfault when CURL handle is closed in a callback). (Tony)\n- Fixed bug #33214 (odbc_next_result does not signal SQL errors with\n  2-statement SQL batches). (rich at kastle dot com, Tony)\n- Fixed bug #33212 ([GCC 4]: 'zend_error_noreturn' aliased to external symbol\n  'zend_error'). (Dmitry)\n- Fixed bug #33210 (relax jpeg recursive loop protection). (Ilia)\n- Fixed bug #33201 (Crash when fetching some data types). (Frank)\n- Fixed bug #33200 (preg_replace(): magic_quotes_sybase=On makes 'e' modifier\n  misbehave). (Jani)\n- Fixed bug #33185 (--enable-session=shared does not build). (Jani)\n- Fixed bug #33171 (foreach enumerates private fields declared in base\n  classes). (Dmitry)\n- Fixed bug #33167 (Possible crash inside pg_fetch_array()). (Ilia)\n- Fixed bug #33164 (Soap extension incorrectly detects HTTP/1.1). (Ilia)\n- Fixed bug #33156 (cygwin version of setitimer doesn't accept ITIMER_PROF).\n  (Nuno)\n- Fixed bug #33153 (crash in mssql_next result). (Frank)\n- Fixed bug #33150 (shtool: insecure temporary file creation). (Jani)\n- Fixed bug #33136 (method offsetSet in class extended from ArrayObject crash\n  PHP). (Marcus)\n- Fixed bug #33125 (imagecopymergegray() produces mosaic rainbow effect).\n  (Pierre)\n- Fixed bug #33116 (crash when assigning class name to global variable in\n  __autoload). (Dmitry)\n- Fixed bug #33090 (mysqli_prepare() doesn't return an error). (Georg)\n- Fixed bug #33076 (str_ireplace() incorrectly counts result string length\n  and may cause segfault). (Tony)\n- Fixed bug #33072 (Add a safemode/open_basedir check for runtime\n  \"session.save_path\" change using session_save_path() function). (Rasmus)\n- Fixed bug #33070 (Improved performance of bzdecompress() by several orders\n  of magnitude). (Ilia)\n- Fixed bug #33059 (crash when moving xml attribute set in dtd). (Ilia)\n- Fixed bug #33057 (Don't send extraneous entity-headers on a 304 as per\n  RFC 2616 section 10.3.5) (Rasmus, Choitel)\n- Fixed bug #33019 (socket errors cause memory leaks in php_strerror()).\n  (jwozniak23 at poczta dot onet dot pl, Tony).\n- Fixed bug #33017 (\"make distclean\" gives an error with VPATH build). (Jani)\n- Fixed bug #33013 (\"next month\" was handled wrong while parsing dates).\n  (Derick)\n- Fixed bug #32993 (implemented Iterator function current() don't throw\n  exception). (Dmitry)\n- Fixed bug #32981 (ReflectionMethod::getStaticVariables() causes apache2.0.54\n  seg fault). (Dmitry)\n- Fixed bug #32956 (mysql_bind_result() doesn't support MYSQL_TYPE_NULL).\n  (Georg)\n- Fixed bug #32947 (Incorrect option for mysqli default password). (Georg)\n- Fixed bug #32944 (Disabling session.use_cookies doesn't prevent reading\n  session cookies). (Jani, Tony)\n- Fixed bug #32941 (Sending structured SOAP fault kills a php). (Dmitry)\n- Fixed bug #32937 (open_basedir looses trailing / in the limiter).\n  (Adam Conrad)\n- Fixed bug #32936 (http redirects URLs are not checked for control chars).\n  (Ilia)\n- Fixed bug #32933 (Cannot extend class \"SQLiteDatabase\"). (Marcus)\n- Fixed bug #32932 (Oracle LDAP: ldap_get_entries(), invalid pointer). (Jani)\n- Fixed bug #32930 (class extending DOMDocument doesn't clone properly). (Rob)\n- Fixed bug #32924 (file included with \"auto_prepend_file\" can be included\n  with require_once() or include_once()). (Stas)\n- Fixed bug #32904 (pg_get_notify() ignores result_type parameter). (Tony)\n- Fixed bug #32852 (Crash with singleton and __destruct when\n  zend.ze1_compatibility_mode = On). (Dmitry)\n- Fixed bug #32833 (Invalid opcode). (Dmitry)\n- Fixed bug #32813 (parse_url() does not handle scheme-only urls properly).\n  (Ilia)\n- Fixed bug #32810 (temporary files not using plain file wrapper). (Ilia)\n- Fixed bug #32809 (Missing T1LIB support on Windows). (Edin)\n- Fixed bug #32802 (General cookie overrides more specific cookie). (Ilia)\n- Fixed bugs #32800, #32830 (ext/odbc: Problems with 64bit systems). (Jani)\n- Fixed bug #32799 (crash: calling the corresponding global var during the\n  destruct). (Dmitry)\n- Fixed bug #32776 (SOAP doesn't support one-way operations). (Dmitry)\n- Fixed bug #32773 (GMP functions break when second parameter is 0). (Stas)\n- Fixed bug #32759 (incorrect determination of default value (COM)). (Wez)\n- Fixed bug #32758 (Cannot access safearray properties in VB6 objects). (Wez)\n- Fixed bug #32755 (Segfault in replaceChild() when DocumentFragment has no\n  children). (Rob)\n- Fixed bug #32753 (Undefined constant SQLITE_NOTADB). (Ilia)\n- Fixed bug #32742 (segmentation fault when the stream with a wrapper\n  is not closed). (Tony, Dmitry)\n- Fixed bug #32699 (pg_affected_rows() was defined when it was not available).\n  (Derick)\n- Fixed bug #32686 (Require/include file in destructor causes segfault).\n  (Marcus)\n- Fixed bug #32682 (ext/mssql: Error on module shutdown when called from\n  activescript). (Frank)\n- Fixed bug #32674 (exception in iterator causes crash). (Dmitry)\n- Fixed bug #32660 (Assignment by reference causes crash when field access is\n  overloaded (__get)). (Dmitry)\n- Fixed bug #32647 (Using register_shutdown_function() with invalid callback\n  can crash PHP). (Jani)\n- Fixed bug #32615 (Segfault in replaceChild() using fragment when\n  previousSibling is NULL). (Rob)\n- Fixed bug #32613 (ext/snmp: use of snmp_shutdown() causes snmpapp.conf\n  access errors). (Jani, ric at arizona dot edu)\n- Fixed bug #32608 (html_entity_decode() converts single quotes even if\n  ENT_NOQUOTES is given). (Ilia)\n- Fixed bug #32596 (Segfault/Memory Leak by getClass (etc) in __destruct).\n  (Dmitry)\n- Fixed bug #32591 (ext/mysql: Unsatisfied symbol: ntohs with HP-UX). (Jani)\n- Fixed bug #32589 (possible crash inside imap_mail_compose() function).\n  (Ilia)\n- Fixed bug #32589 (Possible crash inside imap_mail_compose, with charsets).\n  (Ilia)\n- Fixed bug #32587 (Apache2: errors sent to error_log do not include\n  timestamps). (Jani)\n- Fixed bug #32560 (configure looks for incorrect db2 library). (Tony)\n- Fixed bug #32553 (mmap loads only the 1st 2000000 bytes on Win32). (Ilia)\n- Fixed bug #32533 (proc_get_status() returns the incorrect process status).\n  (Ilia)\n- Fixed bug #32530 (chunk_split() does not append endstr if chunklen is\n  longer then the original string). (Ilia)\n- Fixed bug #32491 (File upload error - unable to create a temporary file).\n  (Uwe Schindler)\n- Fixed bug #32455 (wrong setting property to unset value). (Dmitry)\n- Fixed bug #32429 (method_exists() always return TRUE if __call method\n  exists). (Dmitry)\n- Fixed bug #32428 (The @ warning error suppression operator is broken).\n  (Dmitry)\n- Fixed bug #32427 (Interfaces are not allowed 'static' access modifier).\n  (Dmitry)\n- Fixed bug #32405 (mysqli::fetch() returns bad data - 64bit problem).\n  (Andrey)\n- Fixed bug #32296 (get_class_methods() output has changed between 5.0.2 and\n  5.0.3). (Dmitry)\n- Fixed bug #32282 (Segfault in mysqli_fetch_array on 64-bit). (Georg)\n- Fixed bug #32245 (xml_parser_free() in a function assigned to the xml\n  parser gives a segfault). (Rob)\n- Fixed bug #32179 (xmlrpc_encode() segfaults with recursive references).\n  (Tony)\n- Fixed bug #32171 (Userspace stream wrapper crashes PHP). (Tony, Dmitry)\n- Fixed bug #32160 (copying a file into itself leads to data loss). (Ilia)\n- Fixed bug #32139 (SOAP client does not auto-handle base64 encoding). (Ilia)\n- Fixed bug #32109 ($_POST is not populated in multi-threaded environment).\n  (Moriyoshi)\n- Fixed bug #32080 (segfault when assigning object to itself with\n  zend.ze1_compatibility_mode=On). (Dmitry)\n- Fixed bug #32021 (Crash caused by range('', 'z')). (Derick)\n- Fixed bug #32013 (ext/mysqli bind_result causes fatal error: memory limit).\n  (Andrey)\n- Fixed bug #32010 (Memory leak in mssql_fetch_batch). (fmk)\n- Fixed bug #32009 (crash when mssql_bind() is called more than once). (Frank)\n- Fixed bug #31971 (ftp_login fails on some SSL servers).\n  (frantisek at augusztin dot com)\n- Fixed bug #31887 (ISAPI: Custom 5xx error does not return correct HTTP\n  response message). (Jani)\n- Fixed bug #31828 (Crash with zend.ze1_compatibility_mode=On). (Dmitry)\n- Fixed bug #31668 (multi_query works exactly every other time - multi query\n  d/e flag global and not per connection). (Andrey)\n- Fixed bug #31636 (another crash when echoing a COM object). (Wez)\n- Fixed bug #31583 (php_std_date() uses short day names in non-y2k_compliance\n  mode). (mike at php dot net)\n- Fixed bug #31525 (object reference being dropped. $this getting lost).\n (Stas, Dmitry)\n- Fixed bug #31502 (Wrong deserialization from session when using WDDX\n  serializer). (Dmitry)\n- Fixed bug #31478 (segfault with empty() / isset()). (Moriyoshi)\n- Fixed bug #31465 (False warning in unpack() when working with *). (Ilia)\n- Fixed bug #31363 (broken non-blocking flock()). (ian at snork dot net)\n- Fixed bug #31358 (Older GCC versions do not provide portable va_copy()).\n  (Jani)\n- Fixed bug #31341 (escape on curly inconsistent). (Dmitry)\n- Fixed bug #31256 (PHP_EVAL_LIBLINE configure macro does not handle\n  -pthread). (Jani)\n- Fixed bug #31213 (Side effects caused by fix of bug #29493). (Dmitry)\n- Fixed bug #31177 (memory leaks and corruption because of incorrect\n  refcounting). (Dmitry)\n- Fixed bug #31158 (array_splice on $GLOBALS crashes). (Dmitry)\n- Fixed bug #31054 (safe_mode & open_basedir checks only check first\n  include_path value). (Ilia)\n- Fixed bug #31033 (php:function(string, nodeset) with xsl:key crashes PHP).\n  (Rob)\n- Fixed bug #30961 (Wrong line number in ReflectionClass getStartLine()).\n  (Dmitry)\n- Fixed bug #30889 (Conflict between __get/__set and ++ operator). (Dmitry)\n- Fixed bug #30833 (array_count_values() modifying input array). (Tony)\n- Fixed bug #30828 (debug_backtrace() reports incorrect class in overridden\n  methods). (Dmitry)\n- Fixed bug #30820 (static member conflict with $this->member silently\n  ignored). (Dmitry)\n- Fixed bug #30819 (Better support for LDAP SASL bind). (Jani)\n- Fixed bug #30791 (magic methods (__sleep/__wakeup/__toString) call\n  __call if object is overloaded). (Dmitry)\n- Fixed bug #30707 (Segmentation fault on exception in method).\n  (Stas, Dmitry)\n- Fixed bug #30702 (cannot initialize class variable from class constant).\n  (Dmitry)\n- Fixed bug #30578 (Output buffers flushed before calling __destruct()\n  functions). (Jani)\n- Fixed bug #30519 (Interface not existing says Class not found). (Dmitry)\n- Fixed bug #30407 (Strange behavior of default arguments). (Dmitry)\n- Fixed bug #30394 (Assignment operators yield wrong result with __get/__set).\n  (Dmitry)\n- Fixed bug #30332 (zend.ze1_compatibility_mode isn't fully compatible with\n  array_push()). (Dmitry)\n- Fixed bug #30162 (Catching exception in constructor causes lose of\n  $this). (Dmitry)\n- Fixed bug #30140 (Problem with array in static properties). (Dmitry)\n- Fixed bug #30126 (Enhancement for error message for abstract classes).\n  (Marcus)\n- Fixed bug #30096 (gmmktime does not return the current time). (Derick)\n- Fixed bug #30080 (Passing array or non array of objects). (Dmitry)\n- Fixed bug #30052 (Crash on shutdown after odbc_pconnect()). (Edin)\n- Fixed bug #29983 (PHP does not explicitly set mime type & charset). (Ilia)\n- Fixed bug #29975 (memory leaks when set_error_handler() is used inside error\n  handler). (Tony)\n- Fixed bug #29971 (variables_order behavior). (Dmitry)\n- Fixed bug #29944 (Function defined in switch, crashes). (Dmitry)\n- Fixed bug #29896 (Backtrace argument list out of sync). (Dmitry)\n- Fixed bug #29728 (Reflection API Feature: Default parameter value). (Marcus)\n- Fixed bug #29689 (default value of protected member overrides default value\n  of private and other private variable problems in inherited classes). (Stas)\n- Fixed bug #29683 (headers_list() returns empty array). (Tony)\n- Fixed bug #29583 (crash when echoing a COM object). (M.Sisolak, Wez)\n- Fixed bug #29522 (accessing properties without connection). (Georg)\n- Fixed bug #29361 (var_export() producing invalid code). (Derick)\n- Fixed bug #29338 (unencoded spaces get ignored after certain tags). (Ilia)\n- Fixed bug #29335 (fetch functions now use MYSQLI_BOTH as default). (Georg)\n- Fixed bug #29334 (win32 mail() provides incorrect Date: header). (Jani)\n- Fixed bug #29311 (calling parent constructor in mysqli). (Georg)\n- Fixed bug #29268 (__autoload() not called with Reflection->getClass()).\n  (Dmitry)\n- Fixed bug #29256 (SOAP HTTP Error when envelop size is more than 24345\n  bytes). (Dmitry, Wez)\n- Fixed bug #29253 (array_diff with $GLOBALS argument fails). (Dmitry)\n- Fixed bug #29236 (memory error when wsdl-cache is enabled). (Dmitry)\n- Fixed bug #29210 (Function: is_callable - no support for private and\n  protected classes). (Dmitry)\n- Fixed bug #29109 (SoapFault exception: [WSDL] Out of memory). (Dmitry)\n- Fixed bug #29104 (Function declaration in method doesn't work). (Dmitry)\n- Fixed bug #29061 (soap extension segfaults). (Dmitry)\n- Fixed bug #29015 (Incorrect behavior of member vars(non string ones)-numeric\n  mem vars and others). (Dmitry)\n- Fixed bug #28985 (__getTypes() returning nothing on complex WSDL). (Dmitry)\n- Fixed bug #28969 (Wrong data encoding of special characters). (Dmitry)\n- Fixed bug #28839 (SIGSEGV in interactive mode (php -a)).\n  (kameshj at fastmail dot fm)\n- Fixed bug #28605 (Need to use -[m]ieee option for Alpha CPUs). (Jani)\n- Fixed bug #28568 (SAPI::known_post_content_types is not thread safe).\n  (Moriyoshi)\n- Fixed bug #28377 (debug_backtrace is intermittently passing args). (Dmitry)\n- Fixed bug #28355 (glob wont error if dir is not readable). (Hartmut)\n- Fixed bug #28072 (static array with some constant keys will be incorrectly\n  ordered). (Dmitry)\n- Fixed bug #27908 (xml default_handlers not being called). (Rob)\n- Fixed bug #27598 (list() array key assignment causes HUGE memory leak).\n  (Dmitry)\n- Fixed bug #27268 (Bad references accentuated by clone). (Dmitry)\n- Fixed bug #26456 (Wrong results from Reflection-API getDocComment() when\n  called via STDIN). (Dmitry)\n- Fixed bug #25922 (In error handler, modifying 5th arg (errcontext) may\n  result in seg fault). (Dmitry)\n- Fixed bug #25359 (array_multisort() doesn't work in a function if array is\n  global or reference). (Dmitry)\n- Fixed bug #22836 (returning reference to uninitialized variable). (Dmitry)\n- Fixed bug #21306 (ext/sesssion: catch bailouts of write handler during\n  RSHUTDOWN). (Jani, Xuefer at 21cn dot com)\n- Fixed bug #15854 (boolean ini options may be incorrectly displayed as Off\n  when they are On). (Tony)\n- Fixed bugs #14561, #20382, #26090, #26320, #28024, #30532, #32086, #32270,\n  #32555, #32588, #33056 (strtotime() related bugs). (Derick)\n\n31 Mar 2005, PHP 5.0.4\n- Added SNMPv2 support. (harrie)\n- Added Oracle Instant Client support. (cjbj at hotmail dot com, Tony)\n- Added length and charsetnr for field array and object in mysqli. (Georg)\n- Added checks for negative values to gmp_sqrt(), gmp_powm(), gmp_sqrtrem()\n  and gmp_fact() to prevent SIGFPE. (Tony)\n- Changed foreach() to throw an exception if IteratorAggregate::getIterator()\n  does not return an Iterator. (Marcus)\n- Changed phpize not to require libtool. (Jani)\n- Updated bundled oniguruma library (used for multibyte regular expression)\n  to 3.7.0. (Moriyoshi)\n- Updated bundled libmbfl library (used for multibyte functions). (Moriyoshi)\n  Fixed bugs:\n  . Bug #32311 (mb_encode_mimeheader() does not properly escape characters)\n  . Bug #32063 (mb_convert_encoding ignores named entity 'alpha')\n  . Bug #31911 (mb_decode_mimeheader() is case-sensitive to hex escapes)\n  . bug #30573 (compiler warnings in libmbfl due to invalid type cast)\n  . Bug #30549 (incorrect character translations for some ISO8859 charsets).\n- Fixed bug preventing from building oci8 as shared.\n  (stanislav dot voroniy at portavita dot nl, Tony)\n- Fixed a bug in mysql_affected_rows and mysql_stmt_affected_rows when the\n  api function returns -1 (Georg)\n- Fixed several leaks in ext/browscap and sapi/embed. (Andrei)\n- Fixed several leaks in ext/filepro. (Tony)\n- Fixed build system to always use bundled libtool files. (Jani)\n- Fixed a bug in mysqli_stmt_execute() (type conversion with NULL values).\n  (Georg)\n- Fixed segfault in mysqli_fetch_field_direct() when invalid field offset\n  is passed. (Tony)\n- Fixed posix_getsid() & posix_getpgid() to return sid & pgid instead\n  of true. (Tony)\n- Fixed bug #32394 (offsetUnset() segfaults in a foreach). (Marcus)\n- Fixed bug #32373 (segfault in bzopen() if supplied path to non-existent\n  file). (Tony)\n- Fixed bug #32326 (Check values of Connection/Transfer-Encoding\n  case-incentively in SOAP extension). (Ilia)\n- Fixed bug #32290 (call_user_func_array() calls wrong class method within\n  child class). (Marcus)\n- Fixed bug #32238 (spl_array.c: void function cannot return value). (Johannes)\n- Fixed bug #32210 (proc_get_status() sets \"running\" always to true). (Ilia)\n- Fixed bug #32200 (Prevent using both --with-apxs2 and --with-apxs2filter).\n  (Jani)\n- Fixed bug #32134 (Overloading offsetGet/offsetSet). (Marcus)\n- Fixed bug #32130 (ArrayIterator::seek() does not throw an Exception on\n  invalid index). (Marcus)\n- Fixed bug #32115 (dateTime SOAP encoding of timezone incorrect). (Dmitry)\n- Fixed bug #32081 (in mysqli default socket value is not being used). (Ilia)\n- Fixed bug #32021 (Crash caused by range('', 'z')). (Derick)\n- Fixed bug #32011 (Fragments which replaced Nodes are not globaly useable).\n  (Rob)\n- Fixed bug #32001 (xml_parse_into_struct() function exceeds maximum\n  execution time). (Rob, Moriyoshi)\n- Fixed bug #31980 (Unicode exif data not available on Windows). (Edin)\n- Fixed bug #31960 (msql_fetch_row() and msql_fetch_array() dropping columns\n  with NULL values). (Daniel Convissor)\n- Fixed bug #31878 (Segmentation fault using clone keyword on nodes). (Rob)\n- Fixed bug #31858 (--disable-cli does not force --without-pear). (Jani)\n- Fixed bug #31842 (*date('r') does not return RFC2822 conforming date string).\n  (Jani)\n- Fixed bug #31832 (SOAP encoding problem with complex types in WSDL mode with\n  multiple parts). (Dmitry)\n- Fixed bug #31797 (exif_read_data() uses too low nesting limit). (Ilia)\n- Fixed bug #31796 (readline completion handler does not handle empty return\n  values). (Ilia)\n- Fixed bug #31792 (getrusage() does not provide ru_nswap value). (Ilia)\n- Fixed bug #31755 (Cannot create SOAP header in no namespace). (Dmitry)\n- Fixed bug #31754 (dbase_open() fails for mode = 1). (Mehdi, Derick)\n- Fixed bug #31751 (pg_parameter_status() missing on Windows). (Edin)\n- Fixed bug #31747 (SOAP Digest Authentication doesn't work with\n  \"HTTP/1.1 100 Continue\" response). (Dmitry)\n- Fixed bug #31732 (mb_get_info() causes segfault when no parameters\n  specified). (Tony)\n- Fixed bug #31710 (Wrong return values for mysqli_autocommit/commit/rollback).\n  (Georg)\n- Fixed bug #31705 (parse_url() does not recognize http://foo.com#bar). (Ilia)\n- Fixed bug #31695 (Cannot redefine endpoint when using WSDL). (Dmitry)\n- Fixed bug #31684 (dio_tcsetattr(): misconfigured termios settings).\n  (elod at itfais dot com)\n- Fixed bug #31683 (changes to $name in __get($name) override future\n  parameters) (Dmitry)\n- Fixed bug #31699 (unserialize() float problem on non-English locales). (Ilia)\n- Fixed bug #31562 (__autoload() problem with static variables). (Marcus)\n- Fixed bug #31651 (ReflectionClass::getDefaultProperties segfaults with arrays).\n  (Marcus)\n- Fixed bug #31623 (OCILogin does not support password grace period).\n  (daniel dot beet at accuratesoftware dot com, Tony)\n- Fixed bug #31527 (crash in msg_send() when non-string is stored without\n  being serialized). (Ilia)\n- Fixed bug #31515 (Improve performance of scandir() by factor of 10 or so). (Ilia)\n- Fixed bug #31514 (open_basedir uses path_translated rather then cwd for .\n  translation). (Ilia)\n- Fixed bug #31480 (Possible infinite loop in imap_mail_compose()). (Ilia)\n- Fixed bug #31479 (Fixed crash in chunk_split(), when chunklen > strlen). (Ilia)\n- Fixed bug #31454 (session_set_save_handler crashes PHP when supplied\n  non-existent object ref). (Tony)\n- Fixed bug #31444 (Memory leak in zend_language_scanner.c).\n  (hexer at studentcenter dot org)\n- Fixed bug #31442 (unserialize broken on 64-bit systems). (Marcus)\n- Fixed bug #31440 ($GLOBALS can be overwritten via GPC when register_globals\n  is enabled). (Ilia)\n- Fixed bug #31422 (No Error-Logging on SoapServer-Side). (Dmitry)\n- Fixed bug #31413 (curl POSTFIELDS crashes on 64-bit platforms). (Joe)\n- Fixed bug #31396 (compile fails with gd 2.0.33 without freetype). (Jani)\n- Fixed bug #31371 (highlight_file() trims new line after heredoc). (Ilia)\n- Fixed bug #31361 (simplexml/domxml segfault when adding node twice). (Rob)\n- Fixed bug #31348 (CachingIterator::rewind() leaks). (Marcus)\n- Fixed bug #31346 (ArrayIterator::next segfaults). (Marcus)\n- Fixed bug #31190 (Unexpected warning then exception is thrown from\n  call_user_func_array()). (phpbugs at domain51 dot net, Dmitry)\n- Fixed bug #31142 (imap_mail_compose() fails to generate correct output). (Ilia)\n- Fixed bug #31139 (XML Parser Functions seem to drop &amp; when parsing). (Rob)\n- Fixed bug #31398 (When magic_guotes_gpc are enabled filenames with ' get cutoff).\n  (Ilia)\n- Fixed bug #31288 (Possible crash in mysql_fetch_field(), if mysql_list_fields()\n  was not called previously). (Ilia)\n- Fixed bug #31107, #31110, #31111, #31249 (Compile failure of zend_strtod.c).\n  (Jani)\n- Fixed bug #31110 (PHP 4.3.10 does not compile on Tru64 UNIX 5.1B). (Derick)\n- Fixed bug #31107 (Compile failure on Solaris 9 (Intel) and gcc 3.4.3). (Derick)\n- Fixed bug #31103 (Better error message when c-client cannot be found). (Ilia)\n- Fixed bug #31101 (missing kerberos header file path with --with-openssl). (Jani)\n- Fixed bug #31098 (isset() / empty() incorrectly return true in dereference of\n  a string type). (Moriyoshi)\n- Fixed bug #31087 (broken php_url_encode_hash macro). (Ilia)\n- Fixed bug #31072 (var_export() does not output an array element with an empty\n  string key). (Derick)\n- Fixed bug #31060 (imageftbbox() does not use linespacing parameter). (Jani)\n- Fixed bug #31056 (php_std_date() returns invalid formatted date if\n  y2k_compliance is On). (Ilia)\n- Fixed bug #31055 (apache2filter: per request leak proportional to the full\n  path of the request URI). (kameshj at fastmail dot fm)\n- Fixed bug #30901 (can't send cookies with soap envelop). (Dmitry)\n- Fixed bug #30871 (Misleading warning message for array_combine()). (Andrey)\n- Fixed bug #30868 (evaluated pointer comparison in mbregex causes compile\n  failure). (Moriyoshi)\n- Fixed bug #30862 (Static array with boolean indexes). (Marcus)\n- Fixed bug #30726 (-.1 like numbers are not being handled correctly). (Ilia)\n- Fixed bug #30725 (PHP segfaults when an exception is thrown in getIterator()\n  within foreach). (Marcus)\n- Fixed bug #30609 (cURL functions bypass open_basedir). (Jani)\n- Fixed bug #30446 (apache2handler: virtual() includes files out of sequence)\n- Fixed bug #30430 (odbc_next_result() doesn't bind values and that results\n  in segfault). (pdan-php at esync dot org, Tony)\n- Fixed bug #30266 (Invalid opcode 137/1/8). (Marcus)\n- Fixed bug #30120 imagettftext() and imagettfbbox() accept too many\n  parameters). (Jani)\n- Fixed bug #30106 (SOAP cannot not parse 'ref' element. Causes Uncaught\n  SoapFault exception). (Dmitry)\n- Fixed bug #29989 (type re_registers redefined in oniguruma.h). (Moriyoshi)\n- Fixed bug #28803 (enabled debug causes bailout errors with CLI on AIX\n  because of fflush() called on already closed filedescriptor). (Tony)\n- Fixed bug #29767 (Weird behaviour of __set($name, $value)). (Dmitry)\n- Fixed bug #29733 (printf() handles repeated placeholders wrong).\n  (bugs dot php dot net at bluetwanger dot de, Ilia)\n- Fixed bug #29424 (width and height inverted for JPEG2000 files). (Ilia)\n- Fixed bug #29329 (configure for mysqli with shared doesn't work). (Georg)\n- Fixed bug #29136 (make test - libtool failure on MacOSX). (Jani)\n- Fixed bug #28976 (mail(): use \"From:\" from headers if sendmail_from is empty).\n  (Jani)\n- Fixed bug #28930 (PHP sources pick wrong header files generated by bison).\n  (eggert at gnu dot org, Jani)\n- Fixed bug #28840 (__destruct of a class that extends mysqli not called).\n  (Marcus)\n- Fixed bug #28804 (ini-file section parsing pattern is buggy).\n  (wendland at scan-plus dot de)\n- Fixed bug #28451 (corrupt EXIF headers have unlimited recursive IFD directory\n  entries). (Andrei)\n- Fixed bug #28444 (Cannot access undefined property for object with overloaded\n  property access). (Dmitry)\n- Fixed bug #28442 (Changing a static variables in a class changes it across\n  sub/super classes.) (Marcus)\n- Fixed bug #28324 (HTTP_SESSION_VARS appear when register_long_arrays is\n  Off). (Tony)\n- Fixed bug #28074 (FastCGI: stderr should be written in a FCGI stderr stream).\n  (chris at ex-parrot dot com)\n- Fixed bug #28067 (partially incorrect utf8 to htmlentities mapping). (Derick,\n  Benjamin Greiner)\n- Fixed bug #28041 (SOAP HTTP Digest Access Authentication). (Dmitry)\n- Fixed bug #27633 (Double \\r problem on ftp_get in ASCII mode on Win32). (Ilia)\n- Fixed bug #18613 (Multiple OUs in x509 certificate not handled properly).\n  (Jani)\n\n15 Dec 2004, PHP 5.0.3\n- Added the %F modifier to *printf to render a non-locale-aware representation\n  of a float with the . as decimal seperator. (Derick)\n- Fixed error handling in mysqli_multi_query. (Georg)\n- Extended the functionality of is_subclass_of() to accept either a class name\n  or an object as first parameter. (Andrey)\n- Fixed potential problems with unserializing invalid serialize data. (Marcus)\n- Fixed bug #32076 (ReflectionMethod::isDestructor() always return true).\n  (Derick, Tony)\n- Fixed bug #31034 (Problem with non-existing iconv header file). (Derick)\n- Fixed bug #30995 (snmp extension does not build with net-snmp 5.2). (Ilia)\n- Fixed bug #30994 (SOAP server unable to handle request with references).\n  (Dmitry)\n- Fixed bug #30990 (allow popen() on *NIX to accept 'b' flag). (Ilia)\n- Fixed bug #30967 (properties in extended mysqli classes don't work). (Georg)\n- Fixed bug #30928 (When Using WSDL, SoapServer doesn't handle private or\n  protected properties). (Dmitry)\n- Fixed bug #30922 (reflective functions crash PHP when interfaces extend\n  themselves). (Tony, Dmitry)\n- Fixed bug #30904 (segfault when recording soapclient into session). (Tony,\n  Dmitry)\n- Fixed bug #30890 (MySQLi testsuite)\n- Fixed bug #30856 (ReflectionClass::getStaticProperties segfaults). (Marcus)\n- Fixed bug #30832 (\"!\" stripped off comments in xml parser). (Rob)\n- Fixed bug #30799 (SoapServer doesn't handle private or protected properties).\n  (Dmitry)\n- Fixed bug #30783 (Apache crash when using ReflectionFunction::\n  getStaticVariables()). (Marcus)\n- Fixed bug #30750 (Meaningful error message when upload directory is not\n  accessible). (Ilia)\n- Fixed bug #30685 (Malformed SOAPClient http header reequest). (Dmitry)\n- Fixed bug #30672 (Problem handling exif data in jpeg images at unusual\n  places). (Marcus)\n- Fixed bug #30658 (Ensure that temporary files created by GD are removed).\n  (Ilia)\n- Fixed bug #30645 (def. multi result set support for mysql_connect). (Georg)\n- Fixed bug #30637 (compile with pear error). (Antony)\n- Fixed bug #30587 (array_multisort doesn't separate zvals before\n  changing them). (Tony)\n- Fixed bug #30572 (crash when comparing SimpleXML attribute to a boolean).\n  (Andi)\n- Fixed bug #30566 (attribute namespace URIs are inconsistent when parsing).\n  (Rob)\n- Fixed bug #30490 (PEAR installation fails). (Antony)\n- Fixed bug #30475 (curl_getinfo() may crash in some situations). (Ilia)\n- Fixed bug #30442 (segfault when parsing ?getvariable[][ ). (Tony)\n- Fixed bug #30388 (rename across filesystems loses ownership and\n  permission info). (Tony)\n- Fixed bug #30387 (stream_socket_client async connect was broken).\n  (vnegrier at esds dot com, Wez).\n- Fixed bug #30381 (Strange results with get_class_vars()). (Marcus)\n- Fixed bug #30375 (cal_info() does not work without a parameter). (Ilia)\n- Fixed bug #30362 (stream_get_line() not handling end string correctly).\n  (Ilia)\n- Fixed bug #30359 (SOAP client requests have no port in \"Host\" field).\n  (Dmitry)\n- Fixed bug #30356 (str_ireplace() does not work on all strings). (Ilia)\n- Fixed bug #30344 (Reflection::getModifierNames() returns too long strings).\n  (Marcus)\n- Fixed bug #30329 (Error Fetching http body, No Content-Length, connection\n  closed or chunked data). (Dmitry)\n- Fixed bug #30282 (segfault when using unknown/unsupported\n  session.save_handler and/or session.serialize_handler). (Tony)\n- Fixed bug #30281 (Prevent non-wbmp images from being detected as such).\n  (Ilia)\n- Fixed bug #30276 (Possible crash in ctype_digit on large numbers). (Ilia)\n- Fixed bug #30230 (exception handler not working with objects). (Marcus)\n- Fixed bug #30224 (Sybase date strings are sometimes not null terminated).\n  (Ilia)\n- Fixed bug #30175 (SOAP results aren't parsed correctly). (Dmitry)\n- Fixed bug #30147 (OO sqlite_fetch_object did not reset error handler). (Wez)\n- Fixed bug #30133 (get_current_user() crashes on Windows). (Edin)\n- Fixed bug #30061 (xml_set_start_namespace_decl_handler not called). (Rob)\n- Fixed bug #30057 (did not detect IPV6 on FreeBSD 4.1). (Wez)\n- Fixed bug #30042 (strtotime does not use second param). (Derick)\n- Fixed bug #30027 (Possible crash inside ftp_get()).\n  (cfield at affinitysolutions dot com)\n- Fixed bug #29954 (array_reduce segfaults when initial value is array). (Tony)\n- Fixed bug #29883 (isset gives invalid values on strings). (Tony, Dmitry)\n- Fixed bug #29801 (Set limit on the size of mmapable data). (Ilia)\n- Fixed bug #29557 (strtotime error). (Derick)\n- Fixed bug #29418 (double free when openssl_csr_new fails).\n  (Kamesh Jayachandran).\n- Fixed bug #29385 (Soapserver always uses std class). (David, Dmitry)\n- Fixed bug #29211 (SoapClient doesn't request wsdl through proxy). (Rob)\n- Fixed bug #28817 (Var problem when extending domDocument). (Georg)\n- Fixed bug #28599 (strtotime fails with zero base time). (Derick)\n- Fixed bug #28598 (Lost support for MS Symbol fonts). (Pierre)\n- Fixed bug #28220 (mb_strwidth() returns wrong width values for some hangul\n  characters). (Moriyoshi)\n- Fixed bug #28228 (NULL decimal separator is not being handled correctly).\n  (Ilia)\n- Fixed bug #28209 (strtotime(\"now\")). (Derick)\n- Fixed bug #27798 (private / protected variables not exposed by\n  get_object_vars() inside class). (Marcus)\n- Fixed bug #27728 (Can't return within a zend_try {} block or the previous\n  bailout state isn't restored. (Andi)\n- Fixed bug #27183 (Userland stream wrapper segfaults on stream_write).\n  (Christian)\n\n23 Sep 2004, PHP 5.0.2\n- Added new boolean (fourth) parameter to array_slice() that turns on the\n  preservation of keys in the returned array. (Derick)\n- Added the sorting flag SORT_LOCALE_STRING to the sort() functions which makes\n  them sort based on the current locale. (Derick)\n- Added interface_exists() and make class_exists() only return true for real\n  classes. (Andrey)\n- Added PHP_EOL constant that contains the OS way of representing newlines.\n  (Paul Hudson, Derick)\n- Implemented periodic PCRE compiled regexp cache cleanup, to avoid memory\n  exhaustion. (Andrei)\n- Renamed SoapClient->__call() to SoapClinet->__soapCall(). (Dmitry)\n- Fixed bug with raw_post_data not getting set (Brian)\n- Fixed a file-descriptor leak with phpinfo() and other 'special' URLs (Zeev)\n- Fixed bug #30209 (ReflectionClass::getMethod() lowercases attribute).\n  (Marcus)\n- Fixed bug #30182 (SOAP module processing WSDL file dumps core). (Dmitry)\n- Fixed bug #30045 (Cannot pass big integers (> 2147483647) in SOAP requests).\n  (Dmitry)\n- Fixed bug #29985 (unserialize()/ __PHP_Incomplete_class does not report\n  correctly class name). (Marcus, Tony)\n- Fixed bug #29945 (simplexml_load_file URL limitation 255 char). (Rob)\n- Fixed bug #29873 (No defines around pcntl_*priority definitions). (Derick)\n- Fixed bug #29844 (SOAP doesn't return the result of a valid SOAP request).\n  (Dmitry)\n- Fixed bug #29842 (soapclient return null value). (Dmitry)\n- Fixed bug #29839 (incorrect convert (xml:lang to lang)). (Dmitry)\n- Fixed bug #29830 (SoapServer::setClass() should not export non-public\n  methods). (Dmitry)\n- Fixed bug #29828 (Interfaces no longer work). (Marcus)\n- Fixed bug #29821 (Fixed possible crashes in convert_uudecode() on invalid\n  data). (Ilia)\n- Fixed bug #29808 (array_count_values() breaks with numeric strings). (Ilia)\n- Fixed bug #29805 (HTTP Authentication Issues). (Uwe Schindler)\n- Fixed bug #29795 (SegFault with Soap and Amazon's Web Services). (Dmitry)\n- Fixed bug #29737 (ip2long should return -1 if IP is 255.255.255.255 and FALSE\n  on error). (Tony)\n- Fixed bug #29711 (Changed ext/xml to default to UTF-8 output). (Rob)\n- Fixed bug #29678 (opendir() with ftp:// wrapper segfaults if path does not\n  have trailing slash). (Ilia)\n- Fixed bug #29657 (xml_* functions throw non descriptive error).\n  (Christian, Rob)\n- Fixed bug #29656 (segfault on result and statement properties). (Georg)\n- Fixed bug #29566 (foreach/string handling strangeness (crash)). (Dmitry)\n- Fixed bug #29447 (Reflection API issues). (Marcus)\n- Fixed bug #29296 (Added sslv2 and sslv3 transports). (Wez)\n- Fixed bug #29283 (Invalid statement handle in mysqli on execute). (Georg)\n- Fixed bug #29913 (parse_url() is now binary safe). (Ilia)\n- Fixed bug #27994 (segfault with Soapserver when WSDL-Cache is enabled).\n  (Dmitry)\n- Fixed bug #27791 (Apache 2.0 SAPI build against Apache 2 HEAD). (Joe Orton,\n  Derick)\n- Fixed bug #26737 (private/protected properties not serialized when user\n  declared method __sleep() exists). E_NOTICE thrown when __sleep() returns\n  name of non-existing member. (Andrey, Curt)\n\n12 Aug 2004, PHP 5.0.1\n- Changed destructor mechanism so that destructors are called prior to request\n  shutdown. (Marcus)\n- Rewritten UNIX and Windows install help files. (Documentation Team)\n- Updated several libraries bundled with the windows release which now\n  includes libxml2-2.6.11, libxslt-1.1.7 and iconv-1.9.1. (Rob, Edin)\n- Improved and moved ActiveScript SAPI to PECL.  (Wez)\n- Fixed bug #29606 (php_strip_whitespace() prints to stdout rather then\n  returning the value). (Ilia)\n- Fixed bug #29577 (MYSQLI_CLIENT_FOUND_ROWS undefined) (Georg)\n- Fixed bug #29573 (Segmentation fault, when exception thrown within\n  PHP function called from XSLT). (Christian)\n- Fixed bug #29522 (accessing properties without connection) (Georg)\n- Fixed bug #29505 (get_class_vars() severely broken when used with arrays).\n  (Marcus)\n- Fixed bug #29490 (.Net object instantiation failed). (Michael Sisolak).\n- Fixed bug #29474 (win32: usleep() doesn't work). (Wez)\n- Fixed bug #29449 (win32: feof() hangs on empty tcp stream). (Wez)\n- Fixed bug #29437 (Possible crash inside array_walk_recursive()). (Ilia)\n- Fixed bug #29431 (crash when parsing invalid address; invalid address\n  returned by stream_socket_recvfrom(), stream_socket_getname()). (Wez)\n- Fixed bug #29409 (Segfault in PHP functions called from XSLT). (Rob)\n- Fixed unloading of dynamically loaded extensions.\n  (Marcus, kameshj at fastmail dot fm)\n- Fixed bug #29395 (sqlite_escape_string() returns bogus data on empty\n  strings). (Ilia, Tony)\n- Fixed bug #29392 (com_dotnet crashes when echo'ing an object). (Wez)\n- Fixed bug #29368 (The destructor is called when an exception is thrown from\n  the constructor). (Marcus)\n- Fixed bug #29354 (Exception constructor marked as both public and protected).\n  (Marcus)\n- Fixed bug #29342 (strtotime() does not handle empty date string properly).\n  (Ilia)\n- Fixed bug #29340 (win32 build produces invalid php_ifx.dll). (Edin)\n- Fixed bug #29335 (fetch functions now use MYSQLI_BOTH as default) (Georg)\n- Fixed bug #29291 (get_class_vars() return names with NULLs). (Marcus)\n- Fixed bug #29264 (gettext extension not working). (Edin)\n- Fixed bug #29258 (variant_date_from_timestamp() does not honour\n  timezone).  (Wez)\n- Fixed bug #29256 (error when sending large packets on a socket). (Dmitry)\n- Fixed bug #29236 (memory error when wsdl-cache is enabled). (Dmitry)\n- Fixed bug #29147 (Compile Error in mnoGoSearch functions). (Sergey, Antony)\n- Fixed bug #29132 ($_SERVER[\"PHP_AUTH_USER\"] isn't defined). (Stefan)\n- Fixed bug #29119 (html_entity_decode() misbehaves with UTF-8). (Moriyoshi)\n- Fixed bug #29109 (SoapFault exception: [WSDL] Out of memory). (Dmitry)\n- Fixed bug #29061 (soap extension segfaults). (Dmitry)\n- Fixed bug #28985 (__getTypes() returning nothing on complex WSDL). (Dmitry)\n- Fixed bug #28969 (Wrong data encoding of special characters). (Dmitry)\n- Fixed bug #28895 (ReflectionClass::isAbstract always returns false). (Marcus)\n- Fixed bug #28829 (Thread-unsafety in bcmath elementary values). (Sara)\n- Fixed bug #28464 (catch() does not catch exceptions by interfaces). (Marcus)\n- Fixed bug #27669 (PHP 5 didn't support all possibilities for calling static\n  methods dynamically). (Dmitry)\n- Fixed ReflectionClass::getMethod() and ReflectionClass::getProperty() to\n  raise an ReflectionException instead of returning NULL on failure.\n  (Sebastian)\n- Fixed convert.* filters to consume remaining buckets_in on flush. (Sara)\n- Fixed bug in mysqli->client_version. (Georg)\n\n13 Jul 2004, PHP 5.0.0\n- Updated PCRE to provide better error handling in certain cases. (Andrei)\n- Changed doc comments to require a single white space after '/**'. (Marcus)\n- Fixed bug #29019 (Database not closing). (Marcus)\n- Fixed bug #29008 (array_combine() does not handle non-numeric/string keys).\n  (Ilia)\n- Fixed bug #28999 (fixed behaviour of exec() to work as it did in 4.X). (Ilia)\n- Fixed bug #28868 (Internal filter registry not thread safe). (Sara)\n- Fixed bug #28851 (call_user_func_array has typo in error message). (Marcus)\n- Fixed bug #28831 (ArrayObject::offsetGet() does the work of offsetUnset()).\n  (Marcus)\n- Fixed bug #28822 (ArrayObject::offsetExists() works inverted). (Marcus)\n- Fixed bug #28789 (ReflectionProperty getValue() fails on public static\n  members). (Marcus)\n- Fixed bug #28771 (Segfault when using xslt and clone). (Rob)\n- Fixed bug #28751 (SoapServer does not call _autoload()). (Dmitry)\n- Fixed bug #28739 (array_*diff() and array_*intersect() not clearing the fci\n  cache before work). (Andrey)\n- Fixed bug #28721 (appendChild() and insertBefore() unset DOMText).(Rob)\n- Fixed bug #28702 (SOAP does not parse WSDL service address correctly). (Dmitry)\n- Fixed bug #28699 (Reflection api bugs). (Marcus)\n- Fixed bug #28694 (ReflectionExtension::getFunctions() crashes PHP). (Marcus)\n- Fixed bug #28512 (Allocate enough space to store MSSQL data). (Frank)\n- Fixed strip_tags() to correctly handle '\\0' characters. (Stefan)\n", "--TEST--\nBug #64660 (Segfault on memory exhaustion within function definition)\n--FILE--\n<?php\nfunction a() {\nn}\necho \"Done\\n\";\n--EXPECTF--\n\nParse error: memory exhausted in %s on line %d \n", "/* Generated by re2c 0.13.5 on Mon May 20 00:45:38 2013 */\n#line 1 \"Zend/zend_language_scanner.l\"\n/*\n   +----------------------------------------------------------------------+\n   | Zend Engine                                                          |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 2.00 of the Zend license,     |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.zend.com/license/2_00.txt.                                |\n   | If you did not receive a copy of the Zend license and are unable to  |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@zend.com so we can mail you a copy immediately.              |\n   +----------------------------------------------------------------------+\n   | Authors: Marcus Boerger <helly@php.net>                              |\n   |          Nuno Lopes <nlopess@php.net>                                |\n   |          Scott MacVicar <scottmac@php.net>                           |\n   | Flex version authors:                                                |\n   |          Andi Gutmans <andi@zend.com>                                |\n   |          Zeev Suraski <zeev@zend.com>                                |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#if 0\n# define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)\n#else\n# define YYDEBUG(s, c)\n#endif\n\n#include \"zend_language_scanner_defs.h\"\n\n#include <errno.h>\n#include \"zend.h\"\n#ifdef PHP_WIN32\n# include <Winuser.h>\n#endif\n#include \"zend_alloc.h\"\n#include <zend_language_parser.h>\n#include \"zend_compile.h\"\n#include \"zend_language_scanner.h\"\n#include \"zend_highlight.h\"\n#include \"zend_constants.h\"\n#include \"zend_variables.h\"\n#include \"zend_operators.h\"\n#include \"zend_API.h\"\n#include \"zend_strtod.h\"\n#include \"zend_exceptions.h\"\n#include \"tsrm_virtual_cwd.h\"\n#include \"tsrm_config_common.h\"\n\n#define YYCTYPE   unsigned char\n#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }\n#define YYCURSOR  SCNG(yy_cursor)\n#define YYLIMIT   SCNG(yy_limit)\n#define YYMARKER  SCNG(yy_marker)\n\n#define YYGETCONDITION()  SCNG(yy_state)\n#define YYSETCONDITION(s) SCNG(yy_state) = s\n\n#define STATE(name)  yyc##name\n\n/* emulate flex constructs */\n#define BEGIN(state) YYSETCONDITION(STATE(state))\n#define YYSTATE      YYGETCONDITION()\n#define yytext       ((char*)SCNG(yy_text))\n#define yyleng       SCNG(yy_leng)\n#define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\\n                          yyleng   = (unsigned int)x; } while(0)\n#define yymore()     goto yymore_restart\n\n/* perform sanity check. If this message is triggered you should\n   increase the ZEND_MMAP_AHEAD value in the zend_streams.h file */\n#define YYMAXFILL 16\n#if ZEND_MMAP_AHEAD < YYMAXFILL\n# error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL\n#endif\n\n#ifdef HAVE_STDARG_H\n# include <stdarg.h>\n#endif\n\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n\n/* Globals Macros */\n#define SCNG\tLANG_SCNG\n#ifdef ZTS\nZEND_API ts_rsrc_id language_scanner_globals_id;\n#else\nZEND_API zend_php_scanner_globals language_scanner_globals;\n#endif\n\n#define HANDLE_NEWLINES(s, l)\t\t\t\t\t\t\t\t\t\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tchar *p = (s), *boundary = p+(l);\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\twhile (p<boundary) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tif (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {\t\t\t\t\t\\\n\t\t\tCG(zend_lineno)++;\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tp++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n} while (0)\n\n#define HANDLE_NEWLINE(c) \\\n{ \\\n\tif (c == '\\n' || c == '\\r') { \\\n\t\tCG(zend_lineno)++; \\\n\t} \\\n}\n\n/* To save initial string length after scanning to first variable, CG(doc_comment_len) can be reused */\n#define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)\n#define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)\n\n#define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)\n\n#define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')\n#define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))\n\nBEGIN_EXTERN_C()\n\nstatic size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\nLANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\ninternal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\n\nstatic void _yy_push_state(int new_state TSRMLS_DC)\n{\n\tzend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));\n\tYYSETCONDITION(new_state);\n}\n\n#define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)\n\nstatic void yy_pop_state(TSRMLS_D)\n{\n\tint *stack_state;\n\tzend_stack_top(&SCNG(state_stack), (void **) &stack_state);\n\tYYSETCONDITION(*stack_state);\n\tzend_stack_del_top(&SCNG(state_stack));\n}\n\nstatic void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)\n{\n\tYYCURSOR       = (YYCTYPE*)str;\n\tYYLIMIT        = YYCURSOR + len;\n\tif (!SCNG(yy_start)) {\n\t\tSCNG(yy_start) = YYCURSOR;\n\t}\n}\n\nvoid startup_scanner(TSRMLS_D)\n{\n\tCG(parse_error) = 0;\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tCG(doc_comment) = NULL;\n\tCG(doc_comment_len) = 0;\n\tzend_stack_init(&SCNG(state_stack));\n}\n\nvoid shutdown_scanner(TSRMLS_D)\n{\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc_len)=0;\n\t}\n\tCG(parse_error) = 0;\n\tzend_stack_destroy(&SCNG(state_stack));\n\tRESET_DOC_COMMENT();\n}\n\nZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tlex_state->yy_leng   = SCNG(yy_leng);\n\tlex_state->yy_start  = SCNG(yy_start);\n\tlex_state->yy_text   = SCNG(yy_text);\n\tlex_state->yy_cursor = SCNG(yy_cursor);\n\tlex_state->yy_marker = SCNG(yy_marker);\n\tlex_state->yy_limit  = SCNG(yy_limit);\n\n\tlex_state->state_stack = SCNG(state_stack);\n\tzend_stack_init(&SCNG(state_stack));\n\n\tlex_state->in = SCNG(yy_in);\n\tlex_state->yy_state = YYSTATE;\n\tlex_state->filename = zend_get_compiled_filename(TSRMLS_C);\n\tlex_state->lineno = CG(zend_lineno);\n\n\tlex_state->script_org = SCNG(script_org);\n\tlex_state->script_org_size = SCNG(script_org_size);\n\tlex_state->script_filtered = SCNG(script_filtered);\n\tlex_state->script_filtered_size = SCNG(script_filtered_size);\n\tlex_state->input_filter = SCNG(input_filter);\n\tlex_state->output_filter = SCNG(output_filter);\n\tlex_state->script_encoding = SCNG(script_encoding);\n}\n\nZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tSCNG(yy_leng)   = lex_state->yy_leng;\n\tSCNG(yy_start)  = lex_state->yy_start;\n\tSCNG(yy_text)   = lex_state->yy_text;\n\tSCNG(yy_cursor) = lex_state->yy_cursor;\n\tSCNG(yy_marker) = lex_state->yy_marker;\n\tSCNG(yy_limit)  = lex_state->yy_limit;\n\n\tzend_stack_destroy(&SCNG(state_stack));\n\tSCNG(state_stack) = lex_state->state_stack;\n\n\tSCNG(yy_in) = lex_state->in;\n\tYYSETCONDITION(lex_state->yy_state);\n\tCG(zend_lineno) = lex_state->lineno;\n\tzend_restore_compiled_filename(lex_state->filename TSRMLS_CC);\n\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tSCNG(script_org) = lex_state->script_org;\n\tSCNG(script_org_size) = lex_state->script_org_size;\n\tSCNG(script_filtered) = lex_state->script_filtered;\n\tSCNG(script_filtered_size) = lex_state->script_filtered_size;\n\tSCNG(input_filter) = lex_state->input_filter;\n\tSCNG(output_filter) = lex_state->output_filter;\n\tSCNG(script_encoding) = lex_state->script_encoding;\n\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc) = NULL;\n\t\tCG(heredoc_len) = 0;\n\t}\n}\n\nZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tzend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);\n\t/* zend_file_handle_dtor() operates on the copy, so we have to NULLify the original here */\n\tfile_handle->opened_path = NULL;\n\tif (file_handle->free_filename) {\n\t\tfile_handle->filename = NULL;\n\t}\n}\n\n#define BOM_UTF32_BE\t\"\\x00\\x00\\xfe\\xff\"\n#define\tBOM_UTF32_LE\t\"\\xff\\xfe\\x00\\x00\"\n#define\tBOM_UTF16_BE\t\"\\xfe\\xff\"\n#define\tBOM_UTF16_LE\t\"\\xff\\xfe\"\n#define\tBOM_UTF8\t\t\"\\xef\\xbb\\xbf\"\n\nstatic const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)\n{\n\tconst unsigned char *p;\n\tint wchar_size = 2;\n\tint le = 0;\n\n\t/* utf-16 or utf-32? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tp = memchr(p, 0, script_size-(p-script)-2);\n\t\tif (!p) {\n\t\t\tbreak;\n\t\t}\n\t\tif (*(p+1) == '\\0' && *(p+2) == '\\0') {\n\t\t\twchar_size = 4;\n\t\t\tbreak;\n\t\t}\n\n\t\t/* searching for UTF-32 specific byte orders, so this will do */\n\t\tp += 4;\n\t}\n\n\t/* BE or LE? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tif (*p == '\\0' && *(p+wchar_size-1) != '\\0') {\n\t\t\t/* BE */\n\t\t\tle = 0;\n\t\t\tbreak;\n\t\t} else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {\n\t\t\t/* LE* */\n\t\t\tle = 1;\n\t\t\tbreak;\n\t\t}\n\t\tp += wchar_size;\n\t}\n\n\tif (wchar_size == 2) {\n\t\treturn le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;\n\t} else {\n\t\treturn le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding = NULL;\n\tint bom_size;\n\tunsigned char *pos1, *pos2;\n\n\tif (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {\n\t\treturn NULL;\n\t}\n\n\t/* check out BOM */\n\tif (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32be;\n\t\tbom_size = sizeof(BOM_UTF32_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32le;\n\t\tbom_size = sizeof(BOM_UTF32_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16be;\n\t\tbom_size = sizeof(BOM_UTF16_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16le;\n\t\tbom_size = sizeof(BOM_UTF16_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf8;\n\t\tbom_size = sizeof(BOM_UTF8)-1;\n\t}\n\n\tif (script_encoding) {\n\t\t/* remove BOM */\n\t\tLANG_SCNG(script_org) += bom_size;\n\t\tLANG_SCNG(script_org_size) -= bom_size;\n\n\t\treturn script_encoding;\n\t}\n\n\t/* script contains NULL bytes -> auto-detection */\n\tif ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {\n\t\t/* check if the NULL byte is after the __HALT_COMPILER(); */\n\t\tpos2 = LANG_SCNG(script_org);\n\n\t\twhile (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {\n\t\t\tpos2 = memchr(pos2, '_', pos1 - pos2);\n\t\t\tif (!pos2) break;\n\t\t\tpos2++;\n\t\t\tif (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {\n\t\t\t\tpos2 += sizeof(\"_HALT_COMPILER\")-1;\n\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\tpos2++;\n\t\t\t\t}\n\t\t\t\tif (*pos2 == '(') {\n\t\t\t\t\tpos2++;\n\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t}\n\t\t\t\t\tif (*pos2 == ')') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (*pos2 == ';') {\n\t\t\t\t\t\t\treturn NULL;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* make best effort if BOM is missing */\n\t\treturn zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding;\n\n\tif (CG(detect_unicode)) {\n\t\t/* check out bom(byte order mark) and see if containing wchars */\n\t\tscript_encoding = zend_multibyte_detect_unicode(TSRMLS_C);\n\t\tif (script_encoding != NULL) {\n\t\t\t/* bom or wchar detection is prior to 'script_encoding' option */\n\t\t\treturn script_encoding;\n\t\t}\n\t}\n\n\t/* if no script_encoding specified, just leave alone */\n\tif (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {\n\t\treturn NULL;\n\t}\n\n\t/* if multiple encodings specified, detect automagically */\n\tif (CG(script_encoding_list_size) > 1) {\n\t\treturn zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);\n\t}\n\n\treturn CG(script_encoding_list)[0];\n}\n\nZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tconst zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);\n\n\tif (!script_encoding) {\n\t\treturn FAILURE;\n\t}\n\n\t/* judge input/output filter */\n\tLANG_SCNG(script_encoding) = script_encoding;\n\tLANG_SCNG(input_filter) = NULL;\n\tLANG_SCNG(output_filter) = NULL;\n\n\tif (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {\n\t\tif (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\t\t/* and if not, work around w/ script_encoding -> utf-8 -> script_encoding conversion */\n\t\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;\n\t\t} else {\n\t\t\tLANG_SCNG(input_filter) = NULL;\n\t\t\tLANG_SCNG(output_filter) = NULL;\n\t\t}\n\t\treturn SUCCESS;\n\t}\n\n\tif (zend_multibyte_check_lexer_compatibility(internal_encoding)) {\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_internal;\n\t\tLANG_SCNG(output_filter) = NULL;\n\t} else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\tLANG_SCNG(input_filter) = NULL;\n\t\tLANG_SCNG(output_filter) = encoding_filter_script_to_internal;\n\t} else {\n\t\t/* both script and internal encodings are incompatible w/ flex */\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;\n\t}\n\n\treturn 0;\n}\n\nZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tconst char *file_path = NULL;\n\tchar *buf;\n\tsize_t size, offset = 0;\n\n\t/* The shebang line was read, get the current position to obtain the buffer start */\n\tif (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {\n\t\tif ((offset = ftell(file_handle->handle.fp)) == -1) {\n\t\t\toffset = 0;\n\t\t}\n\t}\n\n\tif (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {\n\t\treturn FAILURE;\n\t}\n\n\tzend_llist_add_element(&CG(open_files), file_handle);\n\tif (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {\n\t\tzend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));\n\t\tsize_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;\n\t\tfh->handle.stream.handle = (void*)(((char*)fh) + diff);\n\t\tfile_handle->handle.stream.handle = fh->handle.stream.handle;\n\t}\n\n\t/* Reset the scanner for scanning the new file */\n\tSCNG(yy_in) = file_handle;\n\tSCNG(yy_start) = NULL;\n\n\tif (size != -1) {\n\t\tif (CG(multibyte)) {\n\t\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\t\tSCNG(script_org_size) = size;\n\t\t\tSCNG(script_filtered) = NULL;\n\n\t\t\tzend_multibyte_set_filter(NULL TSRMLS_CC);\n\n\t\t\tif (SCNG(input_filter)) {\n\t\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t\t}\n\t\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\t\tsize = SCNG(script_filtered_size);\n\t\t\t}\n\t\t}\n\t\tSCNG(yy_start) = (unsigned char *)buf - offset;\n\t\tyy_scan_buffer(buf, size TSRMLS_CC);\n\t} else {\n\t\tzend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");\n\t}\n\n\tBEGIN(INITIAL);\n\n\tif (file_handle->opened_path) {\n\t\tfile_path = file_handle->opened_path;\n\t} else {\n\t\tfile_path = file_handle->filename;\n\t}\n\n\tzend_set_compiled_filename(file_path TSRMLS_CC);\n\n\tif (CG(start_lineno)) {\n\t\tCG(zend_lineno) = CG(start_lineno);\n\t\tCG(start_lineno) = 0;\n\t} else {\n\t\tCG(zend_lineno) = 1;\n\t}\n\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\nEND_EXTERN_C()\n\n\nZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval=NULL;\n\tint compiler_result;\n\tzend_bool compilation_successful=0;\n\tznode retval_znode;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tretval_znode.op_type = IS_CONST;\n\tretval_znode.u.constant.type = IS_LONG;\n\tretval_znode.u.constant.value.lval = 1;\n\tZ_UNSET_ISREF(retval_znode.u.constant);\n\tZ_SET_REFCOUNT(retval_znode.u.constant, 1);\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\n\tretval = op_array; /* success oriented */\n\n\tif (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {\n\t\tif (type==ZEND_REQUIRE) {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t\tzend_bailout();\n\t\t} else {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t}\n\t\tcompilation_successful=0;\n\t} else {\n\t\tinit_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(in_compilation) = 1;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\t\tzend_do_return(&retval_znode, 0 TSRMLS_CC);\n\t\tCG(in_compilation) = original_in_compilation;\n\t\tif (compiler_result != 0) { /* parser error */\n\t\t\tzend_bailout();\n\t\t}\n\t\tcompilation_successful=1;\n\t}\n\n\tif (retval) {\n\t\tCG(active_op_array) = original_active_op_array;\n\t\tif (compilation_successful) {\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t} else {\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn retval;\n}\n\n\nzend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)\n{\n\tzend_file_handle file_handle;\n\tzval tmp;\n\tzend_op_array *retval;\n\tchar *opened_path = NULL;\n\n\tif (filename->type != IS_STRING) {\n\t\ttmp = *filename;\n\t\tzval_copy_ctor(&tmp);\n\t\tconvert_to_string(&tmp);\n\t\tfilename = &tmp;\n\t}\n\tfile_handle.filename = filename->value.str.val;\n\tfile_handle.free_filename = 0;\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.opened_path = NULL;\n\tfile_handle.handle.fp = NULL;\n\n\tretval = zend_compile_file(&file_handle, type TSRMLS_CC);\n\tif (retval && file_handle.handle.stream.handle) {\n\t\tint dummy = 1;\n\n\t\tif (!file_handle.opened_path) {\n\t\t\tfile_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);\n\t\t}\n\n\t\tzend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);\n\n\t\tif (opened_path) {\n\t\t\tefree(opened_path);\n\t\t}\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\n\tif (filename==&tmp) {\n\t\tzval_dtor(&tmp);\n\t}\n\treturn retval;\n}\n\nZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)\n{\n\tchar *buf;\n\tsize_t size;\n\n\t/* enforce two trailing NULLs for flex... */\n\tif (IS_INTERNED(str->value.str.val)) {\n\t\tchar *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t\tmemcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);\n\t\tstr->value.str.val = tmp;\n\t} else {\n\t\tstr->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t}\n\n\tmemset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);\n\n\tSCNG(yy_in) = NULL;\n\tSCNG(yy_start) = NULL;\n\n\tbuf = str->value.str.val;\n\tsize = str->value.str.len;\n\n\tif (CG(multibyte)) {\n\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\tSCNG(script_org_size) = size;\n\t\tSCNG(script_filtered) = NULL;\n\n\t\tzend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);\n\n\t\tif (SCNG(input_filter)) {\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t}\n\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\tsize = SCNG(script_filtered_size);\n\t\t}\n\t}\n\n\tyy_scan_buffer(buf, size TSRMLS_CC);\n\n\tzend_set_compiled_filename(filename TSRMLS_CC);\n\tCG(zend_lineno) = 1;\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\n\n\nZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)\n{\n\tsize_t offset = SCNG(yy_cursor) - SCNG(yy_start);\n\tif (SCNG(input_filter)) {\n\t\tsize_t original_offset = offset, length = 0;\n\t\tdo {\n\t\t\tunsigned char *p = NULL;\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {\n\t\t\t\treturn (size_t)-1;\n\t\t\t}\n\t\t\tefree(p);\n\t\t\tif (length > original_offset) {\n\t\t\t\toffset--;\n\t\t\t} else if (length < original_offset) {\n\t\t\t\toffset++;\n\t\t\t}\n\t\t} while (original_offset != length);\n\t}\n\treturn offset;\n}\n\n\nzend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval;\n\tzval tmp;\n\tint compiler_result;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tif (source_string->value.str.len==0) {\n\t\tefree(op_array);\n\t\treturn NULL;\n\t}\n\n\tCG(in_compilation) = 1;\n\n\ttmp = *source_string;\n\tzval_copy_ctor(&tmp);\n\tconvert_to_string(&tmp);\n\tsource_string = &tmp;\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {\n\t\tefree(op_array);\n\t\tretval = NULL;\n\t} else {\n\t\tzend_bool orig_interactive = CG(interactive);\n\n\t\tCG(interactive) = 0;\n\t\tinit_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(interactive) = orig_interactive;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\n\t\tif (compiler_result != 0) {\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tCG(unclean_shutdown)=1;\n\t\t\tdestroy_op_array(op_array TSRMLS_CC);\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t} else {\n\t\t\tzend_do_return(NULL, 0 TSRMLS_CC);\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t\tretval = op_array;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(&tmp);\n\tCG(in_compilation) = original_in_compilation;\n\treturn retval;\n}\n\n\nBEGIN_EXTERN_C()\nint highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_file_handle file_handle;\n\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.filename = filename;\n\tfile_handle.free_filename = 0;\n\tfile_handle.opened_path = NULL;\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {\n\t\tzend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn SUCCESS;\n}\n\nint highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzval tmp = *str;\n\n\tstr = &tmp;\n\tzval_copy_ctor(str);\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tBEGIN(INITIAL);\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(str);\n\treturn SUCCESS;\n}\n\nZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)\n{\n\tsize_t length;\n\tunsigned char *new_yy_start;\n\n\t/* convert and set */\n\tif (!SCNG(input_filter)) {\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\t\tSCNG(script_filtered_size) = 0;\n\t\tlength = SCNG(script_org_size);\n\t\tnew_yy_start = SCNG(script_org);\n\t} else {\n\t\tif ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t}\n\t\tSCNG(script_filtered) = new_yy_start;\n\t\tSCNG(script_filtered_size) = length;\n\t}\n\n\tSCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));\n\tSCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));\n\tSCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));\n\tSCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));\n\n\tSCNG(yy_start) = new_yy_start;\n}\n\n\n# define zend_copy_value(zendlval, yytext, yyleng) \\\n\tif (SCNG(output_filter)) { \\\n\t\tsize_t sz = 0; \\\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\\n\t\tzendlval->value.str.len = sz; \\\n\t} else { \\\n\t\tzendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\\n\t\tzendlval->value.str.len = yyleng; \\\n\t}\n\nstatic void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)\n{\n\tregister char *s, *t;\n\tchar *end;\n\n\tZVAL_STRINGL(zendlval, str, len, 1);\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\t\t\tif (s >= end) {\n\t\t\t\t*t++ = '\\\\';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase 'n':\n\t\t\t\t\t*t++ = '\\n';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'r':\n\t\t\t\t\t*t++ = '\\r';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\t*t++ = '\\t';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'f':\n\t\t\t\t\t*t++ = '\\f';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'v':\n\t\t\t\t\t*t++ = '\\v';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n#ifdef PHP_WIN32\n\t\t\t\t\t*t++ = VK_ESCAPE;\n#else\n\t\t\t\t\t*t++ = '\\e';\n#endif\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\tcase '`':\n\t\t\t\t\tif (*s != quote_type) {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '$':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\tcase 'X':\n\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\tchar hex_buf[3] = { 0, 0, 0 };\n\n\t\t\t\t\t\tzendlval->value.str.len--; /* for the 'x' */\n\n\t\t\t\t\t\thex_buf[0] = *(++s);\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\t\thex_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(hex_buf, NULL, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t/* check for an octal */\n\t\t\t\t\tif (ZEND_IS_OCT(*s)) {\n\t\t\t\t\t\tchar octal_buf[4] = { 0, 0, 0, 0 };\n\n\t\t\t\t\t\toctal_buf[0] = *s;\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\toctal_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\t\toctal_buf[2] = *(++s);\n\t\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(octal_buf, NULL, 8);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n}\n\n\nint lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n\n#line 1004 \"Zend/zend_language_scanner.c\"\n{\n\tYYCTYPE yych;\n\tunsigned int yyaccept = 0;\n\tif (YYGETCONDITION() < 5) {\n\t\tif (YYGETCONDITION() < 2) {\n\t\t\tif (YYGETCONDITION() < 1) {\n\t\t\t\tgoto yyc_ST_IN_SCRIPTING;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_PROPERTY;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 3) {\n\t\t\t\tgoto yyc_ST_BACKQUOTE;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 4) {\n\t\t\t\t\tgoto yyc_ST_DOUBLE_QUOTES;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_HEREDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (YYGETCONDITION() < 7) {\n\t\t\tif (YYGETCONDITION() < 6) {\n\t\t\t\tgoto yyc_ST_LOOKING_FOR_VARNAME;\n\t\t\t} else {\n\t\t\t\tgoto yyc_ST_VAR_OFFSET;\n\t\t\t}\n\t\t} else {\n\t\t\tif (YYGETCONDITION() < 8) {\n\t\t\t\tgoto yyc_INITIAL;\n\t\t\t} else {\n\t\t\t\tif (YYGETCONDITION() < 9) {\n\t\t\t\t\tgoto yyc_ST_END_HEREDOC;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yyc_ST_NOWDOC;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/* *********************************** */\nyyc_INITIAL:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t};\n\n\t\tYYDEBUG(0, *YYCURSOR);\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\n\t\tif (yych != '<') goto yy4;\n\t\tYYDEBUG(2, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '?') {\n\t\t\tif (yych == '%') goto yy7;\n\t\t\tif (yych >= '?') goto yy5;\n\t\t} else {\n\t\t\tif (yych <= 'S') {\n\t\t\t\tif (yych >= 'S') goto yy9;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy9;\n\t\t\t}\n\t\t}\nyy3:\n\t\tYYDEBUG(3, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1792 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n#line 1163 \"Zend/zend_language_scanner.c\"\nyy4:\n\t\tYYDEBUG(4, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy3;\nyy5:\n\t\tYYDEBUG(5, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == '=') goto yy45;\n\t\t} else {\n\t\t\tif (yych <= 'P') goto yy47;\n\t\t\tif (yych == 'p') goto yy47;\n\t\t}\nyy6:\n\t\tYYDEBUG(6, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1780 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1193 \"Zend/zend_language_scanner.c\"\nyy7:\n\t\tYYDEBUG(7, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy43;\n\t\tYYDEBUG(8, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1757 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1212 \"Zend/zend_language_scanner.c\"\nyy9:\n\t\tYYDEBUG(9, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy11;\n\t\tif (yych == 'c') goto yy11;\nyy10:\n\t\tYYDEBUG(10, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 0) {\n\t\t\tgoto yy3;\n\t\t} else {\n\t\t\tgoto yy6;\n\t\t}\nyy11:\n\t\tYYDEBUG(11, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy12;\n\t\tif (yych != 'r') goto yy10;\nyy12:\n\t\tYYDEBUG(12, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy13;\n\t\tif (yych != 'i') goto yy10;\nyy13:\n\t\tYYDEBUG(13, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy14;\n\t\tif (yych != 'p') goto yy10;\nyy14:\n\t\tYYDEBUG(14, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy15;\n\t\tif (yych != 't') goto yy10;\nyy15:\n\t\tYYDEBUG(15, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy10;\n\t\tif (yych == 'l') goto yy10;\n\t\tgoto yy17;\nyy16:\n\t\tYYDEBUG(16, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(8);\n\t\tyych = *YYCURSOR;\nyy17:\n\t\tYYDEBUG(17, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy16;\n\t\t}\n\t\tif (yych == 'L') goto yy18;\n\t\tif (yych != 'l') goto yy10;\nyy18:\n\t\tYYDEBUG(18, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy19;\n\t\tif (yych != 'a') goto yy10;\nyy19:\n\t\tYYDEBUG(19, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy20;\n\t\tif (yych != 'n') goto yy10;\nyy20:\n\t\tYYDEBUG(20, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy21;\n\t\tif (yych != 'g') goto yy10;\nyy21:\n\t\tYYDEBUG(21, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy22;\n\t\tif (yych != 'u') goto yy10;\nyy22:\n\t\tYYDEBUG(22, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy23;\n\t\tif (yych != 'a') goto yy10;\nyy23:\n\t\tYYDEBUG(23, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy24;\n\t\tif (yych != 'g') goto yy10;\nyy24:\n\t\tYYDEBUG(24, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy25;\n\t\tif (yych != 'e') goto yy10;\nyy25:\n\t\tYYDEBUG(25, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(26, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy25;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy25;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy25;\n\t\t\t} else {\n\t\t\t\tif (yych != '=') goto yy10;\n\t\t\t}\n\t\t}\nyy27:\n\t\tYYDEBUG(27, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(5);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(28, *YYCURSOR);\n\t\tif (yych <= '!') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\t\tif (yych <= '\\n') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy27;\n\t\t\t\tif (yych == ' ') goto yy27;\n\t\t\t\tgoto yy10;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'O') {\n\t\t\t\tif (yych <= '\"') goto yy30;\n\t\t\t\tif (yych == '\\'') goto yy31;\n\t\t\t\tgoto yy10;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'P') goto yy29;\n\t\t\t\tif (yych != 'p') goto yy10;\n\t\t\t}\n\t\t}\nyy29:\n\t\tYYDEBUG(29, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy42;\n\t\tif (yych == 'h') goto yy42;\n\t\tgoto yy10;\nyy30:\n\t\tYYDEBUG(30, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy39;\n\t\tif (yych == 'p') goto yy39;\n\t\tgoto yy10;\nyy31:\n\t\tYYDEBUG(31, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy32;\n\t\tif (yych != 'p') goto yy10;\nyy32:\n\t\tYYDEBUG(32, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy33;\n\t\tif (yych != 'h') goto yy10;\nyy33:\n\t\tYYDEBUG(33, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy34;\n\t\tif (yych != 'p') goto yy10;\nyy34:\n\t\tYYDEBUG(34, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '\\'') goto yy10;\nyy35:\n\t\tYYDEBUG(35, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(36, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych <= '\\n') goto yy35;\n\t\t\tif (yych <= '\\f') goto yy10;\n\t\t\tgoto yy35;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy10;\n\t\t\t\tgoto yy35;\n\t\t\t} else {\n\t\t\t\tif (yych != '>') goto yy10;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(37, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(38, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1717 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1415 \"Zend/zend_language_scanner.c\"\nyy39:\n\t\tYYDEBUG(39, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy40;\n\t\tif (yych != 'h') goto yy10;\nyy40:\n\t\tYYDEBUG(40, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy41;\n\t\tif (yych != 'p') goto yy10;\nyy41:\n\t\tYYDEBUG(41, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy35;\n\t\tgoto yy10;\nyy42:\n\t\tYYDEBUG(42, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy35;\n\t\tif (yych == 'p') goto yy35;\n\t\tgoto yy10;\nyy43:\n\t\tYYDEBUG(43, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(44, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1735 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n#line 1454 \"Zend/zend_language_scanner.c\"\nyy45:\n\t\tYYDEBUG(45, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(46, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1748 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n#line 1468 \"Zend/zend_language_scanner.c\"\nyy47:\n\t\tYYDEBUG(47, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy48;\n\t\tif (yych != 'h') goto yy10;\nyy48:\n\t\tYYDEBUG(48, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy49;\n\t\tif (yych != 'p') goto yy10;\nyy49:\n\t\tYYDEBUG(49, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy10;\n\t\t\tif (yych >= '\\v') goto yy10;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy52;\n\t\t\tif (yych != ' ') goto yy10;\n\t\t}\nyy50:\n\t\tYYDEBUG(50, *YYCURSOR);\n\t\t++YYCURSOR;\nyy51:\n\t\tYYDEBUG(51, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1770 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n#line 1504 \"Zend/zend_language_scanner.c\"\nyy52:\n\t\tYYDEBUG(52, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy50;\n\t\tgoto yy51;\n\t}\n/* *********************************** */\nyyc_ST_BACKQUOTE:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(53, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych != '$') goto yy60;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy58;\n\t\t\tif (yych == '{') goto yy57;\n\t\t\tgoto yy60;\n\t\t}\n\t\tYYDEBUG(55, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy56;\n\t\t\tif (yych <= 'Z') goto yy63;\n\t\t\tif (yych >= '_') goto yy63;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy63;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy66;\n\t\t\t\tif (yych >= 0x7F) goto yy63;\n\t\t\t}\n\t\t}\nyy56:\n\t\tYYDEBUG(56, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2243 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1616 \"Zend/zend_language_scanner.c\"\nyy57:\n\t\tYYDEBUG(57, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy61;\n\t\tgoto yy56;\nyy58:\n\t\tYYDEBUG(58, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(59, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2187 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n#line 1632 \"Zend/zend_language_scanner.c\"\nyy60:\n\t\tYYDEBUG(60, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy56;\nyy61:\n\t\tYYDEBUG(61, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(62, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1649 \"Zend/zend_language_scanner.c\"\nyy63:\n\t\tYYDEBUG(63, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(64, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy63;\n\t\t}\n\t\tif (yych == '-') goto yy68;\n\t\tif (yych == '[') goto yy70;\nyy65:\n\t\tYYDEBUG(65, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1671 \"Zend/zend_language_scanner.c\"\nyy66:\n\t\tYYDEBUG(66, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(67, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1682 \"Zend/zend_language_scanner.c\"\nyy68:\n\t\tYYDEBUG(68, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy72;\nyy69:\n\t\tYYDEBUG(69, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy65;\nyy70:\n\t\tYYDEBUG(70, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(71, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1704 \"Zend/zend_language_scanner.c\"\nyy72:\n\t\tYYDEBUG(72, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy69;\n\t\t\tif (yych <= 'Z') goto yy73;\n\t\t\tif (yych <= '^') goto yy69;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy69;\n\t\t\tif (yych <= 'z') goto yy73;\n\t\t\tif (yych <= '~') goto yy69;\n\t\t}\nyy73:\n\t\tYYDEBUG(73, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(74, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1730 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_DOUBLE_QUOTES:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(75, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '#') {\n\t\t\tif (yych == '\"') goto yy80;\n\t\t\tgoto yy82;\n\t\t} else {\n\t\t\tif (yych <= '$') goto yy77;\n\t\t\tif (yych == '{') goto yy79;\n\t\t\tgoto yy82;\n\t\t}\nyy77:\n\t\tYYDEBUG(77, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy78;\n\t\t\tif (yych <= 'Z') goto yy85;\n\t\t\tif (yych >= '_') goto yy85;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy85;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy88;\n\t\t\t\tif (yych >= 0x7F) goto yy85;\n\t\t\t}\n\t\t}\nyy78:\n\t\tYYDEBUG(78, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2193 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 1847 \"Zend/zend_language_scanner.c\"\nyy79:\n\t\tYYDEBUG(79, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy83;\n\t\tgoto yy78;\nyy80:\n\t\tYYDEBUG(80, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(81, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2182 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n#line 1863 \"Zend/zend_language_scanner.c\"\nyy82:\n\t\tYYDEBUG(82, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy78;\nyy83:\n\t\tYYDEBUG(83, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(84, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 1880 \"Zend/zend_language_scanner.c\"\nyy85:\n\t\tYYDEBUG(85, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(86, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy85;\n\t\t}\n\t\tif (yych == '-') goto yy90;\n\t\tif (yych == '[') goto yy92;\nyy87:\n\t\tYYDEBUG(87, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1902 \"Zend/zend_language_scanner.c\"\nyy88:\n\t\tYYDEBUG(88, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(89, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 1913 \"Zend/zend_language_scanner.c\"\nyy90:\n\t\tYYDEBUG(90, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy94;\nyy91:\n\t\tYYDEBUG(91, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy87;\nyy92:\n\t\tYYDEBUG(92, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(93, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1935 \"Zend/zend_language_scanner.c\"\nyy94:\n\t\tYYDEBUG(94, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy91;\n\t\t\tif (yych <= 'Z') goto yy95;\n\t\t\tif (yych <= '^') goto yy91;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy91;\n\t\t\tif (yych <= 'z') goto yy95;\n\t\t\tif (yych <= '~') goto yy91;\n\t\t}\nyy95:\n\t\tYYDEBUG(95, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(96, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 1961 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_END_HEREDOC:\n\tYYDEBUG(97, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(99, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(100, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2161 \"Zend/zend_language_scanner.l\"\n\t{\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n#line 1984 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_HEREDOC:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(101, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych == '$') goto yy103;\n\t\tif (yych == '{') goto yy105;\n\t\tgoto yy106;\nyy103:\n\t\tYYDEBUG(103, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy104;\n\t\t\tif (yych <= 'Z') goto yy109;\n\t\t\tif (yych >= '_') goto yy109;\n\t\t} else {\n\t\t\tif (yych <= 'z') {\n\t\t\t\tif (yych >= 'a') goto yy109;\n\t\t\t} else {\n\t\t\t\tif (yych <= '{') goto yy112;\n\t\t\t\tif (yych >= 0x7F) goto yy109;\n\t\t\t}\n\t\t}\nyy104:\n\t\tYYDEBUG(104, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2285 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 2117 \"Zend/zend_language_scanner.c\"\nyy105:\n\t\tYYDEBUG(105, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '$') goto yy107;\n\t\tgoto yy104;\nyy106:\n\t\tYYDEBUG(106, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy104;\nyy107:\n\t\tYYDEBUG(107, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(108, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2174 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n#line 2139 \"Zend/zend_language_scanner.c\"\nyy109:\n\t\tYYDEBUG(109, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(110, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy109;\n\t\t}\n\t\tif (yych == '-') goto yy114;\n\t\tif (yych == '[') goto yy116;\nyy111:\n\t\tYYDEBUG(111, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2161 \"Zend/zend_language_scanner.c\"\nyy112:\n\t\tYYDEBUG(112, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(113, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1451 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n#line 2172 \"Zend/zend_language_scanner.c\"\nyy114:\n\t\tYYDEBUG(114, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy118;\nyy115:\n\t\tYYDEBUG(115, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy111;\nyy116:\n\t\tYYDEBUG(116, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(117, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1866 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2194 \"Zend/zend_language_scanner.c\"\nyy118:\n\t\tYYDEBUG(118, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy115;\n\t\t\tif (yych <= 'Z') goto yy119;\n\t\t\tif (yych <= '^') goto yy115;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy115;\n\t\t\tif (yych <= 'z') goto yy119;\n\t\t\tif (yych <= '~') goto yy115;\n\t\t}\nyy119:\n\t\tYYDEBUG(119, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(120, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1856 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 2220 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_IN_SCRIPTING:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 192,  64,   0,   0,  64,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t192,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 60,  60,  44,  44,  44,  44,  44,  44, \n\t\t\t 44,  44,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  0,  36,  36,  36,  36,  36,  36,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   0,   0,   0,   0,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t\t  4,   4,   4,   4,   4,   4,   4,   4, \n\t\t};\n\t\tYYDEBUG(121, *YYCURSOR);\n\t\tYYFILL(16);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 0x00:\n\t\tcase 0x01:\n\t\tcase 0x02:\n\t\tcase 0x03:\n\t\tcase 0x04:\n\t\tcase 0x05:\n\t\tcase 0x06:\n\t\tcase 0x07:\n\t\tcase 0x08:\n\t\tcase '\\v':\n\t\tcase '\\f':\n\t\tcase 0x0E:\n\t\tcase 0x0F:\n\t\tcase 0x10:\n\t\tcase 0x11:\n\t\tcase 0x12:\n\t\tcase 0x13:\n\t\tcase 0x14:\n\t\tcase 0x15:\n\t\tcase 0x16:\n\t\tcase 0x17:\n\t\tcase 0x18:\n\t\tcase 0x19:\n\t\tcase 0x1A:\n\t\tcase 0x1B:\n\t\tcase 0x1C:\n\t\tcase 0x1D:\n\t\tcase 0x1E:\n\t\tcase 0x1F:\tgoto yy183;\n\t\tcase '\\t':\n\t\tcase '\\n':\n\t\tcase '\\r':\n\t\tcase ' ':\tgoto yy139;\n\t\tcase '!':\tgoto yy152;\n\t\tcase '\"':\tgoto yy179;\n\t\tcase '#':\tgoto yy175;\n\t\tcase '$':\tgoto yy164;\n\t\tcase '%':\tgoto yy158;\n\t\tcase '&':\tgoto yy159;\n\t\tcase '\\'':\tgoto yy177;\n\t\tcase '(':\tgoto yy146;\n\t\tcase ')':\n\t\tcase ',':\n\t\tcase ';':\n\t\tcase '@':\n\t\tcase '[':\n\t\tcase ']':\n\t\tcase '~':\tgoto yy165;\n\t\tcase '*':\tgoto yy155;\n\t\tcase '+':\tgoto yy151;\n\t\tcase '-':\tgoto yy137;\n\t\tcase '.':\tgoto yy157;\n\t\tcase '/':\tgoto yy156;\n\t\tcase '0':\tgoto yy171;\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\tgoto yy173;\n\t\tcase ':':\tgoto yy141;\n\t\tcase '<':\tgoto yy153;\n\t\tcase '=':\tgoto yy149;\n\t\tcase '>':\tgoto yy154;\n\t\tcase '?':\tgoto yy166;\n\t\tcase 'A':\n\t\tcase 'a':\tgoto yy132;\n\t\tcase 'B':\n\t\tcase 'b':\tgoto yy134;\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy127;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy125;\n\t\tcase 'E':\n\t\tcase 'e':\tgoto yy123;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy126;\n\t\tcase 'G':\n\t\tcase 'g':\tgoto yy135;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy130;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy150;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy144;\n\t\tcase 'O':\n\t\tcase 'o':\tgoto yy162;\n\t\tcase 'P':\n\t\tcase 'p':\tgoto yy136;\n\t\tcase 'R':\n\t\tcase 'r':\tgoto yy128;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy133;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy129;\n\t\tcase 'U':\n\t\tcase 'u':\tgoto yy147;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy145;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy131;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy163;\n\t\tcase '\\\\':\tgoto yy142;\n\t\tcase '^':\tgoto yy161;\n\t\tcase '_':\tgoto yy148;\n\t\tcase '`':\tgoto yy181;\n\t\tcase '{':\tgoto yy167;\n\t\tcase '|':\tgoto yy160;\n\t\tcase '}':\tgoto yy169;\n\t\tdefault:\tgoto yy174;\n\t\t}\nyy123:\n\t\tYYDEBUG(123, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch ((yych = *YYCURSOR)) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy726;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy727;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy728;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy729;\n\t\tcase 'V':\n\t\tcase 'v':\tgoto yy730;\n\t\tcase 'X':\n\t\tcase 'x':\tgoto yy731;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy124:\n\t\tYYDEBUG(124, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1897 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 2407 \"Zend/zend_language_scanner.c\"\nyy125:\n\t\tYYDEBUG(125, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'H') {\n\t\t\t\tif (yych == 'E') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') goto yy709;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy710;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych == 'e') goto yy708;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy709;\n\t\t\t\tif (yych == 'o') goto yy710;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy126:\n\t\tYYDEBUG(126, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych <= 'N') {\n\t\t\t\tif (yych == 'I') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'O') goto yy688;\n\t\t\t\tif (yych <= 'T') goto yy186;\n\t\t\t\tgoto yy689;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'i') goto yy687;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') goto yy688;\n\t\t\t\tif (yych == 'u') goto yy689;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy127:\n\t\tYYDEBUG(127, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych <= 'K') {\n\t\t\t\tif (yych == 'A') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'L') goto yy653;\n\t\t\t\tif (yych <= 'N') goto yy186;\n\t\t\t\tgoto yy654;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'k') {\n\t\t\t\tif (yych == 'a') goto yy652;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'l') goto yy653;\n\t\t\t\tif (yych == 'o') goto yy654;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy128:\n\t\tYYDEBUG(128, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy634;\n\t\tif (yych == 'e') goto yy634;\n\t\tgoto yy186;\nyy129:\n\t\tYYDEBUG(129, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'R') {\n\t\t\tif (yych == 'H') goto yy622;\n\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\tgoto yy623;\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych <= 'g') goto yy186;\n\t\t\t\tgoto yy622;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy623;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy130:\n\t\tYYDEBUG(130, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych == 'F') goto yy569;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'M') goto yy571;\n\t\t\t\tif (yych <= 'N') goto yy572;\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tgoto yy573;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'm') {\n\t\t\t\tif (yych == 'f') goto yy569;\n\t\t\t\tif (yych <= 'l') goto yy186;\n\t\t\t\tgoto yy571;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'n') goto yy572;\n\t\t\t\tif (yych == 's') goto yy573;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy131:\n\t\tYYDEBUG(131, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy564;\n\t\tif (yych == 'h') goto yy564;\n\t\tgoto yy186;\nyy132:\n\t\tYYDEBUG(132, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'M') {\n\t\t\t\tif (yych == 'B') goto yy546;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'N') goto yy547;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tif (yych <= 'R') goto yy548;\n\t\t\t\tgoto yy549;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych == 'b') goto yy546;\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy547;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tif (yych <= 'r') goto yy548;\n\t\t\t\tif (yych <= 's') goto yy549;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy133:\n\t\tYYDEBUG(133, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'W') {\n\t\t\tif (yych == 'T') goto yy534;\n\t\t\tif (yych <= 'V') goto yy186;\n\t\t\tgoto yy535;\n\t\t} else {\n\t\t\tif (yych <= 't') {\n\t\t\t\tif (yych <= 's') goto yy186;\n\t\t\t\tgoto yy534;\n\t\t\t} else {\n\t\t\t\tif (yych == 'w') goto yy535;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy134:\n\t\tYYDEBUG(134, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych <= '\"') {\n\t\t\t\tif (yych <= '!') goto yy186;\n\t\t\t\tgoto yy526;\n\t\t\t} else {\n\t\t\t\tif (yych == '\\'') goto yy527;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'R') {\n\t\t\t\tif (yych <= '<') goto yy525;\n\t\t\t\tif (yych <= 'Q') goto yy186;\n\t\t\t\tgoto yy528;\n\t\t\t} else {\n\t\t\t\tif (yych == 'r') goto yy528;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy135:\n\t\tYYDEBUG(135, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'L') goto yy515;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy516;\n\t\t} else {\n\t\t\tif (yych <= 'l') {\n\t\t\t\tif (yych <= 'k') goto yy186;\n\t\t\t\tgoto yy515;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy516;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy136:\n\t\tYYDEBUG(136, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'R') goto yy491;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy492;\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych <= 'q') goto yy186;\n\t\t\t\tgoto yy491;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy492;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy137:\n\t\tYYDEBUG(137, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '<') {\n\t\t\tif (yych == '-') goto yy487;\n\t\t} else {\n\t\t\tif (yych <= '=') goto yy485;\n\t\t\tif (yych <= '>') goto yy489;\n\t\t}\nyy138:\n\t\tYYDEBUG(138, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1440 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn yytext[0];\n}\n#line 2637 \"Zend/zend_language_scanner.c\"\nyy139:\n\t\tYYDEBUG(139, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy484;\nyy140:\n\t\tYYDEBUG(140, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1171 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 2654 \"Zend/zend_language_scanner.c\"\nyy141:\n\t\tYYDEBUG(141, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == ':') goto yy481;\n\t\tgoto yy138;\nyy142:\n\t\tYYDEBUG(142, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(143, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1200 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NS_SEPARATOR;\n}\n#line 2669 \"Zend/zend_language_scanner.c\"\nyy144:\n\t\tYYDEBUG(144, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy469;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy470;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy469;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy470;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy145:\n\t\tYYDEBUG(145, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy466;\n\t\tif (yych == 'a') goto yy466;\n\t\tgoto yy186;\nyy146:\n\t\tYYDEBUG(146, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy391;\n\t\t\t\t\tif (yych <= 0x1F) goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '@') goto yy138;\n\t\t\t\t\tif (yych == 'C') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy391;\n\t\t\t\t\tif (yych <= 'H') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'O') goto yy391;\n\t\t\t\t\tif (yych <= 'Q') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'b') {\n\t\t\t\t\tif (yych == 'U') goto yy391;\n\t\t\t\t\tif (yych <= '`') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'd') goto yy391;\n\t\t\t\t\tif (yych <= 'e') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'o') {\n\t\t\t\t\tif (yych == 'i') goto yy391;\n\t\t\t\t\tif (yych <= 'n') goto yy138;\n\t\t\t\t\tgoto yy391;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'q') goto yy138;\n\t\t\t\t\t\tgoto yy391;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'u') goto yy391;\n\t\t\t\t\t\tgoto yy138;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy147:\n\t\tYYDEBUG(147, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'S') {\n\t\t\tif (yych == 'N') goto yy382;\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tgoto yy383;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy382;\n\t\t\t} else {\n\t\t\t\tif (yych == 's') goto yy383;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy148:\n\t\tYYDEBUG(148, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '_') goto yy300;\n\t\tgoto yy186;\nyy149:\n\t\tYYDEBUG(149, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy294;\n\t\tif (yych <= '>') goto yy296;\n\t\tgoto yy138;\nyy150:\n\t\tYYDEBUG(150, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy290;\n\t\tif (yych == 'i') goto yy290;\n\t\tgoto yy186;\nyy151:\n\t\tYYDEBUG(151, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '+') goto yy288;\n\t\tif (yych == '=') goto yy286;\n\t\tgoto yy138;\nyy152:\n\t\tYYDEBUG(152, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy283;\n\t\tgoto yy138;\nyy153:\n\t\tYYDEBUG(153, *YYCURSOR);\n\t\tyyaccept = 1;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') {\n\t\t\tif (yych == '/') goto yy255;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '<') goto yy253;\n\t\t\tif (yych <= '=') goto yy256;\n\t\t\tif (yych <= '>') goto yy258;\n\t\t\tgoto yy138;\n\t\t}\nyy154:\n\t\tYYDEBUG(154, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy249;\n\t\tif (yych <= '>') goto yy247;\n\t\tgoto yy138;\nyy155:\n\t\tYYDEBUG(155, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy245;\n\t\tgoto yy138;\nyy156:\n\t\tYYDEBUG(156, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '.') {\n\t\t\tif (yych == '*') goto yy237;\n\t\t\tgoto yy138;\n\t\t} else {\n\t\t\tif (yych <= '/') goto yy239;\n\t\t\tif (yych == '=') goto yy240;\n\t\t\tgoto yy138;\n\t\t}\nyy157:\n\t\tYYDEBUG(157, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy138;\n\t\tif (yych <= '9') goto yy233;\n\t\tif (yych == '=') goto yy235;\n\t\tgoto yy138;\nyy158:\n\t\tYYDEBUG(158, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '<') goto yy138;\n\t\tif (yych <= '=') goto yy229;\n\t\tif (yych <= '>') goto yy227;\n\t\tgoto yy138;\nyy159:\n\t\tYYDEBUG(159, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '&') goto yy223;\n\t\tif (yych == '=') goto yy225;\n\t\tgoto yy138;\nyy160:\n\t\tYYDEBUG(160, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy221;\n\t\tif (yych == '|') goto yy219;\n\t\tgoto yy138;\nyy161:\n\t\tYYDEBUG(161, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '=') goto yy217;\n\t\tgoto yy138;\nyy162:\n\t\tYYDEBUG(162, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy215;\n\t\tif (yych == 'r') goto yy215;\n\t\tgoto yy186;\nyy163:\n\t\tYYDEBUG(163, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy212;\n\t\tif (yych == 'o') goto yy212;\n\t\tgoto yy186;\nyy164:\n\t\tYYDEBUG(164, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy138;\n\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\tif (yych <= '^') goto yy138;\n\t\t\tgoto yy209;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy138;\n\t\t\tif (yych <= 'z') goto yy209;\n\t\t\tif (yych <= '~') goto yy138;\n\t\t\tgoto yy209;\n\t\t}\nyy165:\n\t\tYYDEBUG(165, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy138;\nyy166:\n\t\tYYDEBUG(166, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '>') goto yy205;\n\t\tgoto yy138;\nyy167:\n\t\tYYDEBUG(167, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(168, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1445 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n#line 2902 \"Zend/zend_language_scanner.c\"\nyy169:\n\t\tYYDEBUG(169, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(170, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1457 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n#line 2916 \"Zend/zend_language_scanner.c\"\nyy171:\n\t\tYYDEBUG(171, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'E') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych == '.') goto yy187;\n\t\t\t\tif (yych >= '0') goto yy190;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy198;\n\t\t\t\tif (yych >= 'E') goto yy192;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych == 'X') goto yy197;\n\t\t\t\tif (yych >= 'b') goto yy198;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') {\n\t\t\t\t\tif (yych >= 'e') goto yy192;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == 'x') goto yy197;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy172:\n\t\tYYDEBUG(172, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1507 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n#line 2965 \"Zend/zend_language_scanner.c\"\nyy173:\n\t\tYYDEBUG(173, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t\tgoto yy192;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy192;\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t}\nyy174:\n\t\tYYDEBUG(174, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy186;\nyy175:\n\t\tYYDEBUG(175, *YYCURSOR);\n\t\t++YYCURSOR;\nyy176:\n\t\tYYDEBUG(176, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1904 \"Zend/zend_language_scanner.l\"\n\t\t{\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n#line 3027 \"Zend/zend_language_scanner.c\"\nyy177:\n\t\tYYDEBUG(177, *YYCURSOR);\n\t\t++YYCURSOR;\nyy178:\n\t\tYYDEBUG(178, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1995 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n#line 3102 \"Zend/zend_language_scanner.c\"\nyy179:\n\t\tYYDEBUG(179, *YYCURSOR);\n\t\t++YYCURSOR;\nyy180:\n\t\tYYDEBUG(180, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2064 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n#line 3150 \"Zend/zend_language_scanner.c\"\nyy181:\n\t\tYYDEBUG(181, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(182, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2155 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n#line 3161 \"Zend/zend_language_scanner.c\"\nyy183:\n\t\tYYDEBUG(183, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(184, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2413 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 3176 \"Zend/zend_language_scanner.c\"\nyy185:\n\t\tYYDEBUG(185, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy186:\n\t\tYYDEBUG(186, *YYCURSOR);\n\t\tif (yybm[0+yych] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tgoto yy124;\nyy187:\n\t\tYYDEBUG(187, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(188, *YYCURSOR);\n\t\tif (yybm[0+yych] & 8) {\n\t\t\tgoto yy187;\n\t\t}\n\t\tif (yych == 'E') goto yy192;\n\t\tif (yych == 'e') goto yy192;\nyy189:\n\t\tYYDEBUG(189, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1572 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n#line 3209 \"Zend/zend_language_scanner.c\"\nyy190:\n\t\tYYDEBUG(190, *YYCURSOR);\n\t\tyyaccept = 2;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(191, *YYCURSOR);\n\t\tif (yych <= '9') {\n\t\t\tif (yych == '.') goto yy187;\n\t\t\tif (yych <= '/') goto yy172;\n\t\t\tgoto yy190;\n\t\t} else {\n\t\t\tif (yych <= 'E') {\n\t\t\t\tif (yych <= 'D') goto yy172;\n\t\t\t} else {\n\t\t\t\tif (yych != 'e') goto yy172;\n\t\t\t}\n\t\t}\nyy192:\n\t\tYYDEBUG(192, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= ',') {\n\t\t\tif (yych == '+') goto yy194;\n\t\t} else {\n\t\t\tif (yych <= '-') goto yy194;\n\t\t\tif (yych <= '/') goto yy193;\n\t\t\tif (yych <= '9') goto yy195;\n\t\t}\nyy193:\n\t\tYYDEBUG(193, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tif (yyaccept <= 2) {\n\t\t\tif (yyaccept <= 1) {\n\t\t\t\tif (yyaccept <= 0) {\n\t\t\t\t\tgoto yy124;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy138;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy172;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yyaccept <= 4) {\n\t\t\t\tif (yyaccept <= 3) {\n\t\t\t\t\tgoto yy189;\n\t\t\t\t} else {\n\t\t\t\t\tgoto yy238;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgoto yy254;\n\t\t\t}\n\t\t}\nyy194:\n\t\tYYDEBUG(194, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= '/') goto yy193;\n\t\tif (yych >= ':') goto yy193;\nyy195:\n\t\tYYDEBUG(195, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(196, *YYCURSOR);\n\t\tif (yych <= '/') goto yy189;\n\t\tif (yych <= '9') goto yy195;\n\t\tgoto yy189;\nyy197:\n\t\tYYDEBUG(197, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tgoto yy193;\nyy198:\n\t\tYYDEBUG(198, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tgoto yy193;\nyy199:\n\t\tYYDEBUG(199, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(200, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy199;\n\t\t}\n\t\tYYDEBUG(201, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1482 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3326 \"Zend/zend_language_scanner.c\"\nyy202:\n\t\tYYDEBUG(202, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(203, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy202;\n\t\t}\n\t\tYYDEBUG(204, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1528 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n#line 3363 \"Zend/zend_language_scanner.c\"\nyy205:\n\t\tYYDEBUG(205, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy207;\n\t\tif (yych == '\\r') goto yy208;\nyy206:\n\t\tYYDEBUG(206, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1972 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n#line 3380 \"Zend/zend_language_scanner.c\"\nyy207:\n\t\tYYDEBUG(207, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy206;\nyy208:\n\t\tYYDEBUG(208, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy207;\n\t\tgoto yy206;\nyy209:\n\t\tYYDEBUG(209, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(210, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy211;\n\t\t\t\tif (yych <= 'Z') goto yy209;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy209;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy209;\n\t\t\t\tif (yych >= 0x7F) goto yy209;\n\t\t\t}\n\t\t}\nyy211:\n\t\tYYDEBUG(211, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 3420 \"Zend/zend_language_scanner.c\"\nyy212:\n\t\tYYDEBUG(212, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy213;\n\t\tif (yych != 'r') goto yy186;\nyy213:\n\t\tYYDEBUG(213, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(214, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1428 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_XOR;\n}\n#line 3438 \"Zend/zend_language_scanner.c\"\nyy215:\n\t\tYYDEBUG(215, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(216, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1420 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_OR;\n}\n#line 3451 \"Zend/zend_language_scanner.c\"\nyy217:\n\t\tYYDEBUG(217, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(218, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1408 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_XOR_EQUAL;\n}\n#line 3461 \"Zend/zend_language_scanner.c\"\nyy219:\n\t\tYYDEBUG(219, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(220, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1412 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_OR;\n}\n#line 3471 \"Zend/zend_language_scanner.c\"\nyy221:\n\t\tYYDEBUG(221, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(222, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1404 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OR_EQUAL;\n}\n#line 3481 \"Zend/zend_language_scanner.c\"\nyy223:\n\t\tYYDEBUG(223, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(224, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1416 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOLEAN_AND;\n}\n#line 3491 \"Zend/zend_language_scanner.c\"\nyy225:\n\t\tYYDEBUG(225, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(226, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1400 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AND_EQUAL;\n}\n#line 3501 \"Zend/zend_language_scanner.c\"\nyy227:\n\t\tYYDEBUG(227, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '\\n') goto yy231;\n\t\tif (yych == '\\r') goto yy232;\nyy228:\n\t\tYYDEBUG(228, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1981 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n#line 3523 \"Zend/zend_language_scanner.c\"\nyy229:\n\t\tYYDEBUG(229, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(230, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1388 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MOD_EQUAL;\n}\n#line 3533 \"Zend/zend_language_scanner.c\"\nyy231:\n\t\tYYDEBUG(231, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy228;\nyy232:\n\t\tYYDEBUG(232, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy231;\n\t\tgoto yy228;\nyy233:\n\t\tYYDEBUG(233, *YYCURSOR);\n\t\tyyaccept = 3;\n\t\tYYMARKER = ++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(234, *YYCURSOR);\n\t\tif (yych <= 'D') {\n\t\t\tif (yych <= '/') goto yy189;\n\t\t\tif (yych <= '9') goto yy233;\n\t\t\tgoto yy189;\n\t\t} else {\n\t\t\tif (yych <= 'E') goto yy192;\n\t\t\tif (yych == 'e') goto yy192;\n\t\t\tgoto yy189;\n\t\t}\nyy235:\n\t\tYYDEBUG(235, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(236, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1384 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONCAT_EQUAL;\n}\n#line 3568 \"Zend/zend_language_scanner.c\"\nyy237:\n\t\tYYDEBUG(237, *YYCURSOR);\n\t\tyyaccept = 4;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych == '*') goto yy242;\nyy238:\n\t\tYYDEBUG(238, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1938 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n#line 3611 \"Zend/zend_language_scanner.c\"\nyy239:\n\t\tYYDEBUG(239, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy176;\nyy240:\n\t\tYYDEBUG(240, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(241, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1380 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DIV_EQUAL;\n}\n#line 3625 \"Zend/zend_language_scanner.c\"\nyy242:\n\t\tYYDEBUG(242, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy193;\nyy243:\n\t\tYYDEBUG(243, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(244, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy243;\n\t\t}\n\t\tgoto yy238;\nyy245:\n\t\tYYDEBUG(245, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(246, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1376 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MUL_EQUAL;\n}\n#line 3652 \"Zend/zend_language_scanner.c\"\nyy247:\n\t\tYYDEBUG(247, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy251;\n\t\tYYDEBUG(248, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1436 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR;\n}\n#line 3663 \"Zend/zend_language_scanner.c\"\nyy249:\n\t\tYYDEBUG(249, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(250, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1364 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n#line 3673 \"Zend/zend_language_scanner.c\"\nyy251:\n\t\tYYDEBUG(251, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(252, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1396 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SR_EQUAL;\n}\n#line 3683 \"Zend/zend_language_scanner.c\"\nyy253:\n\t\tYYDEBUG(253, *YYCURSOR);\n\t\tyyaccept = 5;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= ';') goto yy254;\n\t\tif (yych <= '<') goto yy269;\n\t\tif (yych <= '=') goto yy267;\nyy254:\n\t\tYYDEBUG(254, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1432 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL;\n}\n#line 3698 \"Zend/zend_language_scanner.c\"\nyy255:\n\t\tYYDEBUG(255, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy260;\n\t\tif (yych == 's') goto yy260;\n\t\tgoto yy193;\nyy256:\n\t\tYYDEBUG(256, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(257, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1360 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n#line 3714 \"Zend/zend_language_scanner.c\"\nyy258:\n\t\tYYDEBUG(258, *YYCURSOR);\n\t\t++YYCURSOR;\nyy259:\n\t\tYYDEBUG(259, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1356 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_EQUAL;\n}\n#line 3725 \"Zend/zend_language_scanner.c\"\nyy260:\n\t\tYYDEBUG(260, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy261;\n\t\tif (yych != 'c') goto yy193;\nyy261:\n\t\tYYDEBUG(261, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy262;\n\t\tif (yych != 'r') goto yy193;\nyy262:\n\t\tYYDEBUG(262, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy263;\n\t\tif (yych != 'i') goto yy193;\nyy263:\n\t\tYYDEBUG(263, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy264;\n\t\tif (yych != 'p') goto yy193;\nyy264:\n\t\tYYDEBUG(264, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy265;\n\t\tif (yych != 't') goto yy193;\nyy265:\n\t\tYYDEBUG(265, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(266, *YYCURSOR);\n\t\tif (yych <= '\\r') {\n\t\t\tif (yych <= 0x08) goto yy193;\n\t\t\tif (yych <= '\\n') goto yy265;\n\t\t\tif (yych <= '\\f') goto yy193;\n\t\t\tgoto yy265;\n\t\t} else {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\tgoto yy265;\n\t\t\t} else {\n\t\t\t\tif (yych == '>') goto yy205;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy267:\n\t\tYYDEBUG(267, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(268, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1392 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SL_EQUAL;\n}\n#line 3780 \"Zend/zend_language_scanner.c\"\nyy269:\n\t\tYYDEBUG(269, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(270, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy269;\n\t\t}\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '&') {\n\t\t\t\tif (yych == '\"') goto yy274;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\'') goto yy273;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych != '_') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t}\n\t\t}\nyy271:\n\t\tYYDEBUG(271, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(272, *YYCURSOR);\n\t\tif (yych <= '@') {\n\t\t\tif (yych <= '\\f') {\n\t\t\t\tif (yych == '\\n') goto yy278;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '\\r') goto yy280;\n\t\t\t\tif (yych <= '/') goto yy193;\n\t\t\t\tif (yych <= '9') goto yy271;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= 'Z') goto yy271;\n\t\t\t\tif (yych <= '^') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\tif (yych <= 'z') goto yy271;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy271;\n\t\t\t}\n\t\t}\nyy273:\n\t\tYYDEBUG(273, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\'') goto yy193;\n\t\tif (yych <= '/') goto yy282;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy282;\nyy274:\n\t\tYYDEBUG(274, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\"') goto yy193;\n\t\tif (yych <= '/') goto yy276;\n\t\tif (yych <= '9') goto yy193;\n\t\tgoto yy276;\nyy275:\n\t\tYYDEBUG(275, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy276:\n\t\tYYDEBUG(276, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych != '\"') goto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy275;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy275;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy275;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy275;\n\t\t\t}\n\t\t}\nyy277:\n\t\tYYDEBUG(277, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tif (yych == '\\r') goto yy280;\n\t\tgoto yy193;\nyy278:\n\t\tYYDEBUG(278, *YYCURSOR);\n\t\t++YYCURSOR;\nyy279:\n\t\tYYDEBUG(279, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2106 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n#line 3933 \"Zend/zend_language_scanner.c\"\nyy280:\n\t\tYYDEBUG(280, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '\\n') goto yy278;\n\t\tgoto yy279;\nyy281:\n\t\tYYDEBUG(281, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\nyy282:\n\t\tYYDEBUG(282, *YYCURSOR);\n\t\tif (yych <= 'Z') {\n\t\t\tif (yych <= '/') {\n\t\t\t\tif (yych == '\\'') goto yy277;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= '9') goto yy281;\n\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych == '_') goto yy281;\n\t\t\t\tgoto yy193;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy281;\n\t\t\t\tif (yych <= '~') goto yy193;\n\t\t\t\tgoto yy281;\n\t\t\t}\n\t\t}\nyy283:\n\t\tYYDEBUG(283, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '=') goto yy259;\n\t\tYYDEBUG(284, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(285, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1348 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_NOT_IDENTICAL;\n}\n#line 3977 \"Zend/zend_language_scanner.c\"\nyy286:\n\t\tYYDEBUG(286, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(287, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1368 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PLUS_EQUAL;\n}\n#line 3987 \"Zend/zend_language_scanner.c\"\nyy288:\n\t\tYYDEBUG(288, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(289, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1336 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INC;\n}\n#line 3997 \"Zend/zend_language_scanner.c\"\nyy290:\n\t\tYYDEBUG(290, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy291;\n\t\tif (yych != 's') goto yy186;\nyy291:\n\t\tYYDEBUG(291, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy292;\n\t\tif (yych != 't') goto yy186;\nyy292:\n\t\tYYDEBUG(292, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(293, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1324 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LIST;\n}\n#line 4020 \"Zend/zend_language_scanner.c\"\nyy294:\n\t\tYYDEBUG(294, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '=') goto yy298;\n\t\tYYDEBUG(295, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1352 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_EQUAL;\n}\n#line 4031 \"Zend/zend_language_scanner.c\"\nyy296:\n\t\tYYDEBUG(296, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(297, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1320 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_ARROW;\n}\n#line 4041 \"Zend/zend_language_scanner.c\"\nyy298:\n\t\tYYDEBUG(298, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(299, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1344 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IS_IDENTICAL;\n}\n#line 4051 \"Zend/zend_language_scanner.c\"\nyy300:\n\t\tYYDEBUG(300, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'C':\n\t\tcase 'c':\tgoto yy302;\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy307;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy304;\n\t\tcase 'H':\n\t\tcase 'h':\tgoto yy301;\n\t\tcase 'L':\n\t\tcase 'l':\tgoto yy306;\n\t\tcase 'M':\n\t\tcase 'm':\tgoto yy305;\n\t\tcase 'N':\n\t\tcase 'n':\tgoto yy308;\n\t\tcase 'T':\n\t\tcase 't':\tgoto yy303;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy301:\n\t\tYYDEBUG(301, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy369;\n\t\tif (yych == 'a') goto yy369;\n\t\tgoto yy186;\nyy302:\n\t\tYYDEBUG(302, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy362;\n\t\tif (yych == 'l') goto yy362;\n\t\tgoto yy186;\nyy303:\n\t\tYYDEBUG(303, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy355;\n\t\tif (yych == 'r') goto yy355;\n\t\tgoto yy186;\nyy304:\n\t\tYYDEBUG(304, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'U') {\n\t\t\tif (yych == 'I') goto yy339;\n\t\t\tif (yych <= 'T') goto yy186;\n\t\t\tgoto yy340;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy339;\n\t\t\t} else {\n\t\t\t\tif (yych == 'u') goto yy340;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy305:\n\t\tYYDEBUG(305, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy331;\n\t\tif (yych == 'e') goto yy331;\n\t\tgoto yy186;\nyy306:\n\t\tYYDEBUG(306, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy325;\n\t\tif (yych == 'i') goto yy325;\n\t\tgoto yy186;\nyy307:\n\t\tYYDEBUG(307, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy320;\n\t\tif (yych == 'i') goto yy320;\n\t\tgoto yy186;\nyy308:\n\t\tYYDEBUG(308, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy309;\n\t\tif (yych != 'a') goto yy186;\nyy309:\n\t\tYYDEBUG(309, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy310;\n\t\tif (yych != 'm') goto yy186;\nyy310:\n\t\tYYDEBUG(310, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy311;\n\t\tif (yych != 'e') goto yy186;\nyy311:\n\t\tYYDEBUG(311, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy312;\n\t\tif (yych != 's') goto yy186;\nyy312:\n\t\tYYDEBUG(312, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy313;\n\t\tif (yych != 'p') goto yy186;\nyy313:\n\t\tYYDEBUG(313, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy314;\n\t\tif (yych != 'a') goto yy186;\nyy314:\n\t\tYYDEBUG(314, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy315;\n\t\tif (yych != 'c') goto yy186;\nyy315:\n\t\tYYDEBUG(315, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy316;\n\t\tif (yych != 'e') goto yy186;\nyy316:\n\t\tYYDEBUG(316, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(317, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(318, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(319, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1707 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n#line 4191 \"Zend/zend_language_scanner.c\"\nyy320:\n\t\tYYDEBUG(320, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy321;\n\t\tif (yych != 'r') goto yy186;\nyy321:\n\t\tYYDEBUG(321, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(322, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(323, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(324, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1680 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n#line 4238 \"Zend/zend_language_scanner.c\"\nyy325:\n\t\tYYDEBUG(325, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy326;\n\t\tif (yych != 'n') goto yy186;\nyy326:\n\t\tYYDEBUG(326, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy327;\n\t\tif (yych != 'e') goto yy186;\nyy327:\n\t\tYYDEBUG(327, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(328, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(329, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(330, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1662 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n#line 4269 \"Zend/zend_language_scanner.c\"\nyy331:\n\t\tYYDEBUG(331, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy332;\n\t\tif (yych != 't') goto yy186;\nyy332:\n\t\tYYDEBUG(332, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy333;\n\t\tif (yych != 'h') goto yy186;\nyy333:\n\t\tYYDEBUG(333, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy334;\n\t\tif (yych != 'o') goto yy186;\nyy334:\n\t\tYYDEBUG(334, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy335;\n\t\tif (yych != 'd') goto yy186;\nyy335:\n\t\tYYDEBUG(335, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(336, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(337, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(338, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1641 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n#line 4325 \"Zend/zend_language_scanner.c\"\nyy339:\n\t\tYYDEBUG(339, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy350;\n\t\tif (yych == 'l') goto yy350;\n\t\tgoto yy186;\nyy340:\n\t\tYYDEBUG(340, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy341;\n\t\tif (yych != 'n') goto yy186;\nyy341:\n\t\tYYDEBUG(341, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy342;\n\t\tif (yych != 'c') goto yy186;\nyy342:\n\t\tYYDEBUG(342, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy343;\n\t\tif (yych != 't') goto yy186;\nyy343:\n\t\tYYDEBUG(343, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy344;\n\t\tif (yych != 'i') goto yy186;\nyy344:\n\t\tYYDEBUG(344, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy345;\n\t\tif (yych != 'o') goto yy186;\nyy345:\n\t\tYYDEBUG(345, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy346;\n\t\tif (yych != 'n') goto yy186;\nyy346:\n\t\tYYDEBUG(346, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(347, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(348, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(349, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1625 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n#line 4392 \"Zend/zend_language_scanner.c\"\nyy350:\n\t\tYYDEBUG(350, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy351;\n\t\tif (yych != 'e') goto yy186;\nyy351:\n\t\tYYDEBUG(351, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(352, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(353, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(354, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1668 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n#line 4424 \"Zend/zend_language_scanner.c\"\nyy355:\n\t\tYYDEBUG(355, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy356;\n\t\tif (yych != 'a') goto yy186;\nyy356:\n\t\tYYDEBUG(356, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy357;\n\t\tif (yych != 'i') goto yy186;\nyy357:\n\t\tYYDEBUG(357, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy358;\n\t\tif (yych != 't') goto yy186;\nyy358:\n\t\tYYDEBUG(358, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(359, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(360, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(361, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1605 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n#line 4474 \"Zend/zend_language_scanner.c\"\nyy362:\n\t\tYYDEBUG(362, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy363;\n\t\tif (yych != 'a') goto yy186;\nyy363:\n\t\tYYDEBUG(363, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy364;\n\t\tif (yych != 's') goto yy186;\nyy364:\n\t\tYYDEBUG(364, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy365;\n\t\tif (yych != 's') goto yy186;\nyy365:\n\t\tYYDEBUG(365, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(366, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(367, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(368, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1578 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n#line 4531 \"Zend/zend_language_scanner.c\"\nyy369:\n\t\tYYDEBUG(369, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy370;\n\t\tif (yych != 'l') goto yy186;\nyy370:\n\t\tYYDEBUG(370, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy371;\n\t\tif (yych != 't') goto yy186;\nyy371:\n\t\tYYDEBUG(371, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych != '_') goto yy186;\n\t\tYYDEBUG(372, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy373;\n\t\tif (yych != 'c') goto yy186;\nyy373:\n\t\tYYDEBUG(373, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy374;\n\t\tif (yych != 'o') goto yy186;\nyy374:\n\t\tYYDEBUG(374, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy375;\n\t\tif (yych != 'm') goto yy186;\nyy375:\n\t\tYYDEBUG(375, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy376;\n\t\tif (yych != 'p') goto yy186;\nyy376:\n\t\tYYDEBUG(376, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy377;\n\t\tif (yych != 'i') goto yy186;\nyy377:\n\t\tYYDEBUG(377, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy378;\n\t\tif (yych != 'l') goto yy186;\nyy378:\n\t\tYYDEBUG(378, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy379;\n\t\tif (yych != 'e') goto yy186;\nyy379:\n\t\tYYDEBUG(379, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy380;\n\t\tif (yych != 'r') goto yy186;\nyy380:\n\t\tYYDEBUG(380, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(381, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1288 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_HALT_COMPILER;\n}\n#line 4597 \"Zend/zend_language_scanner.c\"\nyy382:\n\t\tYYDEBUG(382, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy386;\n\t\tif (yych == 's') goto yy386;\n\t\tgoto yy186;\nyy383:\n\t\tYYDEBUG(383, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy384;\n\t\tif (yych != 'e') goto yy186;\nyy384:\n\t\tYYDEBUG(384, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(385, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1268 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_USE;\n}\n#line 4621 \"Zend/zend_language_scanner.c\"\nyy386:\n\t\tYYDEBUG(386, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy387;\n\t\tif (yych != 'e') goto yy186;\nyy387:\n\t\tYYDEBUG(387, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy388;\n\t\tif (yych != 't') goto yy186;\nyy388:\n\t\tYYDEBUG(388, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(389, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1316 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET;\n}\n#line 4644 \"Zend/zend_language_scanner.c\"\nyy390:\n\t\tYYDEBUG(390, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(7);\n\t\tyych = *YYCURSOR;\nyy391:\n\t\tYYDEBUG(391, *YYCURSOR);\n\t\tif (yych <= 'S') {\n\t\t\tif (yych <= 'D') {\n\t\t\t\tif (yych <= ' ') {\n\t\t\t\t\tif (yych == '\\t') goto yy390;\n\t\t\t\t\tif (yych <= 0x1F) goto yy193;\n\t\t\t\t\tgoto yy390;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'A') {\n\t\t\t\t\t\tif (yych <= '@') goto yy193;\n\t\t\t\t\t\tgoto yy395;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'B') goto yy393;\n\t\t\t\t\t\tif (yych <= 'C') goto yy193;\n\t\t\t\t\t\tgoto yy398;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'I') {\n\t\t\t\t\tif (yych == 'F') goto yy399;\n\t\t\t\t\tif (yych <= 'H') goto yy193;\n\t\t\t\t\tgoto yy400;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'O') {\n\t\t\t\t\t\tif (yych <= 'N') goto yy193;\n\t\t\t\t\t\tgoto yy394;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'Q') goto yy193;\n\t\t\t\t\t\tif (yych <= 'R') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'f') {\n\t\t\t\tif (yych <= 'a') {\n\t\t\t\t\tif (yych == 'U') goto yy392;\n\t\t\t\t\tif (yych <= '`') goto yy193;\n\t\t\t\t\tgoto yy395;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'c') {\n\t\t\t\t\t\tif (yych <= 'b') goto yy393;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych <= 'd') goto yy398;\n\t\t\t\t\t\tif (yych <= 'e') goto yy193;\n\t\t\t\t\t\tgoto yy399;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= 'q') {\n\t\t\t\t\tif (yych <= 'i') {\n\t\t\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\t\t\tgoto yy400;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych == 'o') goto yy394;\n\t\t\t\t\t\tgoto yy193;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 's') {\n\t\t\t\t\t\tif (yych <= 'r') goto yy397;\n\t\t\t\t\t\tgoto yy396;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (yych != 'u') goto yy193;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy392:\n\t\tYYDEBUG(392, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy459;\n\t\tif (yych == 'n') goto yy459;\n\t\tgoto yy193;\nyy393:\n\t\tYYDEBUG(393, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy446;\n\t\t\tif (yych <= 'N') goto yy193;\n\t\t\tgoto yy447;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy193;\n\t\t\t\tgoto yy446;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy447;\n\t\t\t\tgoto yy193;\n\t\t\t}\n\t\t}\nyy394:\n\t\tYYDEBUG(394, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy438;\n\t\tif (yych == 'b') goto yy438;\n\t\tgoto yy193;\nyy395:\n\t\tYYDEBUG(395, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy431;\n\t\tif (yych == 'r') goto yy431;\n\t\tgoto yy193;\nyy396:\n\t\tYYDEBUG(396, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy423;\n\t\tif (yych == 't') goto yy423;\n\t\tgoto yy193;\nyy397:\n\t\tYYDEBUG(397, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy421;\n\t\tif (yych == 'e') goto yy421;\n\t\tgoto yy193;\nyy398:\n\t\tYYDEBUG(398, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy417;\n\t\tif (yych == 'o') goto yy417;\n\t\tgoto yy193;\nyy399:\n\t\tYYDEBUG(399, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy410;\n\t\tif (yych == 'l') goto yy410;\n\t\tgoto yy193;\nyy400:\n\t\tYYDEBUG(400, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy401;\n\t\tif (yych != 'n') goto yy193;\nyy401:\n\t\tYYDEBUG(401, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy402;\n\t\tif (yych != 't') goto yy193;\nyy402:\n\t\tYYDEBUG(402, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy403;\n\t\tif (yych != 'e') goto yy405;\nyy403:\n\t\tYYDEBUG(403, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy408;\n\t\tif (yych == 'g') goto yy408;\n\t\tgoto yy193;\nyy404:\n\t\tYYDEBUG(404, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy405:\n\t\tYYDEBUG(405, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy404;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy404;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(406, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(407, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1216 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INT_CAST;\n}\n#line 4820 \"Zend/zend_language_scanner.c\"\nyy408:\n\t\tYYDEBUG(408, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy409;\n\t\tif (yych != 'e') goto yy193;\nyy409:\n\t\tYYDEBUG(409, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy404;\n\t\tif (yych == 'r') goto yy404;\n\t\tgoto yy193;\nyy410:\n\t\tYYDEBUG(410, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy411;\n\t\tif (yych != 'o') goto yy193;\nyy411:\n\t\tYYDEBUG(411, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy412;\n\t\tif (yych != 'a') goto yy193;\nyy412:\n\t\tYYDEBUG(412, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy413;\n\t\tif (yych != 't') goto yy193;\nyy413:\n\t\tYYDEBUG(413, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(414, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy413;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy413;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(415, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(416, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1220 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DOUBLE_CAST;\n}\n#line 4868 \"Zend/zend_language_scanner.c\"\nyy417:\n\t\tYYDEBUG(417, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy418;\n\t\tif (yych != 'u') goto yy193;\nyy418:\n\t\tYYDEBUG(418, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy419;\n\t\tif (yych != 'b') goto yy193;\nyy419:\n\t\tYYDEBUG(419, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy420;\n\t\tif (yych != 'l') goto yy193;\nyy420:\n\t\tYYDEBUG(420, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy413;\n\t\tif (yych == 'e') goto yy413;\n\t\tgoto yy193;\nyy421:\n\t\tYYDEBUG(421, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy422;\n\t\tif (yych != 'a') goto yy193;\nyy422:\n\t\tYYDEBUG(422, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy413;\n\t\tif (yych == 'l') goto yy413;\n\t\tgoto yy193;\nyy423:\n\t\tYYDEBUG(423, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy424;\n\t\tif (yych != 'r') goto yy193;\nyy424:\n\t\tYYDEBUG(424, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy425;\n\t\tif (yych != 'i') goto yy193;\nyy425:\n\t\tYYDEBUG(425, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy426;\n\t\tif (yych != 'n') goto yy193;\nyy426:\n\t\tYYDEBUG(426, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'G') goto yy427;\n\t\tif (yych != 'g') goto yy193;\nyy427:\n\t\tYYDEBUG(427, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(428, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy427;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy427;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(429, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(430, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1224 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STRING_CAST;\n}\n#line 4942 \"Zend/zend_language_scanner.c\"\nyy431:\n\t\tYYDEBUG(431, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy432;\n\t\tif (yych != 'r') goto yy193;\nyy432:\n\t\tYYDEBUG(432, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy433;\n\t\tif (yych != 'a') goto yy193;\nyy433:\n\t\tYYDEBUG(433, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy434;\n\t\tif (yych != 'y') goto yy193;\nyy434:\n\t\tYYDEBUG(434, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(435, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy434;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy434;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(436, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(437, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1228 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY_CAST;\n}\n#line 4979 \"Zend/zend_language_scanner.c\"\nyy438:\n\t\tYYDEBUG(438, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'J') goto yy439;\n\t\tif (yych != 'j') goto yy193;\nyy439:\n\t\tYYDEBUG(439, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy440;\n\t\tif (yych != 'e') goto yy193;\nyy440:\n\t\tYYDEBUG(440, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy441;\n\t\tif (yych != 'c') goto yy193;\nyy441:\n\t\tYYDEBUG(441, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy442;\n\t\tif (yych != 't') goto yy193;\nyy442:\n\t\tYYDEBUG(442, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(443, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy442;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy442;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(444, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(445, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1232 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_CAST;\n}\n#line 5021 \"Zend/zend_language_scanner.c\"\nyy446:\n\t\tYYDEBUG(446, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy456;\n\t\tif (yych == 'n') goto yy456;\n\t\tgoto yy193;\nyy447:\n\t\tYYDEBUG(447, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy448;\n\t\tif (yych != 'o') goto yy193;\nyy448:\n\t\tYYDEBUG(448, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy449;\n\t\tif (yych != 'l') goto yy193;\nyy449:\n\t\tYYDEBUG(449, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy454;\n\t\tif (yych == 'e') goto yy454;\n\t\tgoto yy451;\nyy450:\n\t\tYYDEBUG(450, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy451:\n\t\tYYDEBUG(451, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy450;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy450;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(452, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(453, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1236 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BOOL_CAST;\n}\n#line 5066 \"Zend/zend_language_scanner.c\"\nyy454:\n\t\tYYDEBUG(454, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy455;\n\t\tif (yych != 'a') goto yy193;\nyy455:\n\t\tYYDEBUG(455, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy450;\n\t\tif (yych == 'n') goto yy450;\n\t\tgoto yy193;\nyy456:\n\t\tYYDEBUG(456, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy457;\n\t\tif (yych != 'a') goto yy193;\nyy457:\n\t\tYYDEBUG(457, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy458;\n\t\tif (yych != 'r') goto yy193;\nyy458:\n\t\tYYDEBUG(458, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy427;\n\t\tif (yych == 'y') goto yy427;\n\t\tgoto yy193;\nyy459:\n\t\tYYDEBUG(459, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy460;\n\t\tif (yych != 's') goto yy193;\nyy460:\n\t\tYYDEBUG(460, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy461;\n\t\tif (yych != 'e') goto yy193;\nyy461:\n\t\tYYDEBUG(461, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy462;\n\t\tif (yych != 't') goto yy193;\nyy462:\n\t\tYYDEBUG(462, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(463, *YYCURSOR);\n\t\tif (yych <= 0x1F) {\n\t\t\tif (yych == '\\t') goto yy462;\n\t\t\tgoto yy193;\n\t\t} else {\n\t\t\tif (yych <= ' ') goto yy462;\n\t\t\tif (yych != ')') goto yy193;\n\t\t}\n\t\tYYDEBUG(464, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(465, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1240 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_UNSET_CAST;\n}\n#line 5130 \"Zend/zend_language_scanner.c\"\nyy466:\n\t\tYYDEBUG(466, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy467;\n\t\tif (yych != 'r') goto yy186;\nyy467:\n\t\tYYDEBUG(467, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(468, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1212 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_VAR;\n}\n#line 5148 \"Zend/zend_language_scanner.c\"\nyy469:\n\t\tYYDEBUG(469, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy473;\n\t\tif (yych == 'm') goto yy473;\n\t\tgoto yy186;\nyy470:\n\t\tYYDEBUG(470, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy471;\n\t\tif (yych != 'w') goto yy186;\nyy471:\n\t\tYYDEBUG(471, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(472, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1204 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NEW;\n}\n#line 5172 \"Zend/zend_language_scanner.c\"\nyy473:\n\t\tYYDEBUG(473, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy474;\n\t\tif (yych != 'e') goto yy186;\nyy474:\n\t\tYYDEBUG(474, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy475;\n\t\tif (yych != 's') goto yy186;\nyy475:\n\t\tYYDEBUG(475, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy476;\n\t\tif (yych != 'p') goto yy186;\nyy476:\n\t\tYYDEBUG(476, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy477;\n\t\tif (yych != 'a') goto yy186;\nyy477:\n\t\tYYDEBUG(477, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy478;\n\t\tif (yych != 'c') goto yy186;\nyy478:\n\t\tYYDEBUG(478, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy479;\n\t\tif (yych != 'e') goto yy186;\nyy479:\n\t\tYYDEBUG(479, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(480, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1264 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_NAMESPACE;\n}\n#line 5215 \"Zend/zend_language_scanner.c\"\nyy481:\n\t\tYYDEBUG(481, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(482, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1196 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n#line 5225 \"Zend/zend_language_scanner.c\"\nyy483:\n\t\tYYDEBUG(483, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy484:\n\t\tYYDEBUG(484, *YYCURSOR);\n\t\tif (yych <= '\\f') {\n\t\t\tif (yych <= 0x08) goto yy140;\n\t\t\tif (yych <= '\\n') goto yy483;\n\t\t\tgoto yy140;\n\t\t} else {\n\t\t\tif (yych <= '\\r') goto yy483;\n\t\t\tif (yych == ' ') goto yy483;\n\t\t\tgoto yy140;\n\t\t}\nyy485:\n\t\tYYDEBUG(485, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(486, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1372 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_MINUS_EQUAL;\n}\n#line 5251 \"Zend/zend_language_scanner.c\"\nyy487:\n\t\tYYDEBUG(487, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(488, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1340 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEC;\n}\n#line 5261 \"Zend/zend_language_scanner.c\"\nyy489:\n\t\tYYDEBUG(489, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(490, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1166 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n#line 5272 \"Zend/zend_language_scanner.c\"\nyy491:\n\t\tYYDEBUG(491, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'I') goto yy498;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy499;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t\tgoto yy498;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy499;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy492:\n\t\tYYDEBUG(492, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy493;\n\t\tif (yych != 'b') goto yy186;\nyy493:\n\t\tYYDEBUG(493, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy494;\n\t\tif (yych != 'l') goto yy186;\nyy494:\n\t\tYYDEBUG(494, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy495;\n\t\tif (yych != 'i') goto yy186;\nyy495:\n\t\tYYDEBUG(495, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy496;\n\t\tif (yych != 'c') goto yy186;\nyy496:\n\t\tYYDEBUG(496, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(497, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1312 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PUBLIC;\n}\n#line 5321 \"Zend/zend_language_scanner.c\"\nyy498:\n\t\tYYDEBUG(498, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'V') {\n\t\t\tif (yych == 'N') goto yy507;\n\t\t\tif (yych <= 'U') goto yy186;\n\t\t\tgoto yy508;\n\t\t} else {\n\t\t\tif (yych <= 'n') {\n\t\t\t\tif (yych <= 'm') goto yy186;\n\t\t\t\tgoto yy507;\n\t\t\t} else {\n\t\t\t\tif (yych == 'v') goto yy508;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy499:\n\t\tYYDEBUG(499, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy500;\n\t\tif (yych != 't') goto yy186;\nyy500:\n\t\tYYDEBUG(500, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy501;\n\t\tif (yych != 'e') goto yy186;\nyy501:\n\t\tYYDEBUG(501, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy502;\n\t\tif (yych != 'c') goto yy186;\nyy502:\n\t\tYYDEBUG(502, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy503;\n\t\tif (yych != 't') goto yy186;\nyy503:\n\t\tYYDEBUG(503, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy504;\n\t\tif (yych != 'e') goto yy186;\nyy504:\n\t\tYYDEBUG(504, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy505;\n\t\tif (yych != 'd') goto yy186;\nyy505:\n\t\tYYDEBUG(505, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(506, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1308 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PROTECTED;\n}\n#line 5380 \"Zend/zend_language_scanner.c\"\nyy507:\n\t\tYYDEBUG(507, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy513;\n\t\tif (yych == 't') goto yy513;\n\t\tgoto yy186;\nyy508:\n\t\tYYDEBUG(508, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy509;\n\t\tif (yych != 'a') goto yy186;\nyy509:\n\t\tYYDEBUG(509, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy510;\n\t\tif (yych != 't') goto yy186;\nyy510:\n\t\tYYDEBUG(510, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy511;\n\t\tif (yych != 'e') goto yy186;\nyy511:\n\t\tYYDEBUG(511, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(512, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1304 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRIVATE;\n}\n#line 5414 \"Zend/zend_language_scanner.c\"\nyy513:\n\t\tYYDEBUG(513, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(514, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1142 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_PRINT;\n}\n#line 5427 \"Zend/zend_language_scanner.c\"\nyy515:\n\t\tYYDEBUG(515, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy520;\n\t\tif (yych == 'o') goto yy520;\n\t\tgoto yy186;\nyy516:\n\t\tYYDEBUG(516, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy517;\n\t\tif (yych != 't') goto yy186;\nyy517:\n\t\tYYDEBUG(517, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy518;\n\t\tif (yych != 'o') goto yy186;\nyy518:\n\t\tYYDEBUG(518, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(519, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1134 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GOTO;\n}\n#line 5456 \"Zend/zend_language_scanner.c\"\nyy520:\n\t\tYYDEBUG(520, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy521;\n\t\tif (yych != 'b') goto yy186;\nyy521:\n\t\tYYDEBUG(521, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy522;\n\t\tif (yych != 'a') goto yy186;\nyy522:\n\t\tYYDEBUG(522, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy523;\n\t\tif (yych != 'l') goto yy186;\nyy523:\n\t\tYYDEBUG(523, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(524, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1276 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_GLOBAL;\n}\n#line 5484 \"Zend/zend_language_scanner.c\"\nyy525:\n\t\tYYDEBUG(525, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy533;\n\t\tgoto yy193;\nyy526:\n\t\tYYDEBUG(526, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy180;\nyy527:\n\t\tYYDEBUG(527, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy178;\nyy528:\n\t\tYYDEBUG(528, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy529;\n\t\tif (yych != 'e') goto yy186;\nyy529:\n\t\tYYDEBUG(529, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy530;\n\t\tif (yych != 'a') goto yy186;\nyy530:\n\t\tYYDEBUG(530, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'K') goto yy531;\n\t\tif (yych != 'k') goto yy186;\nyy531:\n\t\tYYDEBUG(531, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(532, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1126 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_BREAK;\n}\n#line 5525 \"Zend/zend_language_scanner.c\"\nyy533:\n\t\tYYDEBUG(533, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == '<') goto yy269;\n\t\tgoto yy193;\nyy534:\n\t\tYYDEBUG(534, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy541;\n\t\tif (yych == 'a') goto yy541;\n\t\tgoto yy186;\nyy535:\n\t\tYYDEBUG(535, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy536;\n\t\tif (yych != 'i') goto yy186;\nyy536:\n\t\tYYDEBUG(536, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy537;\n\t\tif (yych != 't') goto yy186;\nyy537:\n\t\tYYDEBUG(537, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy538;\n\t\tif (yych != 'c') goto yy186;\nyy538:\n\t\tYYDEBUG(538, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy539;\n\t\tif (yych != 'h') goto yy186;\nyy539:\n\t\tYYDEBUG(539, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(540, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1110 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_SWITCH;\n}\n#line 5569 \"Zend/zend_language_scanner.c\"\nyy541:\n\t\tYYDEBUG(541, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy542;\n\t\tif (yych != 't') goto yy186;\nyy542:\n\t\tYYDEBUG(542, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy543;\n\t\tif (yych != 'i') goto yy186;\nyy543:\n\t\tYYDEBUG(543, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy544;\n\t\tif (yych != 'c') goto yy186;\nyy544:\n\t\tYYDEBUG(544, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(545, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1292 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_STATIC;\n}\n#line 5597 \"Zend/zend_language_scanner.c\"\nyy546:\n\t\tYYDEBUG(546, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy557;\n\t\tif (yych == 's') goto yy557;\n\t\tgoto yy186;\nyy547:\n\t\tYYDEBUG(547, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy555;\n\t\tif (yych == 'd') goto yy555;\n\t\tgoto yy186;\nyy548:\n\t\tYYDEBUG(548, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy551;\n\t\tif (yych == 'r') goto yy551;\n\t\tgoto yy186;\nyy549:\n\t\tYYDEBUG(549, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(550, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1106 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_AS;\n}\n#line 5628 \"Zend/zend_language_scanner.c\"\nyy551:\n\t\tYYDEBUG(551, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy552;\n\t\tif (yych != 'a') goto yy186;\nyy552:\n\t\tYYDEBUG(552, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy553;\n\t\tif (yych != 'y') goto yy186;\nyy553:\n\t\tYYDEBUG(553, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(554, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1328 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ARRAY;\n}\n#line 5651 \"Zend/zend_language_scanner.c\"\nyy555:\n\t\tYYDEBUG(555, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(556, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1424 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_LOGICAL_AND;\n}\n#line 5664 \"Zend/zend_language_scanner.c\"\nyy557:\n\t\tYYDEBUG(557, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy558;\n\t\tif (yych != 't') goto yy186;\nyy558:\n\t\tYYDEBUG(558, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy559;\n\t\tif (yych != 'r') goto yy186;\nyy559:\n\t\tYYDEBUG(559, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy560;\n\t\tif (yych != 'a') goto yy186;\nyy560:\n\t\tYYDEBUG(560, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy561;\n\t\tif (yych != 'c') goto yy186;\nyy561:\n\t\tYYDEBUG(561, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy562;\n\t\tif (yych != 't') goto yy186;\nyy562:\n\t\tYYDEBUG(562, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(563, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1296 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ABSTRACT;\n}\n#line 5702 \"Zend/zend_language_scanner.c\"\nyy564:\n\t\tYYDEBUG(564, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy565;\n\t\tif (yych != 'i') goto yy186;\nyy565:\n\t\tYYDEBUG(565, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy566;\n\t\tif (yych != 'l') goto yy186;\nyy566:\n\t\tYYDEBUG(566, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy567;\n\t\tif (yych != 'e') goto yy186;\nyy567:\n\t\tYYDEBUG(567, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(568, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1066 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_WHILE;\n}\n#line 5730 \"Zend/zend_language_scanner.c\"\nyy569:\n\t\tYYDEBUG(569, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(570, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1050 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IF;\n}\n#line 5743 \"Zend/zend_language_scanner.c\"\nyy571:\n\t\tYYDEBUG(571, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy613;\n\t\tif (yych == 'p') goto yy613;\n\t\tgoto yy186;\nyy572:\n\t\tYYDEBUG(572, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'C') {\n\t\t\t\tif (yych <= 'B') goto yy186;\n\t\t\t\tgoto yy580;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy578;\n\t\t\t\tgoto yy579;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'c') goto yy580;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy578;\n\t\t\t\tif (yych <= 't') goto yy579;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy573:\n\t\tYYDEBUG(573, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy574;\n\t\tif (yych != 's') goto yy186;\nyy574:\n\t\tYYDEBUG(574, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy575;\n\t\tif (yych != 'e') goto yy186;\nyy575:\n\t\tYYDEBUG(575, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy576;\n\t\tif (yych != 't') goto yy186;\nyy576:\n\t\tYYDEBUG(576, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(577, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1280 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ISSET;\n}\n#line 5799 \"Zend/zend_language_scanner.c\"\nyy578:\n\t\tYYDEBUG(578, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy599;\n\t\tif (yych == 't') goto yy599;\n\t\tgoto yy186;\nyy579:\n\t\tYYDEBUG(579, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy592;\n\t\tif (yych == 'e') goto yy592;\n\t\tgoto yy186;\nyy580:\n\t\tYYDEBUG(580, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy581;\n\t\tif (yych != 'l') goto yy186;\nyy581:\n\t\tYYDEBUG(581, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy582;\n\t\tif (yych != 'u') goto yy186;\nyy582:\n\t\tYYDEBUG(582, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy583;\n\t\tif (yych != 'd') goto yy186;\nyy583:\n\t\tYYDEBUG(583, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy584;\n\t\tif (yych != 'e') goto yy186;\nyy584:\n\t\tYYDEBUG(584, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy585;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy586;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy585:\n\t\tYYDEBUG(585, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1248 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE;\n}\n#line 5857 \"Zend/zend_language_scanner.c\"\nyy586:\n\t\tYYDEBUG(586, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy587;\n\t\tif (yych != 'o') goto yy186;\nyy587:\n\t\tYYDEBUG(587, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy588;\n\t\tif (yych != 'n') goto yy186;\nyy588:\n\t\tYYDEBUG(588, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy589;\n\t\tif (yych != 'c') goto yy186;\nyy589:\n\t\tYYDEBUG(589, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy590;\n\t\tif (yych != 'e') goto yy186;\nyy590:\n\t\tYYDEBUG(590, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(591, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1252 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INCLUDE_ONCE;\n}\n#line 5890 \"Zend/zend_language_scanner.c\"\nyy592:\n\t\tYYDEBUG(592, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy593;\n\t\tif (yych != 'r') goto yy186;\nyy593:\n\t\tYYDEBUG(593, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy594;\n\t\tif (yych != 'f') goto yy186;\nyy594:\n\t\tYYDEBUG(594, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy595;\n\t\tif (yych != 'a') goto yy186;\nyy595:\n\t\tYYDEBUG(595, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy596;\n\t\tif (yych != 'c') goto yy186;\nyy596:\n\t\tYYDEBUG(596, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy597;\n\t\tif (yych != 'e') goto yy186;\nyy597:\n\t\tYYDEBUG(597, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(598, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1150 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INTERFACE;\n}\n#line 5928 \"Zend/zend_language_scanner.c\"\nyy599:\n\t\tYYDEBUG(599, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'E') {\n\t\t\tif (yych == 'A') goto yy600;\n\t\t\tif (yych <= 'D') goto yy186;\n\t\t\tgoto yy601;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 'e') goto yy601;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy600:\n\t\tYYDEBUG(600, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy607;\n\t\tif (yych == 'n') goto yy607;\n\t\tgoto yy186;\nyy601:\n\t\tYYDEBUG(601, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy602;\n\t\tif (yych != 'a') goto yy186;\nyy602:\n\t\tYYDEBUG(602, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy603;\n\t\tif (yych != 'd') goto yy186;\nyy603:\n\t\tYYDEBUG(603, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy604;\n\t\tif (yych != 'o') goto yy186;\nyy604:\n\t\tYYDEBUG(604, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy605;\n\t\tif (yych != 'f') goto yy186;\nyy605:\n\t\tYYDEBUG(605, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(606, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1272 \"Zend/zend_language_scanner.l\"\n\t\t{\n        return T_INSTEADOF;\n}\n#line 5982 \"Zend/zend_language_scanner.c\"\nyy607:\n\t\tYYDEBUG(607, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy608;\n\t\tif (yych != 'c') goto yy186;\nyy608:\n\t\tYYDEBUG(608, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy609;\n\t\tif (yych != 'e') goto yy186;\nyy609:\n\t\tYYDEBUG(609, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy610;\n\t\tif (yych != 'o') goto yy186;\nyy610:\n\t\tYYDEBUG(610, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy611;\n\t\tif (yych != 'f') goto yy186;\nyy611:\n\t\tYYDEBUG(611, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(612, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1102 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_INSTANCEOF;\n}\n#line 6015 \"Zend/zend_language_scanner.c\"\nyy613:\n\t\tYYDEBUG(613, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy614;\n\t\tif (yych != 'l') goto yy186;\nyy614:\n\t\tYYDEBUG(614, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy615;\n\t\tif (yych != 'e') goto yy186;\nyy615:\n\t\tYYDEBUG(615, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'M') goto yy616;\n\t\tif (yych != 'm') goto yy186;\nyy616:\n\t\tYYDEBUG(616, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy617;\n\t\tif (yych != 'e') goto yy186;\nyy617:\n\t\tYYDEBUG(617, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy618;\n\t\tif (yych != 'n') goto yy186;\nyy618:\n\t\tYYDEBUG(618, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy619;\n\t\tif (yych != 't') goto yy186;\nyy619:\n\t\tYYDEBUG(619, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy620;\n\t\tif (yych != 's') goto yy186;\nyy620:\n\t\tYYDEBUG(620, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(621, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1162 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_IMPLEMENTS;\n}\n#line 6063 \"Zend/zend_language_scanner.c\"\nyy622:\n\t\tYYDEBUG(622, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy630;\n\t\tif (yych == 'r') goto yy630;\n\t\tgoto yy186;\nyy623:\n\t\tYYDEBUG(623, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'Y') {\n\t\t\tif (yych == 'A') goto yy626;\n\t\t\tif (yych <= 'X') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy626;\n\t\t\t} else {\n\t\t\t\tif (yych != 'y') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(624, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(625, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1038 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRY;\n}\n#line 6095 \"Zend/zend_language_scanner.c\"\nyy626:\n\t\tYYDEBUG(626, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy627;\n\t\tif (yych != 'i') goto yy186;\nyy627:\n\t\tYYDEBUG(627, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy628;\n\t\tif (yych != 't') goto yy186;\nyy628:\n\t\tYYDEBUG(628, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(629, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1154 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_TRAIT;\n}\n#line 6118 \"Zend/zend_language_scanner.c\"\nyy630:\n\t\tYYDEBUG(630, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy631;\n\t\tif (yych != 'o') goto yy186;\nyy631:\n\t\tYYDEBUG(631, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy632;\n\t\tif (yych != 'w') goto yy186;\nyy632:\n\t\tYYDEBUG(632, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(633, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1046 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_THROW;\n}\n#line 6141 \"Zend/zend_language_scanner.c\"\nyy634:\n\t\tYYDEBUG(634, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'Q') goto yy636;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t} else {\n\t\t\tif (yych <= 'q') {\n\t\t\t\tif (yych <= 'p') goto yy186;\n\t\t\t\tgoto yy636;\n\t\t\t} else {\n\t\t\t\tif (yych != 't') goto yy186;\n\t\t\t}\n\t\t}\n\t\tYYDEBUG(635, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy648;\n\t\tif (yych == 'u') goto yy648;\n\t\tgoto yy186;\nyy636:\n\t\tYYDEBUG(636, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy637;\n\t\tif (yych != 'u') goto yy186;\nyy637:\n\t\tYYDEBUG(637, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy638;\n\t\tif (yych != 'i') goto yy186;\nyy638:\n\t\tYYDEBUG(638, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy639;\n\t\tif (yych != 'r') goto yy186;\nyy639:\n\t\tYYDEBUG(639, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy640;\n\t\tif (yych != 'e') goto yy186;\nyy640:\n\t\tYYDEBUG(640, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy641;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy642;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy641:\n\t\tYYDEBUG(641, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1256 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE;\n}\n#line 6206 \"Zend/zend_language_scanner.c\"\nyy642:\n\t\tYYDEBUG(642, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy643;\n\t\tif (yych != 'o') goto yy186;\nyy643:\n\t\tYYDEBUG(643, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy644;\n\t\tif (yych != 'n') goto yy186;\nyy644:\n\t\tYYDEBUG(644, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy645;\n\t\tif (yych != 'c') goto yy186;\nyy645:\n\t\tYYDEBUG(645, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy646;\n\t\tif (yych != 'e') goto yy186;\nyy646:\n\t\tYYDEBUG(646, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(647, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1260 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_REQUIRE_ONCE;\n}\n#line 6239 \"Zend/zend_language_scanner.c\"\nyy648:\n\t\tYYDEBUG(648, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy649;\n\t\tif (yych != 'r') goto yy186;\nyy649:\n\t\tYYDEBUG(649, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy650;\n\t\tif (yych != 'n') goto yy186;\nyy650:\n\t\tYYDEBUG(650, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(651, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1034 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_RETURN;\n}\n#line 6262 \"Zend/zend_language_scanner.c\"\nyy652:\n\t\tYYDEBUG(652, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'L') {\n\t\t\t\tif (yych <= 'K') goto yy186;\n\t\t\t\tgoto yy675;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'R') goto yy186;\n\t\t\t\tif (yych <= 'S') goto yy674;\n\t\t\t\tgoto yy673;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'r') {\n\t\t\t\tif (yych == 'l') goto yy675;\n\t\t\t\tgoto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych <= 's') goto yy674;\n\t\t\t\tif (yych <= 't') goto yy673;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy653:\n\t\tYYDEBUG(653, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'O') {\n\t\t\tif (yych == 'A') goto yy665;\n\t\t\tif (yych <= 'N') goto yy186;\n\t\t\tgoto yy666;\n\t\t} else {\n\t\t\tif (yych <= 'a') {\n\t\t\t\tif (yych <= '`') goto yy186;\n\t\t\t\tgoto yy665;\n\t\t\t} else {\n\t\t\t\tif (yych == 'o') goto yy666;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy654:\n\t\tYYDEBUG(654, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy655;\n\t\tif (yych != 'n') goto yy186;\nyy655:\n\t\tYYDEBUG(655, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych <= 'R') goto yy186;\n\t\t\tif (yych >= 'T') goto yy657;\n\t\t} else {\n\t\t\tif (yych <= 'r') goto yy186;\n\t\t\tif (yych <= 's') goto yy656;\n\t\t\tif (yych <= 't') goto yy657;\n\t\t\tgoto yy186;\n\t\t}\nyy656:\n\t\tYYDEBUG(656, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy663;\n\t\tif (yych == 't') goto yy663;\n\t\tgoto yy186;\nyy657:\n\t\tYYDEBUG(657, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy658;\n\t\tif (yych != 'i') goto yy186;\nyy658:\n\t\tYYDEBUG(658, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy659;\n\t\tif (yych != 'n') goto yy186;\nyy659:\n\t\tYYDEBUG(659, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy660;\n\t\tif (yych != 'u') goto yy186;\nyy660:\n\t\tYYDEBUG(660, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy661;\n\t\tif (yych != 'e') goto yy186;\nyy661:\n\t\tYYDEBUG(661, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(662, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1130 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONTINUE;\n}\n#line 6356 \"Zend/zend_language_scanner.c\"\nyy663:\n\t\tYYDEBUG(663, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(664, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1030 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CONST;\n}\n#line 6369 \"Zend/zend_language_scanner.c\"\nyy665:\n\t\tYYDEBUG(665, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy670;\n\t\tif (yych == 's') goto yy670;\n\t\tgoto yy186;\nyy666:\n\t\tYYDEBUG(666, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy667;\n\t\tif (yych != 'n') goto yy186;\nyy667:\n\t\tYYDEBUG(667, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy668;\n\t\tif (yych != 'e') goto yy186;\nyy668:\n\t\tYYDEBUG(668, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(669, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1208 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLONE;\n}\n#line 6398 \"Zend/zend_language_scanner.c\"\nyy670:\n\t\tYYDEBUG(670, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy671;\n\t\tif (yych != 's') goto yy186;\nyy671:\n\t\tYYDEBUG(671, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(672, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1146 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CLASS;\n}\n#line 6416 \"Zend/zend_language_scanner.c\"\nyy673:\n\t\tYYDEBUG(673, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy684;\n\t\tif (yych == 'c') goto yy684;\n\t\tgoto yy186;\nyy674:\n\t\tYYDEBUG(674, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy682;\n\t\tif (yych == 'e') goto yy682;\n\t\tgoto yy186;\nyy675:\n\t\tYYDEBUG(675, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy676;\n\t\tif (yych != 'l') goto yy186;\nyy676:\n\t\tYYDEBUG(676, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy677;\n\t\tif (yych != 'a') goto yy186;\nyy677:\n\t\tYYDEBUG(677, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'B') goto yy678;\n\t\tif (yych != 'b') goto yy186;\nyy678:\n\t\tYYDEBUG(678, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy679;\n\t\tif (yych != 'l') goto yy186;\nyy679:\n\t\tYYDEBUG(679, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy680;\n\t\tif (yych != 'e') goto yy186;\nyy680:\n\t\tYYDEBUG(680, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(681, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1332 \"Zend/zend_language_scanner.l\"\n\t\t{\n return T_CALLABLE;\n}\n#line 6466 \"Zend/zend_language_scanner.c\"\nyy682:\n\t\tYYDEBUG(682, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(683, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1118 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CASE;\n}\n#line 6479 \"Zend/zend_language_scanner.c\"\nyy684:\n\t\tYYDEBUG(684, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy685;\n\t\tif (yych != 'h') goto yy186;\nyy685:\n\t\tYYDEBUG(685, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(686, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1042 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_CATCH;\n}\n#line 6497 \"Zend/zend_language_scanner.c\"\nyy687:\n\t\tYYDEBUG(687, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy704;\n\t\tif (yych == 'n') goto yy704;\n\t\tgoto yy186;\nyy688:\n\t\tYYDEBUG(688, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy697;\n\t\tif (yych == 'r') goto yy697;\n\t\tgoto yy186;\nyy689:\n\t\tYYDEBUG(689, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy690;\n\t\tif (yych != 'n') goto yy186;\nyy690:\n\t\tYYDEBUG(690, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy691;\n\t\tif (yych != 'c') goto yy186;\nyy691:\n\t\tYYDEBUG(691, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy692;\n\t\tif (yych != 't') goto yy186;\nyy692:\n\t\tYYDEBUG(692, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy693;\n\t\tif (yych != 'i') goto yy186;\nyy693:\n\t\tYYDEBUG(693, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy694;\n\t\tif (yych != 'o') goto yy186;\nyy694:\n\t\tYYDEBUG(694, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy695;\n\t\tif (yych != 'n') goto yy186;\nyy695:\n\t\tYYDEBUG(695, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(696, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1026 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FUNCTION;\n}\n#line 6552 \"Zend/zend_language_scanner.c\"\nyy697:\n\t\tYYDEBUG(697, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy698;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy699;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy699;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy698:\n\t\tYYDEBUG(698, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1078 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOR;\n}\n#line 6580 \"Zend/zend_language_scanner.c\"\nyy699:\n\t\tYYDEBUG(699, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy700;\n\t\tif (yych != 'a') goto yy186;\nyy700:\n\t\tYYDEBUG(700, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy701;\n\t\tif (yych != 'c') goto yy186;\nyy701:\n\t\tYYDEBUG(701, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy702;\n\t\tif (yych != 'h') goto yy186;\nyy702:\n\t\tYYDEBUG(702, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(703, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1086 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FOREACH;\n}\n#line 6608 \"Zend/zend_language_scanner.c\"\nyy704:\n\t\tYYDEBUG(704, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy705;\n\t\tif (yych != 'a') goto yy186;\nyy705:\n\t\tYYDEBUG(705, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy706;\n\t\tif (yych != 'l') goto yy186;\nyy706:\n\t\tYYDEBUG(706, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(707, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1300 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_FINAL;\n}\n#line 6631 \"Zend/zend_language_scanner.c\"\nyy708:\n\t\tYYDEBUG(708, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'F') {\n\t\t\tif (yych == 'C') goto yy714;\n\t\t\tif (yych <= 'E') goto yy186;\n\t\t\tgoto yy715;\n\t\t} else {\n\t\t\tif (yych <= 'c') {\n\t\t\t\tif (yych <= 'b') goto yy186;\n\t\t\t\tgoto yy714;\n\t\t\t} else {\n\t\t\t\tif (yych == 'f') goto yy715;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy709:\n\t\tYYDEBUG(709, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy712;\n\t\tif (yych == 'e') goto yy712;\n\t\tgoto yy186;\nyy710:\n\t\tYYDEBUG(710, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(711, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1074 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DO;\n}\n#line 6666 \"Zend/zend_language_scanner.c\"\nyy712:\n\t\tYYDEBUG(712, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(713, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1022 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6679 \"Zend/zend_language_scanner.c\"\nyy714:\n\t\tYYDEBUG(714, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy721;\n\t\tif (yych == 'l') goto yy721;\n\t\tgoto yy186;\nyy715:\n\t\tYYDEBUG(715, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy716;\n\t\tif (yych != 'a') goto yy186;\nyy716:\n\t\tYYDEBUG(716, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'U') goto yy717;\n\t\tif (yych != 'u') goto yy186;\nyy717:\n\t\tYYDEBUG(717, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy718;\n\t\tif (yych != 'l') goto yy186;\nyy718:\n\t\tYYDEBUG(718, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy719;\n\t\tif (yych != 't') goto yy186;\nyy719:\n\t\tYYDEBUG(719, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(720, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1122 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DEFAULT;\n}\n#line 6718 \"Zend/zend_language_scanner.c\"\nyy721:\n\t\tYYDEBUG(721, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy722;\n\t\tif (yych != 'a') goto yy186;\nyy722:\n\t\tYYDEBUG(722, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy723;\n\t\tif (yych != 'r') goto yy186;\nyy723:\n\t\tYYDEBUG(723, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy724;\n\t\tif (yych != 'e') goto yy186;\nyy724:\n\t\tYYDEBUG(724, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(725, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1094 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_DECLARE;\n}\n#line 6746 \"Zend/zend_language_scanner.c\"\nyy726:\n\t\tYYDEBUG(726, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy788;\n\t\tif (yych == 'h') goto yy788;\n\t\tgoto yy186;\nyy727:\n\t\tYYDEBUG(727, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy782;\n\t\tif (yych == 's') goto yy782;\n\t\tgoto yy186;\nyy728:\n\t\tYYDEBUG(728, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'P') goto yy778;\n\t\tif (yych == 'p') goto yy778;\n\t\tgoto yy186;\nyy729:\n\t\tYYDEBUG(729, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy744;\n\t\tif (yych == 'd') goto yy744;\n\t\tgoto yy186;\nyy730:\n\t\tYYDEBUG(730, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy741;\n\t\tif (yych == 'a') goto yy741;\n\t\tgoto yy186;\nyy731:\n\t\tYYDEBUG(731, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych <= 'T') {\n\t\t\tif (yych == 'I') goto yy732;\n\t\t\tif (yych <= 'S') goto yy186;\n\t\t\tgoto yy733;\n\t\t} else {\n\t\t\tif (yych <= 'i') {\n\t\t\t\tif (yych <= 'h') goto yy186;\n\t\t\t} else {\n\t\t\t\tif (yych == 't') goto yy733;\n\t\t\t\tgoto yy186;\n\t\t\t}\n\t\t}\nyy732:\n\t\tYYDEBUG(732, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy739;\n\t\tif (yych == 't') goto yy739;\n\t\tgoto yy186;\nyy733:\n\t\tYYDEBUG(733, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy734;\n\t\tif (yych != 'e') goto yy186;\nyy734:\n\t\tYYDEBUG(734, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'N') goto yy735;\n\t\tif (yych != 'n') goto yy186;\nyy735:\n\t\tYYDEBUG(735, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'D') goto yy736;\n\t\tif (yych != 'd') goto yy186;\nyy736:\n\t\tYYDEBUG(736, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'S') goto yy737;\n\t\tif (yych != 's') goto yy186;\nyy737:\n\t\tYYDEBUG(737, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(738, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1158 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXTENDS;\n}\n#line 6830 \"Zend/zend_language_scanner.c\"\nyy739:\n\t\tYYDEBUG(739, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(740, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1018 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EXIT;\n}\n#line 6843 \"Zend/zend_language_scanner.c\"\nyy741:\n\t\tYYDEBUG(741, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy742;\n\t\tif (yych != 'l') goto yy186;\nyy742:\n\t\tYYDEBUG(742, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(743, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1244 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EVAL;\n}\n#line 6861 \"Zend/zend_language_scanner.c\"\nyy744:\n\t\tYYDEBUG(744, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tYYDEBUG(-1, yych);\n\t\tswitch (yych) {\n\t\tcase 'D':\n\t\tcase 'd':\tgoto yy745;\n\t\tcase 'F':\n\t\tcase 'f':\tgoto yy746;\n\t\tcase 'I':\n\t\tcase 'i':\tgoto yy747;\n\t\tcase 'S':\n\t\tcase 's':\tgoto yy748;\n\t\tcase 'W':\n\t\tcase 'w':\tgoto yy749;\n\t\tdefault:\tgoto yy186;\n\t\t}\nyy745:\n\t\tYYDEBUG(745, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy771;\n\t\tif (yych == 'e') goto yy771;\n\t\tgoto yy186;\nyy746:\n\t\tYYDEBUG(746, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy763;\n\t\tif (yych == 'o') goto yy763;\n\t\tgoto yy186;\nyy747:\n\t\tYYDEBUG(747, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy761;\n\t\tif (yych == 'f') goto yy761;\n\t\tgoto yy186;\nyy748:\n\t\tYYDEBUG(748, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'W') goto yy755;\n\t\tif (yych == 'w') goto yy755;\n\t\tgoto yy186;\nyy749:\n\t\tYYDEBUG(749, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy750;\n\t\tif (yych != 'h') goto yy186;\nyy750:\n\t\tYYDEBUG(750, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy751;\n\t\tif (yych != 'i') goto yy186;\nyy751:\n\t\tYYDEBUG(751, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy752;\n\t\tif (yych != 'l') goto yy186;\nyy752:\n\t\tYYDEBUG(752, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy753;\n\t\tif (yych != 'e') goto yy186;\nyy753:\n\t\tYYDEBUG(753, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(754, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1070 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDWHILE;\n}\n#line 6935 \"Zend/zend_language_scanner.c\"\nyy755:\n\t\tYYDEBUG(755, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'I') goto yy756;\n\t\tif (yych != 'i') goto yy186;\nyy756:\n\t\tYYDEBUG(756, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy757;\n\t\tif (yych != 't') goto yy186;\nyy757:\n\t\tYYDEBUG(757, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy758;\n\t\tif (yych != 'c') goto yy186;\nyy758:\n\t\tYYDEBUG(758, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy759;\n\t\tif (yych != 'h') goto yy186;\nyy759:\n\t\tYYDEBUG(759, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(760, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1114 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDSWITCH;\n}\n#line 6968 \"Zend/zend_language_scanner.c\"\nyy761:\n\t\tYYDEBUG(761, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(762, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1058 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDIF;\n}\n#line 6981 \"Zend/zend_language_scanner.c\"\nyy763:\n\t\tYYDEBUG(763, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy764;\n\t\tif (yych != 'r') goto yy186;\nyy764:\n\t\tYYDEBUG(764, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy765;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'E') goto yy766;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'd') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'e') goto yy766;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy765:\n\t\tYYDEBUG(765, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1082 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOR;\n}\n#line 7014 \"Zend/zend_language_scanner.c\"\nyy766:\n\t\tYYDEBUG(766, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy767;\n\t\tif (yych != 'a') goto yy186;\nyy767:\n\t\tYYDEBUG(767, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy768;\n\t\tif (yych != 'c') goto yy186;\nyy768:\n\t\tYYDEBUG(768, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'H') goto yy769;\n\t\tif (yych != 'h') goto yy186;\nyy769:\n\t\tYYDEBUG(769, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(770, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1090 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDFOREACH;\n}\n#line 7042 \"Zend/zend_language_scanner.c\"\nyy771:\n\t\tYYDEBUG(771, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'C') goto yy772;\n\t\tif (yych != 'c') goto yy186;\nyy772:\n\t\tYYDEBUG(772, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'L') goto yy773;\n\t\tif (yych != 'l') goto yy186;\nyy773:\n\t\tYYDEBUG(773, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'A') goto yy774;\n\t\tif (yych != 'a') goto yy186;\nyy774:\n\t\tYYDEBUG(774, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'R') goto yy775;\n\t\tif (yych != 'r') goto yy186;\nyy775:\n\t\tYYDEBUG(775, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy776;\n\t\tif (yych != 'e') goto yy186;\nyy776:\n\t\tYYDEBUG(776, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(777, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1098 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ENDDECLARE;\n}\n#line 7080 \"Zend/zend_language_scanner.c\"\nyy778:\n\t\tYYDEBUG(778, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'T') goto yy779;\n\t\tif (yych != 't') goto yy186;\nyy779:\n\t\tYYDEBUG(779, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'Y') goto yy780;\n\t\tif (yych != 'y') goto yy186;\nyy780:\n\t\tYYDEBUG(780, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(781, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1284 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_EMPTY;\n}\n#line 7103 \"Zend/zend_language_scanner.c\"\nyy782:\n\t\tYYDEBUG(782, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'E') goto yy783;\n\t\tif (yych != 'e') goto yy186;\nyy783:\n\t\tYYDEBUG(783, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '^') {\n\t\t\tif (yych <= '@') {\n\t\t\t\tif (yych <= '/') goto yy784;\n\t\t\t\tif (yych <= '9') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych == 'I') goto yy785;\n\t\t\t\tif (yych <= 'Z') goto yy185;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'h') {\n\t\t\t\tif (yych != '`') goto yy185;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'i') goto yy785;\n\t\t\t\tif (yych <= 'z') goto yy185;\n\t\t\t\tif (yych >= 0x7F) goto yy185;\n\t\t\t}\n\t\t}\nyy784:\n\t\tYYDEBUG(784, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1062 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSE;\n}\n#line 7136 \"Zend/zend_language_scanner.c\"\nyy785:\n\t\tYYDEBUG(785, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'F') goto yy786;\n\t\tif (yych != 'f') goto yy186;\nyy786:\n\t\tYYDEBUG(786, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(787, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1054 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ELSEIF;\n}\n#line 7154 \"Zend/zend_language_scanner.c\"\nyy788:\n\t\tYYDEBUG(788, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yych == 'O') goto yy789;\n\t\tif (yych != 'o') goto yy186;\nyy789:\n\t\tYYDEBUG(789, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif (yybm[0+(yych = *YYCURSOR)] & 4) {\n\t\t\tgoto yy185;\n\t\t}\n\t\tYYDEBUG(790, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1138 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_ECHO;\n}\n#line 7172 \"Zend/zend_language_scanner.c\"\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_PROPERTY:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128,   0,   0, 128,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t  0,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,   0,   0,   0,   0,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t\t 64,  64,  64,  64,  64,  64,  64,  64, \n\t\t};\n\t\tYYDEBUG(791, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '-') {\n\t\t\tif (yych <= '\\r') {\n\t\t\t\tif (yych <= 0x08) goto yy799;\n\t\t\t\tif (yych <= '\\n') goto yy793;\n\t\t\t\tif (yych <= '\\f') goto yy799;\n\t\t\t} else {\n\t\t\t\tif (yych == ' ') goto yy793;\n\t\t\t\tif (yych <= ',') goto yy799;\n\t\t\t\tgoto yy795;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '_') {\n\t\t\t\tif (yych <= '@') goto yy799;\n\t\t\t\tif (yych <= 'Z') goto yy797;\n\t\t\t\tif (yych <= '^') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t} else {\n\t\t\t\tif (yych <= '`') goto yy799;\n\t\t\t\tif (yych <= 'z') goto yy797;\n\t\t\t\tif (yych <= '~') goto yy799;\n\t\t\t\tgoto yy797;\n\t\t\t}\n\t\t}\nyy793:\n\t\tYYDEBUG(793, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy805;\nyy794:\n\t\tYYDEBUG(794, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1171 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n#line 7253 \"Zend/zend_language_scanner.c\"\nyy795:\n\t\tYYDEBUG(795, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) == '>') goto yy802;\nyy796:\n\t\tYYDEBUG(796, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1190 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n#line 7267 \"Zend/zend_language_scanner.c\"\nyy797:\n\t\tYYDEBUG(797, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy801;\nyy798:\n\t\tYYDEBUG(798, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1183 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7283 \"Zend/zend_language_scanner.c\"\nyy799:\n\t\tYYDEBUG(799, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy796;\nyy800:\n\t\tYYDEBUG(800, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy801:\n\t\tYYDEBUG(801, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy800;\n\t\t}\n\t\tgoto yy798;\nyy802:\n\t\tYYDEBUG(802, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(803, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1179 \"Zend/zend_language_scanner.l\"\n\t\t{\n\treturn T_OBJECT_OPERATOR;\n}\n#line 7308 \"Zend/zend_language_scanner.c\"\nyy804:\n\t\tYYDEBUG(804, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy805:\n\t\tYYDEBUG(805, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy804;\n\t\t}\n\t\tgoto yy794;\n\t}\n/* *********************************** */\nyyc_ST_LOOKING_FOR_VARNAME:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128,   0,   0,   0,   0,   0,   0, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t  0, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128,   0,   0,   0,   0, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t\t128, 128, 128, 128, 128, 128, 128, 128, \n\t\t};\n\t\tYYDEBUG(806, *YYCURSOR);\n\t\tYYFILL(2);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '_') {\n\t\t\tif (yych <= '@') goto yy810;\n\t\t\tif (yych <= 'Z') goto yy808;\n\t\t\tif (yych <= '^') goto yy810;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy810;\n\t\t\tif (yych <= 'z') goto yy808;\n\t\t\tif (yych <= '~') goto yy810;\n\t\t}\nyy808:\n\t\tYYDEBUG(808, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy813;\nyy809:\n\t\tYYDEBUG(809, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1466 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n#line 7386 \"Zend/zend_language_scanner.c\"\nyy810:\n\t\tYYDEBUG(810, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(811, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1475 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n#line 7399 \"Zend/zend_language_scanner.c\"\nyy812:\n\t\tYYDEBUG(812, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy813:\n\t\tYYDEBUG(813, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy812;\n\t\t}\n\t\tgoto yy809;\n\t}\n/* *********************************** */\nyyc_ST_NOWDOC:\n\tYYDEBUG(814, *YYCURSOR);\n\tYYFILL(1);\n\tyych = *YYCURSOR;\n\tYYDEBUG(816, *YYCURSOR);\n\t++YYCURSOR;\n\tYYDEBUG(817, *YYCURSOR);\n\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2357 \"Zend/zend_language_scanner.l\"\n\t{\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7476 \"Zend/zend_language_scanner.c\"\n/* *********************************** */\nyyc_ST_VAR_OFFSET:\n\t{\n\t\tstatic const unsigned char yybm[] = {\n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,   0,   0,   0,   0,   0,   0,   0, \n\t\t\t240, 240, 112, 112, 112, 112, 112, 112, \n\t\t\t112, 112,   0,   0,   0,   0,   0,   0, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t  0,  80,  80,  80,  80,  80,  80,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,   0,   0,   0,   0,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t\t 16,  16,  16,  16,  16,  16,  16,  16, \n\t\t};\n\t\tYYDEBUG(818, *YYCURSOR);\n\t\tYYFILL(3);\n\t\tyych = *YYCURSOR;\n\t\tif (yych <= '/') {\n\t\t\tif (yych <= ' ') {\n\t\t\t\tif (yych <= '\\f') {\n\t\t\t\t\tif (yych <= 0x08) goto yy832;\n\t\t\t\t\tif (yych <= '\\n') goto yy828;\n\t\t\t\t\tgoto yy832;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '\\r') goto yy828;\n\t\t\t\t\tif (yych <= 0x1F) goto yy832;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '$') {\n\t\t\t\t\tif (yych <= '\"') goto yy827;\n\t\t\t\t\tif (yych <= '#') goto yy828;\n\t\t\t\t\tgoto yy823;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych == '\\'') goto yy828;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '\\\\') {\n\t\t\t\tif (yych <= '@') {\n\t\t\t\t\tif (yych <= '0') goto yy820;\n\t\t\t\t\tif (yych <= '9') goto yy822;\n\t\t\t\t\tgoto yy827;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= 'Z') goto yy830;\n\t\t\t\t\tif (yych <= '[') goto yy827;\n\t\t\t\t\tgoto yy828;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (yych <= '_') {\n\t\t\t\t\tif (yych <= ']') goto yy825;\n\t\t\t\t\tif (yych <= '^') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t} else {\n\t\t\t\t\tif (yych <= '`') goto yy827;\n\t\t\t\t\tif (yych <= 'z') goto yy830;\n\t\t\t\t\tif (yych <= '~') goto yy827;\n\t\t\t\t\tgoto yy830;\n\t\t\t\t}\n\t\t\t}\n\t\t}\nyy820:\n\t\tYYDEBUG(820, *YYCURSOR);\n\t\tyyaccept = 0;\n\t\tyych = *(YYMARKER = ++YYCURSOR);\n\t\tif (yych <= 'W') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy844;\n\t\t\t} else {\n\t\t\t\tif (yych == 'B') goto yy841;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= 'b') {\n\t\t\t\tif (yych <= 'X') goto yy843;\n\t\t\t\tif (yych >= 'b') goto yy841;\n\t\t\t} else {\n\t\t\t\tif (yych == 'x') goto yy843;\n\t\t\t}\n\t\t}\nyy821:\n\t\tYYDEBUG(821, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1553 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n#line 7595 \"Zend/zend_language_scanner.c\"\nyy822:\n\t\tYYDEBUG(822, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy840;\nyy823:\n\t\tYYDEBUG(823, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tif ((yych = *YYCURSOR) <= '_') {\n\t\t\tif (yych <= '@') goto yy824;\n\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\tif (yych >= '_') goto yy836;\n\t\t} else {\n\t\t\tif (yych <= '`') goto yy824;\n\t\t\tif (yych <= 'z') goto yy836;\n\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t}\nyy824:\n\t\tYYDEBUG(824, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1885 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n#line 7620 \"Zend/zend_language_scanner.c\"\nyy825:\n\t\tYYDEBUG(825, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(826, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1880 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n#line 7631 \"Zend/zend_language_scanner.c\"\nyy827:\n\t\tYYDEBUG(827, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tgoto yy824;\nyy828:\n\t\tYYDEBUG(828, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(829, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1890 \"Zend/zend_language_scanner.l\"\n\t\t{\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n#line 7648 \"Zend/zend_language_scanner.c\"\nyy830:\n\t\tYYDEBUG(830, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tyych = *YYCURSOR;\n\t\tgoto yy835;\nyy831:\n\t\tYYDEBUG(831, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1897 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n#line 7663 \"Zend/zend_language_scanner.c\"\nyy832:\n\t\tYYDEBUG(832, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYDEBUG(833, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 2413 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n#line 7678 \"Zend/zend_language_scanner.c\"\nyy834:\n\t\tYYDEBUG(834, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy835:\n\t\tYYDEBUG(835, *YYCURSOR);\n\t\tif (yybm[0+yych] & 16) {\n\t\t\tgoto yy834;\n\t\t}\n\t\tgoto yy831;\nyy836:\n\t\tYYDEBUG(836, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(837, *YYCURSOR);\n\t\tif (yych <= '^') {\n\t\t\tif (yych <= '9') {\n\t\t\t\tif (yych >= '0') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= '@') goto yy838;\n\t\t\t\tif (yych <= 'Z') goto yy836;\n\t\t\t}\n\t\t} else {\n\t\t\tif (yych <= '`') {\n\t\t\t\tif (yych <= '_') goto yy836;\n\t\t\t} else {\n\t\t\t\tif (yych <= 'z') goto yy836;\n\t\t\t\tif (yych >= 0x7F) goto yy836;\n\t\t\t}\n\t\t}\nyy838:\n\t\tYYDEBUG(838, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1874 \"Zend/zend_language_scanner.l\"\n\t\t{\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n#line 7720 \"Zend/zend_language_scanner.c\"\nyy839:\n\t\tYYDEBUG(839, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\nyy840:\n\t\tYYDEBUG(840, *YYCURSOR);\n\t\tif (yybm[0+yych] & 32) {\n\t\t\tgoto yy839;\n\t\t}\n\t\tgoto yy821;\nyy841:\n\t\tYYDEBUG(841, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\nyy842:\n\t\tYYDEBUG(842, *YYCURSOR);\n\t\tYYCURSOR = YYMARKER;\n\t\tgoto yy821;\nyy843:\n\t\tYYDEBUG(843, *YYCURSOR);\n\t\tyych = *++YYCURSOR;\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy842;\nyy844:\n\t\tYYDEBUG(844, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(845, *YYCURSOR);\n\t\tif (yych <= '/') goto yy846;\n\t\tif (yych <= '9') goto yy844;\nyy846:\n\t\tYYDEBUG(846, *YYCURSOR);\n\t\tyyleng = YYCURSOR - SCNG(yy_text);\n#line 1565 \"Zend/zend_language_scanner.l\"\n\t\t{ /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n#line 7767 \"Zend/zend_language_scanner.c\"\nyy847:\n\t\tYYDEBUG(847, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(848, *YYCURSOR);\n\t\tif (yybm[0+yych] & 64) {\n\t\t\tgoto yy847;\n\t\t}\n\t\tgoto yy846;\nyy849:\n\t\tYYDEBUG(849, *YYCURSOR);\n\t\t++YYCURSOR;\n\t\tYYFILL(1);\n\t\tyych = *YYCURSOR;\n\t\tYYDEBUG(850, *YYCURSOR);\n\t\tif (yybm[0+yych] & 128) {\n\t\t\tgoto yy849;\n\t\t}\n\t\tgoto yy846;\n\t}\n}\n#line 2422 \"Zend/zend_language_scanner.l\"\n\n}\n", "/*\n   +----------------------------------------------------------------------+\n   | Zend Engine                                                          |\n   +----------------------------------------------------------------------+\n   | Copyright (c) 1998-2013 Zend Technologies Ltd. (http://www.zend.com) |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 2.00 of the Zend license,     |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.zend.com/license/2_00.txt.                                |\n   | If you did not receive a copy of the Zend license and are unable to  |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@zend.com so we can mail you a copy immediately.              |\n   +----------------------------------------------------------------------+\n   | Authors: Marcus Boerger <helly@php.net>                              |\n   |          Nuno Lopes <nlopess@php.net>                                |\n   |          Scott MacVicar <scottmac@php.net>                           |\n   | Flex version authors:                                                |\n   |          Andi Gutmans <andi@zend.com>                                |\n   |          Zeev Suraski <zeev@zend.com>                                |\n   +----------------------------------------------------------------------+\n*/\n\n/* $Id$ */\n\n#if 0\n# define YYDEBUG(s, c) printf(\"state: %d char: %c\\n\", s, c)\n#else\n# define YYDEBUG(s, c)\n#endif\n\n#include \"zend_language_scanner_defs.h\"\n\n#include <errno.h>\n#include \"zend.h\"\n#ifdef PHP_WIN32\n# include <Winuser.h>\n#endif\n#include \"zend_alloc.h\"\n#include <zend_language_parser.h>\n#include \"zend_compile.h\"\n#include \"zend_language_scanner.h\"\n#include \"zend_highlight.h\"\n#include \"zend_constants.h\"\n#include \"zend_variables.h\"\n#include \"zend_operators.h\"\n#include \"zend_API.h\"\n#include \"zend_strtod.h\"\n#include \"zend_exceptions.h\"\n#include \"tsrm_virtual_cwd.h\"\n#include \"tsrm_config_common.h\"\n\n#define YYCTYPE   unsigned char\n#define YYFILL(n) { if ((YYCURSOR + n) >= (YYLIMIT + ZEND_MMAP_AHEAD)) { return 0; } }\n#define YYCURSOR  SCNG(yy_cursor)\n#define YYLIMIT   SCNG(yy_limit)\n#define YYMARKER  SCNG(yy_marker)\n\n#define YYGETCONDITION()  SCNG(yy_state)\n#define YYSETCONDITION(s) SCNG(yy_state) = s\n\n#define STATE(name)  yyc##name\n\n/* emulate flex constructs */\n#define BEGIN(state) YYSETCONDITION(STATE(state))\n#define YYSTATE      YYGETCONDITION()\n#define yytext       ((char*)SCNG(yy_text))\n#define yyleng       SCNG(yy_leng)\n#define yyless(x)    do { YYCURSOR = (unsigned char*)yytext + x; \\\n                          yyleng   = (unsigned int)x; } while(0)\n#define yymore()     goto yymore_restart\n\n/* perform sanity check. If this message is triggered you should\n   increase the ZEND_MMAP_AHEAD value in the zend_streams.h file */\n/*!max:re2c */\n#if ZEND_MMAP_AHEAD < YYMAXFILL\n# error ZEND_MMAP_AHEAD should be greater than or equal to YYMAXFILL\n#endif\n\n#ifdef HAVE_STDARG_H\n# include <stdarg.h>\n#endif\n\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n\n/* Globals Macros */\n#define SCNG\tLANG_SCNG\n#ifdef ZTS\nZEND_API ts_rsrc_id language_scanner_globals_id;\n#else\nZEND_API zend_php_scanner_globals language_scanner_globals;\n#endif\n\n#define HANDLE_NEWLINES(s, l)\t\t\t\t\t\t\t\t\t\t\t\t\t\\\ndo {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\tchar *p = (s), *boundary = p+(l);\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\twhile (p<boundary) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tif (*p == '\\n' || (*p == '\\r' && (*(p+1) != '\\n'))) {\t\t\t\t\t\\\n\t\t\tCG(zend_lineno)++;\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t\tp++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\\\n} while (0)\n\n#define HANDLE_NEWLINE(c) \\\n{ \\\n\tif (c == '\\n' || c == '\\r') { \\\n\t\tCG(zend_lineno)++; \\\n\t} \\\n}\n\n/* To save initial string length after scanning to first variable, CG(doc_comment_len) can be reused */\n#define SET_DOUBLE_QUOTES_SCANNED_LENGTH(len) CG(doc_comment_len) = (len)\n#define GET_DOUBLE_QUOTES_SCANNED_LENGTH()    CG(doc_comment_len)\n\n#define IS_LABEL_START(c) (((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z') || (c) == '_' || (c) >= 0x7F)\n\n#define ZEND_IS_OCT(c)  ((c)>='0' && (c)<='7')\n#define ZEND_IS_HEX(c)  (((c)>='0' && (c)<='9') || ((c)>='a' && (c)<='f') || ((c)>='A' && (c)<='F'))\n\nBEGIN_EXTERN_C()\n\nstatic size_t encoding_filter_script_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, internal_encoding, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_script_to_intermediate(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length, zend_multibyte_encoding_utf8, LANG_SCNG(script_encoding) TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_script(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\nLANG_SCNG(script_encoding), zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\nstatic size_t encoding_filter_intermediate_to_internal(unsigned char **to, size_t *to_length, const unsigned char *from, size_t from_length TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tassert(internal_encoding && zend_multibyte_check_lexer_compatibility(internal_encoding));\n\treturn zend_multibyte_encoding_converter(to, to_length, from, from_length,\ninternal_encoding, zend_multibyte_encoding_utf8 TSRMLS_CC);\n}\n\n\nstatic void _yy_push_state(int new_state TSRMLS_DC)\n{\n\tzend_stack_push(&SCNG(state_stack), (void *) &YYGETCONDITION(), sizeof(int));\n\tYYSETCONDITION(new_state);\n}\n\n#define yy_push_state(state_and_tsrm) _yy_push_state(yyc##state_and_tsrm)\n\nstatic void yy_pop_state(TSRMLS_D)\n{\n\tint *stack_state;\n\tzend_stack_top(&SCNG(state_stack), (void **) &stack_state);\n\tYYSETCONDITION(*stack_state);\n\tzend_stack_del_top(&SCNG(state_stack));\n}\n\nstatic void yy_scan_buffer(char *str, unsigned int len TSRMLS_DC)\n{\n\tYYCURSOR       = (YYCTYPE*)str;\n\tYYLIMIT        = YYCURSOR + len;\n\tif (!SCNG(yy_start)) {\n\t\tSCNG(yy_start) = YYCURSOR;\n\t}\n}\n\nvoid startup_scanner(TSRMLS_D)\n{\n\tCG(parse_error) = 0;\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tCG(doc_comment) = NULL;\n\tCG(doc_comment_len) = 0;\n\tzend_stack_init(&SCNG(state_stack));\n}\n\nvoid shutdown_scanner(TSRMLS_D)\n{\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc_len)=0;\n\t}\n\tCG(parse_error) = 0;\n\tzend_stack_destroy(&SCNG(state_stack));\n\tRESET_DOC_COMMENT();\n}\n\nZEND_API void zend_save_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tlex_state->yy_leng   = SCNG(yy_leng);\n\tlex_state->yy_start  = SCNG(yy_start);\n\tlex_state->yy_text   = SCNG(yy_text);\n\tlex_state->yy_cursor = SCNG(yy_cursor);\n\tlex_state->yy_marker = SCNG(yy_marker);\n\tlex_state->yy_limit  = SCNG(yy_limit);\n\n\tlex_state->state_stack = SCNG(state_stack);\n\tzend_stack_init(&SCNG(state_stack));\n\n\tlex_state->in = SCNG(yy_in);\n\tlex_state->yy_state = YYSTATE;\n\tlex_state->filename = zend_get_compiled_filename(TSRMLS_C);\n\tlex_state->lineno = CG(zend_lineno);\n\n\tlex_state->script_org = SCNG(script_org);\n\tlex_state->script_org_size = SCNG(script_org_size);\n\tlex_state->script_filtered = SCNG(script_filtered);\n\tlex_state->script_filtered_size = SCNG(script_filtered_size);\n\tlex_state->input_filter = SCNG(input_filter);\n\tlex_state->output_filter = SCNG(output_filter);\n\tlex_state->script_encoding = SCNG(script_encoding);\n}\n\nZEND_API void zend_restore_lexical_state(zend_lex_state *lex_state TSRMLS_DC)\n{\n\tSCNG(yy_leng)   = lex_state->yy_leng;\n\tSCNG(yy_start)  = lex_state->yy_start;\n\tSCNG(yy_text)   = lex_state->yy_text;\n\tSCNG(yy_cursor) = lex_state->yy_cursor;\n\tSCNG(yy_marker) = lex_state->yy_marker;\n\tSCNG(yy_limit)  = lex_state->yy_limit;\n\n\tzend_stack_destroy(&SCNG(state_stack));\n\tSCNG(state_stack) = lex_state->state_stack;\n\n\tSCNG(yy_in) = lex_state->in;\n\tYYSETCONDITION(lex_state->yy_state);\n\tCG(zend_lineno) = lex_state->lineno;\n\tzend_restore_compiled_filename(lex_state->filename TSRMLS_CC);\n\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tSCNG(script_org) = lex_state->script_org;\n\tSCNG(script_org_size) = lex_state->script_org_size;\n\tSCNG(script_filtered) = lex_state->script_filtered;\n\tSCNG(script_filtered_size) = lex_state->script_filtered_size;\n\tSCNG(input_filter) = lex_state->input_filter;\n\tSCNG(output_filter) = lex_state->output_filter;\n\tSCNG(script_encoding) = lex_state->script_encoding;\n\n\tif (CG(heredoc)) {\n\t\tefree(CG(heredoc));\n\t\tCG(heredoc) = NULL;\n\t\tCG(heredoc_len) = 0;\n\t}\n}\n\nZEND_API void zend_destroy_file_handle(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tzend_llist_del_element(&CG(open_files), file_handle, (int (*)(void *, void *)) zend_compare_file_handles);\n\t/* zend_file_handle_dtor() operates on the copy, so we have to NULLify the original here */\n\tfile_handle->opened_path = NULL;\n\tif (file_handle->free_filename) {\n\t\tfile_handle->filename = NULL;\n\t}\n}\n\n#define BOM_UTF32_BE\t\"\\x00\\x00\\xfe\\xff\"\n#define\tBOM_UTF32_LE\t\"\\xff\\xfe\\x00\\x00\"\n#define\tBOM_UTF16_BE\t\"\\xfe\\xff\"\n#define\tBOM_UTF16_LE\t\"\\xff\\xfe\"\n#define\tBOM_UTF8\t\t\"\\xef\\xbb\\xbf\"\n\nstatic const zend_encoding *zend_multibyte_detect_utf_encoding(const unsigned char *script, size_t script_size TSRMLS_DC)\n{\n\tconst unsigned char *p;\n\tint wchar_size = 2;\n\tint le = 0;\n\n\t/* utf-16 or utf-32? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tp = memchr(p, 0, script_size-(p-script)-2);\n\t\tif (!p) {\n\t\t\tbreak;\n\t\t}\n\t\tif (*(p+1) == '\\0' && *(p+2) == '\\0') {\n\t\t\twchar_size = 4;\n\t\t\tbreak;\n\t\t}\n\n\t\t/* searching for UTF-32 specific byte orders, so this will do */\n\t\tp += 4;\n\t}\n\n\t/* BE or LE? */\n\tp = script;\n\twhile ((p-script) < script_size) {\n\t\tif (*p == '\\0' && *(p+wchar_size-1) != '\\0') {\n\t\t\t/* BE */\n\t\t\tle = 0;\n\t\t\tbreak;\n\t\t} else if (*p != '\\0' && *(p+wchar_size-1) == '\\0') {\n\t\t\t/* LE* */\n\t\t\tle = 1;\n\t\t\tbreak;\n\t\t}\n\t\tp += wchar_size;\n\t}\n\n\tif (wchar_size == 2) {\n\t\treturn le ? zend_multibyte_encoding_utf16le : zend_multibyte_encoding_utf16be;\n\t} else {\n\t\treturn le ? zend_multibyte_encoding_utf32le : zend_multibyte_encoding_utf32be;\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_detect_unicode(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding = NULL;\n\tint bom_size;\n\tunsigned char *pos1, *pos2;\n\n\tif (LANG_SCNG(script_org_size) < sizeof(BOM_UTF32_LE)-1) {\n\t\treturn NULL;\n\t}\n\n\t/* check out BOM */\n\tif (!memcmp(LANG_SCNG(script_org), BOM_UTF32_BE, sizeof(BOM_UTF32_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32be;\n\t\tbom_size = sizeof(BOM_UTF32_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF32_LE, sizeof(BOM_UTF32_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf32le;\n\t\tbom_size = sizeof(BOM_UTF32_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_BE, sizeof(BOM_UTF16_BE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16be;\n\t\tbom_size = sizeof(BOM_UTF16_BE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF16_LE, sizeof(BOM_UTF16_LE)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf16le;\n\t\tbom_size = sizeof(BOM_UTF16_LE)-1;\n\t} else if (!memcmp(LANG_SCNG(script_org), BOM_UTF8, sizeof(BOM_UTF8)-1)) {\n\t\tscript_encoding = zend_multibyte_encoding_utf8;\n\t\tbom_size = sizeof(BOM_UTF8)-1;\n\t}\n\n\tif (script_encoding) {\n\t\t/* remove BOM */\n\t\tLANG_SCNG(script_org) += bom_size;\n\t\tLANG_SCNG(script_org_size) -= bom_size;\n\n\t\treturn script_encoding;\n\t}\n\n\t/* script contains NULL bytes -> auto-detection */\n\tif ((pos1 = memchr(LANG_SCNG(script_org), 0, LANG_SCNG(script_org_size)))) {\n\t\t/* check if the NULL byte is after the __HALT_COMPILER(); */\n\t\tpos2 = LANG_SCNG(script_org);\n\n\t\twhile (pos1 - pos2 >= sizeof(\"__HALT_COMPILER();\")-1) {\n\t\t\tpos2 = memchr(pos2, '_', pos1 - pos2);\n\t\t\tif (!pos2) break;\n\t\t\tpos2++;\n\t\t\tif (strncasecmp((char*)pos2, \"_HALT_COMPILER\", sizeof(\"_HALT_COMPILER\")-1) == 0) {\n\t\t\t\tpos2 += sizeof(\"_HALT_COMPILER\")-1;\n\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\tpos2++;\n\t\t\t\t}\n\t\t\t\tif (*pos2 == '(') {\n\t\t\t\t\tpos2++;\n\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t}\n\t\t\t\t\tif (*pos2 == ')') {\n\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\twhile (*pos2 == ' '  ||\n\t\t\t\t\t\t\t   *pos2 == '\\t' ||\n\t\t\t\t\t\t\t   *pos2 == '\\r' ||\n\t\t\t\t\t\t\t   *pos2 == '\\n') {\n\t\t\t\t\t\t\tpos2++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (*pos2 == ';') {\n\t\t\t\t\t\t\treturn NULL;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* make best effort if BOM is missing */\n\t\treturn zend_multibyte_detect_utf_encoding(LANG_SCNG(script_org), LANG_SCNG(script_org_size) TSRMLS_CC);\n\t}\n\n\treturn NULL;\n}\n\nstatic const zend_encoding* zend_multibyte_find_script_encoding(TSRMLS_D)\n{\n\tconst zend_encoding *script_encoding;\n\n\tif (CG(detect_unicode)) {\n\t\t/* check out bom(byte order mark) and see if containing wchars */\n\t\tscript_encoding = zend_multibyte_detect_unicode(TSRMLS_C);\n\t\tif (script_encoding != NULL) {\n\t\t\t/* bom or wchar detection is prior to 'script_encoding' option */\n\t\t\treturn script_encoding;\n\t\t}\n\t}\n\n\t/* if no script_encoding specified, just leave alone */\n\tif (!CG(script_encoding_list) || !CG(script_encoding_list_size)) {\n\t\treturn NULL;\n\t}\n\n\t/* if multiple encodings specified, detect automagically */\n\tif (CG(script_encoding_list_size) > 1) {\n\t\treturn zend_multibyte_encoding_detector(LANG_SCNG(script_org), LANG_SCNG(script_org_size), CG(script_encoding_list), CG(script_encoding_list_size) TSRMLS_CC);\n\t}\n\n\treturn CG(script_encoding_list)[0];\n}\n\nZEND_API int zend_multibyte_set_filter(const zend_encoding *onetime_encoding TSRMLS_DC)\n{\n\tconst zend_encoding *internal_encoding = zend_multibyte_get_internal_encoding(TSRMLS_C);\n\tconst zend_encoding *script_encoding = onetime_encoding ? onetime_encoding: zend_multibyte_find_script_encoding(TSRMLS_C);\n\n\tif (!script_encoding) {\n\t\treturn FAILURE;\n\t}\n\n\t/* judge input/output filter */\n\tLANG_SCNG(script_encoding) = script_encoding;\n\tLANG_SCNG(input_filter) = NULL;\n\tLANG_SCNG(output_filter) = NULL;\n\n\tif (!internal_encoding || LANG_SCNG(script_encoding) == internal_encoding) {\n\t\tif (!zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\t\t/* and if not, work around w/ script_encoding -> utf-8 -> script_encoding conversion */\n\t\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_script;\n\t\t} else {\n\t\t\tLANG_SCNG(input_filter) = NULL;\n\t\t\tLANG_SCNG(output_filter) = NULL;\n\t\t}\n\t\treturn SUCCESS;\n\t}\n\n\tif (zend_multibyte_check_lexer_compatibility(internal_encoding)) {\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_internal;\n\t\tLANG_SCNG(output_filter) = NULL;\n\t} else if (zend_multibyte_check_lexer_compatibility(LANG_SCNG(script_encoding))) {\n\t\tLANG_SCNG(input_filter) = NULL;\n\t\tLANG_SCNG(output_filter) = encoding_filter_script_to_internal;\n\t} else {\n\t\t/* both script and internal encodings are incompatible w/ flex */\n\t\tLANG_SCNG(input_filter) = encoding_filter_script_to_intermediate;\n\t\tLANG_SCNG(output_filter) = encoding_filter_intermediate_to_internal;\n\t}\n\n\treturn 0;\n}\n\nZEND_API int open_file_for_scanning(zend_file_handle *file_handle TSRMLS_DC)\n{\n\tconst char *file_path = NULL;\n\tchar *buf;\n\tsize_t size, offset = 0;\n\n\t/* The shebang line was read, get the current position to obtain the buffer start */\n\tif (CG(start_lineno) == 2 && file_handle->type == ZEND_HANDLE_FP && file_handle->handle.fp) {\n\t\tif ((offset = ftell(file_handle->handle.fp)) == -1) {\n\t\t\toffset = 0;\n\t\t}\n\t}\n\n\tif (zend_stream_fixup(file_handle, &buf, &size TSRMLS_CC) == FAILURE) {\n\t\treturn FAILURE;\n\t}\n\n\tzend_llist_add_element(&CG(open_files), file_handle);\n\tif (file_handle->handle.stream.handle >= (void*)file_handle && file_handle->handle.stream.handle <= (void*)(file_handle+1)) {\n\t\tzend_file_handle *fh = (zend_file_handle*)zend_llist_get_last(&CG(open_files));\n\t\tsize_t diff = (char*)file_handle->handle.stream.handle - (char*)file_handle;\n\t\tfh->handle.stream.handle = (void*)(((char*)fh) + diff);\n\t\tfile_handle->handle.stream.handle = fh->handle.stream.handle;\n\t}\n\n\t/* Reset the scanner for scanning the new file */\n\tSCNG(yy_in) = file_handle;\n\tSCNG(yy_start) = NULL;\n\n\tif (size != -1) {\n\t\tif (CG(multibyte)) {\n\t\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\t\tSCNG(script_org_size) = size;\n\t\t\tSCNG(script_filtered) = NULL;\n\n\t\t\tzend_multibyte_set_filter(NULL TSRMLS_CC);\n\n\t\t\tif (SCNG(input_filter)) {\n\t\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t\t}\n\t\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\t\tsize = SCNG(script_filtered_size);\n\t\t\t}\n\t\t}\n\t\tSCNG(yy_start) = (unsigned char *)buf - offset;\n\t\tyy_scan_buffer(buf, size TSRMLS_CC);\n\t} else {\n\t\tzend_error_noreturn(E_COMPILE_ERROR, \"zend_stream_mmap() failed\");\n\t}\n\n\tBEGIN(INITIAL);\n\n\tif (file_handle->opened_path) {\n\t\tfile_path = file_handle->opened_path;\n\t} else {\n\t\tfile_path = file_handle->filename;\n\t}\n\n\tzend_set_compiled_filename(file_path TSRMLS_CC);\n\n\tif (CG(start_lineno)) {\n\t\tCG(zend_lineno) = CG(start_lineno);\n\t\tCG(start_lineno) = 0;\n\t} else {\n\t\tCG(zend_lineno) = 1;\n\t}\n\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\nEND_EXTERN_C()\n\n\nZEND_API zend_op_array *compile_file(zend_file_handle *file_handle, int type TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval=NULL;\n\tint compiler_result;\n\tzend_bool compilation_successful=0;\n\tznode retval_znode;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tretval_znode.op_type = IS_CONST;\n\tretval_znode.u.constant.type = IS_LONG;\n\tretval_znode.u.constant.value.lval = 1;\n\tZ_UNSET_ISREF(retval_znode.u.constant);\n\tZ_SET_REFCOUNT(retval_znode.u.constant, 1);\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\n\tretval = op_array; /* success oriented */\n\n\tif (open_file_for_scanning(file_handle TSRMLS_CC)==FAILURE) {\n\t\tif (type==ZEND_REQUIRE) {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_REQUIRE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t\tzend_bailout();\n\t\t} else {\n\t\t\tzend_message_dispatcher(ZMSG_FAILED_INCLUDE_FOPEN, file_handle->filename TSRMLS_CC);\n\t\t}\n\t\tcompilation_successful=0;\n\t} else {\n\t\tinit_op_array(op_array, ZEND_USER_FUNCTION, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(in_compilation) = 1;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\t\tzend_do_return(&retval_znode, 0 TSRMLS_CC);\n\t\tCG(in_compilation) = original_in_compilation;\n\t\tif (compiler_result != 0) { /* parser error */\n\t\t\tzend_bailout();\n\t\t}\n\t\tcompilation_successful=1;\n\t}\n\n\tif (retval) {\n\t\tCG(active_op_array) = original_active_op_array;\n\t\tif (compilation_successful) {\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t} else {\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn retval;\n}\n\n\nzend_op_array *compile_filename(int type, zval *filename TSRMLS_DC)\n{\n\tzend_file_handle file_handle;\n\tzval tmp;\n\tzend_op_array *retval;\n\tchar *opened_path = NULL;\n\n\tif (filename->type != IS_STRING) {\n\t\ttmp = *filename;\n\t\tzval_copy_ctor(&tmp);\n\t\tconvert_to_string(&tmp);\n\t\tfilename = &tmp;\n\t}\n\tfile_handle.filename = filename->value.str.val;\n\tfile_handle.free_filename = 0;\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.opened_path = NULL;\n\tfile_handle.handle.fp = NULL;\n\n\tretval = zend_compile_file(&file_handle, type TSRMLS_CC);\n\tif (retval && file_handle.handle.stream.handle) {\n\t\tint dummy = 1;\n\n\t\tif (!file_handle.opened_path) {\n\t\t\tfile_handle.opened_path = opened_path = estrndup(filename->value.str.val, filename->value.str.len);\n\t\t}\n\n\t\tzend_hash_add(&EG(included_files), file_handle.opened_path, strlen(file_handle.opened_path)+1, (void *)&dummy, sizeof(int), NULL);\n\n\t\tif (opened_path) {\n\t\t\tefree(opened_path);\n\t\t}\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\n\tif (filename==&tmp) {\n\t\tzval_dtor(&tmp);\n\t}\n\treturn retval;\n}\n\nZEND_API int zend_prepare_string_for_scanning(zval *str, char *filename TSRMLS_DC)\n{\n\tchar *buf;\n\tsize_t size;\n\n\t/* enforce two trailing NULLs for flex... */\n\tif (IS_INTERNED(str->value.str.val)) {\n\t\tchar *tmp = safe_emalloc(1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t\tmemcpy(tmp, str->value.str.val, str->value.str.len + ZEND_MMAP_AHEAD);\n\t\tstr->value.str.val = tmp;\n\t} else {\n\t\tstr->value.str.val = safe_erealloc(str->value.str.val, 1, str->value.str.len, ZEND_MMAP_AHEAD);\n\t}\n\n\tmemset(str->value.str.val + str->value.str.len, 0, ZEND_MMAP_AHEAD);\n\n\tSCNG(yy_in) = NULL;\n\tSCNG(yy_start) = NULL;\n\n\tbuf = str->value.str.val;\n\tsize = str->value.str.len;\n\n\tif (CG(multibyte)) {\n\t\tSCNG(script_org) = (unsigned char*)buf;\n\t\tSCNG(script_org_size) = size;\n\t\tSCNG(script_filtered) = NULL;\n\n\t\tzend_multibyte_set_filter(zend_multibyte_get_internal_encoding(TSRMLS_C) TSRMLS_CC);\n\n\t\tif (SCNG(input_filter)) {\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&SCNG(script_filtered), &SCNG(script_filtered_size), SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t\t}\n\t\t\tbuf = (char*)SCNG(script_filtered);\n\t\t\tsize = SCNG(script_filtered_size);\n\t\t}\n\t}\n\n\tyy_scan_buffer(buf, size TSRMLS_CC);\n\n\tzend_set_compiled_filename(filename TSRMLS_CC);\n\tCG(zend_lineno) = 1;\n\tCG(increment_lineno) = 0;\n\treturn SUCCESS;\n}\n\n\nZEND_API size_t zend_get_scanned_file_offset(TSRMLS_D)\n{\n\tsize_t offset = SCNG(yy_cursor) - SCNG(yy_start);\n\tif (SCNG(input_filter)) {\n\t\tsize_t original_offset = offset, length = 0;\n\t\tdo {\n\t\t\tunsigned char *p = NULL;\n\t\t\tif ((size_t)-1 == SCNG(input_filter)(&p, &length, SCNG(script_org), offset TSRMLS_CC)) {\n\t\t\t\treturn (size_t)-1;\n\t\t\t}\n\t\t\tefree(p);\n\t\t\tif (length > original_offset) {\n\t\t\t\toffset--;\n\t\t\t} else if (length < original_offset) {\n\t\t\t\toffset++;\n\t\t\t}\n\t\t} while (original_offset != length);\n\t}\n\treturn offset;\n}\n\n\nzend_op_array *compile_string(zval *source_string, char *filename TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_op_array *op_array = (zend_op_array *) emalloc(sizeof(zend_op_array));\n\tzend_op_array *original_active_op_array = CG(active_op_array);\n\tzend_op_array *retval;\n\tzval tmp;\n\tint compiler_result;\n\tzend_bool original_in_compilation = CG(in_compilation);\n\n\tif (source_string->value.str.len==0) {\n\t\tefree(op_array);\n\t\treturn NULL;\n\t}\n\n\tCG(in_compilation) = 1;\n\n\ttmp = *source_string;\n\tzval_copy_ctor(&tmp);\n\tconvert_to_string(&tmp);\n\tsource_string = &tmp;\n\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(source_string, filename TSRMLS_CC)==FAILURE) {\n\t\tefree(op_array);\n\t\tretval = NULL;\n\t} else {\n\t\tzend_bool orig_interactive = CG(interactive);\n\n\t\tCG(interactive) = 0;\n\t\tinit_op_array(op_array, ZEND_EVAL_CODE, INITIAL_OP_ARRAY_SIZE TSRMLS_CC);\n\t\tCG(interactive) = orig_interactive;\n\t\tCG(active_op_array) = op_array;\n\t\tzend_stack_push(&CG(context_stack), (void *) &CG(context), sizeof(CG(context)));\n\t\tzend_init_compiler_context(TSRMLS_C);\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\tcompiler_result = zendparse(TSRMLS_C);\n\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\n\t\tif (compiler_result != 0) {\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tCG(unclean_shutdown)=1;\n\t\t\tdestroy_op_array(op_array TSRMLS_CC);\n\t\t\tefree(op_array);\n\t\t\tretval = NULL;\n\t\t} else {\n\t\t\tzend_do_return(NULL, 0 TSRMLS_CC);\n\t\t\tCG(active_op_array) = original_active_op_array;\n\t\t\tpass_two(op_array TSRMLS_CC);\n\t\t\tzend_release_labels(0 TSRMLS_CC);\n\t\t\tretval = op_array;\n\t\t}\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(&tmp);\n\tCG(in_compilation) = original_in_compilation;\n\treturn retval;\n}\n\n\nBEGIN_EXTERN_C()\nint highlight_file(char *filename, zend_syntax_highlighter_ini *syntax_highlighter_ini TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzend_file_handle file_handle;\n\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.filename = filename;\n\tfile_handle.free_filename = 0;\n\tfile_handle.opened_path = NULL;\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (open_file_for_scanning(&file_handle TSRMLS_CC)==FAILURE) {\n\t\tzend_message_dispatcher(ZMSG_FAILED_HIGHLIGHT_FOPEN, filename TSRMLS_CC);\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_destroy_file_handle(&file_handle TSRMLS_CC);\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\treturn SUCCESS;\n}\n\nint highlight_string(zval *str, zend_syntax_highlighter_ini *syntax_highlighter_ini, char *str_name TSRMLS_DC)\n{\n\tzend_lex_state original_lex_state;\n\tzval tmp = *str;\n\n\tstr = &tmp;\n\tzval_copy_ctor(str);\n\tzend_save_lexical_state(&original_lex_state TSRMLS_CC);\n\tif (zend_prepare_string_for_scanning(str, str_name TSRMLS_CC)==FAILURE) {\n\t\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\t\treturn FAILURE;\n\t}\n\tBEGIN(INITIAL);\n\tzend_highlight(syntax_highlighter_ini TSRMLS_CC);\n\tif (SCNG(script_filtered)) {\n\t\tefree(SCNG(script_filtered));\n\t\tSCNG(script_filtered) = NULL;\n\t}\n\tzend_restore_lexical_state(&original_lex_state TSRMLS_CC);\n\tzval_dtor(str);\n\treturn SUCCESS;\n}\n\nZEND_API void zend_multibyte_yyinput_again(zend_encoding_filter old_input_filter, const zend_encoding *old_encoding TSRMLS_DC)\n{\n\tsize_t length;\n\tunsigned char *new_yy_start;\n\n\t/* convert and set */\n\tif (!SCNG(input_filter)) {\n\t\tif (SCNG(script_filtered)) {\n\t\t\tefree(SCNG(script_filtered));\n\t\t\tSCNG(script_filtered) = NULL;\n\t\t}\n\t\tSCNG(script_filtered_size) = 0;\n\t\tlength = SCNG(script_org_size);\n\t\tnew_yy_start = SCNG(script_org);\n\t} else {\n\t\tif ((size_t)-1 == SCNG(input_filter)(&new_yy_start, &length, SCNG(script_org), SCNG(script_org_size) TSRMLS_CC)) {\n\t\t\tzend_error_noreturn(E_COMPILE_ERROR, \"Could not convert the script from the detected \"\n\t\t\t\t\t\"encoding \\\"%s\\\" to a compatible encoding\", zend_multibyte_get_encoding_name(LANG_SCNG(script_encoding)));\n\t\t}\n\t\tSCNG(script_filtered) = new_yy_start;\n\t\tSCNG(script_filtered_size) = length;\n\t}\n\n\tSCNG(yy_cursor) = new_yy_start + (SCNG(yy_cursor) - SCNG(yy_start));\n\tSCNG(yy_marker) = new_yy_start + (SCNG(yy_marker) - SCNG(yy_start));\n\tSCNG(yy_text) = new_yy_start + (SCNG(yy_text) - SCNG(yy_start));\n\tSCNG(yy_limit) = new_yy_start + (SCNG(yy_limit) - SCNG(yy_start));\n\n\tSCNG(yy_start) = new_yy_start;\n}\n\n\n# define zend_copy_value(zendlval, yytext, yyleng) \\\n\tif (SCNG(output_filter)) { \\\n\t\tsize_t sz = 0; \\\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC); \\\n\t\tzendlval->value.str.len = sz; \\\n\t} else { \\\n\t\tzendlval->value.str.val = (char *) estrndup(yytext, yyleng); \\\n\t\tzendlval->value.str.len = yyleng; \\\n\t}\n\nstatic void zend_scan_escape_string(zval *zendlval, char *str, int len, char quote_type TSRMLS_DC)\n{\n\tregister char *s, *t;\n\tchar *end;\n\n\tZVAL_STRINGL(zendlval, str, len, 1);\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\t\t\tif (s >= end) {\n\t\t\t\t*t++ = '\\\\';\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase 'n':\n\t\t\t\t\t*t++ = '\\n';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'r':\n\t\t\t\t\t*t++ = '\\r';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 't':\n\t\t\t\t\t*t++ = '\\t';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'f':\n\t\t\t\t\t*t++ = '\\f';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'v':\n\t\t\t\t\t*t++ = '\\v';\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'e':\n#ifdef PHP_WIN32\n\t\t\t\t\t*t++ = VK_ESCAPE;\n#else\n\t\t\t\t\t*t++ = '\\e';\n#endif\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '\"':\n\t\t\t\tcase '`':\n\t\t\t\t\tif (*s != quote_type) {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '$':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'x':\n\t\t\t\tcase 'X':\n\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\tchar hex_buf[3] = { 0, 0, 0 };\n\n\t\t\t\t\t\tzendlval->value.str.len--; /* for the 'x' */\n\n\t\t\t\t\t\thex_buf[0] = *(++s);\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_HEX(*(s+1))) {\n\t\t\t\t\t\t\thex_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(hex_buf, NULL, 16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t/* check for an octal */\n\t\t\t\t\tif (ZEND_IS_OCT(*s)) {\n\t\t\t\t\t\tchar octal_buf[4] = { 0, 0, 0, 0 };\n\n\t\t\t\t\t\toctal_buf[0] = *s;\n\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\toctal_buf[1] = *(++s);\n\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\tif (ZEND_IS_OCT(*(s+1))) {\n\t\t\t\t\t\t\t\toctal_buf[2] = *(++s);\n\t\t\t\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*t++ = (char) strtol(octal_buf, NULL, 8);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t\t*t++ = *s;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n}\n\n\nint lex_scan(zval *zendlval TSRMLS_DC)\n{\nrestart:\n\tSCNG(yy_text) = YYCURSOR;\n\nyymore_restart:\n\n/*!re2c\nre2c:yyfill:check = 0;\nLNUM\t[0-9]+\nDNUM\t([0-9]*\".\"[0-9]+)|([0-9]+\".\"[0-9]*)\nEXPONENT_DNUM\t(({LNUM}|{DNUM})[eE][+-]?{LNUM})\nHNUM\t\"0x\"[0-9a-fA-F]+\nBNUM\t\"0b\"[01]+\nLABEL\t[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*\nWHITESPACE [ \\n\\r\\t]+\nTABS_AND_SPACES [ \\t]*\nTOKENS [;:,.\\[\\]()|^&+-/*=%!~$<>?@]\nANY_CHAR [^]\nNEWLINE (\"\\r\"|\"\\n\"|\"\\r\\n\")\n\n/* compute yyleng before each rule */\n<!*> := yyleng = YYCURSOR - SCNG(yy_text);\n\n\n<ST_IN_SCRIPTING>\"exit\" {\n\treturn T_EXIT;\n}\n\n<ST_IN_SCRIPTING>\"die\" {\n\treturn T_EXIT;\n}\n\n<ST_IN_SCRIPTING>\"function\" {\n\treturn T_FUNCTION;\n}\n\n<ST_IN_SCRIPTING>\"const\" {\n\treturn T_CONST;\n}\n\n<ST_IN_SCRIPTING>\"return\" {\n\treturn T_RETURN;\n}\n\n<ST_IN_SCRIPTING>\"try\" {\n\treturn T_TRY;\n}\n\n<ST_IN_SCRIPTING>\"catch\" {\n\treturn T_CATCH;\n}\n\n<ST_IN_SCRIPTING>\"throw\" {\n\treturn T_THROW;\n}\n\n<ST_IN_SCRIPTING>\"if\" {\n\treturn T_IF;\n}\n\n<ST_IN_SCRIPTING>\"elseif\" {\n\treturn T_ELSEIF;\n}\n\n<ST_IN_SCRIPTING>\"endif\" {\n\treturn T_ENDIF;\n}\n\n<ST_IN_SCRIPTING>\"else\" {\n\treturn T_ELSE;\n}\n\n<ST_IN_SCRIPTING>\"while\" {\n\treturn T_WHILE;\n}\n\n<ST_IN_SCRIPTING>\"endwhile\" {\n\treturn T_ENDWHILE;\n}\n\n<ST_IN_SCRIPTING>\"do\" {\n\treturn T_DO;\n}\n\n<ST_IN_SCRIPTING>\"for\" {\n\treturn T_FOR;\n}\n\n<ST_IN_SCRIPTING>\"endfor\" {\n\treturn T_ENDFOR;\n}\n\n<ST_IN_SCRIPTING>\"foreach\" {\n\treturn T_FOREACH;\n}\n\n<ST_IN_SCRIPTING>\"endforeach\" {\n\treturn T_ENDFOREACH;\n}\n\n<ST_IN_SCRIPTING>\"declare\" {\n\treturn T_DECLARE;\n}\n\n<ST_IN_SCRIPTING>\"enddeclare\" {\n\treturn T_ENDDECLARE;\n}\n\n<ST_IN_SCRIPTING>\"instanceof\" {\n\treturn T_INSTANCEOF;\n}\n\n<ST_IN_SCRIPTING>\"as\" {\n\treturn T_AS;\n}\n\n<ST_IN_SCRIPTING>\"switch\" {\n\treturn T_SWITCH;\n}\n\n<ST_IN_SCRIPTING>\"endswitch\" {\n\treturn T_ENDSWITCH;\n}\n\n<ST_IN_SCRIPTING>\"case\" {\n\treturn T_CASE;\n}\n\n<ST_IN_SCRIPTING>\"default\" {\n\treturn T_DEFAULT;\n}\n\n<ST_IN_SCRIPTING>\"break\" {\n\treturn T_BREAK;\n}\n\n<ST_IN_SCRIPTING>\"continue\" {\n\treturn T_CONTINUE;\n}\n\n<ST_IN_SCRIPTING>\"goto\" {\n\treturn T_GOTO;\n}\n\n<ST_IN_SCRIPTING>\"echo\" {\n\treturn T_ECHO;\n}\n\n<ST_IN_SCRIPTING>\"print\" {\n\treturn T_PRINT;\n}\n\n<ST_IN_SCRIPTING>\"class\" {\n\treturn T_CLASS;\n}\n\n<ST_IN_SCRIPTING>\"interface\" {\n\treturn T_INTERFACE;\n}\n\n<ST_IN_SCRIPTING>\"trait\" {\n\treturn T_TRAIT;\n}\n\n<ST_IN_SCRIPTING>\"extends\" {\n\treturn T_EXTENDS;\n}\n\n<ST_IN_SCRIPTING>\"implements\" {\n\treturn T_IMPLEMENTS;\n}\n\n<ST_IN_SCRIPTING>\"->\" {\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\treturn T_OBJECT_OPERATOR;\n}\n\n<ST_IN_SCRIPTING,ST_LOOKING_FOR_PROPERTY>{WHITESPACE}+ {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_WHITESPACE;\n}\n\n<ST_LOOKING_FOR_PROPERTY>\"->\" {\n\treturn T_OBJECT_OPERATOR;\n}\n\n<ST_LOOKING_FOR_PROPERTY>{LABEL} {\n\tyy_pop_state(TSRMLS_C);\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n\n<ST_LOOKING_FOR_PROPERTY>{ANY_CHAR} {\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tgoto restart;\n}\n\n<ST_IN_SCRIPTING>\"::\" {\n\treturn T_PAAMAYIM_NEKUDOTAYIM;\n}\n\n<ST_IN_SCRIPTING>\"\\\\\" {\n\treturn T_NS_SEPARATOR;\n}\n\n<ST_IN_SCRIPTING>\"new\" {\n\treturn T_NEW;\n}\n\n<ST_IN_SCRIPTING>\"clone\" {\n\treturn T_CLONE;\n}\n\n<ST_IN_SCRIPTING>\"var\" {\n\treturn T_VAR;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"int\"|\"integer\"){TABS_AND_SPACES}\")\" {\n\treturn T_INT_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"real\"|\"double\"|\"float\"){TABS_AND_SPACES}\")\" {\n\treturn T_DOUBLE_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"string\"|\"binary\"){TABS_AND_SPACES}\")\" {\n\treturn T_STRING_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"array\"{TABS_AND_SPACES}\")\" {\n\treturn T_ARRAY_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}\"object\"{TABS_AND_SPACES}\")\" {\n\treturn T_OBJECT_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"bool\"|\"boolean\"){TABS_AND_SPACES}\")\" {\n\treturn T_BOOL_CAST;\n}\n\n<ST_IN_SCRIPTING>\"(\"{TABS_AND_SPACES}(\"unset\"){TABS_AND_SPACES}\")\" {\n\treturn T_UNSET_CAST;\n}\n\n<ST_IN_SCRIPTING>\"eval\" {\n\treturn T_EVAL;\n}\n\n<ST_IN_SCRIPTING>\"include\" {\n\treturn T_INCLUDE;\n}\n\n<ST_IN_SCRIPTING>\"include_once\" {\n\treturn T_INCLUDE_ONCE;\n}\n\n<ST_IN_SCRIPTING>\"require\" {\n\treturn T_REQUIRE;\n}\n\n<ST_IN_SCRIPTING>\"require_once\" {\n\treturn T_REQUIRE_ONCE;\n}\n\n<ST_IN_SCRIPTING>\"namespace\" {\n\treturn T_NAMESPACE;\n}\n\n<ST_IN_SCRIPTING>\"use\" {\n\treturn T_USE;\n}\n\n<ST_IN_SCRIPTING>\"insteadof\" {\n        return T_INSTEADOF;\n}\n\n<ST_IN_SCRIPTING>\"global\" {\n\treturn T_GLOBAL;\n}\n\n<ST_IN_SCRIPTING>\"isset\" {\n\treturn T_ISSET;\n}\n\n<ST_IN_SCRIPTING>\"empty\" {\n\treturn T_EMPTY;\n}\n\n<ST_IN_SCRIPTING>\"__halt_compiler\" {\n\treturn T_HALT_COMPILER;\n}\n\n<ST_IN_SCRIPTING>\"static\" {\n\treturn T_STATIC;\n}\n\n<ST_IN_SCRIPTING>\"abstract\" {\n\treturn T_ABSTRACT;\n}\n\n<ST_IN_SCRIPTING>\"final\" {\n\treturn T_FINAL;\n}\n\n<ST_IN_SCRIPTING>\"private\" {\n\treturn T_PRIVATE;\n}\n\n<ST_IN_SCRIPTING>\"protected\" {\n\treturn T_PROTECTED;\n}\n\n<ST_IN_SCRIPTING>\"public\" {\n\treturn T_PUBLIC;\n}\n\n<ST_IN_SCRIPTING>\"unset\" {\n\treturn T_UNSET;\n}\n\n<ST_IN_SCRIPTING>\"=>\" {\n\treturn T_DOUBLE_ARROW;\n}\n\n<ST_IN_SCRIPTING>\"list\" {\n\treturn T_LIST;\n}\n\n<ST_IN_SCRIPTING>\"array\" {\n\treturn T_ARRAY;\n}\n\n<ST_IN_SCRIPTING>\"callable\" {\n return T_CALLABLE;\n}\n\n<ST_IN_SCRIPTING>\"++\" {\n\treturn T_INC;\n}\n\n<ST_IN_SCRIPTING>\"--\" {\n\treturn T_DEC;\n}\n\n<ST_IN_SCRIPTING>\"===\" {\n\treturn T_IS_IDENTICAL;\n}\n\n<ST_IN_SCRIPTING>\"!==\" {\n\treturn T_IS_NOT_IDENTICAL;\n}\n\n<ST_IN_SCRIPTING>\"==\" {\n\treturn T_IS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"!=\"|\"<>\" {\n\treturn T_IS_NOT_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"<=\" {\n\treturn T_IS_SMALLER_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\">=\" {\n\treturn T_IS_GREATER_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"+=\" {\n\treturn T_PLUS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"-=\" {\n\treturn T_MINUS_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"*=\" {\n\treturn T_MUL_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"/=\" {\n\treturn T_DIV_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\".=\" {\n\treturn T_CONCAT_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"%=\" {\n\treturn T_MOD_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"<<=\" {\n\treturn T_SL_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\">>=\" {\n\treturn T_SR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"&=\" {\n\treturn T_AND_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"|=\" {\n\treturn T_OR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"^=\" {\n\treturn T_XOR_EQUAL;\n}\n\n<ST_IN_SCRIPTING>\"||\" {\n\treturn T_BOOLEAN_OR;\n}\n\n<ST_IN_SCRIPTING>\"&&\" {\n\treturn T_BOOLEAN_AND;\n}\n\n<ST_IN_SCRIPTING>\"OR\" {\n\treturn T_LOGICAL_OR;\n}\n\n<ST_IN_SCRIPTING>\"AND\" {\n\treturn T_LOGICAL_AND;\n}\n\n<ST_IN_SCRIPTING>\"XOR\" {\n\treturn T_LOGICAL_XOR;\n}\n\n<ST_IN_SCRIPTING>\"<<\" {\n\treturn T_SL;\n}\n\n<ST_IN_SCRIPTING>\">>\" {\n\treturn T_SR;\n}\n\n<ST_IN_SCRIPTING>{TOKENS} {\n\treturn yytext[0];\n}\n\n\n<ST_IN_SCRIPTING>\"{\" {\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn '{';\n}\n\n\n<ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"${\" {\n\tyy_push_state(ST_LOOKING_FOR_VARNAME TSRMLS_CC);\n\treturn T_DOLLAR_OPEN_CURLY_BRACES;\n}\n\n\n<ST_IN_SCRIPTING>\"}\" {\n\tRESET_DOC_COMMENT();\n\tif (!zend_stack_is_empty(&SCNG(state_stack))) {\n\t\tyy_pop_state(TSRMLS_C);\n\t}\n\treturn '}';\n}\n\n\n<ST_LOOKING_FOR_VARNAME>{LABEL} {\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\treturn T_STRING_VARNAME;\n}\n\n\n<ST_LOOKING_FOR_VARNAME>{ANY_CHAR} {\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tgoto restart;\n}\n\n<ST_IN_SCRIPTING>{BNUM} {\n\tchar *bin = yytext + 2; /* Skip \"0b\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*bin == '0') {\n\t\t++bin;\n\t\t--len;\n\t}\n\n\tif (len < SIZEOF_LONG * 8) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(bin, NULL, 2);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_bin_strtod(bin, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n\n<ST_IN_SCRIPTING>{LNUM} {\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1) { /* Won't overflow */\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t} else {\n\t\terrno = 0;\n\t\tzendlval->value.lval = strtol(yytext, NULL, 0);\n\t\tif (errno == ERANGE) { /* Overflow */\n\t\t\tif (yytext[0] == '0') { /* octal overflow */\n\t\t\t\tzendlval->value.dval = zend_oct_strtod(yytext, NULL);\n\t\t\t} else {\n\t\t\t\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\t\t\t}\n\t\t\tzendlval->type = IS_DOUBLE;\n\t\t\treturn T_DNUMBER;\n\t\t}\n\t}\n\n\tzendlval->type = IS_LONG;\n\treturn T_LNUMBER;\n}\n\n<ST_IN_SCRIPTING>{HNUM} {\n\tchar *hex = yytext + 2; /* Skip \"0x\" */\n\tint len = yyleng - 2;\n\n\t/* Skip any leading 0s */\n\twhile (*hex == '0') {\n\t\thex++;\n\t\tlen--;\n\t}\n\n\tif (len < SIZEOF_LONG * 2 || (len == SIZEOF_LONG * 2 && *hex <= '7')) {\n\t\tif (len == 0) {\n\t\t\tzendlval->value.lval = 0;\n\t\t} else {\n\t\t\tzendlval->value.lval = strtol(hex, NULL, 16);\n\t\t}\n\t\tzendlval->type = IS_LONG;\n\t\treturn T_LNUMBER;\n\t} else {\n\t\tzendlval->value.dval = zend_hex_strtod(hex, NULL);\n\t\tzendlval->type = IS_DOUBLE;\n\t\treturn T_DNUMBER;\n\t}\n}\n\n<ST_VAR_OFFSET>[0]|([1-9][0-9]*) { /* Offset could be treated as a long */\n\tif (yyleng < MAX_LENGTH_OF_LONG - 1 || (yyleng == MAX_LENGTH_OF_LONG - 1 && strcmp(yytext, long_min_digits) < 0)) {\n\t\tzendlval->value.lval = strtol(yytext, NULL, 10);\n\t\tzendlval->type = IS_LONG;\n\t} else {\n\t\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_NUM_STRING;\n}\n\n<ST_VAR_OFFSET>{LNUM}|{HNUM}|{BNUM} { /* Offset must be treated as a string */\n\tzendlval->value.str.val = (char *)estrndup(yytext, yyleng);\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\treturn T_NUM_STRING;\n}\n\n<ST_IN_SCRIPTING>{DNUM}|{EXPONENT_DNUM} {\n\tzendlval->value.dval = zend_strtod(yytext, NULL);\n\tzendlval->type = IS_DOUBLE;\n\treturn T_DNUMBER;\n}\n\n<ST_IN_SCRIPTING>\"__CLASS__\" {\n\tconst char *class_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT ==\n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\t/* We create a special __CLASS__ constant that is going to be resolved\n\t\t   at run-time */\n\t\tzendlval->value.str.len = sizeof(\"__CLASS__\")-1;\n\t\tzendlval->value.str.val = estrndup(\"__CLASS__\", zendlval->value.str.len);\n\t\tzendlval->type = IS_CONSTANT;\n\t} else {\n\t\tif (CG(active_class_entry)) {\n\t\t\tclass_name = CG(active_class_entry)->name;\n\t\t}\n\t\t\n\t\tif (!class_name) {\n\t\t\tclass_name = \"\";\n\t\t}\n\t\t\n\t\tzendlval->value.str.len = strlen(class_name);\n\t\tzendlval->value.str.val = estrndup(class_name, zendlval->value.str.len);\n\t\tzendlval->type = IS_STRING;\n\t}\n\treturn T_CLASS_C;\n}\n\n<ST_IN_SCRIPTING>\"__TRAIT__\" {\n\tconst char *trait_name = NULL;\n\t\n\tif (CG(active_class_entry)\n\t\t&& (ZEND_ACC_TRAIT == \n\t\t\t(CG(active_class_entry)->ce_flags & ZEND_ACC_TRAIT))) {\n\t\ttrait_name = CG(active_class_entry)->name;\n\t}\n\t\n\tif (!trait_name) {\n\t\ttrait_name = \"\";\n\t}\n\t\n\tzendlval->value.str.len = strlen(trait_name);\n\tzendlval->value.str.val = estrndup(trait_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\t\n\treturn T_TRAIT_C;\n}\n\n<ST_IN_SCRIPTING>\"__FUNCTION__\" {\n\tconst char *func_name = NULL;\n\n\tif (CG(active_op_array)) {\n\t\tfunc_name = CG(active_op_array)->function_name;\n\t}\n\n\tif (!func_name) {\n\t\tfunc_name = \"\";\n\t}\n\tzendlval->value.str.len = strlen(func_name);\n\tzendlval->value.str.val = estrndup(func_name, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FUNC_C;\n}\n\n<ST_IN_SCRIPTING>\"__METHOD__\" {\n\tconst char *class_name = CG(active_class_entry) ? CG(active_class_entry)->name : NULL;\n\tconst char *func_name = CG(active_op_array)? CG(active_op_array)->function_name : NULL;\n\tsize_t len = 0;\n\n\tif (class_name) {\n\t\tlen += strlen(class_name) + 2;\n\t}\n\tif (func_name) {\n\t\tlen += strlen(func_name);\n\t}\n\n\tzendlval->value.str.len = zend_spprintf(&zendlval->value.str.val, 0, \"%s%s%s\",\n\t\tclass_name ? class_name : \"\",\n\t\tclass_name && func_name ? \"::\" : \"\",\n\t\tfunc_name ? func_name : \"\"\n\t\t);\n\tzendlval->type = IS_STRING;\n\treturn T_METHOD_C;\n}\n\n<ST_IN_SCRIPTING>\"__LINE__\" {\n\tzendlval->value.lval = CG(zend_lineno);\n\tzendlval->type = IS_LONG;\n\treturn T_LINE;\n}\n\n<ST_IN_SCRIPTING>\"__FILE__\" {\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\tzendlval->value.str.len = strlen(filename);\n\tzendlval->value.str.val = estrndup(filename, zendlval->value.str.len);\n\tzendlval->type = IS_STRING;\n\treturn T_FILE;\n}\n\n<ST_IN_SCRIPTING>\"__DIR__\" {\n\tchar *filename = zend_get_compiled_filename(TSRMLS_C);\n\tconst size_t filename_len = strlen(filename);\n\tchar *dirname;\n\n\tif (!filename) {\n\t\tfilename = \"\";\n\t}\n\n\tdirname = estrndup(filename, filename_len);\n\tzend_dirname(dirname, filename_len);\n\n\tif (strcmp(dirname, \".\") == 0) {\n\t\tdirname = erealloc(dirname, MAXPATHLEN);\n#if HAVE_GETCWD\n\t\tVCWD_GETCWD(dirname, MAXPATHLEN);\n#elif HAVE_GETWD\n\t\tVCWD_GETWD(dirname);\n#endif\n\t}\n\n\tzendlval->value.str.len = strlen(dirname);\n\tzendlval->value.str.val = dirname;\n\tzendlval->type = IS_STRING;\n\treturn T_DIR;\n}\n\n<ST_IN_SCRIPTING>\"__NAMESPACE__\" {\n\tif (CG(current_namespace)) {\n\t\t*zendlval = *CG(current_namespace);\n\t\tzval_copy_ctor(zendlval);\n\t} else {\n\t\tZVAL_EMPTY_STRING(zendlval);\n\t}\n\treturn T_NS_C;\n}\n\n<INITIAL>\"<script\"{WHITESPACE}+\"language\"{WHITESPACE}*\"=\"{WHITESPACE}*(\"php\"|\"\\\"php\\\"\"|\"'php'\"){WHITESPACE}*\">\" {\n\tYYCTYPE *bracket = (YYCTYPE*)zend_memrchr(yytext, '<', yyleng - (sizeof(\"script language=php>\") - 1));\n\n\tif (bracket != SCNG(yy_text)) {\n\t\t/* Handle previously scanned HTML, as possible <script> tags found are assumed to not be PHP's */\n\t\tYYCURSOR = bracket;\n\t\tgoto inline_html;\n\t}\n\n\tHANDLE_NEWLINES(yytext, yyleng);\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n\n\n<INITIAL>\"<%=\" {\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG_WITH_ECHO;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n\n<INITIAL>\"<?=\" {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG_WITH_ECHO;\n}\n\n\n<INITIAL>\"<%\" {\n\tif (CG(asp_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n\n<INITIAL>\"<?php\"([ \\t]|{NEWLINE}) {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINE(yytext[yyleng-1]);\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_OPEN_TAG;\n}\n\n\n<INITIAL>\"<?\" {\n\tif (CG(short_tags)) {\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tBEGIN(ST_IN_SCRIPTING);\n\t\treturn T_OPEN_TAG;\n\t} else {\n\t\tgoto inline_char_handler;\n\t}\n}\n\n<INITIAL>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\ninline_char_handler:\n\n\twhile (1) {\n\t\tYYCTYPE *ptr = memchr(YYCURSOR, '<', YYLIMIT - YYCURSOR);\n\n\t\tYYCURSOR = ptr ? ptr + 1 : YYLIMIT;\n\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tswitch (*YYCURSOR) {\n\t\t\t\tcase '?':\n\t\t\t\t\tif (CG(short_tags) || !strncasecmp((char*)YYCURSOR + 1, \"php\", 3) || (*(YYCURSOR + 1) == '=')) { /* Assume [ \\t\\n\\r] follows \"php\" */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase '%':\n\t\t\t\t\tif (CG(asp_tags)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\tcase 's':\n\t\t\t\tcase 'S':\n\t\t\t\t\t/* Probably NOT an opening PHP <script> tag, so don't end the HTML chunk yet\n\t\t\t\t\t * If it is, the PHP <script> tag rule checks for any HTML scanned before it */\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tyymore();\n\t\t\t\tdefault:\n\t\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tYYCURSOR--;\n\t\t}\n\n\t\tbreak;\n\t}\n\ninline_html:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tif (SCNG(output_filter)) {\n\t\tint readsize;\n\t\tsize_t sz = 0;\n\t\treadsize = SCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)yytext, (size_t)yyleng TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tif (readsize < yyleng) {\n\t\t\tyyless(readsize);\n\t\t}\n\t} else {\n\t  zendlval->value.str.val = (char *) estrndup(yytext, yyleng);\n\t  zendlval->value.str.len = yyleng;\n\t}\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng);\n\treturn T_INLINE_HTML;\n}\n\n\n/* Make sure a label character follows \"->\", otherwise there is no property\n * and \"->\" will be taken literally\n */\n<ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"->\"[a-zA-Z_\\x7f-\\xff] {\n\tyyless(yyleng - 3);\n\tyy_push_state(ST_LOOKING_FOR_PROPERTY TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n/* A [ always designates a variable offset, regardless of what follows\n */\n<ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE>\"$\"{LABEL}\"[\" {\n\tyyless(yyleng - 1);\n\tyy_push_state(ST_VAR_OFFSET TSRMLS_CC);\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n<ST_IN_SCRIPTING,ST_DOUBLE_QUOTES,ST_HEREDOC,ST_BACKQUOTE,ST_VAR_OFFSET>\"$\"{LABEL} {\n\tzend_copy_value(zendlval, (yytext+1), (yyleng-1));\n\tzendlval->type = IS_STRING;\n\treturn T_VARIABLE;\n}\n\n<ST_VAR_OFFSET>\"]\" {\n\tyy_pop_state(TSRMLS_C);\n\treturn ']';\n}\n\n<ST_VAR_OFFSET>{TOKENS}|[{}\"`] {\n\t/* Only '[' can be valid, but returning other tokens will allow a more explicit parse error */\n\treturn yytext[0];\n}\n\n<ST_VAR_OFFSET>[ \\n\\r\\t\\\\'#] {\n\t/* Invalid rule to return a more explicit parse error with proper line number */\n\tyyless(0);\n\tyy_pop_state(TSRMLS_C);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n<ST_IN_SCRIPTING,ST_VAR_OFFSET>{LABEL} {\n\tzend_copy_value(zendlval, yytext, yyleng);\n\tzendlval->type = IS_STRING;\n\treturn T_STRING;\n}\n\n\n<ST_IN_SCRIPTING>\"#\"|\"//\" {\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\tCG(zend_lineno)++;\n\t\t\t\tbreak;\n\t\t\tcase '%':\n\t\t\t\tif (!CG(asp_tags)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '?':\n\t\t\t\tif (*YYCURSOR == '>') {\n\t\t\t\t\tYYCURSOR--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\treturn T_COMMENT;\n}\n\n<ST_IN_SCRIPTING>\"/*\"|\"/**\"{WHITESPACE} {\n\tint doc_com;\n\n\tif (yyleng > 2) {\n\t\tdoc_com = 1;\n\t\tRESET_DOC_COMMENT();\n\t} else {\n\t\tdoc_com = 0;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tif (*YYCURSOR++ == '*' && *YYCURSOR == '/') {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t} else {\n\t\tzend_error(E_COMPILE_WARNING, \"Unterminated comment starting line %d\", CG(zend_lineno));\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\tHANDLE_NEWLINES(yytext, yyleng);\n\n\tif (doc_com) {\n\t\tCG(doc_comment) = estrndup(yytext, yyleng);\n\t\tCG(doc_comment_len) = yyleng;\n\t\treturn T_DOC_COMMENT;\n\t}\n\n\treturn T_COMMENT;\n}\n\n<ST_IN_SCRIPTING>(\"?>\"|\"</script\"{WHITESPACE}*\">\"){NEWLINE}? {\n\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\tzendlval->value.str.len = yyleng;\n\tzendlval->type = IS_STRING;\n\tBEGIN(INITIAL);\n\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n}\n\n\n<ST_IN_SCRIPTING>\"%>\"{NEWLINE}? {\n\tif (CG(asp_tags)) {\n\t\tBEGIN(INITIAL);\n\t\tzendlval->value.str.len = yyleng;\n\t\tzendlval->type = IS_STRING;\n\t\tzendlval->value.str.val = yytext; /* no copying - intentional */\n\t\treturn T_CLOSE_TAG;  /* implicit ';' at php-end tag */\n\t} else {\n\t\tyyless(1);\n\t\treturn yytext[0];\n\t}\n}\n\n\n<ST_IN_SCRIPTING>b?['] {\n\tregister char *s, *t;\n\tchar *end;\n\tint bprefix = (yytext[0] != '\\'') ? 1 : 0;\n\n\twhile (1) {\n\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\tif (*YYCURSOR == '\\'') {\n\t\t\t\tYYCURSOR++;\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\t\t\t\tbreak;\n\t\t\t} else if (*YYCURSOR++ == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\t\t\tYYCURSOR++;\n\t\t\t}\n\t\t} else {\n\t\t\tyyleng = YYLIMIT - SCNG(yy_text);\n\n\t\t\t/* Unclosed single quotes; treat similar to double quotes, but without a separate token\n\t\t\t * for ' (unrecognized by parser), instead of old flex fallback to \"Unexpected character...\"\n\t\t\t * rule, which continued in ST_IN_SCRIPTING state after the quote */\n\t\t\treturn T_ENCAPSED_AND_WHITESPACE;\n\t\t}\n\t}\n\n\tzendlval->value.str.val = estrndup(yytext+bprefix+1, yyleng-bprefix-2);\n\tzendlval->value.str.len = yyleng-bprefix-2;\n\tzendlval->type = IS_STRING;\n\n\t/* convert escape sequences */\n\ts = t = zendlval->value.str.val;\n\tend = s+zendlval->value.str.len;\n\twhile (s<end) {\n\t\tif (*s=='\\\\') {\n\t\t\ts++;\n\n\t\t\tswitch(*s) {\n\t\t\t\tcase '\\\\':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tzendlval->value.str.len--;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t*t++ = '\\\\';\n\t\t\t\t\t*t++ = *s;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t*t++ = *s;\n\t\t}\n\n\t\tif (*s == '\\n' || (*s == '\\r' && (*(s+1) != '\\n'))) {\n\t\t\tCG(zend_lineno)++;\n\t\t}\n\t\ts++;\n\t}\n\t*t = 0;\n\n\tif (SCNG(output_filter)) {\n\t\tsize_t sz = 0;\n\t\ts = zendlval->value.str.val;\n\t\tSCNG(output_filter)((unsigned char **)&(zendlval->value.str.val), &sz, (unsigned char *)s, (size_t)zendlval->value.str.len TSRMLS_CC);\n\t\tzendlval->value.str.len = sz;\n\t\tefree(s);\n\t}\n\treturn T_CONSTANT_ENCAPSED_STRING;\n}\n\n\n<ST_IN_SCRIPTING>b?[\"] {\n\tint bprefix = (yytext[0] != '\"') ? 1 : 0;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tyyleng = YYCURSOR - SCNG(yy_text);\n\t\t\t\tzend_scan_escape_string(zendlval, yytext+bprefix+1, yyleng-bprefix-2, '\"' TSRMLS_CC);\n\t\t\t\treturn T_CONSTANT_ENCAPSED_STRING;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\t/* Remember how much was scanned to save rescanning */\n\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(YYCURSOR - SCNG(yy_text) - yyleng);\n\n\tYYCURSOR = SCNG(yy_text) + yyleng;\n\n\tBEGIN(ST_DOUBLE_QUOTES);\n\treturn '\"';\n}\n\n\n<ST_IN_SCRIPTING>b?\"<<<\"{TABS_AND_SPACES}({LABEL}|([']{LABEL}['])|([\"]{LABEL}[\"])){NEWLINE} {\n\tchar *s;\n\tint bprefix = (yytext[0] != '<') ? 1 : 0;\n\n\t/* save old heredoc label */\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\n\tCG(zend_lineno)++;\n\tCG(heredoc_len) = yyleng-bprefix-3-1-(yytext[yyleng-2]=='\\r'?1:0);\n\ts = yytext+bprefix+3;\n\twhile ((*s == ' ') || (*s == '\\t')) {\n\t\ts++;\n\t\tCG(heredoc_len)--;\n\t}\n\n\tif (*s == '\\'') {\n\t\ts++;\n\t\tCG(heredoc_len) -= 2;\n\n\t\tBEGIN(ST_NOWDOC);\n\t} else {\n\t\tif (*s == '\"') {\n\t\t\ts++;\n\t\t\tCG(heredoc_len) -= 2;\n\t\t}\n\n\t\tBEGIN(ST_HEREDOC);\n\t}\n\n\tCG(heredoc) = estrndup(s, CG(heredoc_len));\n\n\t/* Check for ending label on the next line */\n\tif (CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, s, CG(heredoc_len))) {\n\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\tif (*end == ';') {\n\t\t\tend++;\n\t\t}\n\n\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\tBEGIN(ST_END_HEREDOC);\n\t\t}\n\t}\n\n\treturn T_START_HEREDOC;\n}\n\n\n<ST_IN_SCRIPTING>[`] {\n\tBEGIN(ST_BACKQUOTE);\n\treturn '`';\n}\n\n\n<ST_END_HEREDOC>{ANY_CHAR} {\n\tYYCURSOR += CG(heredoc_len) - 1;\n\tyyleng = CG(heredoc_len);\n\n\tZ_STRVAL_P(zendlval) = CG(heredoc);\n\tZ_STRLEN_P(zendlval) = CG(heredoc_len);\n\tCG(heredoc) = NULL;\n\tCG(heredoc_len) = 0;\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn T_END_HEREDOC;\n}\n\n\n<ST_DOUBLE_QUOTES,ST_BACKQUOTE,ST_HEREDOC>\"{$\" {\n\tzendlval->value.lval = (long) '{';\n\tyy_push_state(ST_IN_SCRIPTING TSRMLS_CC);\n\tyyless(1);\n\treturn T_CURLY_OPEN;\n}\n\n\n<ST_DOUBLE_QUOTES>[\"] {\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '\"';\n}\n\n<ST_BACKQUOTE>[`] {\n\tBEGIN(ST_IN_SCRIPTING);\n\treturn '`';\n}\n\n\n<ST_DOUBLE_QUOTES>{ANY_CHAR} {\n\tif (GET_DOUBLE_QUOTES_SCANNED_LENGTH()) {\n\t\tYYCURSOR += GET_DOUBLE_QUOTES_SCANNED_LENGTH() - 1;\n\t\tSET_DOUBLE_QUOTES_SCANNED_LENGTH(0);\n\n\t\tgoto double_quotes_scan_done;\n\t}\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\"':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\ndouble_quotes_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '\"' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_BACKQUOTE>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\tif (yytext[0] == '\\\\' && YYCURSOR < YYLIMIT) {\n\t\tYYCURSOR++;\n\t}\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '`':\n\t\t\t\tbreak;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT) {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng, '`' TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_HEREDOC>{ANY_CHAR} {\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto heredoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '$':\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) || *YYCURSOR == '{') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '{':\n\t\t\t\tif (*YYCURSOR == '$') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase '\\\\':\n\t\t\t\tif (YYCURSOR < YYLIMIT && *YYCURSOR != '\\n' && *YYCURSOR != '\\r') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\n\t\tYYCURSOR--;\n\t\tbreak;\n\t}\n\nheredoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_scan_escape_string(zendlval, yytext, yyleng - newline, 0 TSRMLS_CC);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_NOWDOC>{ANY_CHAR} {\n\tint newline = 0;\n\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tYYCURSOR--;\n\n\twhile (YYCURSOR < YYLIMIT) {\n\t\tswitch (*YYCURSOR++) {\n\t\t\tcase '\\r':\n\t\t\t\tif (*YYCURSOR == '\\n') {\n\t\t\t\t\tYYCURSOR++;\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tcase '\\n':\n\t\t\t\t/* Check for ending label on the next line */\n\t\t\t\tif (IS_LABEL_START(*YYCURSOR) && CG(heredoc_len) < YYLIMIT - YYCURSOR && !memcmp(YYCURSOR, CG(heredoc), CG(heredoc_len))) {\n\t\t\t\t\tYYCTYPE *end = YYCURSOR + CG(heredoc_len);\n\n\t\t\t\t\tif (*end == ';') {\n\t\t\t\t\t\tend++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (*end == '\\n' || *end == '\\r') {\n\t\t\t\t\t\t/* newline before label will be subtracted from returned text, but\n\t\t\t\t\t\t * yyleng/yytext will include it, for zend_highlight/strip, tokenizer, etc. */\n\t\t\t\t\t\tif (YYCURSOR[-2] == '\\r' && YYCURSOR[-1] == '\\n') {\n\t\t\t\t\t\t\tnewline = 2; /* Windows newline */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewline = 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tCG(increment_lineno) = 1; /* For newline before label */\n\t\t\t\t\t\tBEGIN(ST_END_HEREDOC);\n\n\t\t\t\t\t\tgoto nowdoc_scan_done;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* fall through */\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t}\n\nnowdoc_scan_done:\n\tyyleng = YYCURSOR - SCNG(yy_text);\n\n\tzend_copy_value(zendlval, yytext, yyleng - newline);\n\tzendlval->type = IS_STRING;\n\tHANDLE_NEWLINES(yytext, yyleng - newline);\n\treturn T_ENCAPSED_AND_WHITESPACE;\n}\n\n\n<ST_IN_SCRIPTING,ST_VAR_OFFSET>{ANY_CHAR} {\n\tif (YYCURSOR > YYLIMIT) {\n\t\treturn 0;\n\t}\n\n\tzend_error(E_COMPILE_WARNING,\"Unexpected character in input:  '%c' (ASCII=%d) state=%d\", yytext[0], yytext[0], YYSTATE);\n\tgoto restart;\n}\n\n*/\n}\n"], "buggy_code_start_loc": [6, 1, 1, 586], "buggy_code_end_loc": [27, 2, 764, 762], "fixing_code_start_loc": [7, 1, 1, 586], "fixing_code_end_loc": [29, 12, 764, 762], "type": "CWE-20", "message": "** DISPUTED ** The Zend Engine in PHP before 5.4.16 RC1, and 5.5.0 before RC2, does not properly determine whether a parser error occurred, which allows context-dependent attackers to cause a denial of service (memory consumption and application crash) via a crafted function definition, as demonstrated by an attack within a shared web-hosting environment.  NOTE: the vendor's http://php.net/security-note.php page says \"for critical security situations you should be using OS-level security by running multiple web servers each as their own user id.\"", "other": {"cve": {"id": "CVE-2013-3735", "sourceIdentifier": "cve@mitre.org", "published": "2013-05-31T21:55:01.230", "lastModified": "2013-06-03T04:00:00.000", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "** DISPUTED ** The Zend Engine in PHP before 5.4.16 RC1, and 5.5.0 before RC2, does not properly determine whether a parser error occurred, which allows context-dependent attackers to cause a denial of service (memory consumption and application crash) via a crafted function definition, as demonstrated by an attack within a shared web-hosting environment.  NOTE: the vendor's http://php.net/security-note.php page says \"for critical security situations you should be using OS-level security by running multiple web servers each as their own user id.\""}, {"lang": "es", "value": "** EN DISPUTA ** El Zend Engine en PHP anterior a v5.4.16 RC1, y v5.5.0 anterior a RC2, no determina de forma precisa si ocurre un error del analizador sint\u00e1ctica, lo que permite a atacantes dependiendo del contexto provocar una denegaci\u00f3n de servicio (consumo de memoria y ca\u00edda de la aplicaci\u00f3n) a trav\u00e9s de una definici\u00f3n de una funci\u00f3n manipulada, como se demostr\u00f3 por un ataque en un entorno de alojamiento Web. NOTA: la p\u00e1gina http://php.net/security-note.php del distribuidor dice \"para situaciones cr\u00edticas de seguridad deber\u00eda usar seguridad a nivel de sistema operativo\" ejecutando m\u00faltipls servidores, cada uno con su propia ID.\""}], "metrics": {"cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:rc1:*:*:*:*:*:*", "versionEndIncluding": "5.4.15", "matchCriteriaId": "E16F8866-A969-4C31-A5FF-32D4DEE24C91"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.0:*:*:*:*:*:*:*", "matchCriteriaId": "E7B9B8D2-78B7-4B17-955B-741C7A6F6634"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.1:*:*:*:*:*:*:*", "matchCriteriaId": "5CA2A940-BD69-4D35-AF12-432CB929248B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.2:*:*:*:*:*:*:*", "matchCriteriaId": "29BD13F9-86C8-44C4-A860-9A87870A518E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.3:*:*:*:*:*:*:*", "matchCriteriaId": "1B361FDE-9F6A-4E9A-96F1-619DC56EECB6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.4:*:*:*:*:*:*:*", "matchCriteriaId": "3DBD9E7B-1237-47A8-8A07-5CC5246A9C5A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.5:*:*:*:*:*:*:*", "matchCriteriaId": "6F2BB41E-2096-4291-B0ED-06825FDFE8BF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.6:*:*:*:*:*:*:*", "matchCriteriaId": "52BA94F7-1AF9-415C-AC21-30BC25C74C5D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.7:*:*:*:*:*:*:*", "matchCriteriaId": "D0A739A0-698A-422B-886B-430A79F6E945"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.8:*:*:*:*:*:*:*", "matchCriteriaId": "086E0D24-A43E-4CEA-9FB0-FE193B88CC31"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.9:*:*:*:*:*:*:*", "matchCriteriaId": "EC8D0963-8CA5-4814-9B6D-4E1C3907737B"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.10:*:*:*:*:*:*:*", "matchCriteriaId": "77A4B7E0-C872-4E53-AD72-1BB2755E4FDA"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.11:*:*:*:*:*:*:*", "matchCriteriaId": "EECCD553-53D5-485E-8C21-E2A5070833B2"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.12:*:*:*:*:*:*:*", "matchCriteriaId": "95357C79-A754-4E0C-B65B-0FA241962B12"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.12:rc1:*:*:*:*:*:*", "matchCriteriaId": "25EAF9A9-F7A1-4AC7-BCFD-769BE0FDB537"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.12:rc2:*:*:*:*:*:*", "matchCriteriaId": "74EA8037-7C22-48B3-9FA2-4BFFFFD513D1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.13:*:*:*:*:*:*:*", "matchCriteriaId": "C8D1254E-0C72-4958-BA7F-5B818C3ACB15"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.13:rc1:*:*:*:*:*:*", "matchCriteriaId": "92994FFC-F362-48AC-9CA8-8EBCAC880C91"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.14:*:*:*:*:*:*:*", "matchCriteriaId": "21131DF1-1EE5-4C84-B1E0-FA75BC39B344"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.4.14:rc1:*:*:*:*:*:*", "matchCriteriaId": "0B23F85D-465B-4176-9798-E78AADE421EC"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:php:php:*:rc1:*:*:*:*:*:*", "versionEndIncluding": "5.5.0", "matchCriteriaId": "F3004D4C-C790-4422-9FF8-9F7C5ADA808C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha1:*:*:*:*:*:*", "matchCriteriaId": "3D25E591-448C-4E3B-8557-6E48F7571796"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha2:*:*:*:*:*:*", "matchCriteriaId": "6DA18F3F-B4B5-40C3-BF19-67C1F0C1787D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha3:*:*:*:*:*:*", "matchCriteriaId": "3AF783C9-26E7-4E02-BD41-77B9783667E3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha4:*:*:*:*:*:*", "matchCriteriaId": "EF49701D-ECE4-4CEB-BDAB-24C09C8AD4B4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha5:*:*:*:*:*:*", "matchCriteriaId": "7AEDF6F7-001D-4A35-A26F-417991AD377F"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:alpha6:*:*:*:*:*:*", "matchCriteriaId": "4031DB99-B4B4-41EC-B3C1-543D92C575A9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:beta1:*:*:*:*:*:*", "matchCriteriaId": "D5450EA7-A398-49D2-AA8E-7C95B074BAB1"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:beta2:*:*:*:*:*:*", "matchCriteriaId": "04FE0E4E-BC94-4DC9-BE9B-DC57B952B2FB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:beta3:*:*:*:*:*:*", "matchCriteriaId": "BB8E09D8-9CBE-4279-88B7-24A214A5A537"}, {"vulnerable": true, "criteria": "cpe:2.3:a:php:php:5.5.0:beta4:*:*:*:*:*:*", "matchCriteriaId": "2D41ECCE-887D-49A2-9BB3-B559495AC55B"}]}]}], "references": [{"url": "https://bugs.php.net/bug.php?id=64660", "source": "cve@mitre.org"}, {"url": "https://github.com/php/php-src/blob/php-5.4.16RC1/NEWS", "source": "cve@mitre.org"}, {"url": "https://github.com/php/php-src/blob/php-5.5.0RC2/NEWS", "source": "cve@mitre.org"}, {"url": "https://github.com/php/php-src/commit/fb58e69a84f4fde603a630d2c9df2fa3be16d846", "source": "cve@mitre.org", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/php/php-src/commit/fb58e69a84f4fde603a630d2c9df2fa3be16d846"}}