9a4c4e079	ceb91b42f	Mon Mar 20 14:33:57 2023 +0000	tp: fix crashes when parsing invalid traces	commit 9a4c4e079e902316ec66573a7fc5acfe2f069b33Author: Lalit Maganti <lalitm@google.com>Date:   Mon Mar 20 14:33:57 2023 +0000    tp: fix crashes when parsing invalid traces        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=56225    Change-Id: I55172f0962d1e5098fa84405db9db53dccb4980c
32b6f5f5a	89c02bcf6	Mon Jun 27 12:30:36 2022 +0100	tp: fix crash by not freeing events	commit 32b6f5f5a3ea16111651d5c533124d02b274a43dAuthor: Lalit Maganti <lalitm@google.com>Date:   Mon Jun 27 12:30:36 2022 +0100    tp: fix crash by not freeing events        If int max was passed as the timestamp, we would accidentially not flush    it but clear the queues.        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=48216    Change-Id: Ie80f06e135e0563b5cfe25b06ef76686c4409d97
525262d6a	1fbe427b4	Tue May 25 15:13:45 2021 +0100	Fix shared ring buffer write fuzzer.	commit 525262d6a305e034a1d9105e77c2ff4c8acc3eb3Author: Florian Mayer <fmayer@google.com>Date:   Tue May 25 15:13:45 2021 +0100    Fix shared ring buffer write fuzzer.        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31645    Change-Id: I23c34bbe8bde62848b96fc1f539c2ce9f0d435d3
5fd859d09	507ccb854	Mon Apr 12 12:45:06 2021 +0000	Fix shared_ring_buffer_fuzzer.	commit 5fd859d098f75ee80624ef032deab1ac33413c8bAuthor: Florian Mayer <fmayer@google.com>Date:   Mon Apr 12 13:09:12 2021 +0100    Fix shared_ring_buffer_fuzzer.        We need to force the spinlock to be unpoisoned in order to make    progress.        Also change type of spinlock bools, to avoid undefined behaviour induced    by a misbehaving client. It is unlikely to make a difference in    practice.        Bug: 185105016    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31646    Change-Id: I89977389b36940b45e88e8482b05f8cb01bcc097
f2d015349	17fea3e29	Wed Jan 27 14:21:33 2021 +0000	Fix OSSFuzz build	commit f2d015349a7dfa75619a2fdcd841806b0a099c79Author: Florian Mayer <fmayer@google.com>Date:   Wed Jan 27 13:27:35 2021 +0000    Fix OSSFuzz build        Test: python infra/helper.py build_fuzzers --sanitizer address perfetto          in oss-fuzz repo with patch to perfetto applied.    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29820    Change-Id: I6c814014ef841cc873c444190bea69ad553d9f9b
23280234a	c65f224a7	Mon Dec 21 12:35:27 2020 +0000	processor: Fix a stack overflow in memory snapshot parsing	commit 23280234a3ee0ef4b96c11b31d57a9575142f1e4Author: Eric Seckler <eseckler@google.com>Date:   Mon Dec 21 11:59:37 2020 +0000    processor: Fix a stack overflow in memory snapshot parsing        Check for existence of the referenced nodes in the node_id_map before    dereferencing the iterator's value.            Bug: oss-fuzz:28766    Change-Id: I40da9230d763d7fc26dd421aa28547cba37cef6e
32e5d6080	c203e8dfc	Mon Dec 7 13:57:45 2020 +0000	processor: Fix memory leak in MemoryTrackerSnapshotParser	commit 32e5d6080edfffaa4aa2fd55e6ab6c3fc088734cAuthor: Eric Seckler <eseckler@google.com>Date:   Mon Dec 7 13:25:45 2020 +0000    processor: Fix memory leak in MemoryTrackerSnapshotParser        std::map::emplace() will not construct the unique_ptr from the passed    raw pointer if the key already exists in the map. Use insert() with a    std::move()d unique_ptr instead to avoid the leak.        Bug: oss-fuzz:28338    Change-Id: I043cf6e50e1ec6dc728f3bfb907ed437bdd29550
8034867d9	3039024ba	Tue Jul 7 13:03:45 2020 +0100	Fix ASAN failure in clock tracker.	commit 8034867d9d28f6aa77ecfd7a25be9f91779c9c4fAuthor: Florian Mayer <fmayer@google.com>Date:   Tue Jul 7 13:03:45 2020 +0100    Fix ASAN failure in clock tracker.        Bug: https://crbug.com/oss-fuzz/23149    Change-Id: Idc731f2c02523a98febd2a2623011a0c4cc78385
03fcfdd74	bed1eba70	Tue Apr 28 11:54:58 2020 +0100	processor: Fix a potential use-after-free	commit 03fcfdd74f97bb8b055fa4e47cd03203568a238eAuthor: Eric Seckler <eseckler@google.com>Date:   Tue Apr 28 11:54:58 2020 +0100    processor: Fix a potential use-after-free        Make sure that the raw pointer to descendents_uuids is reset when the    owned vector is freed.        Bug: oss-fuzz:21908    Change-Id: I85e35e78dc20e2e2482e376f8a69a0417852dcc1
e5a041472	713f4f709	Mon Apr 27 12:08:05 2020 +0100	processor: Fix another clusterfuzz-found recursion bug in Track parsing	commit e5a041472ebe8e99532d0dfdcc8970bf4714ee19Author: Eric Seckler <eseckler@google.com>Date:   Mon Apr 27 12:08:05 2020 +0100    processor: Fix another clusterfuzz-found recursion bug in Track parsing        Another potential stack overflow in logic to resolve descriptor tracks.        Bug: oss-fuzz:21890    Change-Id: I8bf5b546247e0f997e506c8ac4928a5def466bcf
9ccafbccc	303f8107a	Thu Apr 23 14:43:22 2020 +0000	processor: Fix 3 clusterfuzz-found issues related to TrackEvent parsing	commit 9ccafbccc8794b7d8973919939878af64e81f7cfAuthor: Eric Seckler <eseckler@google.com>Date:   Thu Apr 23 14:32:54 2020 +0100    processor: Fix 3 clusterfuzz-found issues related to TrackEvent parsing        This includes fixes for these bugs:    1) Crashes on invalid proto enum field values in TrackEventParser.    2) Stack overflows in descriptor track resolution.    3) Nullpointer exceptions when accessing TrackEventDefaults when they       are not present in the trace.        Bug: oss-fuzz:20215, oss-fuzz:20292, oss-fuzz:21178    Change-Id: I9b365440371d81892532a9d95561804d160c3829
5a942740b	860c51019	Sun Jun 9 09:34:56 2019 +0000	trace_processor: fix asan leak in gzip decoding	commit 5a942740b931ddbd8681c617f56b0a041d43b725Author: Lalit Maganti <lalitm@google.com>Date:   Fri Jun 7 11:57:57 2019 +0100    trace_processor: fix asan leak in gzip decoding        Change-Id: I5a94bfde5d56d9e9b74a1c9025993011946a4264    Bug: oss-fuzz:15161
52642ce6d	04c79fa7b	Thu Mar 7 15:31:11 2019 +0000	trace_processor: Fix large cpu oom	commit 52642ce6d2cc8afd36d9f8a32a734a2cec040643Author: Hector Dearman <hjd@google.com>Date:   Thu Mar 7 15:31:11 2019 +0000    trace_processor: Fix large cpu oom        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13329    Change-Id: I9ffbfbfdd85737c9f3861fc72377ffbf64a3fc2b
04c79fa7b	c854c371c	Thu Mar 7 14:56:49 2019 +0000	trace_processor: Fix overflow in print evt parser	commit 04c79fa7b86422528f4a3c7500df7d8af0283197Author: Hector Dearman <hjd@google.com>Date:   Thu Mar 7 14:56:49 2019 +0000    trace_processor: Fix overflow in print evt parser        This fixes a bug identified by the trace_processor_fuzzer.        Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=13481    Change-Id: Ie3acda7f45d24d3fb253ec917a585b2b1b0edb0c
