diff --git a/autotest/gcore/data/int12_ycbcr_contig.tif b/autotest/gcore/data/int12_ycbcr_contig.tif
new file mode 100644
index 0000000000..8d1b758703
Binary files /dev/null and b/autotest/gcore/data/int12_ycbcr_contig.tif differ
diff --git a/autotest/gcore/tiff_read.py b/autotest/gcore/tiff_read.py
index 1e626331a2..1be5064699 100755
--- a/autotest/gcore/tiff_read.py
+++ b/autotest/gcore/tiff_read.py
@@ -2803,6 +2803,19 @@ def tiff_read_ycbcr_lzw():
 
     return 'success'
 
+###############################################################################
+# Test reading YCbCr images with nbits > 8
+
+def tiff_read_ycbcr_int12():
+
+    with gdaltest.error_handler():
+        ds = gdal.Open('data/int12_ycbcr_contig.tif')
+    if gdal.GetLastErrorMsg().find('Cannot open TIFF file with') < 0:
+        print(gdal.GetLastErrorMsg())
+        return 'fail'
+
+    return 'success'
+
 ###############################################################################
 # Test reading band unit from VERT_CS unit (#6675)
 
@@ -3148,6 +3161,7 @@ gdaltest_list.append( (tiff_read_jpeg_cloud_optimized) )
 gdaltest_list.append( (tiff_read_corrupted_jpeg_cloud_optimized) )
 
 gdaltest_list.append( (tiff_read_ycbcr_lzw) )
+gdaltest_list.append( (tiff_read_ycbcr_int12) )
 
 gdaltest_list.append( (tiff_read_unit_from_srs) )
 gdaltest_list.append( (tiff_read_arcgis93_geodataxform_gcp) )
diff --git a/gdal/frmts/gtiff/geotiff.cpp b/gdal/frmts/gtiff/geotiff.cpp
index a5aca748b3..b01f026406 100644
--- a/gdal/frmts/gtiff/geotiff.cpp
+++ b/gdal/frmts/gtiff/geotiff.cpp
@@ -12911,6 +12911,25 @@ CPLErr GTiffDataset::OpenOffset( TIFF *hTIFFIn,
         return CE_Failure;
     }
 
+    // If photometric is YCbCr, scanline/strip/tile interfaces assumes that
+    // we are ready with downsampled data. And we are not.
+    if( nCompression != COMPRESSION_JPEG &&
+        nCompression != COMPRESSION_OJPEG &&
+        nPhotometric == PHOTOMETRIC_YCBCR &&
+        nPlanarConfig == PLANARCONFIG_CONTIG &&
+        !bTreatAsRGBA )
+    {
+        uint16 nF1, nF2;
+        TIFFGetFieldDefaulted(hTIFF,TIFFTAG_YCBCRSUBSAMPLING,&nF1,&nF2);
+        if( nF1 != 1 || nF2 != 1 )
+        {
+            CPLError( CE_Failure, CPLE_AppDefined,
+                      "Cannot open TIFF file with YCbCr, subsampling and "
+                      "BitsPerSample > 8 that is not JPEG compressed" );
+            return CE_Failure;
+        }
+    }
+
 /* -------------------------------------------------------------------- */
 /*      Should we treat this via the split interface?                   */
 /* -------------------------------------------------------------------- */
