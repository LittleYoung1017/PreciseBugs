diff --git a/splash/Splash.cc b/splash/Splash.cc
index a020c749..584e65c7 100644
--- a/splash/Splash.cc
+++ b/splash/Splash.cc
@@ -5844,7 +5844,9 @@ SplashPath *Splash::makeStrokePath(SplashPath *path, SplashCoord w, bool flatten
         wdy = (SplashCoord)0.5 * w * dy;
 
         // draw the start cap
-        pathOut->moveTo(pathIn->pts[i0].x - wdy, pathIn->pts[i0].y + wdx);
+        if (pathOut->moveTo(pathIn->pts[i0].x - wdy, pathIn->pts[i0].y + wdx) != splashOk) {
+            break;
+        }
         if (i0 == subpathStart0) {
             firstPt = pathOut->length - 1;
         }
diff --git a/splash/SplashPath.cc b/splash/SplashPath.cc
index 33216cfb..7c7e8523 100644
--- a/splash/SplashPath.cc
+++ b/splash/SplashPath.cc
@@ -196,7 +196,10 @@ SplashError SplashPath::close(bool force)
         return splashErrNoCurPt;
     }
     if (force || curSubpath == length - 1 || pts[length - 1].x != pts[curSubpath].x || pts[length - 1].y != pts[curSubpath].y) {
-        lineTo(pts[curSubpath].x, pts[curSubpath].y);
+        const auto lineToStatus = lineTo(pts[curSubpath].x, pts[curSubpath].y);
+        if (lineToStatus != splashOk) {
+            return lineToStatus;
+        }
     }
     flags[curSubpath] |= splashPathClosed;
     flags[length - 1] |= splashPathClosed;
@@ -208,7 +211,10 @@ void SplashPath::addStrokeAdjustHint(int ctrl0, int ctrl1, int firstPt, int last
 {
     if (hintsLength == hintsSize) {
         hintsSize = hintsLength ? 2 * hintsLength : 8;
-        hints = (SplashPathHint *)greallocn(hints, hintsSize, sizeof(SplashPathHint));
+        hints = (SplashPathHint *)greallocn_checkoverflow(hints, hintsSize, sizeof(SplashPathHint));
+    }
+    if (unlikely(!hints)) {
+        return;
     }
     hints[hintsLength].ctrl0 = ctrl0;
     hints[hintsLength].ctrl1 = ctrl1;
