diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlfeatureclass.cpp b/gdal/ogr/ogrsf_frmts/gml/gmlfeatureclass.cpp
index 77064294c3..9bacb2bc69 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlfeatureclass.cpp
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlfeatureclass.cpp
@@ -99,6 +99,7 @@ void GMLFeatureClass::StealProperties()
     m_nPropertyCount = 0;
     CPLFree(m_papoProperty);
     m_papoProperty = nullptr;
+    m_oMapPropertyNameToIndex.clear();
 }
 
 /************************************************************************/
@@ -142,9 +143,9 @@ GMLPropertyDefn *GMLFeatureClass::GetProperty( int iIndex ) const
 int GMLFeatureClass::GetPropertyIndex( const char *pszName ) const
 
 {
-    for( int i = 0; i < m_nPropertyCount; i++ )
-        if( EQUAL(pszName, m_papoProperty[i]->GetName()) )
-            return i;
+    auto oIter = m_oMapPropertyNameToIndex.find(CPLString(pszName).toupper());
+    if( oIter != m_oMapPropertyNameToIndex.end() )
+        return oIter->second;
 
     return -1;
 }
@@ -186,6 +187,8 @@ int GMLFeatureClass::AddProperty( GMLPropertyDefn *poDefn )
         CPLRealloc(m_papoProperty, sizeof(void *) * m_nPropertyCount));
 
     m_papoProperty[m_nPropertyCount - 1] = poDefn;
+    m_oMapPropertyNameToIndex[ CPLString(poDefn->GetName()).toupper() ] =
+        m_nPropertyCount - 1;
 
     return m_nPropertyCount - 1;
 }
diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp b/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
index f3cd7ba461..e66ee1573c 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
@@ -1066,9 +1066,17 @@ void GMLReader::SetFeaturePropertyDirectly( const char *pszElement,
                 osFieldName[nPos] = '_';
 
             // Does this conflict with an existing property name?
-            while( poClass->GetProperty(osFieldName) != nullptr )
+            for( int i = 0; poClass->GetProperty(osFieldName) != nullptr; i++ )
             {
                 osFieldName += "_";
+                if( i == 10 )
+                {
+                    CPLDebug("GML",
+                             "Too many conflicting property names : %s.",
+                             osFieldName.c_str());
+                    CPLFree(pszValue);
+                    return;
+                }
             }
 
             GMLPropertyDefn *poPDefn =
diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlreader.h b/gdal/ogr/ogrsf_frmts/gml/gmlreader.h
index af81701df3..b3577df263 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlreader.h
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlreader.h
@@ -36,6 +36,7 @@
 #include "cpl_minixml.h"
 #include "gmlutils.h"
 
+#include <map>
 #include <vector>
 
 // Special value to map to a NULL field
@@ -152,6 +153,7 @@ class CPL_DLL GMLFeatureClass
     int          n_nElementNameLen;
     int         m_nPropertyCount;
     GMLPropertyDefn **m_papoProperty;
+    std::map<CPLString, int> m_oMapPropertyNameToIndex;
 
     int         m_nGeometryPropertyCount;
     GMLGeometryPropertyDefn **m_papoGeometryProperty;
