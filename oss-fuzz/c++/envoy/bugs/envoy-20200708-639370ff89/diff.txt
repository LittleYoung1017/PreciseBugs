diff --git a/tools/deprecate_version/deprecate_version.py b/tools/deprecate_version/deprecate_version.py
index 6129ae585f..9cbde12378 100644
--- a/tools/deprecate_version/deprecate_version.py
+++ b/tools/deprecate_version/deprecate_version.py
@@ -90,17 +90,22 @@ def CreateIssues(access_token, runtime_and_pr):
       login = search_user[0].login if search_user else None
 
     title = '%s deprecation' % (runtime_guard)
-    body = ('%s (%s) introduced a runtime guarded feature. This issue '
-            'tracks source code cleanup.') % (number, change_title)
+    body = ('Your change %s (%s) introduced a runtime guarded feature. It has been 6 months since '
+            'the new code has been exercised by default, so it\'s time to remove the old code '
+            'path. This issue tracks source code cleanup so we don\'t forget.') % (number,
+                                                                                   change_title)
 
     print(title)
     print(body)
     print('  >> Assigning to %s' % (login or email))
+    search_title = '%s in:title' % title
 
     # TODO(htuch): Figure out how to do this without legacy and faster.
-    exists = repo.legacy_search_issues('open', '"%s"' % title) or repo.legacy_search_issues(
-        'closed', '"%s"' % title)
+    exists = repo.legacy_search_issues('open', search_title) or repo.legacy_search_issues(
+        'closed', search_title)
     if exists:
+      print("Issue with %s already exists" % search_title)
+      print(exists)
       print('  >> Issue already exists, not posting!')
     else:
       issues.append((title, body, login))
