diff --git a/gdal/ogr/ogrpgeogeometry.cpp b/gdal/ogr/ogrpgeogeometry.cpp
index fa24cdf07c..7b9940b163 100644
--- a/gdal/ogr/ogrpgeogeometry.cpp
+++ b/gdal/ogr/ogrpgeogeometry.cpp
@@ -1763,7 +1763,7 @@ static OGRCurve* OGRShapeCreateCompoundCurve( int nPartStartIdx,
                                               /* const */ double* padfM,
                                               int* pnLastCurveIdx )
 {
-    OGRCompoundCurve* poCC = new OGRCompoundCurve();
+    auto poCC = std::unique_ptr<OGRCompoundCurve>(new OGRCompoundCurve());
     int nLastPointIdx = nPartStartIdx;
     bool bHasCircularArcs = false;
     int i = nFirstCurveIdx;  // Used after for.
@@ -1849,7 +1849,11 @@ static OGRCurve* OGRShapeCreateCompoundCurve( int nPartStartIdx,
                 poCS->addPoint( &p3 );
                 poCS->set3D( padfZ != nullptr );
                 poCS->setMeasured( padfM != nullptr );
-                poCC->addCurveDirectly(poCS);
+                if( poCC->addCurveDirectly(poCS) != OGRERR_NONE )
+                {
+                    delete poCS;
+                    return nullptr;
+                }
             }
         }
 
@@ -1954,7 +1958,10 @@ static OGRCurve* OGRShapeCreateCompoundCurve( int nPartStartIdx,
             poLine->set3D( padfZ != nullptr );
             poLine->setMeasured( padfM != nullptr );
             if( poCC->addCurveDirectly(poLine) != OGRERR_NONE )
+            {
                 delete poLine;
+                return nullptr;
+            }
         }
 
         else if( pasCurves[i].eType == CURVE_ELLIPSE_BY_CENTER &&
@@ -2075,14 +2082,15 @@ static OGRCurve* OGRShapeCreateCompoundCurve( int nPartStartIdx,
         if( poCC->addCurveDirectly(poLine) != OGRERR_NONE )
         {
             delete poLine;
+            return nullptr;
         }
     }
 
     if( !bHasCircularArcs )
         return reinterpret_cast<OGRCurve*>(OGR_G_ForceTo(
-            reinterpret_cast<OGRGeometryH>(poCC), wkbLineString, nullptr));
+            reinterpret_cast<OGRGeometryH>(poCC.release()), wkbLineString, nullptr));
     else
-        return poCC;
+        return poCC.release();
 }
 
 /************************************************************************/
@@ -2703,10 +2711,13 @@ OGRErr OGRCreateFromShapeBin( GByte *pabyShape,
                                 pasCurves, nCurves, iCurveIdx,
                                 padfX, padfY, bHasZ ? padfZ : nullptr, padfM,
                                 &iCurveIdx);
-                        if( poMulti->addGeometryDirectly(poCurve) !=
+                        if( poCurve == nullptr ||
+                            poMulti->addGeometryDirectly(poCurve) !=
                                                                 OGRERR_NONE )
                         {
                             delete poCurve;
+                            delete poMulti;
+                            *ppoGeom = nullptr;
                         }
                     }
                 }
@@ -2756,7 +2767,8 @@ OGRErr OGRCreateFromShapeBin( GByte *pabyShape,
                         panPartStart[0], nVerticesInThisPart,
                         pasCurves, nCurves, 0,
                         padfX, padfY, bHasZ ? padfZ : nullptr, padfM, nullptr);
-                    if( poOGRPoly->addRingDirectly( poRing ) != OGRERR_NONE )
+                    if( poRing == nullptr ||
+                        poOGRPoly->addRingDirectly( poRing ) != OGRERR_NONE )
                     {
                         delete poRing;
                         delete poOGRPoly;
@@ -2783,7 +2795,8 @@ OGRErr OGRCreateFromShapeBin( GByte *pabyShape,
                             pasCurves, nCurves, iCurveIdx,
                             padfX, padfY, bHasZ ? padfZ : nullptr, padfM,
                             &iCurveIdx );
-                        if( tabPolygons[i]->addRingDirectly( poRing ) !=
+                        if( poRing ==nullptr ||
+                            tabPolygons[i]->addRingDirectly( poRing ) !=
                             OGRERR_NONE )
                         {
                             delete poRing;
