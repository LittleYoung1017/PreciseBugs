bitcoin-core-20220627-dde7205c5	dde7205c5	aaeb315ff fa07f84e3	Mon Jun 27 08:25:19 2022 +0200	Merge bitcoin/bitcoin#23418: Fix signed integer overflow in prioritisetransaction RPC	commit dde7205c576352a6052c1411d0fa8017e83d3ef4Merge: aaeb315ff fa07f84e3Author: MacroFake <falke.marco@gmail.com>Date:   Mon Jun 27 08:25:13 2022 +0200    Merge bitcoin/bitcoin#23418: Fix signed integer overflow in prioritisetransaction RPC        fa07f84e316171d60dd9941fb8db37e0a0de6654 Fix signed integer overflow in prioritisetransaction RPC (MarcoFalke)    fa52cf8e11b3af6e0a302d5d17aab6cea78899d5 refactor: Replace feeDelta by m_modified_fee (MarcoFalke)        Pull request description:          Signed integer overflow is UB in theory, but not in practice. Still,      it would be nice to avoid this UB to allow Bitcoin Core to be      compiled with sanitizers such as `-ftrapv` or ubsan.          It is impossible to predict when and if an overflow occurs, since      the overflow caused by a prioritisetransaction RPC might only be      later hit when descendant txs are added to the mempool.      Since it is impossible to predict reliably, leave it up to the user      to use the RPC endpoint responsibly, considering their mempool      limits and usage patterns.          Fixes: #20626      Fixes: #20383      Fixes: #19278      Fixes: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34146 / https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47132          ## Steps to reproduce          Build the code without the changes in this pull.          Make sure to pass the sanitizer flag:          ```      ./autogen.sh && ./configure --with-sanitizers=signed-integer-overflow && make clean && make -j $(nproc)      ```          ### Reproduce on RPC          ```      ./src/bitcoind -chain=regtest -noprinttoconsole &      ./src/bitcoin-cli -chain=regtest prioritisetransaction 00000000deadbeef00000000deadbeef00000000deadbeef00000000deadbeef 0 9123456789123456789      ./src/bitcoin-cli -chain=regtest prioritisetransaction 00000000deadbeef00000000deadbeef00000000deadbeef00000000deadbeef 0 9123456789123456789      |> txmempool.cpp:920:15: runtime error: signed integer overflow: 9123456789123456789 + 9123456789123456789 cannot be represented in type 'long int'          ./src/bitcoin-cli -chain=regtest stop      ```          ### By fuzzing          ```      wget https://github.com/bitcoin/bitcoin/files/8921302/clusterfuzz-testcase-minimized-validation_load_mempool-5599531390074880.bin.txt      FUZZ=validation_load_mempool ./src/test/fuzz/fuzz ./clusterfuzz-testcase-minimized-validation_load_mempool-5599531390074880.bin.txt      |> txmempool.cpp:920:15: runtime error: signed integer overflow: 7214801925397553184 + 2314885530818453536 cannot be represented in type 'long int'      |> validation_load_mempool: succeeded against 1 files in 0s.        ACKs for top commit:      vasild:        ACK fa07f84e316171d60dd9941fb8db37e0a0de6654      dunxen:        ACK fa07f84      LarryRuane:        ACK fa07f84e316171d60dd9941fb8db37e0a0de6654        Tree-SHA512: 4a357950af55a49c9113da0a50c2e743c5b752f0514dd8d16cd92bfde2f77dd0ef56aa98452626df6f7f7a5b51d1227021f6bc94091201a179f0d488ee32a0df	34146	src/txmempool.cpp;src/txmempool.h	14;84;92;438;447;486;922;101;131;139;1
bitcoin-core-20210524-3f3c4d2e2	3f3c4d2e2	be4171679 fad0867d6	Mon May 24 11:02:00 2021 +0800	Merge bitcoin/bitcoin#22002: Fix crash when parsing command line with -noincludeconf=0	commit 3f3c4d2e2e7ee39ac98a149882eb3eacc17683cdMerge: be4171679 fad0867d6Author: fanquake <fanquake@gmail.com>Date:   Mon May 24 10:59:51 2021 +0800    Merge bitcoin/bitcoin#22002: Fix crash when parsing command line with -noincludeconf=0        fad0867d6ab9430070aa7d60bf7617a6508e0586 Cleanup -includeconf error message (MarcoFalke)    fa9f711c3746ca3962f15224285a453744cd45b3 Fix crash when parsing command line with -noincludeconf=0 (MarcoFalke)        Pull request description:          The error message has several issues:          * It may crash instead of cleanly shutting down, when `-noincludeconf=0` is passed      * It doesn't quote the value      * It includes an erroneous trailing `\n`      * It is redundantly mentioning `"-includeconf cannot be used from commandline;"` several times, when once should be more than sufficient          Fix all issues by:      * Replacing `get_str()` with `write()` to fix the crash and quoting issue      * Remove the `\n` and only print the first value to fix the other issues          Before:          ```      $ ./src/bitcoind -noincludeconf=0      terminate called after throwing an instance of 'std::runtime_error'        what():  JSON value is not a string as expected      Aborted (core dumped)          $ ./src/bitcoind -includeconf='a b' -includeconf=c      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=a b      -includeconf cannot be used from commandline; -includeconf=c      ```          After:          ```      $ ./src/bitcoind -noincludeconf=0      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf=true          $ ./src/bitcoind -includeconf='a b' -includeconf=c      Error: Error parsing command line arguments: -includeconf cannot be used from commandline; -includeconf="a b"      ```          Hopefully fixes https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34493          Testcase: https://github.com/bitcoin/bitcoin/files/6515429/clusterfuzz-testcase-minimized-system-6328535926046720.log          ```      FUZZ=system ./src/test/fuzz/fuzz ./clusterfuzz-testcase-minimized-system-6328535926046720.log      ```          See https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md        ACKs for top commit:      sipa:        utACK fad0867d6ab9430070aa7d60bf7617a6508e0586        Tree-SHA512: b44af93be6bf71b43669058c1449c4c6999f03b5b01b429851b149b12d77733408cb207e9a3edc6f0bffd6030c4c52165e8e23a1c2718ff5082a6ba254cc94a4	34493	src/util/system.cpp	366;42
