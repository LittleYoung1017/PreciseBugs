diff --git a/autotest/gdrivers/ignfheightasciigrid.py b/autotest/gdrivers/ignfheightasciigrid.py
index 9e07eefb3b..6596e03f31 100755
--- a/autotest/gdrivers/ignfheightasciigrid.py
+++ b/autotest/gdrivers/ignfheightasciigrid.py
@@ -32,6 +32,7 @@ import sys
 
 sys.path.append('../pymod')
 
+from osgeo import gdal
 import gdaltest
 
 
@@ -91,6 +92,57 @@ def ignfheightasciigrid_7():
     return tst.testOpen(check_gt=gt, check_prj='WGS84')
 
 
+def ignfheightasciigrid_invalid():
+
+    filename = '/vsimem/ignfheightasciigrid_invalid'
+    ok_content = '2 3 49 50 1 1 1 0 1 0 -0. DESC\r1 2 3 4'
+    gdal.FileFromMemBuffer(filename, ok_content)
+    ds = gdal.OpenEx(filename)
+    if not ds:
+        gdaltest.post_reason('fail')
+        return 'fail'
+    if ds.GetRasterBand(1).GetUnitType() != 'm':
+        gdaltest.post_reason('fail')
+        return 'fail'
+    gdal.Unlink(filename)
+
+    contents = ['0 0 0 0 0 0 0 0 0 0 0 0\r',
+                '                   \r',
+                '2 3 49 50 1 1 1 0 1 0 0 DESC', # no newline
+                '2 3 49 50 1 1 1 0 1 0 0\r1 2 3 4', # missing description in header
+                '2 3 49 50 1 1 1 a 1 0 0 DESC\r1 2 3 4', # not a number in numeric header section
+                '2 3 49 50 1 1 1 0 1 0 0 DESC\ra 2 3 4', # not a number in value section
+                '2 3 49 50 1 1 1 0 1 0 0 DES\xC3\xA8C\r1 2 3 4',  # invalid character in comment
+                '-200 3 49 50 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # invalid longmin
+                '2 300 49 50 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # invalid longmax
+                '2 3 -149 50 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # invalid latmin
+                '2 3 49 150 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # invalid latmax
+                '3 2 49 50 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # longmin > longmax
+                '2 3 50 49 1 1 1 0 1 0 0 DESC\r1 2 3 4',  # latmin > lamax
+                '2 3 49 50 0 1 1 0 1 0 0 DESC\r1 2 3 4',  # invalid steplong
+                '2 3 49 50 1 0 1 0 1 0 0 DESC\r1 2 3 4',  # invalid steplat
+                '2 3 49 50 .000001 1 1 0 1 0 0 DESC\r1 2 3 4',  # too many samples in x
+                '2 3 49 50 1 .000001 1 0 1 0 0 DESC\r1 2 3 4',  # too many samples in y
+                '2 3 49 50 .0002 .0002 1 0 1 0 0 DESC\r1 2 3 4',  # too many samples in x and y
+                '2 3 49 50 1 1 0 0 1 0 0 DESC\r1 2 3 4',  # wrong arrangement
+                '2 3 49 50 1 1 1 2 1 0 0 DESC\r1 2 3 4',  # wrong coordinates at node
+                '2 3 49 50 1 1 1 0 2 0 0 DESC\r1 2 3 4',  # wrong values per node
+                '2 3 49 50 1 1 1 0 1 2 0 DESC\r1 2 3 4',  # wrong precision code
+                '2 3 49 50 1 1 1 0 1 0 2 DESC\r1 2 3 4',  # wrong translation
+                '2 3 49 50 1 1 1 0 1 0 0 DESC\r1 2 3',  # Missing value
+                '2 3 49 50 1 1 1 0 1 0 0 DESC\r1 2 3 4 5',  # Too many values
+                ]
+    for content in contents:
+        gdal.FileFromMemBuffer(filename, content)
+        with gdaltest.error_handler():
+            if gdal.OpenEx(filename, gdal.OF_RASTER):
+                gdaltest.post_reason('fail')
+                print(content)
+                return 'fail'
+        gdal.Unlink(filename)
+    return 'success'
+
+
 gdaltest_list = [
     ignfheightasciigrid_1,
     ignfheightasciigrid_2,
@@ -99,6 +151,7 @@ gdaltest_list = [
     ignfheightasciigrid_5,
     ignfheightasciigrid_6,
     ignfheightasciigrid_7,
+    ignfheightasciigrid_invalid,
 ]
 
 
diff --git a/gdal/frmts/ignfheightasciigrid/ignfheightasciigrid.cpp b/gdal/frmts/ignfheightasciigrid/ignfheightasciigrid.cpp
index ba17e9a6ee..47bfade0ee 100644
--- a/gdal/frmts/ignfheightasciigrid/ignfheightasciigrid.cpp
+++ b/gdal/frmts/ignfheightasciigrid/ignfheightasciigrid.cpp
@@ -142,7 +142,10 @@ int IGNFHeightASCIIGridDataset::Identify(GDALOpenInfo* poOpenInfo)
         const GByte ch = pabyHeader[i];
         if( ch == ' ' )
         {
-            nCountFields ++;
+            if( i > 0 && pabyHeader[i-1] != ' ' )
+            {
+                nCountFields ++;
+            }
         }
         else if( nCountFields <= 11 )
         {
@@ -251,7 +254,8 @@ bool IGNFHeightASCIIGridDataset::ParseHeader(GDALOpenInfo* poOpenInfo,
     }
     dfRasterXSize = (dfLongMax - dfLongMin) / dfStepLong;
     dfRasterYSize = (dfLatMax - dfLatMin) / dfStepLat;
-    if( dfRasterXSize > 10000 || dfRasterYSize > 10000 )
+    if( dfRasterXSize > 10000 || dfRasterYSize > 10000 ||
+        dfRasterXSize * dfRasterYSize > 10e6 )
     {
         return false;
     }
@@ -396,10 +400,10 @@ GDALDataset* IGNFHeightASCIIGridDataset::Open(GDALOpenInfo* poOpenInfo)
     size_t nBufferCount = 0;
     const size_t nHeaderSize = osBuffer.find('\r');
     CPLAssert(nHeaderSize != std::string::npos);
-    size_t nLastPos = nHeaderSize + 2;
+    size_t nLastPos = nHeaderSize + 1;
     int iValuePerNode = 0;
     bool lastWasSep = true;
-    for( size_t i = nHeaderSize + 2; i < osBuffer.size(); i++ )
+    for( size_t i = nLastPos; i < osBuffer.size(); i++ )
     {
         if( isspace(osBuffer[i]) )
         {
