diff --git a/ext/opcache/Optimizer/block_pass.c b/ext/opcache/Optimizer/block_pass.c
index bad814ed6e..c8009ae8de 100644
--- a/ext/opcache/Optimizer/block_pass.c
+++ b/ext/opcache/Optimizer/block_pass.c
@@ -295,7 +295,8 @@ static void zend_optimize_block(zend_basic_block *block, zend_op_array *op_array
 					    src->opcode != ZEND_FETCH_STATIC_PROP_R &&
 					    src->opcode != ZEND_FETCH_DIM_R &&
 					    src->opcode != ZEND_FETCH_OBJ_R &&
-					    src->opcode != ZEND_NEW) {
+					    src->opcode != ZEND_NEW &&
+					    src->opcode != ZEND_FETCH_THIS) {
 						src->result_type = IS_UNUSED;
 						MAKE_NOP(opline);
 						++(*opt_count);
diff --git a/ext/opcache/tests/opt/inline_001.phpt b/ext/opcache/tests/opt/inline_001.phpt
new file mode 100644
index 0000000000..063f240c1a
--- /dev/null
+++ b/ext/opcache/tests/opt/inline_001.phpt
@@ -0,0 +1,22 @@
+--TEST--
+Fuction inlining 001: FETCH_THIS is incompatible with unused result
+--INI--
+opcache.enable=1
+opcache.enable_cli=1
+opcache.optimization_level=-1
+--FILE--
+<?php
+class Foo {
+    function __construct() {
+        Some::foo($this);
+    }
+}
+class Some {
+    static function foo() {
+    }
+}
+new Foo;
+?>
+DONE
+--EXPECT--
+DONE
