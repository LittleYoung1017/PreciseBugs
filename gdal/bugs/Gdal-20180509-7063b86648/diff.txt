diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp b/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
index e66ee1573c..8a7867c578 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlreader.cpp
@@ -1418,6 +1418,11 @@ bool GMLReader::PrescanForSchema( bool bGetExtents,
         if (m_bCanUseGlobalSRSName)
             pszSRSName = m_pszGlobalSRSName;
 
+        if( pszSRSName != nullptr && !GML_IsLegitSRSName(pszSRSName) )
+        {
+            continue;
+        }
+
         OGRSpatialReference oSRS;
         if (m_bInvertAxisOrderIfLatLong && GML_IsSRSLatLongOrder(pszSRSName) &&
             oSRS.SetFromUserInput(pszSRSName) == OGRERR_NONE)
diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlutils.cpp b/gdal/ogr/ogrsf_frmts/gml/gmlutils.cpp
index 4d9a35c2d8..9a6fce5f1c 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlutils.cpp
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlutils.cpp
@@ -359,3 +359,21 @@ char *GML_GetSRSName(const OGRSpatialReference *poSRS,
     }
     return CPLStrdup("");
 }
+
+/************************************************************************/
+/*                       GML_IsLegitSRSName()                           */
+/************************************************************************/
+
+bool GML_IsLegitSRSName(const char* pszSRSName)
+{
+
+    if( STARTS_WITH_CI(pszSRSName, "http") )
+    {
+        if( !(STARTS_WITH_CI(pszSRSName, "http://opengis.net/def/crs")
+        || STARTS_WITH_CI(pszSRSName, "http://www.opengis.net/def/crs")) )
+        {
+            return false;
+        }
+    }
+    return true;
+}
diff --git a/gdal/ogr/ogrsf_frmts/gml/gmlutils.h b/gdal/ogr/ogrsf_frmts/gml/gmlutils.h
index 89c565f36c..48eb110c61 100644
--- a/gdal/ogr/ogrsf_frmts/gml/gmlutils.h
+++ b/gdal/ogr/ogrsf_frmts/gml/gmlutils.h
@@ -55,6 +55,7 @@ const char* GML_ExtractSrsNameFromGeometry(const CPLXMLNode* const * papsGeometr
                                      bool bConsiderEPSGAsURN);
 
 bool GML_IsSRSLatLongOrder(const char* pszSRSName);
+bool GML_IsLegitSRSName(const char* pszSRSName);
 
 void* GML_BuildOGRGeometryFromList_CreateCache();
 void GML_BuildOGRGeometryFromList_DestroyCache(void* hCacheSRS);
diff --git a/gdal/ogr/ogrsf_frmts/gml/ogrgmldatasource.cpp b/gdal/ogr/ogrsf_frmts/gml/ogrgmldatasource.cpp
index f9c93ddd48..8d012af95b 100644
--- a/gdal/ogr/ogrsf_frmts/gml/ogrgmldatasource.cpp
+++ b/gdal/ogr/ogrsf_frmts/gml/ogrgmldatasource.cpp
@@ -1499,7 +1499,8 @@ OGRGMLLayer *OGRGMLDataSource::TranslateGMLSchema( GMLFeatureClass *poClass )
     else
     {
         pszSRSName = GetGlobalSRSName();
-        if (pszSRSName)
+
+        if (pszSRSName && GML_IsLegitSRSName(pszSRSName) )
         {
             poSRS = new OGRSpatialReference();
             if (poSRS->SetFromUserInput(pszSRSName) != OGRERR_NONE)
